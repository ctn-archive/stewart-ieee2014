%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2D Representation Decoding.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Chris
%%CreationDate: 12-04-27
%%BoundingBox: 0 0 332 269
%%HiResBoundingBox: 0 0 331.0884 268.7090
%%CropBox: 0 0 331.0884 268.7090
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 10062 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFA8A8FD7CFF7DA87D7DFD7CFF7D27A87DFD7CFF27527D7DFD7E%FFA8FD36FFA8FD5AFF7D7DFD20FFA8FFA8A87DFD4FFFA8A8FD05FFA87D7D%5227A8FD1FFFA87D7D7DA8A8FD4EFF7D7DA8FFA8FF7D5252FD04277DA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD05%52A8A8FFA8FFA8FD4AFFA8A8A8FFFF7DF827F85252F8F852FD1BFFA8FD06%527DFFFFFF7DFD4CFF7D52A87D52F82752A8A82727F87DFD19FFA8275252%527DA8525252A85252A8FD4BFFA8277D2727277DFD04FF7D27F8A8FD16FF%A8FF525227A852FFA8A8525252F852FD4CFF7D5227F827A8A8FD04FF7D27%F8F8A8FD14FFA87D5252FD047DA8FFFFA85252F8A8FD4DFF522727A8FD06%FFA8FF27F852FD15FF527D7D7DA8FFA8FD04FF52277DFD4DFFA852F8527D%FD08FFA8F8F852FD11FFA8FFA852527D7DFD06FFA827F852FD4DFFA8F827%5252FD0AFFF852FD12FF7D7D525252FD07FF5227277D7DFD4CFF7DF87DA8%27A8FD09FF52F8FD11FFA87D275252A8FD06FF525227A87D52A8FD05FFA8%FD45FF7D52FFFF5252FD09FFA82752FD10FF7D277D52A8A8FD06FF52F8A8%A8A87DFD05FF7D7D7DFD44FF52FFFFFF7D52A8FD09FF52277DFD0EFFA852%277DFD07FFA87D5227FFFFA87DFD04FF527DA87DFD49FF7D7DFD0AFFF827%FD0EFF7D527DFD09FF27277DFFFFFF7DFD04FFA8527D7DFD44FFA8FFFFFF%A8A827A8FD09FF7DF8A8FD0CFF7D5227A8FD08FFA827F8FFFFFFA8A8FD06%FF7DFD4AFF7D527DFD0AFFF852FD0CFF7D277DFD09FFA8277DFD51FFA8FD%04FFA85252A8FD09FF2727FD0CFF7D277DFD09FF2727A8FD0FFFFD05A8FF%A8FD11FFA8A8A8FFA8FFFD05A87D7DA87DA87D7DA87DA8A87DA87DFD04A8%FD14FF52A8FD0AFFF87DFD0AFF7D5252FD09FFA8F852FD11FFA8FFA8FFA8%A8FD12FFA8FFFFFFA8FFA8FFA8A87DA87DA8A8A87DFF7DA87DA8A8A87DFF%A8FFA8FD07FFA87DA8FFFFA8FD06FF7D52FD0AFF52F8FD0AFFA8277DFD09%FFA8F8A8FD06FFA8FD09FFFD05A8FF7DFD06A8FFFD05A8FFA8A8A8FFA8A8%A8FFA8A8A8FFFD0EA87DA87DFD05A8FD07FF7D277DFD09FFA852A8FD09FF%7D277DFD08FFA87D7DA8FD08FFA8527DFD06FFA8FD0BFFA8FFA8A8A8FFA8%A87DFF7D7DA8A87DFF7DA8A8A87DA8A8FFA8FFA8FFA8FD0EFFA8FFFF7DA8%A8FF7DFFA8FD07FFA8A8FFFFFFA8FD07FF527DFD0AFF2752FD08FF7D7D52%FD09FF52F87DFD11FFFD04A87DA8A8A87D7DA87D7DA87D7DA87D7DA87D7D%7DFD04A8FFFFA8FD0EFFA8FFA8A87DFD05A8FD13FFA8A852A8FD09FFA8F8%FD07FFA87D52FD0AFF7D27FD13FFA8FFA8FFFD04A87DA87DA8A8A87DFD05%A87DA8A8FFA8FD15FFA8FFA8FFA8FFA8FD0CFFA8FD07FFA85252FD0AFF27%27FD05FFA8A8527DFD0AFF277DFD18FFA8FFA8A87D7D7DA87DA852FFFD05%A8FD1DFFA8FD16FFA87DA8FD09FF5227A8FD04FFA87D527DFD09FFA827FD%18FFA8A8A8FFA8A87DFD04A87DA8A8A8FFA8FD1DFFA8FFA8FD0CFFA8FD09%FF527DFD09FFA8F87DFD04FF7D5227A8FD08FFA8F852FD13FFA8A87DFD04%A87D7DA87DFFA8FFA8FFA8FFA8FFA8FD15FFA8A87DA87D7D7DA87DFF7DA8%FD15FFA87D27FD0AFF5227FFFFFFA87D527DA8FD08FF7DF8FD14FFA87D7D%7DA8A8A87DA8A8A8FD1EFFA8FFA87D7DA87DA87D7DA87D7DFD0CFFA8FD09%FF52527DFD09FFA82752FFFFA85252A8FD09FF2752FD0AFFA8FD09FFFD04%7DA8A8A87D7DA8A8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFA8A8A87DA87D7D7DA87DFF7DA8FD15FFA87D527DA8FD09FF2727%A8FF7D527DFD09FF7DF8A8FD14FFA87DFFA8FD09FFA8FFFFFFFD08A87DFF%A8A8FD047D52A8A87D7DA8A8A87DA87DA87DFFFFFFA8FD10FFA8FD0AFFA8%2752A8FD08FFA8F87DA85227A8FD09FF5227FD15FFA8A8A8FD0DFFA8A87D%FF7DA87DA87D7DA8A87D7D527D527D7DA87D7D7DA8A87DA87D7D7DA8FFA8%FFA8FD1AFFA87D277DFD09FF52F85227A8FD09FFA827A8FD16FFA8FFA8FD%09FFA8FFA8FFFD05A87DA8A87DA8A8A8FD057DA87DA87DA87DA87DA87DA8%A8FFA8FD12FFA8FD0AFFA87D5227FFA8A8A8FD04FFA852F82752A8FD09FF%2752FD2CFFA8A8A8FF7DA87DFD05A87D7DA8A8A8FFA8FD24FFA8A87D5252%A87DA8FD04FF527D272752FD09FF52F87DFD2BFFA8FF7DFFFD05A8FFA8FF%A8A87DA8A8FFA8FD1AFFA8FD0BFFA8FF522752A87DA8FFA87D7D527DF827%A8FD07FF7DF827A8FD2CFFA8A8FFFF7DA87DA87DFD06A8FFA8FFA8FD27FF%A85252527D7DFF7D7D52525227F852FD04FFA87D5227F8FD0DFFA8FD23FF%A8A87DA87D7D7DA8A8FD20FFA8FD0DFF7DA827527D7D527D527D277DA827%F852A8A8A85227F8F87DFD0EFFA8FD07FFA8FD1BFFFD047D527D7DA8A8FD%30FF527D7D527D7D527DFFFF7D52F8F8525227F8F8A8FD16FF5252FD07FF%FD04A8FFA8A8A8FD0DFFA8FFA8FFA8FD20FF7DFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FD04FFA85252527D527DA8FFFFFF7D27F8F8F827F87DFD04FFA8FF%FFFFA8FFFFFFA8FD09FFA82752FD07FF7DA87DA8A8A87DA8A8FD25FFA8FD%09FFA8A87DA8FD12FFA87D7D7DA8FD05FFA8A8FF525227A8FD18FF527DFD%07FFFD08A8FFA8FD2EFFA8FF7DA8FD12FFA8FFA8A8FD0AFFA8A8A8FD18FF%A8A8FFFFFFA8FFA8FF7DA8A8A87DA8A8A87DA87DA8A8A87DFD04A8FFA8A8%A8FFA8A8A8FFA8FD10FFA8A8FD20FF7D7DA8FD25FF7D7DA8FD06FFA8A8FF%A8A8A8FFA8A8A87DA8FFA8A87DA87DFFA8A87DFFA8FFA8FD11FFA8FFA8FF%A8FD1FFF527DA87D7D7DA87DFF52A87DA8FD1AFFA82752FFFFFFA8FFA8FF%A8FFA8A87DA8A8A87DA87DA8A8A87DFD04A8FFA8A8A8FFA8A8A8FFA8FD10%FFA8A8FD20FF52A827525252F827A87D52A87DFD1BFF2752FD0AFFA8A8A8%FFA87DA8A87DA87DFFA8FD3FFFA8A8A87DA8A87D7DFF527D7DA8FD1AFFA8%7D27FD0BFF7DFFA8A852A87D7D7DFD04A8FD66FF7D7DFD0EFFFD05A8FFA8%FFA8FD0FFFA8FD57FF5252FD22FFA8A8FF7D7DA8A8A8FD54FF2727A8FD21%FFA8A8A87D7DFFA8FD0EFF7DFFA8FD43FF522727FD18FFFD04A8FFA8A87D%A8A8A87DA87D7D7DA87DFD04A8FFA8FD07FF5252A87DFD23FF7DFD1EFF52%277DFD18FFA8FFFD04A87D7DA8A8A87D7DA8527D7DA87DA87DA8A8A8FD07%FF527D277DFD22FFA852FD1EFFA8FFA8FD18FFFD06A87D7DA87DA852A8FD%067DA8A87DFFA8FD07FF7D52527DFD23FF52FD04FFA8FD28FFA8FFA8FFFF%A8A8FFA8FFA8FF7DFFFD06A8FFFFA8FFFFFFA8FFA8FFA8FD0CFFA8FFA8FD%0DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A8FFA8FFA8A8%7DFFA87DA8FFA8FFA8FFA8FFA8FFA8FD1AFFA8A8FFA8FF7DA87DA8A8FF7D%A8A8A87DFFA8FFA8FFA8FD36FFA8FFA8A852A8A8FFA8A852A8A8A87DFD25%FFA8FFA8FFA8A87DA8A8FFA8A87DFFA8A8A8FFA8FFFFFFA8FD24FFA8FD0D%FFA8A8527DA8A87D52A87D7DA852527D7D5252FFA8A8FD23FFA8FFFD04A8%7DFF7D7D7DA87DA87D7D7DA87DA8A87D7DFF527D7DFD04A8FFA8A8FD24FF%A87DA8527D7DFFA8A827FF527DA8A852A8525252A87DFFA8FD24FFA8A8FF%A8A8A87D7DA87DA8A8A852A8A8A87DA87DA8A8527DA8A8FFA8FFA8FFA8FD%18FFA8FD09FFA8A87D7DA8527DFFA87D5252A8FF52FD047D527DFD04527D%A8FD05FFA8FD19FFA8A8A8FFFD05A8FF7DFD06A87DFD07A8FF7DFD04A8FF%A8FFA8FD22FFA8FFFFFF7D5227A8FFFFA87D7DA8FFA8FFA87DA8A8FF527D%F87DA8FD1FFFA87D52A8A8FD38FFA8FD06FFA8277DA8FF7D7D52527DFFFF%A852A8A87D7DFFA8FFA8FFA8A8FD04527DFFA8FD1CFFA87D527DFD40FF7D%7D527D527DA8FFA87DA8FF7DA8FFFFA8FD07FF7DFFFF27F8A8A87DA8FD13%FFA8FD07FFA8A87DA8A8FD07FFA8FFA8FFA8FFFFFFA8FFA8FFA8A8A8FFA8%FFA8FFFFFFA8FFA8FD18FFA8FD05FF527D527DFF5227FFFFFFA8FD05FFA8%FD07FF7DA8A8522752272727FD14FFA8A8FD0BFFA8FFFFFFA8FFFD06A87D%A8A8A87D7DA87D52A8A87DA8A87DFFFD05A8FFA8FD18FF7DA8527D5252A8%FFA8A8FD12FFA8A8A8FF7D2727A8A8A8FD12FFA8FD0DFFA8FFA8FFFFA8A8%FFA8FFA8A8A8FFA8FF7DA87DA8A8FF7DFFA8A8A8FFA8FFA8FFA8FD16FFA8%FFA8A8FD045227FFA8A8FD16FF7D7D52A87D7D7DFD13FFA8FD0FFFA8FFA8%FFA8FFFFA87DA8A87D7DA8A87D527DA8A87DA87DA8A8FD1CFFA8A8A85252%52277DA8FD17FFA87D7DA8277D7DA8FD2AFFFD04A852A8A8A87D7D52A8A8%7DFD04A8FD1BFFA8FF7D522752277DA8FD0DFFA8FD0BFFA85252527DA87D%FFA8FD27FFA8A87DA87D7D7DA87D7D527D7DA87DA87DA8A8FD1EFF525252%FD1FFF7D5252A8A8FD29FF7D7DA8A8A8FD05FFA8FD22FFA8A87D7D52A8A8%FD0FFFA8FD0FFF52A8A8A8FD28FFA8A87DA87DFD2AFFA87D52A8A8FD20FF%A8A8FF7DFD15FFA8FFFFFFA8FFFFFFA8FD0BFF7DA8A8A8FD14FFA8FD14FF%A8FF52527DA8FD10FFA8FD0DFFA8FFA8FFA8FFA8FD0FFFA8FFA8FF7DA87D%A8A8A87DA8A8A87DA8A8FFA8FD1BFF7DFFFD04A87DFD0BFFA8A8FD05FF7D%7D527DA8FD21FFA8FD13FFA8FFFD05A8FFA8A8A8FFA8A8A8FD1EFFA8A8FF%A8FFA8A8A8FD0AFF7DA8FD05FFA8527D52FD21FFA8A8A8FFA8FD0FFFA8FF%A8FFA8A87DA8A8A87DA8A8A87DA87DA8A8FFA8FFA8FFA8FFA8FD13FFA8FF%FD04A87DFD09FFA852A8FD06FF7D52527DFD22FFA8FFA8FD13FFA8FFA8A8%7DA87DA8A8FF7DA8A87DA8A87DFFA8FFA8A8FD19FFA8A8A8FD09FF7D277D%FD05FFA87D7D527DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFD05A8FFFFFFA8FD0BFFA8FFFFA8A8A8FD057D%A8A87D7DA852A8A87DFD04A87DFFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FD05FFA8A87DFD10FFA8FFA87D7DA8FD24FFA8FFFFA8A8FD0FFFA8%FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FD1BFFA8FD0EFFA8A87D%7DFFA87D7D7DA8A8FD0FFFA8FD0FFFA8FFA8A8A8FFA852FD50FFA852FFA8%7D52A87DFD21FFA8FFA8FFFFA87DFD52FFA8A8527D52A8FD10FFA8FD13FF%A8FD25FF7D7D7DFD06FFA8FFFFA8FD25FF7D52A8FD24FFA8FD26FFA852A8%7D7D7DA87DFF7D7D7DA8FD24FFA87DA8A8FFFFA8A8FD1DFFA8A8A8FD27FF%A87D7D27275227F8A87D27527DFD24FFA8A87D7DFFFF7DFD1DFFFD05A8FD%27FFA8FFFD04A87DFF7D7D52A8FD23FFA8FF7D7D52A87DA8FFFFA8FD0BFF%A8FD0DFFA8A87DA8A8FFA8FD56FFA87DA8FD047DFFFFA8A8FD15FFA8FFA8%A8A8FFA8FD5BFFA87D7D527DA8FF7DFFFFFFA8FD07FFA8FD0AFFA87DA87D%FD04A8FD5CFF527D7DA8A87DA8A87DFD0EFFA8A8FFA8FFFFA87DA8A8FD5A%FFA8FFFFFFA8A87DA87D7DA8FF7DFD04A8FFA8FD09FF7DFD04A8FFA87D7D%FFA8FD5CFFA8A8FFA8A87D7DFFA8A87DA8A8FFA8A8FD08FFFD04A87DA87D%A87DFFA8FD5AFFA8FFFFA8A8FF7DFFA87D7DA87D7D7DA87DA87DFFFFFFA8%FF7DFD09A87DA8FD65FFFD04A87DFFA8A8A87DFFFFA8A87D7DA8FFA8FF7D%A8FFA8A8FFA8FD5CFFA8FD07FFA8FFA8A8A8FFFD04A87DFFA8A87DA87DA8%A8FFFD05A8FD09FFA8FD60FFA8FFFFA87DA87DFFFFFD04A8FFA8FFA8A8A8%FD70FFFD06A87DA87DFD04A8FD74FFA8FFFFA87DFD04A8FFA8FD66FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD70FF7DFD7DFFA8A87D7DFD7EFF7DA8FD79FFA87DA8FD%7DFFA8F8FD7EFFA87D7DA8FD7EFFA87DFDD7FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2012-04-27T16:17:01-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2012-04-27T16:17:01-04:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:MetadataDate>2012-04-27T16:17:01-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8An2gfm1q3me6uFgmjP6M1&#xA;fRPqT2yfVjc2+qXU1pcQTwC6vTWCCOSUiXg9Vq0SFRir2vFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXVFaV38MVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqlNa2s7wyTQpLJbP6tu7qGMc&#xA;hRo+aEj4W4SMtR2JHfFVXFUu1vV20xbJhB663d5DZueXH0xO3ESdDyo1NsVRMF/BPGXQOVDOleDH&#xA;dGKHoD3XFWB+Zfzs8saLfzWrSQMltdRWdzdTXUMEaO0ZlkB5HlVE47EVJPSgqVWK/lt/zkRZ65r0&#xA;mla7NZwm5WE6dLBNCazNHI88PESM5ClFVNqljSp2xV7Nb39tcW8VxCWeGZFkjdUYhlYVBBA7g4qq&#xA;fWI/B/8AgH/pirvrEfg//AP/AExV31iPwf8A4B/6Yq76xH4P/wAA/wDTFXfWI/B/+Af+mKu+sR+D&#xA;/wDAP/TFWJ+bPzE0jQ7mzha4QSNc+ncxuyIfS9Jy2zkN8LFPsjr9OKsX8tfmlDqfmEzSzxxJM0cT&#xA;QJJFIxhggvZWoqGv940f8cVepm5iAJIcAbk8H/piqrirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVULzT7C+SNL22iukicSxLMiyBZF+y6hgaMK7HFXz75i/N7XfJH6bjRhdW8JLaexFZqJ&#xA;dh5EbnRSfTmkcsRuNgagYqwbyR+SOp/mLq9xqvmaK707SdbjGp2DRBiqCZVMczFv3ZeaOMV+e3Sm&#xA;Ks9/N/8A5x70b9A3Gs2U/p2uh6bc3U6TsRykhuo72Rv3Sg1eL6ytQQQWHboqhv8AnHT827u1v5Py&#xA;182XjSarp8zWemSyci7enNcGRZWl+PmD6aoBtw40pRsVfR2KuxV2KuxV2KsI89fmFYaNpWsW9G/S&#xA;cTG0s4lahd5bZZhKSKcEjEhLGuwXFXidl5c1rUrvUNXvYnmvkvLdheJtHMmo3Do0q9OKgRngOxO/&#xA;hirKfMX5Salb6TY6n5VgflZ6dHLGEceu1xK5kmIrQuPTHHj/AJWwxVjt9+cHnbUrvRvJ9ksU+o6x&#xA;dym5larKjrfxXisnGrGBbVXUex32GKvpm3E4gjFwyvcBV9ZowVQvT4iqksQK9AScVX4q7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXyB+YVvrfnH83dVj0q3KWfl+sGpScP3Ukn1d5YlcfH&#xA;yZxbuFJAGwX3Kr6S/KvXYNX8lWJjhS1l0/lp9xZR8uMDW3wLGOVTtHwPU9cVZVNDDPDJBPGssMql&#xA;JYnAZWVhRlZTsQR1GKvBP+chPyhAM35neV5k0rXtBjOpXTRpQztannz2258dyx60p+0Tir0n8mfM&#xA;sfmX8uNJ1tX5vem4lnBJJWU3MhdDXeqttirNcVdirsVSnzLrsejWMFwxUPPdW9sisCeXqyqJAKEb&#xA;iLmwqaVGKvnf9Mal5v8AOLaskXJr+9/R4gj3SO2mjW1kZ6kUEiyRoT8x1xV9D+X/AC7baXoljp8w&#xA;S5mtbeCCW4dQTIbclkJqP2XYsvgd8VSz8wvPNt5T0WSZQkmqzQXD6TaynjHPNbx+p6TPUBKjuSMV&#xA;fOP5S2uvaHqdv51vLZm0u+Ma2UEiK0iWGoC4gSblT93V7XnQH7BG++6r63VlZQykMrCoI3BBxVZN&#xA;dW0LwxzSpG9w/pW6uwUySBGk4ID9puCM1B2BPbFVTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FWMeRPJ9j5es72ZAsuo6vdPe6jd8aNJKfgUb1IVFX4Vrtv4nFWEeSRB5L88xaIsldM8x26y&#xA;xg7LFdxPKkaj/jJHEf8AZUGKvXsVadEkRo5FDo4KujCoIOxBBxV89fl/Nrf5X/m7/wAq8uAieVvM&#xA;sn13S532QXC2pEywsfiJklSNSrdxt13VfQ2KuxV2KvC/zV1W483eZbTyro8rgtcxwh1JMZlj583N&#xA;OgRZH5bfs4q9M0L8uPLOjcWtoKyLFbwiQ7MVtbg3ERJWlW5cOR7hRirKMVfNX5p3z+fPzUX8tYoH&#xA;nZL+OaO/jkK/VrOS2hTUCB0qiQTJQ9TLtvTFXsnmbyppNr5fggsrfhBbPo9nBb1LIltZ3iqi0IYk&#xA;COZ1avUffirMERI0WONQiIAqqooABsAAMVeU3mi+bJNVni1Gx1K4v5/MVncafqy3Xq6Ymm2+oxXa&#xA;olqs5+rullC8TyNbryYlebcwCq9XxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVTubq2tLaW6u&#xA;pUgtoEaSaeVgiIiirMzNQKANyTiq22vbO5aZbaeOdrd/TnEbq5jcqH4vxJ4txdWoexBxVbYAi1Sp&#xA;J69aeJ8MVef/AJq+SlubePzBZzm1utMEfoCNK8SjStGwpuB9YmjZqdFU4qzPyrr0Ov8Al6x1eIcf&#xA;rUQaWP8A33KvwyxmvdHBXFU1xV5P/wA5CeT9R1DRNP8AOmlTqmq+Q3fWrS2kA9OYQvFNKrtUUAjt&#xA;2NO/TFWeeSPNth5t8radr9kVCX1vFLLArc/RlkjV3hZqDdOVOmKp5iqA8wXz2Gh6heRtxmt7aaWL&#xA;p9uOJnFK1B+ziryP8jdHt9X8w6x5yeIiNZHhsOX7MlyzTznbuiyqn0nFXteKoXVr79H6Ve3/AA9X&#xA;6pBLP6dePL0kL8a0NK060xV4z/zjho+q6odT8+69SXUrgvpFhcCn7yC3mZ7q4quxNxdV+hAOmKva&#xA;7oE20oBp8Dbj5e+KquKuxVJ/NV7d2enxy20hjdpkQsADswIA3r1agxVRj1issyG6TkJIwi8lrw+t&#xA;OH+gQlCf8kg98VV9H1eFrOR726jWT61dIpkZVPpi6kSHw2MfHj44qjm1PTVl9JruES8Q/pmRQ3E9&#xA;GpWtPfFWhqullZGF5AViHKUiRKKoPGrb7CopirZ1PTVVWa7hCsFKsZFoQ9OJG/7VRTFUDrWrwxWC&#xA;zWt1HUXNoJHVlakTXSpKT1ovBZAT2ofDFVsl7dh4gJDT1pI5Nht/pkSID/zzfb2xVBXGoawtgzo7&#xA;+qIlYHiK8itqT28ZHxVKL3WfMyXl+kckojj1RYYQIwQLf6rK5A+HdfUVd8VQ+p655rjsIHhlmErX&#xA;9rE5EYJ9F1lMg+z0qq1OKo2TXNbj1G+ied1RNYtYoVKqP9DLIJ6VG6Dl8Tdq9cVSz/FOvrpcJe8Y&#xA;XhsVeRSqB/XNtfNutPteottt4lf5t1WXxaq7yTqLhWKTQRqAVNPUu5BT/ZQhfo3xVPMVQ2p6fDqO&#xA;nXWnzs6wXcTwStE5jkCSKVbi67qaHYjFUt8o+TPL3lHTZNL8v25s9NeZp0tPUeRI3dVDCP1CzKrF&#xA;eVK9ScVTCxt4fqynjuak7nxOKt3tshs5wiEuY34gVJJ4mmKvNfyvnbRvMOoeTr7kGaGK/tFcFeMj&#xA;RoLmJTQA0JV1HYE4q9Q+rw/y/icVUrvTbO7tJrWePlBcRtFKtTujgqw+44q8i/KW/tPLHnvzV+WW&#xA;okC6F9LrHl/hyKNp10qssOwFGhC7167+GKvYvq8P8v4nFXmH5meZEhisWsI2nkuotQsobWNlLtPc&#xA;H6pbPxJrRnDkfI4qznyp5ZttC0Cz00UeWGMG5lFf3kxFZH7dWxVNvq8P8v4nFXj/APzkRLriWug6&#xA;X5evprTVdZml0+0t42b055LhoYiJlqQyRxPI9SppTFXqHl/y7p+h6HY6RaLW3sIEgRjsW4KAXam3&#xA;JjuffFUXc20P1aX4f2G7nwxVE4q7FUFrFlLe2kcMRVWW5tZyWqBxguY5mGwO5WM098VYzL5X1C3v&#xA;VvGkhMfGSDiGblyubW0s0P2egkgYn2p32xVKNS0u61FLR4TGomexRebEUKPwNaKe9s34YqkZuGv9&#xA;fj1GJQsJ0y2Tix+KrD2BH+6z3xVdDZXMB1PT24GXVk1Gxt2DHislhPJcSM/w14srUWld8VR+q6Zd&#xA;xabGhMZbT40SajNQnSoYnm4/D+0Izwr9NMVZBB5J1WPTb21aWD1Lm2lgQhnoGke+YE/B0/01PuPt&#xA;VVlEllK3r0K/vbmGdev2Y/SqDt1/dnFUbirsVdiqV6npdxdXqTxsgRbK7tSGJB53DQlDsD8I9E1x&#xA;VK73yvqE+tSXySRCJ7mOcKS3LikmnMR9mlaWEnfuvvRVDwaJd2eoTtI0bA3OmTjiW+ykQtSN1G/N&#xA;CflirMMVdirsVQ2ncPqq8QBua023qcVROKvJ/wA5Na/QOtaNrFupbUbZkmt1A+1HEzpPGSPipKlx&#xA;x2GKvUbC+tr+xt761cSW11Gk0Eg6MjqGU/ccVV8VeIfnrpd1oXnTyx+Z1isixeXx/ufeMElrA3UM&#xA;DoAu5YpeSNv+yp8MVeq2PmzS77y5Jr9sxktIrVbxwu54PbJdqAehrFKpxV495T0e98yefIJ4y7aX&#xA;oMtq10NgBcQyTyxAFv2R6jlgPH3xV73irTuiIzuwVFBLMTQADckk4q8M/LWTW/P35x+YPNusGN9E&#xA;8nTXOj+WRF/du8sjkzncgyC2ZVY7bMB1BxV7piqld8fqsvLccD137Yqq4q7FUg816xeaaLU28ixi&#xA;X1OfIA148SOvzOKsO0vzlr9/aE3M6sVaBxREG4iim7D+c1xVFabdXB83R6UXrZW+ovFGlBUJBbS3&#xA;CDlSv945OKpt5Y8oaLJoWmXkiv61xY2vqHnQGkfIUHzc4qmj+UtD+sJdMHEkMl5MpL0Ae+Wk9fo6&#xA;eGKq1zoGkXKTRyk8bg3AcB6VN0hjlA+gbYqmfrwUDeovE9DUUO9MVc00K/akUfMgdq4qt+tWv+/k&#xA;36fEP64quM8A6yKPpGKqGoXiQ6fczRyKHiikdTUEBlUn9YxVhWs+cdXttWFtDcIIvrUkJXih+AJI&#xA;yjcf5AxVA6d558wz3NwklwhVK8AI0H+75k8P5Yxiq5fM2sT2nly6kmBl1S/tLe8IRQGjUxygAU2+&#xA;KQ9MVel4q7FXYqh7A1tU2IpXr8ziqIxVi/n7RNLutCv9Tu0rNp9pLNC+3w+hS42qDTkYgG9sVea/&#xA;lV5s1DQfMz+S9QkR7SGWe2glYlfTjt1uLlySaAcWFCD2YeGKvZo9X02S6Nqk6mcP6fDcVekh4gkU&#xA;JpC/TwxVBectI0vWvKuqaPq1w1rp2o272tzcIyoyJMOFVZgyg/FtUYq+WtC8+ap5f0PW/wAtOM9x&#xA;LYapKgvAyuZdPiVLa1jQAHYtAORX2G9SMVfRv5VeTrjyr5VS0u5jNe3kn127qvFkkliQNGSS3LgU&#xA;pXb5YqzHFXnX52+d4dD8kX1jY1udd1tm0LTLaBl9Zb29gYQniTXbkp+kYqnn5Y+RbTyN5H0vy3bk&#xA;O9pFW7nAp6tzIec0nyLk8a9FoO2KspxVSujS2lNK/A3T5Yqq4q7FUh85aTfanpqQWaB5F+s1BYL/&#xA;AHtjcQL1/wCLJVGKpvbQuk12zCgllDp7gRIv61OKq+KqF9C8sKqgqRLC57bJKrN+AxVKPMGk315p&#xA;upQW6BpLn1/SBYCvOxaBevT94aYqllxomowtbXTxj0rTUpb6YhlqIPWvZOQFdzxuE298VYvB5f1V&#xA;NDttNaEC70n/AHtXktF9O5W7ahrRv3Nwh/DFVvmW2uNQijNqhYCBq1Kj+5tUt36n/flygxVjF75I&#xA;8x/Vov8AR1/0NJIZ/wB4mzpOeQG+/wDfrirILywu7q+jEMdfq0wtpalRST6/bw0G/wDOpxVGR+Wd&#xA;Yn0meCOEGS6a4SEF1FTOrzp32rGwxVMZ/Juvvqd1OsC+nLLp7oeabi3sJoJO/aSQDFWXWunXUc1i&#xA;zKAIIoEk3GxjinVvxkXFUw0+F4bC2hkFJI4kRx13VQDiqvirsVdiqHsOX1VKgDrShr3OKojFVO4t&#xA;4Lm3lt7iNZYJkaOWJxVWRxRlIPUEHFXk35u+S7q8nt5tEVv0sRd38RioHknkmsLTiSf2fRc/cMVY&#xA;p5K883kb2FxLEZJ7R7VLmSXkzSOn1mCbwPMC/VjXv8sVTvzx58i8w28um2r+rYaijRW0gqgKtcW7&#xA;I7Drt6EgB/ysVeMecNK803mkL540nSJENsUttSu41KksLhVIi49TVo9/5uXcE4q+mfy+/ODyl5t8&#xA;sQaqL6C3vEtxNqNnzHOFliMsg41YniiliBUgdcVS3z7+f3lHybfNZ3sUtxLDefVLgxNHRALZbhpB&#xA;8RLceYTjQfFUfNV5f+VOlah+bvnu/wDzB1OSW00vR9St73y7YvRv3pkiEpaSi8lSKyEa7dTXam6r&#xA;6dxV2KqV1X6tLQVPBuu3bFVXFXYq7FXYq7FXYq7FVO5gW4t5YGJCyoyMR1AYU2xVK77SooIdVvUd&#xA;jJcxzOymnEFoIotvotl+84q8/u7u4t4b9U4H6o9/bx1B3VbhKFt+v+hr95xVV8va5e61yiuViQXl&#xA;0ySGNWBAmeF248mboU2xVl2meVrR4FvGmk9S8kjvpFHHiHNyl7xG32ea8fliqcW2lQ24iCux9J1d&#xA;a03Kwehv/sd/niqNxV2KuxV2KuxVjmq65q0GqaEkdldQWtzqD2t+v1c3NYTaymOUyWxnEKfWBGOU&#xA;lOu9BU4qnkMVxFGIwUIFaHfua4qv/wBI/wAj8cVd/pH+R+OKrDA7TpOVQyxqyI/xVCuVLD6Si4q8&#xA;v/MjyBP+lDr+jD6tdXUNyt+sQ/dO6W8kiyMp2WRvToH6cuNcVYv5Y/KrV9Su4LO+cwWOmzm3umhd&#xA;fWAijkpR+PQu/HYV3r2xV7LaeVtMttB/QK2sJ0kcwtqQQoV5DKAKb/Cx2PXv1xV8+eZ/+cUtUj1T&#xA;UfMPlvUUsbi4vJjbaLboI4I7W4kMfFWVSAvpkcl4U418N1UF5a/5xh1/WfMLSedLqaS1t52muHEv&#xA;P63J69ZFM1FkX1EdtwOlOhxV9O6dpsGm2UFlYQQ21pbRJBBDGCFSOJQiIPZVFBiqJ/0j/I/HFXf6&#xA;R/kfjiq2RLh42SqDkCK79xTFVbFWIfm1o+u6x5DvtP0JJW1SWWzaBrcxCZBFeRSPJGJpbWNmjRCw&#xA;VpVqRSoxVf8AlZ5fuPL/AJHsdKuLU2MkMl1J9TMUUAiWe6lmWNY4brUI1RRJRaTuadfiqMVZOt1A&#xA;3Cjf3kjRJsd3TlyHTtwbFXmUSaw2nqwaY1065WvI/wB42l28ad+vrWs/0gnuKqo17i7uNQt54JJG&#xA;t4ImWdgWADfo6Ubg0r8a/firKLfzNoyXTo9yQbyWVrQFJDyW2t43lp8O3Eb79e2KoufzJosAUy3H&#xA;EOyIvwSGpljaVBsvdEJxVtdd0ecToJg4hCidSj0Akh9cA1XesW/4dcVUBeeWJXuI+ELMhkNwDCeo&#xA;eZZCarv8dtLXxp7iqqvbR6DHO8NtBDHLDOIWVIgtJvSE4FQo39Mhq/xxVHQPC8f7mnpoWjAAoAUJ&#xA;QgD2K0xVfirsVWzSxwxPLIeMcal3bc0CipO2KoK8vIRfwQBz6kDxyXCgHZLhZYoiTSh5SLT274qj&#xA;8VdirsVdirsVdirsVYx+Ztjf3n5f+YU01rxdVi0+6m0w6dNcQXJu4oXaARtbMkjEyBfg3DdCDirB&#xA;Jb/8yPL+rXmleWNLdrA3kRa/1OHVNVeZZI9Hty/ry3aleBvbl2oStIG2BDtiqN8pfmF+aN954i0H&#xA;WvK8ltpqJdJPqq2U8FrI1s8qR3EdxJNIsYmaNeMDIW4tz9QigKqVeUfPXnS/sNFF3JKXa80MQTG2&#xA;mi+tyX9vI2r28sspCSNakTv6cKcYfTQFi3JUVe1Yq7FXYq7FXYq7FWF/nHY6nffl9fwaYsUl2JrO&#xA;VYLi2ur2CVYbyGR4ZrayiuZ5YpEQo6rGaqTWi1IVW/k0jJ+XtgjmESrPeiaK2juILeGT67N6kEMF&#xA;1BaTQxwtWNInjHADjVqciqyxLEL6Px19KeWfp1MvqbfR6uKoCLy2kdqsHrkhUMfLj4iYV6/8vH4Y&#xA;qxfTg8ehfWqgtc28c5WmwMlvGtOvb68f+BxVJGmk+qafqW3O0k1uMR02bhZMAa1/4p/HFU2e3bUD&#xA;cozCP6i9pIpAry46VI9Dv/xZirKLfypHC12wuS31r06/CPh9O0+qePcfFirovKkcc11J9ZJ+s+pU&#xA;cRt6kt3J49vrxH+x98VR8OlLHeT3PqEme6F2Vp0ItVtuNa+CcsVRVtAIIygPKrySV6f3jl6fRyxV&#xA;VxV2KqV1ALi1mgJ4iZGjLdacgRXFULLpSyahNeeoQZktYylOn1SaSYGtf2vVpiqpDq+kzpDJDewS&#xA;pcTSW1u6SowknhLiWJCD8ToYZOSjccWr0OKovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;8+/PHWbOx8h30FxZyXhnCSGIabJqUPpQTxPNyrbXlpFJ6dTCbleHOh6A0VVPyJvZ778qdBvJreK1&#xA;M8czpBb2yWcao1xIUpDHHBGtVoSUTiTuC32iqz3FXYqg10fTFt1t1t0ECoI1j7BFCAD6BEv3Yqo/&#xA;4b0P0RB9Tj9IGVglDStwpSU9f21Yg4qrJo+mIZClugM3H1aftcY/RWvyj+HFVS41GxtzIJ50jMKe&#xA;rKGYDihDnkfakT/ccVWXGsaXbo8k91FEkZZXZmAAMdC4P+rXfFUJda/pb20clvexMHkhIZHBqhlX&#xA;kdu3CtfbFWC6l5ruhbaVdQajJ9XPL61Mjtx6zqOZHvwG/tirINM8zWxuVefUB9XVLaV2Z/hCNayF&#xA;2Ne3qLv74qyZNU0551t0uY2nbhxjDDkfURpE2/ykjZh7A4qrwzwzxLLC4kjavF1NQaGmKr8VeCaT&#xA;5J8/2Gp2VqbG/trJtbkublpbpbq0kJ19NShntoYpZRaKunxXCSsyx82kVCGY7Kve8VdirsVU/rEP&#xA;8368Vd9Yh/m/A4q76xD/ADfgcVd9Yh/m/A4q76xD/N+BxVjXnqO91PRnsNGdW1SK4srrgZnt6RR3&#xA;KyNV0VtnSF0oRQ98VZDPqFnbx+pNKEQsqAkHdpGCIo26szADFUuj81aaPL51y6P1eyKNMhNWLRFi&#xA;IWGw+KVeJC+Jpiqa/WIf5vwOKu+sQ/zfgcVcLiEkDluTQdepxVUxV2Ksd83/AJf+VfN/1L9P201z&#xA;+jpDNZiK7u7UJKafvP8ARpYasOPws1Su9KVOKpvpWmW2l2MdjbPPJDFy4vdXE95MeTFjynuXllbc&#xA;7cmNBsNsVReKuxVAXWqrb3U0BjLGG1a7LVpUKSOPTFULe+ZEtZ7aEwFjcu8YPKlOF7BZ16eNxy+i&#xA;mKqVn5rjubRbkWxUNBFPx5A7TWzXNOnYJxxVJtRL6xf6zHGBFyX9FAsa/EiPH6mw6f7k1NP8k+OK&#xA;oS8spdd0kemVgOol515VbgL5LbiDQb8fX3+WKr7DyddQ2dnAbhCebWnIA0rArgt9PpYqhv8AlVeo&#xA;f4e/RX16L1P9+cWp/e+p0xVWX8sr5bOWD67FWSzjtQ3FqBkVxy+Xx4qn1r5VuIdah1AzoUi+rVQA&#xA;1P1e1uLc/ebkH6MVTjSLF7HTorV2DtHyqw2B5MW/jiqMxV2KuxV2KuxVTt/7lfp/XiqpiqjeXtpZ&#xA;wGe6lWGIEDkxpVjsFUdSxOwA3OKsI8wfmebbR9UvdLtFMuneqnp3zGGRniRnLC3HxiIKjFmcoRQ0&#xA;BYUxVDaTqfma38unVtXvL7UIrtUuLKWyS2SGSOZVEClQj3MZc/EabDl9GKsO0DVNWvNQ87ahoK3W&#xA;rahElhbWU/rXUIlnDTi4uGj5BjHA5ZI4yNxGF6sTiql5ul1nVNCWO2vtUR7y/s9Mn+tQCHlFbR8y&#xA;XlkiiblFfu5f97TgrE7UOKpf5h8zazNp11babwTRNMW1pcw3E8lolwjCRKJeAophUqot1eqyBT0G&#xA;KvRbT85vLbalqBlmddPt9Ltr62gCCS4Lma5imWiF+TfBbgLy6uPE0Vejg1FcVU7j+7H+un/Exiqp&#xA;irsVdirsVdiq2SSONC8jBEHVmIAFdupxVKL240W5dmhuYZrpzFaSiOUM3pSTKHQqrbVBPvirHdSh&#xA;updOvblkka6tG1BrNgGBUpc3VxGQB1/eWkDCvgOxNVUt8xxahp8NpDpiSxxHUTZuqBn/ANEiiEMa&#xA;knkaCN2HLr74qvi/SkUsssayrJPKZ5W4k1kJjJbcf8Up92KoDS59dh1C7tVEy2lotslmhQ0ULGmw&#xA;JFTT0E6+HzxVH32peY4rCZ4WmEsKzTwkJUiVlckj4d93OKrfMfmDzfb3OhLaSzqlxX65xiDV/flf&#xA;i+E0+HFWTaTqGsSwxmd3LGXi1VA+H1bceH8rviqIW91M21oxZ+b3Vskvw/7reBGeu3TkTiqfYq7F&#xA;XYq7FXYq7FVOAgQAk0ArU/TiqS+cfMsOi6aEjnij1W+5Q6WkpAT1abyyV6RQg85W7KPEgFV5h5e8&#xA;4+ZbHTtR15rNvMtnoTXFnLfkhZYlhjDrLDE7iQBuYWZSnPapdqcVVV0/LmTz35di1tNRa3kmT0bC&#xA;gK+pZQ+mY4ZHQ/CTcRPIzgN8R5DYAYqzzT7DWk8i3ekT24bU7KC4s7NY6RpKIlIs2jYmgrH6dST8&#xA;LVFdq4qgbLyXq2k6bcS6ZqMq+YJLLiHAh9J5/UlnHqh425L69w5ZvtcffFU6bydptxo9jpupNJff&#xA;UneYzFmhaWWWOWKV5PSKV9RbiTkOhriqSeetG0NfL02i3UnM69e8zFNL6f1iX1BOVllUowhjSMK1&#xA;DX01CL8RWqrw3zxZReRtbmfTtSl8xeZL1m/Tf1mT13tLaVWBUK1D8dsfjLOvFRX4FbFXrPkr84NO&#xA;1G88v+WluU1XVZo3j1LUIN42eGNqyRLCHqrMqku3BQG8Qyqq9On+wP8AXT/iYxVUxV2KuxVD6jex&#xA;WGn3N9MGaK0ieeRUoWKxqWIWpArQeOKojFUDrdlNe6ZNbQ09STjx5Gg+Fw38MVYP5Z8ga7put3N7&#xA;cNAYZblJl4OS3FZGY1BUb0bFWfNexL6lQ37qWOBun2pOFCN+n7wYqh7nW7W3WNnSQiWX0FoB9o3K&#xA;WtTU9OcoPy+7FUOPNGnmKeT05eNvx57LU8o4JBT4vC6X8fpVd/ijT/R9b05ePpevSi14+r6NPtde&#xA;X4YqpnzfpouLiD0pudvew6c54pQy3BAVh8X2BXfv7Yqh4PPmjzaMdXWG4FsLd7rgVTnwjmMJFOdO&#xA;XJfHpiqYN5hshqKWBST1pEdw1F40S4W2O/Kv23B6dPuxV0XmGykhmlVJAsLhGBC1qbVbvb4v99vT&#xA;5+2+Kpgs6G4eAA840Rye1HLAf8QOKqmKuxV2KuxV2KsM8/6tHYaEWu0mXThFLLJNEjyBpkH7iNig&#xA;PprzPqFmoPhC71pir50m1jWtXuroQiS+1G+dxDDWs6vK5fioAaN0ZPU2VF/ePyoWC4q+hfJfkQWf&#xA;k/S9NvnaKWCMJctByj+t27sZfSuY5F5dZCGU/EN6EBmGKsxsNPstPtha2UK29srMyQpsil2LtxHR&#xA;RyY7DbFURiqn/wAfH+w/jiqpiqyaCGeMxTIskbfaRwCD9BxV59+Yuj2ek+WpE0+zj07RIkvbnUbq&#xA;zgEsiPJbSRVMClCwcTNWQcuJAqvGrKq828p6X9R1q+GgWd5BBaWcF5daxMjW15dhohG8CSyGFo7W&#xA;4jgb0iE5JJ8ShVAxV7T5LuTP5Q0d/UMtbSzJdizuW4pyLu/xMx7k7164qyTFXYq7FVC/sob6xubK&#xA;aohuonhl4mjcZFKtQ770OKq+KuxV2KqDWULepWv72VJm3/aj4cfo/djFVC40aznWNXL0jl9ZaEfa&#xA;Fwlz4dPUiH0YqlOt6LaWWj3ssBfnJ6deRB7W8Xh/Lbr+OKsM1/ULqx8rm6gYer8Vt8QBHpiWKUbe&#xA;PKQ4qs1C6nhgv71H/fPOupGoFPXthyj2p9mq7jFUm8s3tzc6deaRI/8AokUAtkoAG9OaR5m3p154&#xA;qyBNXvXpqjMPrUcGs8SAOP8Aoksd1Ft/xkG/tirOtO0W0a0nUl6Szy8tx/uuM2S02/31GPp3xVNl&#xA;hQTvOK83VUbwohYj/iZxVfirsVdirsVdiryz81dcu7SztNM1ItFpGp3CxEWXxytaxsrXDyFgCrrU&#xA;cEUEeJavEKo/8ofKtno9lNPbpbymQAS3ShGm9ZgJXQSKP7tRIsfHYVSoHxYq9ExV2KuxVT/4+P8A&#xA;YfxxVUxV2KuIBFDuDirzzzn5D0jzH5h029uFLxRmWHVEM0kbemgaS2aNWb0wyS7bLWjnFWQeXre8&#xA;sxd2sihbOSdLyyFQSFumWSVevL+/MjdNgwA6YqyPFXYq7FVG4vIbevqE/DHJMaCvwRU5f8SGKoW4&#xA;17T4HVJC1WZ0FFrvGszt+Fs+Kqdt5j0y5jhkiZys/wBX9Oq0/wB6k9SOv+x64qsg806TPZx3cbP6&#xA;MsAuVJUg+mz+mNvHliqvZ69p93OsMJYu6o61Wgo5mC/9Qz4qjYJkngjmj+xKoda7GjCoxVI/N+kX&#xA;up2QitUEjfBUEgfZureU9f8AIibFUm0LynqdrLpRubdAlrf31xOOSMBHcROsZpXepIxVmphhIoY1&#xA;IPUUGKtLb26/ZiQV60UDFW/RhpT01pvtQftdfvxVeAB0xVL217T1t2uCW9NGmQ/DvW3n+ryf8lMV&#xA;cuvae08UILc5l5p8O1Kwj/saTFUwxV2KvObfzQnm3zt+hbdtX0WbQ2uXkuI2jjsrwW15DGyxE8xc&#xA;qVQo9F/dciDR6Yq9GxV4H+Z91C3mGR7S3BsY4BJdSTFoEa6Z+IKqeLzIBCrUTao5ePJV6n+XMdva&#xA;+TdPVUcPKJJpmMZHOWWRndxwHHixNVp+zTFWS/WI/B/+Af8ApirvrEfg/wDwD/0xV31iPwf/AIB/&#xA;6Yqp+un1itH+x/I/j8sVVPrEfg//AAD/ANMVd9Yj8H/4B/6Yq76xH4P/AMA/9MVQGs3NLQBfhDNR&#xA;jIpApQn9pSMVQmn3MRMSRQ05FVZ1U/suu7MePf2xVPsVdirsVQ15Ypc8uTFeUMsG3hLxqfo4Yqkm&#xA;p6Uj3ZHqEek8Ug26/W3uoGH+xF0SPlirCdI1u5js7GiIfT/RdNj/ALrtbn3/AOXcffiqIM0tj5Wn&#xA;KcXNjbJapyB+JQXn5Gh61jAxVEw6pcaZqGnPEqP69oXYMDsbeedFpQ9xdtX5DFU/0vzFdLcXGnen&#xA;GY7C+g06N9+TRtHux3+1tiqY2Gt3FzqVtavGgSa3knZhWoaNbVgBv0/0pvuGKpnZTtcWcE7ABpY0&#xA;dgOgLKDtiqtirsVdirsVSh/LkD2j2xmYK73LlqCtbm5FyR/sSKYqkGiB7y/0qRyF5afZTkAftXSC&#xA;RhuegOmJT/WPtirNsVdirsVYn5s07zjcWa/UZ1nkj1TTrq1iszJYyJaW92kt3HPKbh1uBLbq0fHg&#xA;qkncfyqsH/NQuupWxuDGtxKvpWVeMcbx+ohBkklk4bM7hqDbZm26Ksz/AC71bUtV06CYvz0y1gW2&#xA;SVl4PNcKRzYLViEjH7sVO+5xVmOKuxV2Kqf/AB8f7D+OKqmKuxV2KqF4ly8JW34epUUMhIApuDsD&#xA;3xVK0h1EX7tLIqfFG5jABDBnAI5UrQUGKqPlez1y11TzKdQEv1K71IXOkercG4425tIInRAzOYl+&#xA;sQySBNgOew6jFWQ4q7FVrxRvTmganSoB/Xiqm1jZMSzW8ZJ41JRSfgPJe3Y7jFUKvl3y+oAXTLRQ&#xA;vHiBBGAOAZVp8P7IdgPmfHFVzaFojRNE2n2zRP8AbjMMZVtiNxSh2JxVzaFojFGbT7YmNSqEwxkq&#xA;pPIgbbAnfFV66PpKu8i2VuryOJXcRIC0g2Dk03YeOKpNpPmf8t9Rv0tdI1bR7zUATAkFpcWss1eB&#xA;dowsbFq8Lckr4J/k4qn62loihEhjVVACqFAAA6ACmKqcjaZGZRIYUMEYmnDcBwjPKjvX7K/A258D&#xA;4YqqC3tWAZY0IO4IUUIxVv6tb/76T/gRirvq1v8A76T/AIEYq76tb/76T/gRiqjFpWlxFDFZwRmN&#xA;VjQrGg4pGGCKKDYKHag7VOKorFXYq7FXYq82/M20tXl0i51FEubGASuLMsIyxR0eQciauZEXgqCm&#xA;++/TFUdpnnHTrTyhZi1KwandVW0tp6cpZpGLySqqFiys7Mf9b4PtYqzRJXgt4vrssbTEqjSRqY0Z&#xA;2NAFQtIRUn+Y4qr4q7FVP/j4/wBh/HFVTFXYq7FWN67rzwXptIZuDDitQacW+0Sdvi2I25fRiqM0&#xA;xZZYDd3FWmkdN3TgQvJaUOwIIodhiqcYq7FXYq7FXYq7FXYq7FXYq8y8yfl754uV11tB1ePTZ9V1&#xA;S6v4pEnuICI5dAGmQK7RJXkl4iS7dAAwPIUxVItV/K384I9MurXQfNRjknmRle+1LVJWWNJ9QCFZ&#xA;KtIjJbXFkeKng8kJ9QOpPNVNvMvkvzzced7jVtMHLT/rlle3AN9JbJdWkMCxS2H1aID12Vo5HRZp&#xA;Y4ay/FzHIKqzjyLpWoaR5J0DStRIOoWGnWltd8W5r6sMCo4DftAMvXviqeYq7FXYq7FXYq7FXYq7&#xA;FUnudBtbuVNRVQNUhieKxuJaypAzE/vEiJ4cvfqaUrirx3UPKGt2eqGKwHOw9WKws9QccQZg1WMf&#xA;Jmo3qh15dt6UqBir0T9OyancaXArrcfUmmvdQmdhboiwfDC8jANxD8+YAHz74qjtH85rftc3NxF9&#xA;U0+2EiiSpbkUZRyPII68uVEThU/cMVZGt1CUgLH02uKekj7MTxL8aeIUHFW/+Pj/AGH8cVXSv6cb&#xA;ycS3BS3FRVjQVoB44qk1n5qsZkuzKDE1sWKqafvI6AqUNeJJ5D9r36HFUq80X49e3vLa8WS2KGkS&#xA;srqHoSrMhNKNUdsVUdBtbvUIFTeK3mcySliT6gFP2QR8I2AxVlcdotrbCJHZk9RCqmlFq4qFoOmK&#xA;ovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVBY2ks2jRzEzqyrKtOSk1AY&#xA;VqKjFUtk8r2Mi6fbNU6fp0TJHbMeXN2UIHkJ+1xWvzJqcVYbP5buNG1Iz2EbrpV3dKJIpPjuZpI6&#xA;8eIl+FvjYsnMH7PLrTFVOy067s4rjUdQkiBMrhrdZHMjyzqqSSSow+D91HI1acupoPs4qj9F1DU7&#xA;zzFpC3DK84SWe4jFWMIkVtn2HBiSfh6j4Qdhiqd6z5kW01JHskN76SyW8yIxVBK1HVeQV+TgRn4R&#xA;viqBsbnWtV083dxqLWjNcSQrDCAqKpBLMJK/EFjJIJ228d8VS2Gxt5ZjBT07RvTEU/Bi7zIrKPTZ&#xA;BXhUU8aFaDviqMuPKsxZriG2aGy4hhbNxklHH4jSpJFWOwU1p13oCqzSC1t4ORhjCBqVC7DbwHQd&#xA;cVbuP7sf66f8TGKqmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqETSIgUw&#xA;sSK7gp4/62Kr/Vk/3y/3p/zViqlcxJcIiy27sEdJU3TZ42DKR8XiMVS7zBoyavbojW/7xGHFn40A&#xA;LDkfhYMfhrQVpX6MVSV9Hk0V50076y91exTyAN6chqgjBZmo7nxNOrUApiqG0/yxqxvLQSCSOGxa&#xA;OSIEfApX4iQDLw5Gm9AftH5BVO00O7N/NcB5YELcFCCFS0bKGehVqj950r038cVTOzsLazllkt7Z&#xA;1eanqMWViSK7lmYsSa774qi/Vk/3y/3p/wA1Yq71ZP8AfL/en/NWKrZGkcBREw+JSSStKBgT0bFV&#xA;bFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXUFa036VxVLo9a&#xA;0y/kubLStTs5tRgDepErpcGIpK0LepFG6P8ADLE6HcfEpHUHFUBY6TrcXm641K4MDWE9hDbvJHLM&#xA;Ha5ikZiwtWV440KvSolJ23HgqyDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqw638mXHl7WdR13y/LJdX/mC+tZNbhuzG0ZgWZleSHgICjw28nFd&#xA;2BVBVWclyqzHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>iText 5.0.5 (c) 1T3XT BVBA</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>595.000000</stDim:w>
            <stDim:h>842.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:02801174072068119500AD35E42F86F4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:02801174072068119500AD35E42F86F4</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:02801174072068119500AD35E42F86F4</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068119500AD35E42F86F4</stEvt:instanceID>
                  <stEvt:when>2012-04-27T16:17:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -268.709 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 268.709 li
331.088 268.709 li
331.088 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.57895 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
191.849 197.624 mo
330.798 197.624 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.193668 .150057 .155337 3.0518e-05 cmyk
@
42.7593 143.674 mo
153.339 143.674 li
153.339 245.563 li
42.7593 245.563 li
42.7593 143.674 li
cp
@
98.3389 147.144 mo
98.3389 242.674 li
@
46.2393 194.624 mo
150.449 194.624 li
@
100.369 141.014 mo
100.369 140.464 li
101.459 140.464 li
101.459 136.174 li
100.369 136.444 li
100.369 135.884 li
102.179 135.434 li
102.179 140.464 li
103.269 140.464 li
103.269 141.014 li
100.369 141.014 li
cp
.75021 .679683 .670222 .90164 cmyk
f
156.949 203.484 mo
156.949 202.944 li
158.039 202.944 li
158.039 198.644 li
156.949 198.924 li
156.949 198.364 li
158.759 197.914 li
158.759 202.944 li
159.849 202.944 li
159.849 203.484 li
156.949 203.484 li
cp
f
101.779 252.774 mo
101.779 252.224 li
105.039 252.224 li
105.039 252.774 li
101.779 252.774 li
cp
106.999 254.674 mo
106.999 254.134 li
108.089 254.134 li
108.089 249.834 li
106.999 250.104 li
106.999 249.554 li
108.819 249.094 li
108.819 254.134 li
109.899 254.134 li
109.899 254.674 li
106.999 254.674 li
cp
f
32.7793 201.584 mo
32.7793 201.034 li
36.0391 201.034 li
36.0391 201.584 li
32.7793 201.584 li
cp
37.999 203.484 mo
37.999 202.944 li
39.0889 202.944 li
39.0889 198.644 li
37.999 198.924 li
37.999 198.364 li
39.8188 197.914 li
39.8188 202.944 li
40.8989 202.944 li
40.8989 203.484 li
37.999 203.484 li
cp
f
32.3389 45.9336 mo
34.0791 45.9336 li
.193668 .150057 .155337 3.0518e-05 cmyk
@
32.3389 37.2539 mo
34.0791 37.2539 li
@
32.3389 27.9839 mo
34.0791 27.9839 li
@
.5 lw
120.088 152.344 mo
119.329 153.764 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
@
119.329 153.764 mo
118.608 155.124 li
117.909 156.424 li
117.249 157.704 li
116.588 158.924 li
115.95 160.124 li
118.428 154.444 li
117.729 155.784 li
117.069 157.063 li
115.29 155.563 li
114.709 156.864 li
114.129 158.124 li
113.588 159.344 li
113.049 160.524 li
112.528 161.644 li
112.028 162.744 li
111.549 163.824 li
114.049 152.644 li
116.569 147.204 li
115.95 148.784 li
115.329 150.304 li
114.749 151.784 li
114.168 153.204 li
120.749 154.704 li
119.969 156.024 li
119.229 157.324 li
118.508 158.563 li
117.809 159.764 li
117.149 160.924 li
116.489 162.044 li
118.95 156.304 li
116.309 156.764 li
123.129 155.804 li
122.29 157.084 li
121.469 158.324 li
120.668 159.544 li
122.87 148.504 li
120.909 147.284 li
.0178531 .0106203 .0106203 3.0518e-05 cmyk
@
120.909 147.284 mo
120.129 148.864 li
119.389 150.384 li
118.649 151.844 li
117.95 153.264 li
120.37 147.824 li
119.608 149.364 li
118.87 150.884 li
118.168 152.324 li
117.489 153.724 li
123.95 155.224 li
123.069 156.524 li
122.229 157.804 li
121.409 159.024 li
120.629 160.204 li
119.848 161.364 li
122.209 155.644 li
121.389 156.944 li
120.588 158.185 li
119.829 159.404 li
119.088 160.584 li
128.79 147.284 li
127.749 148.844 li
126.749 150.364 li
126.549 158.944 li
125.588 160.124 li
124.668 161.284 li
123.768 162.384 li
125.989 156.644 li
125.049 157.904 li
124.129 159.124 li
130.389 160.444 li
129.309 161.584 li
128.249 162.685 li
127.229 163.744 li
125.129 162.024 li
124.229 163.124 li
123.348 164.164 li
.0435492 .0310369 .0310369 3.0518e-05 cmyk
@
123.348 164.164 mo
122.489 165.185 li
121.668 166.164 li
128.309 161.864 li
127.29 162.944 li
126.309 164.004 li
132.809 162.804 li
134.588 151.664 li
133.37 153.084 li
132.188 154.464 li
131.049 155.804 li
129.95 157.084 li
128.87 158.344 li
134.969 159.685 li
133.729 160.844 li
135.629 155.144 li
134.37 156.464 li
133.149 157.724 li
131.969 158.964 li
130.829 160.144 li
129.729 161.284 li
128.668 162.404 li
127.649 163.484 li
126.649 164.524 li
125.688 165.524 li
124.749 166.484 li
123.848 167.424 li
130.428 166.124 li
132.428 160.244 li
131.268 161.384 li
130.149 162.504 li
136.989 170.804 li
135.688 171.604 li
134.428 172.364 li
140.528 162.484 li
142.668 164.104 li
141.168 165.124 li
139.729 166.104 li
138.348 167.063 li
.0766613 .0555734 .0588388 3.0518e-05 cmyk
@
138.348 167.063 mo
136.989 167.984 li
138.79 162.063 li
137.409 163.144 li
136.108 164.185 li
134.829 165.204 li
133.588 166.185 li
132.409 167.144 li
138.688 165.844 li
137.348 166.804 li
136.028 167.724 li
141.889 168.764 li
140.428 169.624 li
139.008 170.464 li
137.649 171.264 li
136.329 172.063 li
138.129 165.984 li
136.79 166.944 li
135.489 167.864 li
134.249 168.764 li
137.829 171.864 li
136.508 172.624 li
135.209 173.364 li
133.969 174.084 li
132.768 174.764 li
131.608 175.444 li
137.928 173.864 li
143.729 174.685 li
146.528 183.024 li
144.909 183.424 li
146.428 176.984 li
147.79 165.364 li
146.129 166.344 li
144.528 167.304 li
142.969 168.204 li
141.469 169.084 li
140.028 169.944 li
138.629 170.784 li
.108003 .0798962 .0851759 3.0518e-05 cmyk
@
138.629 170.784 mo
137.268 171.584 li
135.969 172.344 li
139.049 174.664 li
137.688 175.324 li
136.37 175.984 li
149.649 174.524 li
147.95 175.204 li
149.809 169.685 li
148.088 170.524 li
146.409 171.324 li
144.809 172.124 li
143.249 172.864 li
141.749 173.604 li
140.29 174.304 li
138.87 175.004 li
141.049 176.204 li
139.629 176.844 li
138.229 177.444 li
136.889 178.024 li
136.37 185.685 li
142.209 186.124 li
145.108 187.984 li
150.989 185.984 li
149.229 186.284 li
150.608 179.764 li
148.848 180.264 li
147.168 180.744 li
145.969 181.884 li
144.37 182.324 li
142.829 182.744 li
141.329 183.164 li
139.889 183.544 li
138.489 183.924 li
137.149 184.304 li
135.829 184.664 li
141.709 185.124 li
143.79 186.024 li
142.268 186.324 li
.140475 .107088 .111666 3.0518e-05 cmyk
@
142.268 186.324 mo
145.168 188.164 li
151.028 186.185 li
149.268 186.464 li
147.569 186.764 li
145.909 187.024 li
144.329 187.304 li
145.87 180.724 li
145.489 188.964 li
143.909 189.164 li
142.389 189.364 li
140.909 189.563 li
146.608 189.864 li
144.989 190.044 li
144.049 190.404 li
142.528 190.544 li
141.028 190.704 li
143.969 192.404 li
142.428 192.504 li
151.95 190.924 li
150.149 191.063 li
148.428 191.204 li
146.749 191.324 li
145.129 191.444 li
143.549 191.584 li
142.028 191.685 li
141.008 192.464 li
146.709 192.685 li
145.709 192.944 li
144.129 193.024 li
142.588 193.104 li
141.108 193.164 li
144.809 201.884 li
143.249 201.664 li
141.749 201.464 li
148.87 199.884 li
147.168 199.744 li
152.168 193.324 li
.174868 .132937 .138125 3.0518e-05 cmyk
@
152.168 193.324 mo
150.37 193.384 li
149.268 193.624 li
147.569 193.664 li
153.049 193.844 li
151.649 194.563 li
149.87 194.584 li
148.149 194.604 li
146.489 194.624 li
144.87 194.644 li
147.668 196.204 li
146.028 196.185 li
145.049 196.324 li
143.489 196.284 li
141.969 196.244 li
147.95 193.984 li
146.29 194.024 li
149.008 201.724 li
154.45 201.644 li
152.569 201.424 li
150.749 201.224 li
149.008 201.024 li
147.749 201.504 li
146.729 201.464 li
149.469 202.824 li
148.889 203.444 li
147.209 203.164 li
145.569 202.904 li
143.989 202.644 li
142.45 202.404 li
140.969 202.164 li
146.668 202.063 li
152.489 199.624 li
150.688 199.464 li
153.108 200.063 li
151.29 199.904 li
149.508 199.744 li
147.79 199.604 li
151.29 208.124 li
.212253 .165286 .17023 3.0518e-05 cmyk
@
151.29 208.124 mo
149.508 207.685 li
144.329 217.964 li
142.79 217.224 li
141.309 216.504 li
139.848 215.804 li
138.469 215.124 li
144.249 214.604 li
143.329 214.144 li
142.969 214.384 li
141.469 213.764 li
147.469 210.924 li
145.809 210.404 li
147.768 210.464 li
150.489 211.524 li
148.729 210.984 li
147.049 210.464 li
145.409 209.964 li
143.848 209.484 li
142.309 209.024 li
148.749 215.784 li
147.489 215.784 li
145.848 215.104 li
144.249 214.444 li
143.348 214.004 li
141.829 213.384 li
140.37 212.784 li
138.969 212.204 li
144.749 218.084 li
146.749 217.884 li
145.129 217.144 li
142.45 213.685 li
140.95 213.063 li
139.528 212.484 li
145.268 212.044 li
143.709 211.484 li
142.168 210.964 li
140.709 210.444 li
.247196 .19559 .200748 3.0518e-05 cmyk
@
140.709 210.444 mo
139.29 209.944 li
134.768 226.584 li
133.549 225.544 li
136.729 226.124 li
135.87 225.764 li
134.608 224.764 li
133.389 223.784 li
135.749 223.404 li
135.629 223.344 li
148.95 220.324 li
147.249 219.504 li
145.608 218.704 li
144.028 217.944 li
142.489 217.185 li
141.008 216.464 li
139.569 215.764 li
142.549 216.664 li
141.069 215.944 li
139.629 215.264 li
138.249 214.604 li
137.668 221.084 li
136.348 220.224 li
135.069 219.404 li
144.508 219.304 li
142.969 218.504 li
136.809 224.844 li
135.528 223.864 li
134.268 222.924 li
133.049 222.004 li
143.688 220.464 li
138.268 229.664 li
136.928 228.544 li
135.629 227.444 li
134.37 226.384 li
133.149 225.364 li
131.969 224.364 li
136.848 220.804 li
135.989 220.624 li
.283635 .223056 .228244 3.0518e-05 cmyk
@
135.989 220.624 mo
135.489 226.884 li
134.249 225.844 li
134.649 224.584 li
134.569 224.484 li
133.348 223.524 li
136.528 224.144 li
135.249 223.204 li
133.989 222.284 li
132.79 221.384 li
131.629 220.524 li
130.508 219.704 li
129.409 218.904 li
142.928 216.024 li
141.428 215.344 li
134.209 220.904 li
132.989 220.063 li
131.829 219.244 li
130.688 218.464 li
134.37 236.944 li
134.29 236.444 li
133.088 235.084 li
131.909 233.784 li
130.768 232.504 li
129.668 231.284 li
128.608 230.104 li
127.588 228.964 li
133.729 227.984 li
132.528 226.904 li
131.37 225.864 li
130.249 224.864 li
128.069 221.144 li
131.409 221.844 li
130.29 220.984 li
129.209 220.124 li
128.168 219.304 li
132.608 227.044 li
138.889 223.764 li
.320256 .254887 .260075 3.0518e-05 cmyk
@
138.889 223.764 mo
131.749 229.063 li
130.608 227.944 li
129.528 226.884 li
135.608 225.964 li
130.45 234.984 li
129.348 233.685 li
128.309 232.424 li
127.29 231.204 li
130.668 231.584 li
129.569 230.384 li
126.588 228.404 li
125.629 227.324 li
124.688 226.264 li
123.79 225.244 li
122.928 224.264 li
123.229 224.164 li
126.688 230.884 li
125.729 229.704 li
131.928 228.704 li
130.79 227.604 li
122.79 230.024 li
121.95 228.884 li
125.508 229.344 li
124.588 228.224 li
123.688 227.144 li
122.829 226.084 li
118.088 235.104 li
117.409 233.784 li
124.188 230.304 li
123.309 229.144 li
122.45 228.044 li
122.768 227.824 li
129.069 226.884 li
128.79 232.944 li
127.768 231.704 li
130.309 231.063 li
133.588 231.444 li
132.409 230.264 li
.358618 .288426 .293584 3.0518e-05 cmyk
@
132.409 230.264 mo
125.469 235.344 li
124.528 234.024 li
123.649 232.744 li
122.768 231.524 li
121.95 230.324 li
120.008 226.424 li
117.348 224.584 li
116.688 223.624 li
116.049 222.685 li
118.668 231.944 li
119.108 231.604 li
118.389 230.404 li
118.469 236.344 li
122.149 236.563 li
121.329 235.204 li
120.528 233.884 li
119.768 232.624 li
113.249 237.624 li
116.268 236.784 li
115.649 235.424 li
115.049 234.104 li
114.469 232.824 li
113.909 231.604 li
113.348 230.404 li
112.829 229.244 li
119.45 228.264 li
117.608 224.424 li
116.95 223.464 li
116.29 222.544 li
118.049 241.204 li
117.37 239.685 li
116.709 238.224 li
110.29 243.044 li
109.848 241.484 li
109.45 239.964 li
107.129 237.664 li
106.79 236.284 li
.398016 .323583 .328191 .0037232 cmyk
@
106.79 236.284 mo
106.489 234.924 li
106.188 233.624 li
105.889 232.364 li
105.608 231.144 li
116.008 230.664 li
115.409 229.484 li
114.809 228.364 li
113.108 224.524 li
116.969 225.124 li
116.309 224.144 li
110.688 236.524 li
106.329 245.204 li
107.168 244.424 li
106.848 242.804 li
106.549 241.244 li
106.229 239.744 li
105.95 238.284 li
105.649 236.864 li
105.389 235.504 li
105.108 234.164 li
104.87 232.904 li
111.749 231.784 li
111.268 230.584 li
110.809 229.424 li
102.649 233.704 li
105.729 231.264 li
105.45 230.084 li
105.95 236.044 li
105.668 234.704 li
105.389 233.404 li
105.129 232.144 li
96.3892 246.284 li
99.9692 245.164 li
99.8892 243.524 li
99.7896 241.944 li
99.7095 240.404 li
99.6294 238.924 li
100.688 238.344 li
.43061 .351507 .356756 .0107729 cmyk
@
100.688 238.344 mo
101.928 243.304 li
101.768 241.724 li
101.629 240.185 li
100.37 235.964 li
100.268 234.624 li
100.168 233.344 li
104.45 233.644 li
104.989 239.484 li
104.729 238.024 li
102.549 235.804 li
102.389 234.484 li
102.209 233.185 li
98.1489 241.964 li
92.3286 246.664 li
92.4888 244.984 li
92.6489 243.344 li
92.8091 241.764 li
92.9487 240.244 li
93.0884 238.764 li
99.2485 234.704 li
99.188 233.424 li
99.1294 232.164 li
99.0493 230.944 li
99.0083 229.784 li
98.9497 228.644 li
99.6685 234.644 li
93.7886 239.584 li
98.2681 239.685 li
93.6685 243.544 li
93.7886 241.964 li
93.9087 240.424 li
88.189 248.144 li
88.4888 246.404 li
88.769 244.724 li
87.9292 240.364 li
88.229 238.884 li
88.5288 237.444 li
.4589 .379034 .383612 .0242618 cmyk
@
88.5288 237.444 mo
88.8286 236.063 li
83.3091 240.944 li
87.5884 235.484 li
87.9087 234.164 li
88.2085 232.884 li
88.5083 231.644 li
88.8091 230.444 li
89.8491 236.384 li
90.0884 235.044 li
90.3286 233.744 li
90.5688 232.464 li
89.6685 228.504 li
89.9087 227.404 li
90.1489 226.344 li
78.769 240.764 li
79.3687 239.264 li
84.3286 239.384 li
84.5288 239.964 li
80.3687 243.824 li
80.9292 242.224 li
81.4692 240.685 li
81.9692 239.185 li
82.4888 237.744 li
82.9692 236.344 li
83.4292 235.004 li
89.9087 231.084 li
85.1284 243.224 li
85.5288 241.644 li
85.9087 240.124 li
82.9888 234.563 li
83.4487 233.264 li
83.9087 232.024 li
84.3491 230.804 li
84.769 229.644 li
79.3491 237.724 li
79.9292 236.324 li
83.229 224.804 li
77.9087 230.063 li
.490547 .407019 .408484 .0473335 cmyk
@
77.9087 230.063 mo
77.4292 226.185 li
78.0688 225.164 li
78.7085 224.185 li
75.7085 223.444 li
71.8286 227.844 li
72.6685 226.764 li
73.4692 225.724 li
74.2485 224.724 li
75.7886 230.864 li
76.4888 229.685 li
76.4692 230.324 li
71.3687 235.404 li
76.0288 230.124 li
75.6089 226.244 li
74.1685 226.424 li
74.9292 225.404 li
75.6685 224.404 li
72.4692 233.484 li
77.6489 233.784 li
78.2886 232.524 li
78.9087 231.304 li
79.5083 230.104 li
74.3091 235.204 li
75.0688 233.884 li
75.7886 232.624 li
75.3687 228.644 li
67.9087 233.084 li
68.8687 231.844 li
69.8091 230.644 li
70.5483 240.384 li
68.1089 234.804 li
69.0688 233.504 li
68.0688 231.424 li
63.229 236.464 li
64.3491 235.124 li
65.4292 233.804 li
69.4292 220.344 li
.516472 .431495 .431495 .0754711 cmyk
@
69.4292 220.344 mo
70.3491 219.504 li
70.1089 215.964 li
67.1089 225.304 li
68.0884 224.324 li
69.0483 223.364 li
77.1089 222.584 li
77.769 221.685 li
73.8687 224.844 li
68.8491 230.104 li
61.8892 230.164 li
63.0483 229.024 li
64.1685 227.924 li
65.269 226.844 li
63.269 222.244 li
65.1489 228.444 li
66.2085 227.364 li
67.229 226.304 li
68.2085 225.284 li
69.1685 224.284 li
64.3091 229.563 li
64.689 230.224 li
65.7485 229.063 li
66.7886 227.964 li
63.9292 229.144 li
60.6089 221.185 li
61.8091 220.324 li
59.0688 229.524 li
60.3286 228.404 li
56.9487 232.624 li
61.2485 219.204 li
54.7085 223.824 li
56.1089 222.884 li
56.7485 223.744 li
58.0688 222.824 li
59.3687 221.904 li
60.6089 221.024 li
60.689 217.444 li
.542718 .457679 .454627 .107088 cmyk
@
60.689 217.444 mo
59.0483 224.024 li
56.9888 218.984 li
58.3091 218.204 li
59.5884 217.444 li
55.0483 222.944 li
56.2085 224.084 li
57.5483 223.124 li
58.1489 223.984 li
59.4292 223.044 li
60.6685 222.124 li
55.3687 225.744 li
55.6284 221.984 li
64.1284 221.244 li
61.5884 220.604 li
59.4487 215.685 li
51.0083 231.264 li
52.5288 230.084 li
56.9487 216.744 li
58.269 216.024 li
58.8491 217.124 li
60.1089 216.404 li
61.3286 215.704 li
61.3892 212.284 li
62.5688 211.724 li
63.7085 211.185 li
61.189 210.884 li
55.4292 222.864 li
53.4888 217.864 li
50.3491 222.444 li
51.8892 221.544 li
52.689 222.464 li
54.1489 221.563 li
55.5483 220.704 li
55.8091 217.124 li
57.1685 216.404 li
58.4888 215.704 li
59.7485 215.024 li
51.5884 220.824 li
.568017 .483009 .477821 .146273 cmyk
@
51.5884 220.824 mo
53.0884 219.984 li
51.229 215.084 li
55.689 202.224 li
56.3491 203.764 li
55.769 202.664 li
57.1284 202.424 li
57.3286 199.444 li
54.0688 204.604 li
51.5688 214.324 li
53.0688 213.704 li
45.1284 219.544 li
46.8286 218.744 li
48.4888 217.964 li
46.769 213.124 li
48.4292 212.544 li
49.3286 213.744 li
50.9087 213.144 li
53.189 219.644 li
53.5288 216.104 li
54.9692 215.424 li
54.4292 213.924 li
46.4292 219.764 li
51.0483 206.764 li
52.5688 206.384 li
54.0288 206.004 li
47.5688 206.884 li
48.4888 208.264 li
50.0884 207.844 li
51.6489 207.424 li
52.0288 204.284 li
53.5083 203.984 li
54.9487 203.685 li
46.9292 209.864 li
48.5688 209.384 li
50.1685 208.924 li
51.7085 208.464 li
47.9692 203.104 li
.591119 .50695 .50222 .190311 cmyk
@
47.9692 203.104 mo
49.5884 202.844 li
51.1489 202.604 li
51.9692 204.144 li
52.3286 201.104 li
53.8091 200.904 li
50.0083 194.044 li
51.5483 194.084 li
47.269 200.344 li
48.9087 200.185 li
50.4888 200.024 li
48.7085 195.764 li
50.3091 195.744 li
51.8491 195.724 li
53.3286 195.704 li
53.6685 192.944 li
49.6284 201.284 li
51.189 201.084 li
52.689 200.904 li
48.3687 206.944 li
49.9692 206.544 li
51.5288 206.185 li
45.8091 211.744 li
47.5083 211.204 li
47.5083 203.804 li
49.1489 203.504 li
49.6089 200.484 li
47.5483 200.544 li
49.189 200.364 li
50.769 200.185 li
52.2886 200.024 li
47.269 207.884 li
46.9888 206.644 li
43.6489 201.224 li
45.4087 201.024 li
47.1089 200.824 li
48.7485 200.644 li
45.6089 197.944 li
47.3091 197.844 li
.613397 .529625 .523186 .2374 cmyk
@
47.3091 197.844 mo
48.9292 197.764 li
50.5288 197.685 li
55.0083 185.384 li
51.8286 191.024 li
47.5288 197.384 li
45.8491 193.224 li
47.5288 193.284 li
49.1685 193.344 li
47.1284 193.624 li
47.6489 190.944 li
47.3491 190.264 li
48.2886 192.185 li
49.8892 192.284 li
49.769 191.424 li
51.3286 191.563 li
49.5288 187.584 li
45.3091 194.063 li
47.0083 194.104 li
45.0288 194.344 li
49.7085 182.185 li
50.1489 179.864 li
47.1284 185.685 li
48.769 185.984 li
50.3491 186.284 li
51.8892 186.584 li
53.3892 186.864 li
49.5884 182.224 li
51.9292 189.744 li
42.3286 195.424 li
44.1284 195.404 li
45.8687 195.404 li
46.4292 192.644 li
48.1089 192.724 li
49.7085 192.804 li
51.269 192.884 li
55.7485 180.764 li
57.1089 181.244 li
.631617 .551904 .543175 .289769 cmyk
@
57.1089 181.244 mo
55.1089 177.604 li
52.8892 178.404 li
54.3286 178.944 li
51.1685 184.784 li
46.8892 191.364 li
43.8091 186.964 li
45.5688 187.244 li
47.269 187.504 li
48.9087 187.744 li
50.4888 187.984 li
48.7085 184.144 li
50.3091 184.504 li
48.229 185.063 li
52.8091 173.204 li
54.269 173.924 li
55.6685 174.624 li
57.0288 175.284 li
51.4487 179.424 li
51.269 178.984 li
52.769 179.524 li
54.229 180.044 li
52.3286 176.444 li
43.689 181.764 li
45.4487 182.204 li
47.1489 182.624 li
48.7886 183.044 li
50.3892 183.444 li
51.9292 183.824 li
52.2886 181.444 li
56.729 169.704 li
58.0483 170.544 li
51.8687 176.624 li
50.0483 173.144 li
47.9888 174.084 li
49.5884 174.764 li
51.1685 175.444 li
52.6685 176.084 li
54.1284 176.704 li
.648371 .571221 .563867 .345068 cmyk
@
54.1284 176.704 mo
55.5483 177.324 li
54.9888 177.084 li
55.269 174.924 li
56.6284 175.584 li
57.9692 176.244 li
51.3687 178.084 li
50.5483 165.704 li
46.2886 172.904 li
47.9487 173.624 li
49.5688 174.344 li
51.1284 175.024 li
52.6489 175.685 li
54.1089 176.324 li
55.5288 176.944 li
55.7886 174.784 li
57.1489 175.464 li
55.1489 172.004 li
52.9087 172.984 li
52.689 172.764 li
52.229 172.685 li
53.689 173.424 li
52.3091 168.164 li
53.769 169.044 li
55.2085 169.904 li
56.5884 170.724 li
57.9087 171.524 li
58.0884 169.563 li
56.0688 166.304 li
52.8491 172.563 li
50.689 173.524 li
52.2085 174.244 li
53.689 174.924 li
53.4292 174.644 li
54.8687 175.304 li
56.269 175.964 li
57.6089 176.584 li
61.8687 165.004 li
.662654 .592065 .578393 .40354 cmyk
@
61.8687 165.004 mo
55.3091 171.404 li
55.5688 169.424 li
53.6284 166.185 li
55.0688 167.124 li
52.8286 168.264 li
54.2886 169.164 li
55.689 170.004 li
57.0688 170.824 li
58.3687 171.624 li
57.9692 171.444 li
59.2485 172.224 li
60.5083 172.984 li
61.7085 173.704 li
65.8286 162.204 li
62.4487 156.444 li
63.5884 157.724 li
54.3286 170.484 li
52.1284 171.524 li
53.6089 172.304 li
53.1089 172.224 li
54.5483 172.984 li
55.9487 173.704 li
57.3091 174.404 li
58.6089 175.084 li
59.8892 175.744 li
59.4292 175.444 li
57.3687 171.984 li
57.5483 170.004 li
61.8091 158.624 li
62.9692 159.824 li
64.1089 160.984 li
65.189 162.104 li
62.6284 163.404 li
63.769 164.444 li
59.0688 171.685 li
60.3286 172.464 li
61.5288 173.204 li
62.7085 173.924 li
.675593 .606348 .595972 .467292 cmyk
@
62.7085 173.924 mo
61.9087 173.804 li
59.769 170.404 li
59.8892 168.464 li
61.1089 169.344 li
62.2886 170.204 li
66.4087 158.804 li
67.4087 160.004 li
68.3892 161.164 li
69.3491 162.264 li
64.9487 162.624 li
61.4292 169.004 li
62.6089 169.864 li
63.7485 170.685 li
64.8491 171.504 li
62.6089 168.185 li
63.7485 169.063 li
57.9292 173.404 li
59.229 174.124 li
60.4692 174.804 li
64.6489 163.264 li
65.7085 164.324 li
64.8286 164.504 li
65.8892 165.504 li
66.9087 166.484 li
67.9087 167.424 li
68.8687 168.344 li
69.8091 169.224 li
73.7886 163.244 li
67.6284 160.424 li
68.6089 161.563 li
68.4292 159.924 li
69.3687 161.063 li
70.2886 162.185 li
71.1685 163.264 li
74.9888 152.124 li
75.729 153.524 li
76.4292 154.884 li
.688991 .623255 .613916 .53872 cmyk
@
76.4292 154.884 mo
77.1089 156.204 li
71.9888 163.724 li
72.8091 164.744 li
73.6089 165.744 li
74.3892 166.704 li
75.1489 167.644 li
70.6284 163.644 li
71.5083 164.664 li
71.229 162.924 li
72.0884 163.984 li
72.9087 165.004 li
73.7085 165.984 li
77.4487 154.744 li
78.0884 156.063 li
81.8091 150.524 li
82.3286 151.984 li
82.8091 153.404 li
83.2886 154.784 li
80.1284 156.324 li
80.689 157.604 li
81.229 158.824 li
81.769 160.024 li
82.269 161.185 li
79.4487 158.204 li
78.9292 156.664 li
79.5288 157.924 li
80.1089 159.144 li
83.6284 148.124 li
78.2886 155.904 li
78.9087 157.185 li
77.5884 157.604 li
78.229 158.844 li
78.8491 160.024 li
82.5483 154.364 li
83.0288 155.704 li
83.4888 156.984 li
83.9487 158.244 li
84.3892 159.464 li
.698085 .636164 .626184 .610101 cmyk
@
84.3892 159.464 mo
84.8091 160.624 li
85.2085 161.764 li
85.6089 162.864 li
81.5688 157.084 li
82.0884 158.324 li
85.5483 147.324 li
85.9292 148.904 li
86.3091 150.424 li
86.6685 151.884 li
94.1489 153.424 li
94.2485 154.804 li
97.4292 149.304 li
97.4292 150.804 li
97.4292 152.264 li
97.4087 153.664 li
97.4087 155.024 li
97.4087 156.344 li
97.4087 157.624 li
97.3892 158.844 li
95.4692 159.224 li
94.4087 157.644 li
97.4692 146.685 li
97.4487 148.264 li
97.4487 149.804 li
97.4487 151.304 li
97.4487 152.744 li
97.2085 143.204 li
97.2085 144.904 li
91.4292 152.784 li
91.6284 154.185 li
91.8091 155.524 li
91.9888 156.824 li
92.1685 158.084 li
92.3286 159.304 li
92.4888 160.464 li
92.6489 161.604 li
92.8091 162.704 li
.708309 .647578 .63769 .677394 cmyk
@
92.8091 162.704 mo
95.9087 151.563 li
95.9487 153.004 li
95.9888 154.384 li
98.0083 146.144 li
97.9888 147.764 li
97.9692 149.324 li
97.9282 150.824 li
97.9087 152.264 li
97.8892 153.685 li
97.8696 155.044 li
97.8481 156.364 li
97.8286 157.624 li
104.95 158.984 li
102.768 159.364 li
102.588 160.524 li
102.409 161.664 li
105.329 155.944 li
108.028 145.024 li
107.688 146.664 li
107.329 148.264 li
107.008 149.804 li
106.688 151.284 li
106.389 152.724 li
106.088 154.124 li
104.668 152.724 li
101.129 150.024 li
101.008 151.504 li
100.889 152.924 li
103.848 147.484 li
103.629 149.044 li
103.428 150.563 li
103.229 152.024 li
103.028 153.444 li
110.29 152.584 li
109.848 153.984 li
112.409 143.124 li
111.909 144.844 li
111.428 146.484 li
.718868 .658686 .646998 .739681 cmyk
@
111.428 146.484 mo
110.969 148.084 li
110.508 149.624 li
110.088 151.124 li
112.749 145.744 li
119.37 147.484 li
118.649 149.063 li
117.95 150.563 li
117.268 152.024 li
116.608 153.444 li
115.989 154.804 li
114.249 153.384 li
113.688 154.764 li
113.149 156.084 li
112.629 157.364 li
110.209 157.784 li
115.829 139.984 li
115.209 141.804 li
114.629 143.544 li
114.069 145.244 li
113.508 146.884 li
112.989 148.464 li
112.469 149.984 li
111.969 151.464 li
111.489 152.904 li
111.028 154.284 li
110.569 155.624 li
110.129 156.924 li
112.79 151.364 li
119.729 150.563 li
126.129 152.164 li
125.188 153.584 li
124.268 154.944 li
123.389 156.264 li
122.528 157.524 li
121.688 158.764 li
123.848 147.764 li
122.989 149.324 li
.72726 .667658 .65304 .791501 cmyk
@
122.989 149.324 mo
122.149 150.824 li
123.29 142.704 li
122.45 144.424 li
121.629 146.084 li
120.829 147.704 li
120.049 149.244 li
119.309 150.764 li
118.588 152.224 li
117.889 153.624 li
117.209 154.984 li
116.549 156.304 li
115.928 157.584 li
115.309 158.804 li
117.809 153.185 li
124.268 154.685 li
123.389 156.024 li
122.528 157.304 li
129.129 156.324 li
128.088 157.584 li
127.088 158.824 li
129.069 147.804 li
128.809 156.464 li
127.768 157.724 li
126.768 158.964 li
125.809 160.144 li
127.95 154.464 li
126.95 155.804 li
125.969 157.104 li
125.028 158.344 li
124.129 159.544 li
123.249 160.724 li
122.389 161.844 li
121.569 162.944 li
120.768 164.004 li
120.008 165.024 li
126.389 166.144 li
125.428 167.084 li
131.969 162.744 li
.734615 .672541 .658747 .831296 cmyk
@
131.969 162.744 mo
129.709 161.063 li
136.088 159.964 li
134.809 161.124 li
133.588 162.224 li
132.389 163.304 li
134.209 152.164 li
132.989 153.563 li
131.829 154.924 li
130.688 156.244 li
129.588 157.524 li
128.528 158.764 li
130.588 153.124 li
129.508 154.504 li
128.45 155.844 li
127.428 157.124 li
126.428 158.384 li
132.608 159.724 li
131.45 160.884 li
130.329 162.004 li
129.249 163.084 li
128.209 164.144 li
127.188 165.164 li
133.649 163.924 li
135.549 158.124 li
134.29 159.344 li
133.069 160.504 li
131.909 161.644 li
131.549 169.844 li
130.409 170.685 li
129.329 171.484 li
132.649 173.824 li
135.028 175.084 li
133.79 175.724 li
135.569 164.164 li
141.428 165.324 li
139.989 166.284 li
141.668 160.424 li
.742702 .676081 .66482 .86743 cmyk
@
141.668 160.424 mo
140.229 161.563 li
138.809 162.664 li
137.45 163.724 li
136.129 164.764 li
142.309 163.524 li
140.829 164.563 li
139.389 165.563 li
138.008 166.544 li
136.688 167.484 li
135.389 168.384 li
134.149 169.264 li
132.928 170.124 li
134.848 164.124 li
133.608 165.124 li
139.549 166.244 li
138.168 167.204 li
136.829 168.124 li
140.348 171.224 li
138.928 172.004 li
137.569 172.764 li
136.249 173.504 li
134.969 174.224 li
141.168 172.685 li
139.729 173.424 li
138.348 174.124 li
141.309 182.484 li
142.95 176.063 li
141.469 176.704 li
140.008 177.304 li
138.608 177.884 li
144.389 178.584 li
145.809 166.924 li
144.209 167.844 li
142.668 168.744 li
141.188 169.624 li
139.749 170.444 li
138.348 171.264 li
.75021 .679683 .670222 .90164 cmyk
@
191.849 183.264 mo
191.964 183.264 li
191.964 190.444 li
191.849 190.444 li
191.849 183.264 li
cp
0 0 0 1 cmyk
f
192.659 75.5737 mo
192.775 75.5737 li
192.775 82.7539 li
192.659 82.7539 li
192.659 75.5737 li
cp
f
193 82.7539 mo
193.115 82.7539 li
193.115 89.9336 li
193 89.9336 li
193 82.7539 li
cp
f
193.929 54.0439 mo
194.044 54.0439 li
194.044 61.2236 li
193.929 61.2236 li
193.929 54.0439 li
cp
f
194.04 75.5737 mo
194.155 75.5737 li
194.155 82.7539 li
194.04 82.7539 li
194.04 75.5737 li
cp
f
194.619 61.2236 mo
194.735 61.2236 li
194.735 68.4038 li
194.619 68.4038 li
194.619 61.2236 li
cp
f
195.429 75.5737 mo
195.544 75.5737 li
195.544 82.7539 li
195.429 82.7539 li
195.429 75.5737 li
cp
f
195.54 161.724 mo
195.655 161.724 li
195.655 168.904 li
195.54 168.904 li
195.54 161.724 li
cp
f
195.659 183.264 mo
195.775 183.264 li
195.775 190.444 li
195.659 190.444 li
195.659 183.264 li
cp
f
196.119 54.0439 mo
196.235 54.0439 li
196.235 61.2236 li
196.119 61.2236 li
196.119 54.0439 li
cp
f
196.239 82.7539 mo
196.355 82.7539 li
196.355 89.9336 li
196.239 89.9336 li
196.239 82.7539 li
cp
f
196.809 75.5737 mo
196.924 75.5737 li
196.924 82.7539 li
196.809 82.7539 li
196.809 75.5737 li
cp
f
197.389 61.2236 mo
197.504 61.2236 li
197.504 68.4038 li
197.389 68.4038 li
197.389 61.2236 li
cp
f
198.08 75.5737 mo
198.195 75.5737 li
198.195 82.7539 li
198.08 82.7539 li
198.08 75.5737 li
cp
f
198.659 54.0439 mo
198.775 54.0439 li
198.775 61.2236 li
198.659 61.2236 li
198.659 54.0439 li
cp
f
198.659 183.264 mo
198.775 183.264 li
198.775 190.444 li
198.659 190.444 li
198.659 183.264 li
cp
f
199 111.474 mo
199.115 111.474 li
199.115 118.654 li
199 118.654 li
199 111.474 li
cp
f
199.469 75.5737 mo
199.584 75.5737 li
199.584 82.7539 li
199.469 82.7539 li
199.469 75.5737 li
cp
f
199.809 61.2236 mo
199.924 61.2236 li
199.924 68.4038 li
199.809 68.4038 li
199.809 61.2236 li
cp
f
200.269 82.7539 mo
200.384 82.7539 li
200.384 89.9336 li
200.269 89.9336 li
200.269 82.7539 li
cp
f
200.849 75.5737 mo
200.964 75.5737 li
200.964 82.7539 li
200.849 82.7539 li
200.849 75.5737 li
cp
f
200.849 190.444 mo
200.964 190.444 li
200.964 197.624 li
200.849 197.624 li
200.849 190.444 li
cp
f
201.199 183.264 mo
201.315 183.264 li
201.315 190.444 li
201.199 190.444 li
201.199 183.264 li
cp
f
201.309 54.0439 mo
201.424 54.0439 li
201.424 61.2236 li
201.309 61.2236 li
201.309 54.0439 li
cp
f
202.009 61.2236 mo
202.125 61.2236 li
202.125 68.4038 li
202.009 68.4038 li
202.009 61.2236 li
cp
f
202.239 75.5737 mo
202.355 75.5737 li
202.355 82.7539 li
202.239 82.7539 li
202.239 75.5737 li
cp
f
203.619 183.264 mo
203.735 183.264 li
203.735 190.444 li
203.619 190.444 li
203.619 183.264 li
cp
f
203.739 75.5737 mo
203.855 75.5737 li
203.855 82.7539 li
203.739 82.7539 li
203.739 75.5737 li
cp
f
204.08 61.2236 mo
204.195 61.2236 li
204.195 68.4038 li
204.08 68.4038 li
204.08 61.2236 li
cp
f
204.08 111.474 mo
204.195 111.474 li
204.195 118.654 li
204.08 118.654 li
204.08 111.474 li
cp
f
204.429 54.0439 mo
204.544 54.0439 li
204.544 61.2236 li
204.429 61.2236 li
204.429 54.0439 li
cp
f
204.429 190.444 mo
204.544 190.444 li
204.544 197.624 li
204.429 197.624 li
204.429 190.444 li
cp
f
204.54 68.4038 mo
204.655 68.4038 li
204.655 75.584 li
204.54 75.584 li
204.54 68.4038 li
cp
f
205.119 75.5737 mo
205.235 75.5737 li
205.235 82.7539 li
205.119 82.7539 li
205.119 75.5737 li
cp
f
205.809 183.264 mo
205.924 183.264 li
205.924 190.444 li
205.809 190.444 li
205.809 183.264 li
cp
f
206.159 61.2236 mo
206.275 61.2236 li
206.275 68.4038 li
206.159 68.4038 li
206.159 61.2236 li
cp
f
206.739 75.5737 mo
206.855 75.5737 li
206.855 82.7539 li
206.739 82.7539 li
206.739 75.5737 li
cp
f
207.199 104.294 mo
207.315 104.294 li
207.315 111.474 li
207.199 111.474 li
207.199 104.294 li
cp
f
207.199 190.444 mo
207.315 190.444 li
207.315 197.624 li
207.199 197.624 li
207.199 190.444 li
cp
f
207.889 183.264 mo
208.004 183.264 li
208.004 190.444 li
207.889 190.444 li
207.889 183.264 li
cp
f
208.009 61.2236 mo
208.125 61.2236 li
208.125 68.4038 li
208.009 68.4038 li
208.009 61.2236 li
cp
f
208.119 68.4038 mo
208.235 68.4038 li
208.235 75.584 li
208.119 75.584 li
208.119 68.4038 li
cp
f
208.119 111.474 mo
208.235 111.474 li
208.235 118.654 li
208.119 118.654 li
208.119 111.474 li
cp
f
208.349 75.5737 mo
208.464 75.5737 li
208.464 82.7539 li
208.349 82.7539 li
208.349 75.5737 li
cp
f
208.469 54.0439 mo
208.584 54.0439 li
208.584 61.2236 li
208.469 61.2236 li
208.469 54.0439 li
cp
f
209.509 190.444 mo
209.625 190.444 li
209.625 197.624 li
209.509 197.624 li
209.509 190.444 li
cp
f
209.849 61.2236 mo
209.964 61.2236 li
209.964 68.4038 li
209.849 68.4038 li
209.849 61.2236 li
cp
f
209.849 183.264 mo
209.964 183.264 li
209.964 190.444 li
209.849 190.444 li
209.849 183.264 li
cp
f
210.08 75.5737 mo
210.195 75.5737 li
210.195 82.7539 li
210.08 82.7539 li
210.08 75.5737 li
cp
f
210.08 104.294 mo
210.195 104.294 li
210.195 111.474 li
210.08 111.474 li
210.08 104.294 li
cp
f
211.009 68.4038 mo
211.125 68.4038 li
211.125 75.584 li
211.009 75.584 li
211.009 68.4038 li
cp
f
211.469 111.474 mo
211.584 111.474 li
211.584 118.654 li
211.469 118.654 li
211.469 111.474 li
cp
f
211.58 61.2236 mo
211.695 61.2236 li
211.695 68.4038 li
211.58 68.4038 li
211.58 61.2236 li
cp
f
211.699 190.444 mo
211.815 190.444 li
211.815 197.624 li
211.699 197.624 li
211.699 190.444 li
cp
f
211.809 183.264 mo
211.924 183.264 li
211.924 190.444 li
211.809 190.444 li
211.809 183.264 li
cp
f
212.049 75.5737 mo
212.165 75.5737 li
212.165 82.7539 li
212.049 82.7539 li
212.049 75.5737 li
cp
f
212.389 104.294 mo
212.504 104.294 li
212.504 111.474 li
212.389 111.474 li
212.389 104.294 li
cp
f
213.309 61.2236 mo
213.424 61.2236 li
213.424 68.4038 li
213.309 68.4038 li
213.309 61.2236 li
cp
f
213.429 68.4038 mo
213.544 68.4038 li
213.544 75.584 li
213.429 75.584 li
213.429 68.4038 li
cp
f
213.659 190.444 mo
213.775 190.444 li
213.775 197.624 li
213.659 197.624 li
213.659 190.444 li
cp
f
213.779 183.264 mo
213.894 183.264 li
213.894 190.444 li
213.779 190.444 li
213.779 183.264 li
cp
f
214.349 75.5737 mo
214.464 75.5737 li
214.464 82.7539 li
214.349 82.7539 li
214.349 75.5737 li
cp
f
214.469 104.294 mo
214.584 104.294 li
214.584 111.474 li
214.469 111.474 li
214.469 104.294 li
cp
f
214.469 111.474 mo
214.584 111.474 li
214.584 118.654 li
214.469 118.654 li
214.469 111.474 li
cp
f
214.929 61.2236 mo
215.044 61.2236 li
215.044 68.4038 li
214.929 68.4038 li
214.929 61.2236 li
cp
f
215.159 154.544 mo
215.275 154.544 li
215.275 161.724 li
215.159 161.724 li
215.159 154.544 li
cp
f
215.509 190.444 mo
215.625 190.444 li
215.625 197.624 li
215.509 197.624 li
215.509 190.444 li
cp
f
215.739 68.4038 mo
215.855 68.4038 li
215.855 75.584 li
215.739 75.584 li
215.739 68.4038 li
cp
f
215.739 183.264 mo
215.855 183.264 li
215.855 190.444 li
215.739 190.444 li
215.739 183.264 li
cp
f
216.549 104.294 mo
216.665 104.294 li
216.665 111.474 li
216.549 111.474 li
216.549 104.294 li
cp
f
216.659 61.2236 mo
216.775 61.2236 li
216.775 68.4038 li
216.659 68.4038 li
216.659 61.2236 li
cp
f
216.779 154.544 mo
216.894 154.544 li
216.894 161.724 li
216.779 161.724 li
216.779 154.544 li
cp
f
217.239 111.474 mo
217.355 111.474 li
217.355 118.654 li
217.239 118.654 li
217.239 111.474 li
cp
f
217.239 190.444 mo
217.355 190.444 li
217.355 197.624 li
217.239 197.624 li
217.239 190.444 li
cp
f
217.58 118.654 mo
217.695 118.654 li
217.695 125.834 li
217.58 125.834 li
217.58 118.654 li
cp
f
217.58 183.264 mo
217.695 183.264 li
217.695 190.444 li
217.58 190.444 li
217.58 183.264 li
cp
f
217.819 68.4038 mo
217.934 68.4038 li
217.934 75.584 li
217.819 75.584 li
217.819 68.4038 li
cp
f
217.819 75.5737 mo
217.934 75.5737 li
217.934 82.7539 li
217.819 82.7539 li
217.819 75.5737 li
cp
f
218.049 154.544 mo
218.165 154.544 li
218.165 161.724 li
218.049 161.724 li
218.049 154.544 li
cp
f
218.279 61.2236 mo
218.394 61.2236 li
218.394 68.4038 li
218.279 68.4038 li
218.279 61.2236 li
cp
f
218.389 104.294 mo
218.504 104.294 li
218.504 111.474 li
218.389 111.474 li
218.389 104.294 li
cp
f
218.969 190.444 mo
219.084 190.444 li
219.084 197.624 li
218.969 197.624 li
218.969 190.444 li
cp
f
219.199 154.544 mo
219.315 154.544 li
219.315 161.724 li
219.199 161.724 li
219.199 154.544 li
cp
f
219.549 183.264 mo
219.665 183.264 li
219.665 190.444 li
219.549 190.444 li
219.549 183.264 li
cp
f
219.779 68.4038 mo
219.894 68.4038 li
219.894 75.584 li
219.779 75.584 li
219.779 68.4038 li
cp
f
219.779 111.474 mo
219.894 111.474 li
219.894 118.654 li
219.779 118.654 li
219.779 111.474 li
cp
f
219.889 61.2236 mo
220.004 61.2236 li
220.004 68.4038 li
219.889 68.4038 li
219.889 61.2236 li
cp
f
220.349 104.294 mo
220.464 104.294 li
220.464 111.474 li
220.349 111.474 li
220.349 104.294 li
cp
f
220.469 154.544 mo
220.584 154.544 li
220.584 161.724 li
220.469 161.724 li
220.469 154.544 li
cp
f
220.589 190.444 mo
220.705 190.444 li
220.705 197.624 li
220.589 197.624 li
220.589 190.444 li
cp
f
220.699 118.654 mo
220.815 118.654 li
220.815 125.834 li
220.699 125.834 li
220.699 118.654 li
cp
f
221.389 61.2236 mo
221.504 61.2236 li
221.504 68.4038 li
221.389 68.4038 li
221.389 61.2236 li
cp
f
221.509 183.264 mo
221.625 183.264 li
221.625 190.444 li
221.509 190.444 li
221.509 183.264 li
cp
f
221.739 68.4038 mo
221.855 68.4038 li
221.855 75.584 li
221.739 75.584 li
221.739 68.4038 li
cp
f
221.739 154.544 mo
221.855 154.544 li
221.855 161.724 li
221.739 161.724 li
221.739 154.544 li
cp
f
222.199 111.474 mo
222.315 111.474 li
222.315 118.654 li
222.199 118.654 li
222.199 111.474 li
cp
f
222.199 190.444 mo
222.315 190.444 li
222.315 197.624 li
222.199 197.624 li
222.199 190.444 li
cp
f
222.429 104.294 mo
222.544 104.294 li
222.544 111.474 li
222.429 111.474 li
222.429 104.294 li
cp
f
222.429 140.184 mo
222.544 140.184 li
222.544 147.364 li
222.429 147.364 li
222.429 140.184 li
cp
f
223.009 61.2236 mo
223.125 61.2236 li
223.125 68.4038 li
223.009 68.4038 li
223.009 61.2236 li
cp
f
223.119 154.544 mo
223.235 154.544 li
223.235 161.724 li
223.119 161.724 li
223.119 154.544 li
cp
f
223.239 118.654 mo
223.355 118.654 li
223.355 125.834 li
223.239 125.834 li
223.239 118.654 li
cp
f
223.469 183.264 mo
223.584 183.264 li
223.584 190.444 li
223.469 190.444 li
223.469 183.264 li
cp
f
223.699 68.4038 mo
223.815 68.4038 li
223.815 75.584 li
223.699 75.584 li
223.699 68.4038 li
cp
f
223.819 190.444 mo
223.934 190.444 li
223.934 197.624 li
223.819 197.624 li
223.819 190.444 li
cp
f
224.509 61.2236 mo
224.625 61.2236 li
224.625 68.4038 li
224.509 68.4038 li
224.509 61.2236 li
cp
f
224.509 111.474 mo
224.625 111.474 li
224.625 118.654 li
224.509 118.654 li
224.509 111.474 li
cp
f
224.619 104.294 mo
224.735 104.294 li
224.735 111.474 li
224.619 111.474 li
224.619 104.294 li
cp
f
224.969 154.544 mo
225.084 154.544 li
225.084 161.724 li
224.969 161.724 li
224.969 154.544 li
cp
f
225.429 118.654 mo
225.544 118.654 li
225.544 125.834 li
225.429 125.834 li
225.429 118.654 li
cp
f
225.429 147.364 mo
225.544 147.364 li
225.544 154.544 li
225.429 154.544 li
225.429 147.364 li
cp
f
225.429 183.264 mo
225.544 183.264 li
225.544 190.444 li
225.429 190.444 li
225.429 183.264 li
cp
f
225.429 190.444 mo
225.544 190.444 li
225.544 197.624 li
225.429 197.624 li
225.429 190.444 li
cp
f
225.549 68.4038 mo
225.665 68.4038 li
225.665 75.584 li
225.549 75.584 li
225.549 68.4038 li
cp
f
225.779 82.7539 mo
225.894 82.7539 li
225.894 89.9336 li
225.779 89.9336 li
225.779 82.7539 li
cp
f
226.119 61.2236 mo
226.235 61.2236 li
226.235 68.4038 li
226.119 68.4038 li
226.119 61.2236 li
cp
f
226.699 111.474 mo
226.815 111.474 li
226.815 118.654 li
226.699 118.654 li
226.699 111.474 li
cp
f
226.699 140.184 mo
226.815 140.184 li
226.815 147.364 li
226.699 147.364 li
226.699 140.184 li
cp
f
226.929 190.444 mo
227.044 190.444 li
227.044 197.624 li
226.929 197.624 li
226.929 190.444 li
cp
f
227.049 104.294 mo
227.165 104.294 li
227.165 111.474 li
227.049 111.474 li
227.049 104.294 li
cp
f
227.389 68.4038 mo
227.504 68.4038 li
227.504 75.584 li
227.389 75.584 li
227.389 68.4038 li
cp
f
227.509 118.654 mo
227.625 118.654 li
227.625 125.834 li
227.509 125.834 li
227.509 118.654 li
cp
f
227.619 61.2236 mo
227.735 61.2236 li
227.735 68.4038 li
227.619 68.4038 li
227.619 61.2236 li
cp
f
227.619 183.264 mo
227.735 183.264 li
227.735 190.444 li
227.619 190.444 li
227.619 183.264 li
cp
f
228.429 190.444 mo
228.544 190.444 li
228.544 197.624 li
228.429 197.624 li
228.429 190.444 li
cp
f
228.889 111.474 mo
229.004 111.474 li
229.004 118.654 li
228.889 118.654 li
228.889 111.474 li
cp
f
229.239 61.2236 mo
229.355 61.2236 li
229.355 68.4038 li
229.239 68.4038 li
229.239 61.2236 li
cp
f
229.239 68.4038 mo
229.355 68.4038 li
229.355 75.584 li
229.239 75.584 li
229.239 68.4038 li
cp
f
229.469 118.654 mo
229.584 118.654 li
229.584 125.834 li
229.469 125.834 li
229.469 118.654 li
cp
f
229.469 147.364 mo
229.584 147.364 li
229.584 154.544 li
229.469 154.544 li
229.469 147.364 li
cp
f
229.929 183.264 mo
230.044 183.264 li
230.044 190.444 li
229.929 190.444 li
229.929 183.264 li
cp
f
229.929 190.444 mo
230.044 190.444 li
230.044 197.624 li
229.929 197.624 li
229.929 190.444 li
cp
f
230.049 140.184 mo
230.165 140.184 li
230.165 147.364 li
230.049 147.364 li
230.049 140.184 li
cp
f
230.739 61.2236 mo
230.855 61.2236 li
230.855 68.4038 li
230.739 68.4038 li
230.739 61.2236 li
cp
f
230.739 82.7539 mo
230.855 82.7539 li
230.855 89.9336 li
230.739 89.9336 li
230.739 82.7539 li
cp
f
230.859 104.294 mo
230.974 104.294 li
230.974 111.474 li
230.859 111.474 li
230.859 104.294 li
cp
f
230.969 111.474 mo
231.084 111.474 li
231.084 118.654 li
230.969 118.654 li
230.969 111.474 li
cp
f
231.199 68.4038 mo
231.315 68.4038 li
231.315 75.584 li
231.199 75.584 li
231.199 68.4038 li
cp
f
231.199 161.724 mo
231.315 161.724 li
231.315 168.904 li
231.199 168.904 li
231.199 161.724 li
cp
f
231.319 118.654 mo
231.434 118.654 li
231.434 125.834 li
231.319 125.834 li
231.319 118.654 li
cp
f
231.549 190.444 mo
231.665 190.444 li
231.665 197.624 li
231.549 197.624 li
231.549 190.444 li
cp
f
232.359 61.2236 mo
232.474 61.2236 li
232.474 68.4038 li
232.359 68.4038 li
232.359 61.2236 li
cp
f
232.359 183.264 mo
232.474 183.264 li
232.474 190.444 li
232.359 190.444 li
232.359 183.264 li
cp
f
232.589 147.364 mo
232.705 147.364 li
232.705 154.544 li
232.589 154.544 li
232.589 147.364 li
cp
f
233.049 68.4038 mo
233.165 68.4038 li
233.165 75.584 li
233.049 75.584 li
233.049 68.4038 li
cp
f
233.049 111.474 mo
233.165 111.474 li
233.165 118.654 li
233.049 118.654 li
233.049 111.474 li
cp
f
233.049 140.184 mo
233.165 140.184 li
233.165 147.364 li
233.049 147.364 li
233.049 140.184 li
cp
f
233.049 190.444 mo
233.165 190.444 li
233.165 197.624 li
233.049 197.624 li
233.049 190.444 li
cp
f
233.159 118.654 mo
233.275 118.654 li
233.275 125.834 li
233.159 125.834 li
233.159 118.654 li
cp
f
233.969 61.2236 mo
234.084 61.2236 li
234.084 68.4038 li
233.969 68.4038 li
233.969 61.2236 li
cp
f
234.429 82.7539 mo
234.544 82.7539 li
234.544 89.9336 li
234.429 89.9336 li
234.429 82.7539 li
cp
f
234.549 190.444 mo
234.665 190.444 li
234.665 197.624 li
234.549 197.624 li
234.549 190.444 li
cp
f
235.009 68.4038 mo
235.125 68.4038 li
235.125 75.584 li
235.009 75.584 li
235.009 68.4038 li
cp
f
235.009 111.474 mo
235.125 111.474 li
235.125 118.654 li
235.009 118.654 li
235.009 111.474 li
cp
f
235.009 118.654 mo
235.125 118.654 li
235.125 125.834 li
235.009 125.834 li
235.009 118.654 li
cp
f
235.129 183.264 mo
235.245 183.264 li
235.245 190.444 li
235.129 190.444 li
235.129 183.264 li
cp
f
235.239 147.364 mo
235.355 147.364 li
235.355 154.544 li
235.239 154.544 li
235.239 147.364 li
cp
f
235.589 61.2236 mo
235.705 61.2236 li
235.705 68.4038 li
235.589 68.4038 li
235.589 61.2236 li
cp
f
235.699 140.184 mo
235.815 140.184 li
235.815 147.364 li
235.699 147.364 li
235.699 140.184 li
cp
f
236.159 190.444 mo
236.275 190.444 li
236.275 197.624 li
236.159 197.624 li
236.159 190.444 li
cp
f
236.399 161.724 mo
236.514 161.724 li
236.514 168.904 li
236.399 168.904 li
236.399 161.724 li
cp
f
236.969 118.654 mo
237.084 118.654 li
237.084 125.834 li
236.969 125.834 li
236.969 118.654 li
cp
f
237.089 68.4038 mo
237.205 68.4038 li
237.205 75.584 li
237.089 75.584 li
237.089 68.4038 li
cp
f
237.089 111.474 mo
237.205 111.474 li
237.205 118.654 li
237.089 118.654 li
237.089 111.474 li
cp
f
237.319 61.2236 mo
237.434 61.2236 li
237.434 68.4038 li
237.319 68.4038 li
237.319 61.2236 li
cp
f
237.549 82.7539 mo
237.665 82.7539 li
237.665 89.9336 li
237.549 89.9336 li
237.549 82.7539 li
cp
f
237.549 147.364 mo
237.665 147.364 li
237.665 154.544 li
237.549 154.544 li
237.549 147.364 li
cp
f
237.779 190.444 mo
237.894 190.444 li
237.894 197.624 li
237.779 197.624 li
237.779 190.444 li
cp
f
238.239 140.184 mo
238.355 140.184 li
238.355 147.364 li
238.239 147.364 li
238.239 140.184 li
cp
f
238.469 183.264 mo
238.584 183.264 li
238.584 190.444 li
238.469 190.444 li
238.469 183.264 li
cp
f
238.819 118.654 mo
238.934 118.654 li
238.934 125.834 li
238.819 125.834 li
238.819 118.654 li
cp
f
238.929 61.2236 mo
239.044 61.2236 li
239.044 68.4038 li
238.929 68.4038 li
238.929 61.2236 li
cp
f
239.049 111.474 mo
239.165 111.474 li
239.165 118.654 li
239.049 118.654 li
239.049 111.474 li
cp
f
239.279 68.4038 mo
239.394 68.4038 li
239.394 75.584 li
239.279 75.584 li
239.279 68.4038 li
cp
f
239.399 190.444 mo
239.514 190.444 li
239.514 197.624 li
239.399 197.624 li
239.399 190.444 li
cp
f
239.629 147.364 mo
239.745 147.364 li
239.745 154.544 li
239.629 154.544 li
239.629 147.364 li
cp
f
240.199 82.7539 mo
240.315 82.7539 li
240.315 89.9336 li
240.199 89.9336 li
240.199 82.7539 li
cp
f
240.319 161.724 mo
240.434 161.724 li
240.434 168.904 li
240.319 168.904 li
240.319 161.724 li
cp
f
240.669 61.2236 mo
240.785 61.2236 li
240.785 68.4038 li
240.669 68.4038 li
240.669 61.2236 li
cp
f
240.669 140.184 mo
240.785 140.184 li
240.785 147.364 li
240.669 147.364 li
240.669 140.184 li
cp
f
240.779 118.654 mo
240.894 118.654 li
240.894 125.834 li
240.779 125.834 li
240.779 118.654 li
cp
f
241.009 111.474 mo
241.125 111.474 li
241.125 118.654 li
241.009 118.654 li
241.009 111.474 li
cp
f
241.129 190.444 mo
241.245 190.444 li
241.245 197.624 li
241.129 197.624 li
241.129 190.444 li
cp
f
241.589 147.364 mo
241.705 147.364 li
241.705 154.544 li
241.589 154.544 li
241.589 147.364 li
cp
f
241.699 68.4038 mo
241.815 68.4038 li
241.815 75.584 li
241.699 75.584 li
241.699 68.4038 li
cp
f
242.509 61.2236 mo
242.625 61.2236 li
242.625 68.4038 li
242.509 68.4038 li
242.509 61.2236 li
cp
f
242.629 82.7539 mo
242.745 82.7539 li
242.745 89.9336 li
242.629 89.9336 li
242.629 82.7539 li
cp
f
242.969 111.474 mo
243.084 111.474 li
243.084 118.654 li
242.969 118.654 li
242.969 111.474 li
cp
f
242.969 118.654 mo
243.084 118.654 li
243.084 125.834 li
242.969 125.834 li
242.969 118.654 li
cp
f
242.969 140.184 mo
243.084 140.184 li
243.084 147.364 li
242.969 147.364 li
242.969 140.184 li
cp
f
242.969 190.444 mo
243.084 190.444 li
243.084 197.624 li
242.969 197.624 li
242.969 190.444 li
cp
f
243.319 147.364 mo
243.434 147.364 li
243.434 154.544 li
243.319 154.544 li
243.319 147.364 li
cp
f
243.669 161.724 mo
243.785 161.724 li
243.785 168.904 li
243.669 168.904 li
243.669 161.724 li
cp
f
244.359 61.2236 mo
244.474 61.2236 li
244.474 68.4038 li
244.359 68.4038 li
244.359 61.2236 li
cp
f
244.359 68.4038 mo
244.474 68.4038 li
244.474 75.584 li
244.359 75.584 li
244.359 68.4038 li
cp
f
244.699 82.7539 mo
244.815 82.7539 li
244.815 89.9336 li
244.699 89.9336 li
244.699 82.7539 li
cp
f
244.819 190.444 mo
244.934 190.444 li
244.934 197.624 li
244.819 197.624 li
244.819 190.444 li
cp
f
245.049 111.474 mo
245.165 111.474 li
245.165 118.654 li
245.049 118.654 li
245.049 111.474 li
cp
f
245.049 147.364 mo
245.165 147.364 li
245.165 154.544 li
245.049 154.544 li
245.049 147.364 li
cp
f
245.169 140.184 mo
245.285 140.184 li
245.285 147.364 li
245.169 147.364 li
245.169 140.184 li
cp
f
245.279 118.654 mo
245.394 118.654 li
245.394 125.834 li
245.279 125.834 li
245.279 118.654 li
cp
f
246.319 61.2236 mo
246.434 61.2236 li
246.434 68.4038 li
246.319 68.4038 li
246.319 61.2236 li
cp
f
246.669 147.364 mo
246.785 147.364 li
246.785 154.544 li
246.669 154.544 li
246.669 147.364 li
cp
f
246.669 161.724 mo
246.785 161.724 li
246.785 168.904 li
246.669 168.904 li
246.669 161.724 li
cp
f
246.779 82.7539 mo
246.894 82.7539 li
246.894 89.9336 li
246.779 89.9336 li
246.779 82.7539 li
cp
f
246.779 190.444 mo
246.894 190.444 li
246.894 197.624 li
246.779 197.624 li
246.779 190.444 li
cp
f
247.009 111.474 mo
247.125 111.474 li
247.125 118.654 li
247.009 118.654 li
247.009 111.474 li
cp
f
247.469 89.9336 mo
247.584 89.9336 li
247.584 97.1138 li
247.469 97.1138 li
247.469 89.9336 li
cp
f
247.469 140.184 mo
247.584 140.184 li
247.584 147.364 li
247.469 147.364 li
247.469 140.184 li
cp
f
247.589 68.4038 mo
247.705 68.4038 li
247.705 75.584 li
247.589 75.584 li
247.589 68.4038 li
cp
f
248.169 118.654 mo
248.285 118.654 li
248.285 125.834 li
248.169 125.834 li
248.169 118.654 li
cp
f
248.279 61.2236 mo
248.394 61.2236 li
248.394 68.4038 li
248.279 68.4038 li
248.279 61.2236 li
cp
f
248.279 147.364 mo
248.394 147.364 li
248.394 154.544 li
248.279 154.544 li
248.279 147.364 li
cp
f
248.629 82.7539 mo
248.745 82.7539 li
248.745 89.9336 li
248.629 89.9336 li
248.629 82.7539 li
cp
f
248.969 190.444 mo
249.084 190.444 li
249.084 197.624 li
248.969 197.624 li
248.969 190.444 li
cp
f
249.089 111.474 mo
249.205 111.474 li
249.205 118.654 li
249.089 118.654 li
249.089 111.474 li
cp
f
249.319 161.724 mo
249.434 161.724 li
249.434 168.904 li
249.319 168.904 li
249.319 161.724 li
cp
f
249.669 140.184 mo
249.785 140.184 li
249.785 147.364 li
249.669 147.364 li
249.669 140.184 li
cp
f
249.779 147.364 mo
249.894 147.364 li
249.894 154.544 li
249.779 154.544 li
249.779 147.364 li
cp
f
250.469 61.2236 mo
250.584 61.2236 li
250.584 68.4038 li
250.469 68.4038 li
250.469 61.2236 li
cp
f
250.469 82.7539 mo
250.584 82.7539 li
250.584 89.9336 li
250.469 89.9336 li
250.469 82.7539 li
cp
f
251.169 111.474 mo
251.285 111.474 li
251.285 118.654 li
251.169 118.654 li
251.169 111.474 li
cp
f
251.279 147.364 mo
251.394 147.364 li
251.394 154.544 li
251.279 154.544 li
251.279 147.364 li
cp
f
251.399 190.444 mo
251.514 190.444 li
251.514 197.624 li
251.399 197.624 li
251.399 190.444 li
cp
f
251.509 89.9336 mo
251.625 89.9336 li
251.625 97.1138 li
251.509 97.1138 li
251.509 89.9336 li
cp
f
251.859 140.184 mo
251.974 140.184 li
251.974 147.364 li
251.859 147.364 li
251.859 140.184 li
cp
f
251.859 161.724 mo
251.974 161.724 li
251.974 168.904 li
251.859 168.904 li
251.859 161.724 li
cp
f
252.209 82.7539 mo
252.325 82.7539 li
252.325 89.9336 li
252.209 89.9336 li
252.209 82.7539 li
cp
f
252.669 147.364 mo
252.785 147.364 li
252.785 154.544 li
252.669 154.544 li
252.669 147.364 li
cp
f
252.779 61.2236 mo
252.894 61.2236 li
252.894 68.4038 li
252.779 68.4038 li
252.779 61.2236 li
cp
f
252.779 133.014 mo
252.894 133.014 li
252.894 140.194 li
252.779 140.194 li
252.779 133.014 li
cp
f
253.359 111.474 mo
253.474 111.474 li
253.474 118.654 li
253.359 118.654 li
253.359 111.474 li
cp
f
253.819 82.7539 mo
253.934 82.7539 li
253.934 89.9336 li
253.819 89.9336 li
253.819 82.7539 li
cp
f
254.169 140.184 mo
254.285 140.184 li
254.285 147.364 li
254.169 147.364 li
254.169 140.184 li
cp
f
254.169 147.364 mo
254.285 147.364 li
254.285 154.544 li
254.169 154.544 li
254.169 147.364 li
cp
f
254.169 161.724 mo
254.285 161.724 li
254.285 168.904 li
254.169 168.904 li
254.169 161.724 li
cp
f
254.399 190.444 mo
254.514 190.444 li
254.514 197.624 li
254.399 197.624 li
254.399 190.444 li
cp
f
254.509 176.084 mo
254.625 176.084 li
254.625 183.264 li
254.509 183.264 li
254.509 176.084 li
cp
f
254.629 89.9336 mo
254.745 89.9336 li
254.745 97.1138 li
254.629 97.1138 li
254.629 89.9336 li
cp
f
255.439 61.2236 mo
255.554 61.2236 li
255.554 68.4038 li
255.439 68.4038 li
255.439 61.2236 li
cp
f
255.439 82.7539 mo
255.554 82.7539 li
255.554 89.9336 li
255.439 89.9336 li
255.439 82.7539 li
cp
f
255.549 111.474 mo
255.665 111.474 li
255.665 118.654 li
255.549 118.654 li
255.549 111.474 li
cp
f
255.549 147.364 mo
255.665 147.364 li
255.665 154.544 li
255.549 154.544 li
255.549 147.364 li
cp
f
255.899 133.014 mo
256.014 133.014 li
256.014 140.194 li
255.899 140.194 li
255.899 133.014 li
cp
f
256.479 140.184 mo
256.594 140.184 li
256.594 147.364 li
256.479 147.364 li
256.479 140.184 li
cp
f
256.479 161.724 mo
256.594 161.724 li
256.594 168.904 li
256.479 168.904 li
256.479 161.724 li
cp
f
256.709 54.0439 mo
256.825 54.0439 li
256.825 61.2236 li
256.709 61.2236 li
256.709 54.0439 li
cp
f
256.709 176.084 mo
256.825 176.084 li
256.825 183.264 li
256.709 183.264 li
256.709 176.084 li
cp
f
256.819 147.364 mo
256.934 147.364 li
256.934 154.544 li
256.819 154.544 li
256.819 147.364 li
cp
f
256.939 82.7539 mo
257.054 82.7539 li
257.054 89.9336 li
256.939 89.9336 li
256.939 82.7539 li
cp
f
257.279 168.904 mo
257.394 168.904 li
257.394 176.084 li
257.279 176.084 li
257.279 168.904 li
cp
f
257.399 89.9336 mo
257.514 89.9336 li
257.514 97.1138 li
257.399 97.1138 li
257.399 89.9336 li
cp
f
257.859 111.474 mo
257.974 111.474 li
257.974 118.654 li
257.859 118.654 li
257.859 111.474 li
cp
f
258.089 97.1138 mo
258.205 97.1138 li
258.205 104.294 li
258.089 104.294 li
258.089 97.1138 li
cp
f
258.209 147.364 mo
258.325 147.364 li
258.325 154.544 li
258.209 154.544 li
258.209 147.364 li
cp
f
258.319 61.2236 mo
258.434 61.2236 li
258.434 68.4038 li
258.319 68.4038 li
258.319 61.2236 li
cp
f
258.319 133.014 mo
258.434 133.014 li
258.434 140.194 li
258.319 140.194 li
258.319 133.014 li
cp
f
258.439 82.7539 mo
258.554 82.7539 li
258.554 89.9336 li
258.439 89.9336 li
258.439 82.7539 li
cp
f
258.549 161.724 mo
258.665 161.724 li
258.665 168.904 li
258.549 168.904 li
258.549 161.724 li
cp
f
258.549 176.084 mo
258.665 176.084 li
258.665 183.264 li
258.549 183.264 li
258.549 176.084 li
cp
f
258.899 140.184 mo
259.014 140.184 li
259.014 147.364 li
258.899 147.364 li
258.899 140.184 li
cp
f
259.009 190.444 mo
259.125 190.444 li
259.125 197.624 li
259.009 197.624 li
259.009 190.444 li
cp
f
259.479 147.364 mo
259.594 147.364 li
259.594 154.544 li
259.479 154.544 li
259.479 147.364 li
cp
f
259.819 82.7539 mo
259.934 82.7539 li
259.934 89.9336 li
259.819 89.9336 li
259.819 82.7539 li
cp
f
259.939 89.9336 mo
260.054 89.9336 li
260.054 97.1138 li
259.939 97.1138 li
259.939 89.9336 li
cp
f
259.939 168.904 mo
260.054 168.904 li
260.054 176.084 li
259.939 176.084 li
259.939 168.904 li
cp
f
260.279 97.1138 mo
260.394 97.1138 li
260.394 104.294 li
260.279 104.294 li
260.279 97.1138 li
cp
f
260.279 111.474 mo
260.394 111.474 li
260.394 118.654 li
260.279 118.654 li
260.279 111.474 li
cp
f
260.279 176.084 mo
260.394 176.084 li
260.394 183.264 li
260.279 183.264 li
260.279 176.084 li
cp
f
260.399 133.014 mo
260.514 133.014 li
260.514 140.194 li
260.399 140.194 li
260.399 133.014 li
cp
f
260.629 161.724 mo
260.745 161.724 li
260.745 168.904 li
260.629 168.904 li
260.629 161.724 li
cp
f
260.75 147.364 mo
260.865 147.364 li
260.865 154.544 li
260.75 154.544 li
260.75 147.364 li
cp
f
261.089 54.0439 mo
261.205 54.0439 li
261.205 61.2236 li
261.089 61.2236 li
261.089 54.0439 li
cp
f
261.319 82.7539 mo
261.434 82.7539 li
261.434 89.9336 li
261.319 89.9336 li
261.319 82.7539 li
cp
f
261.439 140.184 mo
261.554 140.184 li
261.554 147.364 li
261.439 147.364 li
261.439 140.184 li
cp
f
261.779 61.2236 mo
261.894 61.2236 li
261.894 68.4038 li
261.779 68.4038 li
261.779 61.2236 li
cp
f
262.019 97.1138 mo
262.134 97.1138 li
262.134 104.294 li
262.019 104.294 li
262.019 97.1138 li
cp
f
262.019 168.904 mo
262.134 168.904 li
262.134 176.084 li
262.019 176.084 li
262.019 168.904 li
cp
f
262.019 176.084 mo
262.134 176.084 li
262.134 183.264 li
262.019 183.264 li
262.019 176.084 li
cp
f
262.129 147.364 mo
262.245 147.364 li
262.245 154.544 li
262.129 154.544 li
262.129 147.364 li
cp
f
262.25 89.9336 mo
262.365 89.9336 li
262.365 97.1138 li
262.25 97.1138 li
262.25 89.9336 li
cp
f
262.25 133.014 mo
262.365 133.014 li
262.365 140.194 li
262.25 140.194 li
262.25 133.014 li
cp
f
262.709 82.7539 mo
262.825 82.7539 li
262.825 89.9336 li
262.709 89.9336 li
262.709 82.7539 li
cp
f
262.709 161.724 mo
262.825 161.724 li
262.825 168.904 li
262.709 168.904 li
262.709 161.724 li
cp
f
262.819 111.474 mo
262.934 111.474 li
262.934 118.654 li
262.819 118.654 li
262.819 111.474 li
cp
f
263.399 147.364 mo
263.514 147.364 li
263.514 154.544 li
263.399 154.544 li
263.399 147.364 li
cp
f
263.519 97.1138 mo
263.634 97.1138 li
263.634 104.294 li
263.519 104.294 li
263.519 97.1138 li
cp
f
263.859 168.904 mo
263.974 168.904 li
263.974 176.084 li
263.859 176.084 li
263.859 168.904 li
cp
f
263.859 176.084 mo
263.974 176.084 li
263.974 183.264 li
263.859 183.264 li
263.859 176.084 li
cp
f
263.979 82.7539 mo
264.094 82.7539 li
264.094 89.9336 li
263.979 89.9336 li
263.979 82.7539 li
cp
f
263.979 133.014 mo
264.094 133.014 li
264.094 140.194 li
263.979 140.194 li
263.979 133.014 li
cp
f
264.209 140.184 mo
264.325 140.184 li
264.325 147.364 li
264.209 147.364 li
264.209 140.184 li
cp
f
264.439 89.9336 mo
264.554 89.9336 li
264.554 97.1138 li
264.439 97.1138 li
264.439 89.9336 li
cp
f
264.549 54.0439 mo
264.665 54.0439 li
264.665 61.2236 li
264.549 61.2236 li
264.549 54.0439 li
cp
f
264.669 147.364 mo
264.785 147.364 li
264.785 154.544 li
264.669 154.544 li
264.669 147.364 li
cp
f
264.669 161.724 mo
264.785 161.724 li
264.785 168.904 li
264.669 168.904 li
264.669 161.724 li
cp
f
264.899 97.1138 mo
265.014 97.1138 li
265.014 104.294 li
264.899 104.294 li
264.899 97.1138 li
cp
f
265.359 82.7539 mo
265.474 82.7539 li
265.474 89.9336 li
265.359 89.9336 li
265.359 82.7539 li
cp
f
265.479 111.474 mo
265.594 111.474 li
265.594 118.654 li
265.479 118.654 li
265.479 111.474 li
cp
f
265.479 168.904 mo
265.594 168.904 li
265.594 176.084 li
265.479 176.084 li
265.479 168.904 li
cp
f
265.589 133.014 mo
265.705 133.014 li
265.705 140.194 li
265.589 140.194 li
265.589 133.014 li
cp
f
265.939 147.364 mo
266.054 147.364 li
266.054 154.544 li
265.939 154.544 li
265.939 147.364 li
cp
f
266.049 176.084 mo
266.165 176.084 li
266.165 183.264 li
266.049 183.264 li
266.049 176.084 li
cp
f
266.29 97.1138 mo
266.405 97.1138 li
266.405 104.294 li
266.29 104.294 li
266.29 97.1138 li
cp
f
266.629 89.9336 mo
266.745 89.9336 li
266.745 97.1138 li
266.629 97.1138 li
266.629 89.9336 li
cp
f
266.629 161.724 mo
266.745 161.724 li
266.745 168.904 li
266.629 168.904 li
266.629 161.724 li
cp
f
266.75 82.7539 mo
266.865 82.7539 li
266.865 89.9336 li
266.75 89.9336 li
266.75 82.7539 li
cp
f
266.859 61.2236 mo
266.974 61.2236 li
266.974 68.4038 li
266.859 68.4038 li
266.859 61.2236 li
cp
f
266.979 168.904 mo
267.094 168.904 li
267.094 176.084 li
266.979 176.084 li
266.979 168.904 li
cp
f
267.089 133.014 mo
267.205 133.014 li
267.205 140.194 li
267.089 140.194 li
267.089 133.014 li
cp
f
267.209 140.184 mo
267.325 140.184 li
267.325 147.364 li
267.209 147.364 li
267.209 140.184 li
cp
f
267.209 147.364 mo
267.325 147.364 li
267.325 154.544 li
267.209 154.544 li
267.209 147.364 li
cp
f
267.439 54.0439 mo
267.554 54.0439 li
267.554 61.2236 li
267.439 61.2236 li
267.439 54.0439 li
cp
f
267.669 97.1138 mo
267.785 97.1138 li
267.785 104.294 li
267.669 104.294 li
267.669 97.1138 li
cp
f
268.019 82.7539 mo
268.134 82.7539 li
268.134 89.9336 li
268.019 89.9336 li
268.019 82.7539 li
cp
f
268.359 168.904 mo
268.474 168.904 li
268.474 176.084 li
268.359 176.084 li
268.359 168.904 li
cp
f
268.479 111.474 mo
268.594 111.474 li
268.594 118.654 li
268.479 118.654 li
268.479 111.474 li
cp
f
268.479 147.364 mo
268.594 147.364 li
268.594 154.544 li
268.479 154.544 li
268.479 147.364 li
cp
f
268.479 161.724 mo
268.594 161.724 li
268.594 168.904 li
268.479 168.904 li
268.479 161.724 li
cp
f
268.589 133.014 mo
268.705 133.014 li
268.705 140.194 li
268.589 140.194 li
268.589 133.014 li
cp
f
268.709 89.9336 mo
268.825 89.9336 li
268.825 97.1138 li
268.709 97.1138 li
268.709 89.9336 li
cp
f
268.939 97.1138 mo
269.054 97.1138 li
269.054 104.294 li
268.939 104.294 li
268.939 97.1138 li
cp
f
269.29 82.7539 mo
269.405 82.7539 li
269.405 89.9336 li
269.29 89.9336 li
269.29 82.7539 li
cp
f
269.75 147.364 mo
269.865 147.364 li
269.865 154.544 li
269.75 154.544 li
269.75 147.364 li
cp
f
269.75 168.904 mo
269.865 168.904 li
269.865 176.084 li
269.75 176.084 li
269.75 168.904 li
cp
f
269.979 133.014 mo
270.094 133.014 li
270.094 140.194 li
269.979 140.194 li
269.979 133.014 li
cp
f
270.089 54.0439 mo
270.205 54.0439 li
270.205 61.2236 li
270.089 61.2236 li
270.089 54.0439 li
cp
f
270.209 97.1138 mo
270.325 97.1138 li
270.325 104.294 li
270.209 104.294 li
270.209 97.1138 li
cp
f
270.319 161.724 mo
270.434 161.724 li
270.434 168.904 li
270.319 168.904 li
270.319 161.724 li
cp
f
270.549 82.7539 mo
270.665 82.7539 li
270.665 89.9336 li
270.549 89.9336 li
270.549 82.7539 li
cp
f
270.669 89.9336 mo
270.785 89.9336 li
270.785 97.1138 li
270.669 97.1138 li
270.669 89.9336 li
cp
f
270.79 140.184 mo
270.905 140.184 li
270.905 147.364 li
270.79 147.364 li
270.79 140.184 li
cp
f
271.019 147.364 mo
271.134 147.364 li
271.134 154.544 li
271.019 154.544 li
271.019 147.364 li
cp
f
271.019 168.904 mo
271.134 168.904 li
271.134 176.084 li
271.019 176.084 li
271.019 168.904 li
cp
f
271.359 133.014 mo
271.474 133.014 li
271.474 140.194 li
271.359 140.194 li
271.359 133.014 li
cp
f
271.589 97.1138 mo
271.705 97.1138 li
271.705 104.294 li
271.589 104.294 li
271.589 97.1138 li
cp
f
271.819 111.474 mo
271.934 111.474 li
271.934 118.654 li
271.819 118.654 li
271.819 111.474 li
cp
f
271.939 82.7539 mo
272.054 82.7539 li
272.054 89.9336 li
271.939 89.9336 li
271.939 82.7539 li
cp
f
272.169 161.724 mo
272.285 161.724 li
272.285 168.904 li
272.169 168.904 li
272.169 161.724 li
cp
f
272.29 147.364 mo
272.405 147.364 li
272.405 154.544 li
272.29 154.544 li
272.29 147.364 li
cp
f
272.29 168.904 mo
272.405 168.904 li
272.405 176.084 li
272.29 176.084 li
272.29 168.904 li
cp
f
272.399 54.0439 mo
272.514 54.0439 li
272.514 61.2236 li
272.399 61.2236 li
272.399 54.0439 li
cp
f
272.75 89.9336 mo
272.865 89.9336 li
272.865 97.1138 li
272.75 97.1138 li
272.75 89.9336 li
cp
f
272.75 133.014 mo
272.865 133.014 li
272.865 140.194 li
272.75 140.194 li
272.75 133.014 li
cp
f
272.859 97.1138 mo
272.974 97.1138 li
272.974 104.294 li
272.859 104.294 li
272.859 97.1138 li
cp
f
273.209 82.7539 mo
273.324 82.7539 li
273.324 89.9336 li
273.209 89.9336 li
273.209 82.7539 li
cp
f
273.558 147.364 mo
273.673 147.364 li
273.673 154.544 li
273.558 154.544 li
273.558 147.364 li
cp
f
273.558 168.904 mo
273.673 168.904 li
273.673 176.084 li
273.558 176.084 li
273.558 168.904 li
cp
f
274.019 133.014 mo
274.134 133.014 li
274.134 140.194 li
274.019 140.194 li
274.019 133.014 li
cp
f
274.019 161.724 mo
274.134 161.724 li
274.134 168.904 li
274.019 168.904 li
274.019 161.724 li
cp
f
274.359 97.1138 mo
274.474 97.1138 li
274.474 104.294 li
274.359 104.294 li
274.359 97.1138 li
cp
f
274.478 82.7539 mo
274.593 82.7539 li
274.593 89.9336 li
274.478 89.9336 li
274.478 82.7539 li
cp
f
274.708 54.0439 mo
274.824 54.0439 li
274.824 61.2236 li
274.708 61.2236 li
274.708 54.0439 li
cp
f
274.708 89.9336 mo
274.824 89.9336 li
274.824 97.1138 li
274.708 97.1138 li
274.708 89.9336 li
cp
f
274.708 168.904 mo
274.824 168.904 li
274.824 176.084 li
274.708 176.084 li
274.708 168.904 li
cp
f
274.939 147.364 mo
275.054 147.364 li
275.054 154.544 li
274.939 154.544 li
274.939 147.364 li
cp
f
275.289 133.014 mo
275.404 133.014 li
275.404 140.194 li
275.289 140.194 li
275.289 133.014 li
cp
f
275.75 82.7539 mo
275.865 82.7539 li
275.865 89.9336 li
275.75 89.9336 li
275.75 82.7539 li
cp
f
275.859 97.1138 mo
275.974 97.1138 li
275.974 104.294 li
275.859 104.294 li
275.859 97.1138 li
cp
f
275.859 111.474 mo
275.974 111.474 li
275.974 118.654 li
275.859 118.654 li
275.859 111.474 li
cp
f
275.859 161.724 mo
275.974 161.724 li
275.974 168.904 li
275.859 168.904 li
275.859 161.724 li
cp
f
275.859 168.904 mo
275.974 168.904 li
275.974 176.084 li
275.859 176.084 li
275.859 168.904 li
cp
f
276.208 147.364 mo
276.324 147.364 li
276.324 154.544 li
276.208 154.544 li
276.208 147.364 li
cp
f
276.558 133.014 mo
276.673 133.014 li
276.673 140.194 li
276.558 140.194 li
276.558 133.014 li
cp
f
276.558 140.184 mo
276.673 140.184 li
276.673 147.364 li
276.558 147.364 li
276.558 140.184 li
cp
f
276.789 54.0439 mo
276.904 54.0439 li
276.904 61.2236 li
276.789 61.2236 li
276.789 54.0439 li
cp
f
276.789 89.9336 mo
276.904 89.9336 li
276.904 97.1138 li
276.789 97.1138 li
276.789 89.9336 li
cp
f
277.019 82.7539 mo
277.134 82.7539 li
277.134 89.9336 li
277.019 89.9336 li
277.019 82.7539 li
cp
f
277.128 168.904 mo
277.244 168.904 li
277.244 176.084 li
277.128 176.084 li
277.128 168.904 li
cp
f
277.589 97.1138 mo
277.705 97.1138 li
277.705 104.294 li
277.589 104.294 li
277.589 97.1138 li
cp
f
277.589 147.364 mo
277.705 147.364 li
277.705 154.544 li
277.589 154.544 li
277.589 147.364 li
cp
f
277.708 161.724 mo
277.824 161.724 li
277.824 168.904 li
277.708 168.904 li
277.708 161.724 li
cp
f
277.83 125.834 mo
277.945 125.834 li
277.945 133.014 li
277.83 133.014 li
277.83 125.834 li
cp
f
277.83 133.014 mo
277.945 133.014 li
277.945 140.194 li
277.83 140.194 li
277.83 133.014 li
cp
f
278.289 82.7539 mo
278.404 82.7539 li
278.404 89.9336 li
278.289 89.9336 li
278.289 82.7539 li
cp
f
278.289 168.904 mo
278.404 168.904 li
278.404 176.084 li
278.289 176.084 li
278.289 168.904 li
cp
f
278.75 54.0439 mo
278.865 54.0439 li
278.865 61.2236 li
278.75 61.2236 li
278.75 54.0439 li
cp
f
278.859 89.9336 mo
278.974 89.9336 li
278.974 97.1138 li
278.859 97.1138 li
278.859 89.9336 li
cp
f
278.978 147.364 mo
279.093 147.364 li
279.093 154.544 li
278.978 154.544 li
278.978 147.364 li
cp
f
279.089 133.014 mo
279.205 133.014 li
279.205 140.194 li
279.089 140.194 li
279.089 133.014 li
cp
f
279.439 168.904 mo
279.554 168.904 li
279.554 176.084 li
279.439 176.084 li
279.439 168.904 li
cp
f
279.558 82.7539 mo
279.673 82.7539 li
279.673 89.9336 li
279.558 89.9336 li
279.558 82.7539 li
cp
f
279.669 161.724 mo
279.785 161.724 li
279.785 168.904 li
279.669 168.904 li
279.669 161.724 li
cp
f
279.789 97.1138 mo
279.904 97.1138 li
279.904 104.294 li
279.789 104.294 li
279.789 97.1138 li
cp
f
280.019 125.834 mo
280.134 125.834 li
280.134 133.014 li
280.019 133.014 li
280.019 125.834 li
cp
f
280.25 133.014 mo
280.365 133.014 li
280.365 140.194 li
280.25 140.194 li
280.25 133.014 li
cp
f
280.359 147.364 mo
280.474 147.364 li
280.474 154.544 li
280.359 154.544 li
280.359 147.364 li
cp
f
280.599 168.904 mo
280.714 168.904 li
280.714 176.084 li
280.599 176.084 li
280.599 168.904 li
cp
f
280.708 54.0439 mo
280.824 54.0439 li
280.824 61.2236 li
280.708 61.2236 li
280.708 54.0439 li
cp
f
280.83 82.7539 mo
280.945 82.7539 li
280.945 89.9336 li
280.83 89.9336 li
280.83 82.7539 li
cp
f
280.939 89.9336 mo
281.054 89.9336 li
281.054 97.1138 li
280.939 97.1138 li
280.939 89.9336 li
cp
f
281.519 133.014 mo
281.634 133.014 li
281.634 140.194 li
281.519 140.194 li
281.519 133.014 li
cp
f
281.519 161.724 mo
281.634 161.724 li
281.634 168.904 li
281.519 168.904 li
281.519 161.724 li
cp
f
281.628 111.474 mo
281.744 111.474 li
281.744 118.654 li
281.628 118.654 li
281.628 111.474 li
cp
f
281.75 125.834 mo
281.865 125.834 li
281.865 133.014 li
281.75 133.014 li
281.75 125.834 li
cp
f
281.75 147.364 mo
281.865 147.364 li
281.865 154.544 li
281.75 154.544 li
281.75 147.364 li
cp
f
281.75 168.904 mo
281.865 168.904 li
281.865 176.084 li
281.75 176.084 li
281.75 168.904 li
cp
f
282.099 82.7539 mo
282.214 82.7539 li
282.214 89.9336 li
282.099 89.9336 li
282.099 82.7539 li
cp
f
282.558 54.0439 mo
282.673 54.0439 li
282.673 61.2236 li
282.558 61.2236 li
282.558 54.0439 li
cp
f
282.789 133.014 mo
282.904 133.014 li
282.904 140.194 li
282.789 140.194 li
282.789 133.014 li
cp
f
282.898 168.904 mo
283.013 168.904 li
283.013 176.084 li
282.898 176.084 li
282.898 168.904 li
cp
f
283.128 89.9336 mo
283.244 89.9336 li
283.244 97.1138 li
283.128 97.1138 li
283.128 89.9336 li
cp
f
283.25 147.364 mo
283.365 147.364 li
283.365 154.544 li
283.25 154.544 li
283.25 147.364 li
cp
f
283.359 82.7539 mo
283.474 82.7539 li
283.474 89.9336 li
283.359 89.9336 li
283.359 82.7539 li
cp
f
283.359 125.834 mo
283.474 125.834 li
283.474 133.014 li
283.359 133.014 li
283.359 125.834 li
cp
f
283.359 161.724 mo
283.474 161.724 li
283.474 168.904 li
283.359 168.904 li
283.359 161.724 li
cp
f
283.939 133.014 mo
284.054 133.014 li
284.054 140.194 li
283.939 140.194 li
283.939 133.014 li
cp
f
284.169 168.904 mo
284.285 168.904 li
284.285 176.084 li
284.169 176.084 li
284.169 168.904 li
cp
f
284.289 54.0439 mo
284.404 54.0439 li
284.404 61.2236 li
284.289 61.2236 li
284.289 54.0439 li
cp
f
284.75 82.7539 mo
284.865 82.7539 li
284.865 89.9336 li
284.75 89.9336 li
284.75 82.7539 li
cp
f
284.75 147.364 mo
284.865 147.364 li
284.865 154.544 li
284.75 154.544 li
284.75 147.364 li
cp
f
284.859 125.834 mo
284.974 125.834 li
284.974 133.014 li
284.859 133.014 li
284.859 125.834 li
cp
f
285.208 133.014 mo
285.324 133.014 li
285.324 140.194 li
285.208 140.194 li
285.208 133.014 li
cp
f
285.33 89.9336 mo
285.445 89.9336 li
285.445 97.1138 li
285.33 97.1138 li
285.33 89.9336 li
cp
f
285.33 161.724 mo
285.445 161.724 li
285.445 168.904 li
285.33 168.904 li
285.33 161.724 li
cp
f
285.33 168.904 mo
285.445 168.904 li
285.445 176.084 li
285.33 176.084 li
285.33 168.904 li
cp
f
286.019 82.7539 mo
286.134 82.7539 li
286.134 89.9336 li
286.019 89.9336 li
286.019 82.7539 li
cp
f
286.128 54.0439 mo
286.244 54.0439 li
286.244 61.2236 li
286.128 61.2236 li
286.128 54.0439 li
cp
f
286.369 125.834 mo
286.484 125.834 li
286.484 133.014 li
286.369 133.014 li
286.369 125.834 li
cp
f
286.369 147.364 mo
286.484 147.364 li
286.484 154.544 li
286.369 154.544 li
286.369 147.364 li
cp
f
286.478 133.014 mo
286.593 133.014 li
286.593 140.194 li
286.478 140.194 li
286.478 133.014 li
cp
f
286.599 168.904 mo
286.714 168.904 li
286.714 176.084 li
286.599 176.084 li
286.599 168.904 li
cp
f
287.289 161.724 mo
287.404 161.724 li
287.404 168.904 li
287.289 168.904 li
287.289 161.724 li
cp
f
287.398 82.7539 mo
287.513 82.7539 li
287.513 89.9336 li
287.398 89.9336 li
287.398 82.7539 li
cp
f
287.75 89.9336 mo
287.865 89.9336 li
287.865 97.1138 li
287.75 97.1138 li
287.75 89.9336 li
cp
f
287.75 133.014 mo
287.865 133.014 li
287.865 140.194 li
287.75 140.194 li
287.75 133.014 li
cp
f
287.869 54.0439 mo
287.984 54.0439 li
287.984 61.2236 li
287.869 61.2236 li
287.869 54.0439 li
cp
f
287.869 125.834 mo
287.984 125.834 li
287.984 133.014 li
287.869 133.014 li
287.869 125.834 li
cp
f
287.869 168.904 mo
287.984 168.904 li
287.984 176.084 li
287.869 176.084 li
287.869 168.904 li
cp
f
287.978 147.364 mo
288.093 147.364 li
288.093 154.544 li
287.978 154.544 li
287.978 147.364 li
cp
f
288.789 82.7539 mo
288.904 82.7539 li
288.904 89.9336 li
288.789 89.9336 li
288.789 82.7539 li
cp
f
289.019 133.014 mo
289.134 133.014 li
289.134 140.194 li
289.019 140.194 li
289.019 133.014 li
cp
f
289.128 168.904 mo
289.244 168.904 li
289.244 176.084 li
289.128 176.084 li
289.128 168.904 li
cp
f
289.25 125.834 mo
289.365 125.834 li
289.365 133.014 li
289.25 133.014 li
289.25 125.834 li
cp
f
289.369 161.724 mo
289.484 161.724 li
289.484 168.904 li
289.369 168.904 li
289.369 161.724 li
cp
f
289.599 54.0439 mo
289.714 54.0439 li
289.714 61.2236 li
289.599 61.2236 li
289.599 54.0439 li
cp
f
289.599 147.364 mo
289.714 147.364 li
289.714 154.544 li
289.599 154.544 li
289.599 147.364 li
cp
f
290.169 82.7539 mo
290.285 82.7539 li
290.285 89.9336 li
290.169 89.9336 li
290.169 82.7539 li
cp
f
290.289 133.014 mo
290.404 133.014 li
290.404 140.194 li
290.289 140.194 li
290.289 133.014 li
cp
f
290.398 89.9336 mo
290.513 89.9336 li
290.513 97.1138 li
290.398 97.1138 li
290.398 89.9336 li
cp
f
290.519 168.904 mo
290.634 168.904 li
290.634 176.084 li
290.519 176.084 li
290.519 168.904 li
cp
f
290.869 125.834 mo
290.984 125.834 li
290.984 133.014 li
290.869 133.014 li
290.869 125.834 li
cp
f
291.33 54.0439 mo
291.445 54.0439 li
291.445 61.2236 li
291.33 61.2236 li
291.33 54.0439 li
cp
f
291.439 147.364 mo
291.554 147.364 li
291.554 154.544 li
291.439 154.544 li
291.439 147.364 li
cp
f
291.439 161.724 mo
291.554 161.724 li
291.554 168.904 li
291.439 168.904 li
291.439 161.724 li
cp
f
291.558 82.7539 mo
291.673 82.7539 li
291.673 89.9336 li
291.558 89.9336 li
291.558 82.7539 li
cp
f
291.669 133.014 mo
291.785 133.014 li
291.785 140.194 li
291.669 140.194 li
291.669 133.014 li
cp
f
291.898 168.904 mo
292.013 168.904 li
292.013 176.084 li
291.898 176.084 li
291.898 168.904 li
cp
f
292.478 125.834 mo
292.593 125.834 li
292.593 133.014 li
292.478 133.014 li
292.478 125.834 li
cp
f
292.939 54.0439 mo
293.054 54.0439 li
293.054 61.2236 li
292.939 61.2236 li
292.939 54.0439 li
cp
f
293.058 82.7539 mo
293.173 82.7539 li
293.173 89.9336 li
293.058 89.9336 li
293.058 82.7539 li
cp
f
293.058 133.014 mo
293.173 133.014 li
293.173 140.194 li
293.058 140.194 li
293.058 133.014 li
cp
f
293.289 89.9336 mo
293.404 89.9336 li
293.404 97.1138 li
293.289 97.1138 li
293.289 89.9336 li
cp
f
293.289 147.364 mo
293.404 147.364 li
293.404 154.544 li
293.289 154.544 li
293.289 147.364 li
cp
f
293.398 168.904 mo
293.513 168.904 li
293.513 176.084 li
293.398 176.084 li
293.398 168.904 li
cp
f
293.638 161.724 mo
293.753 161.724 li
293.753 168.904 li
293.638 168.904 li
293.638 161.724 li
cp
f
294.33 125.834 mo
294.445 125.834 li
294.445 133.014 li
294.33 133.014 li
294.33 125.834 li
cp
f
294.439 133.014 mo
294.554 133.014 li
294.554 140.194 li
294.439 140.194 li
294.439 133.014 li
cp
f
294.558 82.7539 mo
294.673 82.7539 li
294.673 89.9336 li
294.558 89.9336 li
294.558 82.7539 li
cp
f
294.669 54.0439 mo
294.785 54.0439 li
294.785 61.2236 li
294.669 61.2236 li
294.669 54.0439 li
cp
f
295.138 168.904 mo
295.253 168.904 li
295.253 176.084 li
295.138 176.084 li
295.138 168.904 li
cp
f
295.369 147.364 mo
295.484 147.364 li
295.484 154.544 li
295.369 154.544 li
295.369 147.364 li
cp
f
295.83 161.724 mo
295.945 161.724 li
295.945 168.904 li
295.83 168.904 li
295.83 161.724 li
cp
f
295.939 133.014 mo
296.054 133.014 li
296.054 140.194 li
295.939 140.194 li
295.939 133.014 li
cp
f
296.058 82.7539 mo
296.173 82.7539 li
296.173 89.9336 li
296.058 89.9336 li
296.058 82.7539 li
cp
f
296.408 54.0439 mo
296.525 54.0439 li
296.525 61.2236 li
296.408 61.2236 li
296.408 54.0439 li
cp
f
296.869 125.834 mo
296.984 125.834 li
296.984 133.014 li
296.869 133.014 li
296.869 125.834 li
cp
f
296.869 168.904 mo
296.984 168.904 li
296.984 176.084 li
296.869 176.084 li
296.869 168.904 li
cp
f
296.978 89.9336 mo
297.093 89.9336 li
297.093 97.1138 li
296.978 97.1138 li
296.978 89.9336 li
cp
f
297.439 133.014 mo
297.554 133.014 li
297.554 140.194 li
297.439 140.194 li
297.439 133.014 li
cp
f
297.669 82.7539 mo
297.785 82.7539 li
297.785 89.9336 li
297.669 89.9336 li
297.669 82.7539 li
cp
f
297.669 147.364 mo
297.785 147.364 li
297.785 154.544 li
297.669 154.544 li
297.669 147.364 li
cp
f
298.019 54.0439 mo
298.134 54.0439 li
298.134 61.2236 li
298.019 61.2236 li
298.019 54.0439 li
cp
f
298.25 161.724 mo
298.365 161.724 li
298.365 168.904 li
298.25 168.904 li
298.25 161.724 li
cp
f
298.939 75.5737 mo
299.054 75.5737 li
299.054 82.7539 li
298.939 82.7539 li
298.939 75.5737 li
cp
f
299.058 133.014 mo
299.173 133.014 li
299.173 140.194 li
299.058 140.194 li
299.058 133.014 li
cp
f
299.058 168.904 mo
299.173 168.904 li
299.173 176.084 li
299.058 176.084 li
299.058 168.904 li
cp
f
299.289 82.7539 mo
299.404 82.7539 li
299.404 89.9336 li
299.289 89.9336 li
299.289 82.7539 li
cp
f
299.75 54.0439 mo
299.865 54.0439 li
299.865 61.2236 li
299.75 61.2236 li
299.75 54.0439 li
cp
f
300.208 147.364 mo
300.324 147.364 li
300.324 154.544 li
300.208 154.544 li
300.208 147.364 li
cp
f
300.789 133.014 mo
300.904 133.014 li
300.904 140.194 li
300.789 140.194 li
300.789 133.014 li
cp
f
300.789 161.724 mo
300.904 161.724 li
300.904 168.904 li
300.789 168.904 li
300.789 161.724 li
cp
f
301.019 82.7539 mo
301.134 82.7539 li
301.134 89.9336 li
301.019 89.9336 li
301.019 82.7539 li
cp
f
301.478 54.0439 mo
301.593 54.0439 li
301.593 61.2236 li
301.478 61.2236 li
301.478 54.0439 li
cp
f
301.708 75.5737 mo
301.824 75.5737 li
301.824 82.7539 li
301.708 82.7539 li
301.708 75.5737 li
cp
f
302.179 168.904 mo
302.294 168.904 li
302.294 176.084 li
302.179 176.084 li
302.179 168.904 li
cp
f
302.75 133.014 mo
302.865 133.014 li
302.865 140.194 li
302.75 140.194 li
302.75 133.014 li
cp
f
302.869 82.7539 mo
302.984 82.7539 li
302.984 89.9336 li
302.869 89.9336 li
302.869 82.7539 li
cp
f
303.208 54.0439 mo
303.324 54.0439 li
303.324 61.2236 li
303.208 61.2236 li
303.208 54.0439 li
cp
f
303.33 147.364 mo
303.445 147.364 li
303.445 154.544 li
303.33 154.544 li
303.33 147.364 li
cp
f
303.558 161.724 mo
303.673 161.724 li
303.673 168.904 li
303.558 168.904 li
303.558 161.724 li
cp
f
303.908 75.5737 mo
304.025 75.5737 li
304.025 82.7539 li
303.908 82.7539 li
303.908 75.5737 li
cp
f
304.83 82.7539 mo
304.945 82.7539 li
304.945 89.9336 li
304.83 89.9336 li
304.83 82.7539 li
cp
f
304.83 133.014 mo
304.945 133.014 li
304.945 140.194 li
304.83 140.194 li
304.83 133.014 li
cp
f
305.058 54.0439 mo
305.173 54.0439 li
305.173 61.2236 li
305.058 61.2236 li
305.058 54.0439 li
cp
f
305.519 61.2236 mo
305.634 61.2236 li
305.634 68.4038 li
305.519 68.4038 li
305.519 61.2236 li
cp
f
305.75 75.5737 mo
305.865 75.5737 li
305.865 82.7539 li
305.75 82.7539 li
305.75 75.5737 li
cp
f
306.679 161.724 mo
306.794 161.724 li
306.794 168.904 li
306.679 168.904 li
306.679 161.724 li
cp
f
306.789 82.7539 mo
306.904 82.7539 li
306.904 89.9336 li
306.789 89.9336 li
306.789 82.7539 li
cp
f
306.908 54.0439 mo
307.025 54.0439 li
307.025 61.2236 li
306.908 61.2236 li
306.908 54.0439 li
cp
f
307.478 75.5737 mo
307.593 75.5737 li
307.593 82.7539 li
307.478 82.7539 li
307.478 75.5737 li
cp
f
307.478 133.014 mo
307.593 133.014 li
307.593 140.194 li
307.478 140.194 li
307.478 133.014 li
cp
f
307.708 147.364 mo
307.824 147.364 li
307.824 154.544 li
307.708 154.544 li
307.708 147.364 li
cp
f
308.75 54.0439 mo
308.865 54.0439 li
308.865 61.2236 li
308.75 61.2236 li
308.75 54.0439 li
cp
f
309.099 75.5737 mo
309.214 75.5737 li
309.214 82.7539 li
309.099 82.7539 li
309.099 75.5737 li
cp
f
309.099 82.7539 mo
309.214 82.7539 li
309.214 89.9336 li
309.099 89.9336 li
309.099 82.7539 li
cp
f
310.138 61.2236 mo
310.253 61.2236 li
310.253 68.4038 li
310.138 68.4038 li
310.138 61.2236 li
cp
f
310.25 161.724 mo
310.365 161.724 li
310.365 168.904 li
310.25 168.904 li
310.25 161.724 li
cp
f
310.599 75.5737 mo
310.714 75.5737 li
310.714 82.7539 li
310.599 82.7539 li
310.599 75.5737 li
cp
f
310.718 54.0439 mo
310.833 54.0439 li
310.833 61.2236 li
310.718 61.2236 li
310.718 54.0439 li
cp
f
311.519 82.7539 mo
311.634 82.7539 li
311.634 89.9336 li
311.519 89.9336 li
311.519 82.7539 li
cp
f
311.638 133.014 mo
311.753 133.014 li
311.753 140.194 li
311.638 140.194 li
311.638 133.014 li
cp
f
311.978 75.5737 mo
312.093 75.5737 li
312.093 82.7539 li
311.978 82.7539 li
311.978 75.5737 li
cp
f
312.558 183.264 mo
312.673 183.264 li
312.673 190.444 li
312.558 190.444 li
312.558 183.264 li
cp
f
312.789 54.0439 mo
312.904 54.0439 li
312.904 61.2236 li
312.789 61.2236 li
312.789 54.0439 li
cp
f
313.478 75.5737 mo
313.593 75.5737 li
313.593 82.7539 li
313.478 82.7539 li
313.478 75.5737 li
cp
f
313.599 61.2236 mo
313.714 61.2236 li
313.714 68.4038 li
313.599 68.4038 li
313.599 61.2236 li
cp
f
314.289 82.7539 mo
314.404 82.7539 li
314.404 89.9336 li
314.289 89.9336 li
314.289 82.7539 li
cp
f
314.75 161.724 mo
314.865 161.724 li
314.865 168.904 li
314.75 168.904 li
314.75 161.724 li
cp
f
314.869 54.0439 mo
314.984 54.0439 li
314.984 61.2236 li
314.869 61.2236 li
314.869 54.0439 li
cp
f
314.869 75.5737 mo
314.984 75.5737 li
314.984 82.7539 li
314.869 82.7539 li
314.869 75.5737 li
cp
f
316.25 75.5737 mo
316.365 75.5737 li
316.365 82.7539 li
316.25 82.7539 li
316.25 75.5737 li
cp
f
316.369 183.264 mo
316.484 183.264 li
316.484 190.444 li
316.369 190.444 li
316.369 183.264 li
cp
f
316.488 61.2236 mo
316.605 61.2236 li
316.605 68.4038 li
316.488 68.4038 li
316.488 61.2236 li
cp
f
317.179 54.0439 mo
317.294 54.0439 li
317.294 61.2236 li
317.179 61.2236 li
317.179 54.0439 li
cp
f
317.519 75.5737 mo
317.634 75.5737 li
317.634 82.7539 li
317.519 82.7539 li
317.519 75.5737 li
cp
f
317.519 82.7539 mo
317.634 82.7539 li
317.634 89.9336 li
317.519 89.9336 li
317.519 82.7539 li
cp
f
318.908 75.5737 mo
319.025 75.5737 li
319.025 82.7539 li
318.908 82.7539 li
318.908 75.5737 li
cp
f
319.019 61.2236 mo
319.134 61.2236 li
319.134 68.4038 li
319.019 68.4038 li
319.019 61.2236 li
cp
f
319.369 183.264 mo
319.484 183.264 li
319.484 190.444 li
319.369 190.444 li
319.369 183.264 li
cp
f
319.718 54.0439 mo
319.833 54.0439 li
319.833 61.2236 li
319.718 61.2236 li
319.718 54.0439 li
cp
f
319.83 111.474 mo
319.945 111.474 li
319.945 118.654 li
319.83 118.654 li
319.83 111.474 li
cp
f
320.289 75.5737 mo
320.404 75.5737 li
320.404 82.7539 li
320.289 82.7539 li
320.289 75.5737 li
cp
f
321.449 61.2236 mo
321.564 61.2236 li
321.564 68.4038 li
321.449 68.4038 li
321.449 61.2236 li
cp
f
321.679 75.5737 mo
321.794 75.5737 li
321.794 82.7539 li
321.679 82.7539 li
321.679 75.5737 li
cp
f
321.679 190.444 mo
321.794 190.444 li
321.794 197.624 li
321.679 197.624 li
321.679 190.444 li
cp
f
321.789 82.7539 mo
321.904 82.7539 li
321.904 89.9336 li
321.789 89.9336 li
321.789 82.7539 li
cp
f
321.908 183.264 mo
322.025 183.264 li
322.025 190.444 li
321.908 190.444 li
321.908 183.264 li
cp
f
322.369 54.0439 mo
322.484 54.0439 li
322.484 61.2236 li
322.369 61.2236 li
322.369 54.0439 li
cp
f
323.058 75.5737 mo
323.173 75.5737 li
323.173 82.7539 li
323.058 82.7539 li
323.058 75.5737 li
cp
f
323.638 61.2236 mo
323.753 61.2236 li
323.753 68.4038 li
323.638 68.4038 li
323.638 61.2236 li
cp
f
324.33 183.264 mo
324.445 183.264 li
324.445 190.444 li
324.33 190.444 li
324.33 183.264 li
cp
f
324.449 75.5737 mo
324.564 75.5737 li
324.564 82.7539 li
324.449 82.7539 li
324.449 75.5737 li
cp
f
324.908 111.474 mo
325.025 111.474 li
325.025 118.654 li
324.908 118.654 li
324.908 111.474 li
cp
f
325.259 190.444 mo
325.375 190.444 li
325.375 197.624 li
325.259 197.624 li
325.259 190.444 li
cp
f
325.369 68.4038 mo
325.484 68.4038 li
325.484 75.584 li
325.369 75.584 li
325.369 68.4038 li
cp
f
325.599 54.0439 mo
325.714 54.0439 li
325.714 61.2236 li
325.599 61.2236 li
325.599 54.0439 li
cp
f
325.718 61.2236 mo
325.833 61.2236 li
325.833 68.4038 li
325.718 68.4038 li
325.718 61.2236 li
cp
f
325.949 75.5737 mo
326.064 75.5737 li
326.064 82.7539 li
325.949 82.7539 li
325.949 75.5737 li
cp
f
326.529 183.264 mo
326.644 183.264 li
326.644 190.444 li
326.529 190.444 li
326.529 183.264 li
cp
f
327.449 75.5737 mo
327.564 75.5737 li
327.564 82.7539 li
327.449 82.7539 li
327.449 75.5737 li
cp
f
327.679 61.2236 mo
327.794 61.2236 li
327.794 68.4038 li
327.679 68.4038 li
327.679 61.2236 li
cp
f
328.029 104.294 mo
328.144 104.294 li
328.144 111.474 li
328.029 111.474 li
328.029 104.294 li
cp
f
328.029 190.444 mo
328.144 190.444 li
328.144 197.624 li
328.029 197.624 li
328.029 190.444 li
cp
f
328.599 183.264 mo
328.714 183.264 li
328.714 190.444 li
328.599 190.444 li
328.599 183.264 li
cp
f
328.949 68.4038 mo
329.064 68.4038 li
329.064 75.584 li
328.949 75.584 li
328.949 68.4038 li
cp
f
328.949 111.474 mo
329.064 111.474 li
329.064 118.654 li
328.949 118.654 li
328.949 111.474 li
cp
f
329.058 75.5737 mo
329.173 75.5737 li
329.173 82.7539 li
329.058 82.7539 li
329.058 75.5737 li
cp
f
329.529 61.2236 mo
329.644 61.2236 li
329.644 68.4038 li
329.529 68.4038 li
329.529 61.2236 li
cp
f
329.638 54.0439 mo
329.753 54.0439 li
329.753 61.2236 li
329.638 61.2236 li
329.638 54.0439 li
cp
f
32.249 42.4238 mo
32.3589 43.124 li
32.479 43.8037 li
32.5889 41.7236 li
32.709 42.4434 li
32.8188 43.1641 li
32.939 43.8438 li
33.0591 44.4834 li
33.1689 35.8838 li
33.2891 36.8037 li
33.3989 37.6836 li
33.519 37.8643 li
33.6289 38.7041 li
33.749 39.5439 li
33.8589 40.3438 li
33.979 38.3643 li
34.0889 39.2041 li
34.209 40.0039 li
34.3188 34.4434 li
34.439 35.4238 li
34.5591 36.3438 li
34.6689 37.2432 li
34.7891 39.124 li
34.8989 39.9238 li
35.019 40.7236 li
35.1289 41.4834 li
35.249 42.2041 li
35.3589 36.3037 li
35.479 37.2041 li
35.5889 38.084 li
35.709 32.3037 li
35.8291 30.7041 li
35.939 31.8037 li
36.0591 32.8438 li
36.1689 33.8643 li
36.2891 34.8438 li
36.3989 35.8037 li
36.519 30.3838 li
36.6289 31.4834 li
36.749 29.8037 li
36.8589 30.9238 li
36.979 32.0039 li
37.0889 33.0439 li
37.209 34.0635 li
37.3291 35.0234 li
37.439 35.9834 li
37.5591 36.8838 li
37.6689 37.7842 li
37.7891 38.6436 li
37.8989 39.4639 li
38.019 40.2637 li
38.1289 34.4238 li
38.249 32.6436 li
38.3589 33.6641 li
38.479 34.6641 li
38.5889 28.584 li
38.709 29.7432 li
38.8291 30.8643 li
38.939 25.4434 li
39.0591 23.5439 li
39.1689 24.8643 li
39.2891 26.1436 li
39.3989 27.3838 li
39.519 28.584 li
39.6289 26.9834 li
39.749 28.2041 li
39.8589 29.3643 li
39.979 30.5039 li
40.0991 31.6035 li
40.209 32.6641 li
40.3291 27.0635 li
40.439 28.2637 li
40.5591 29.4434 li
40.6689 24.2236 li
40.7891 25.5234 li
40.8989 26.7842 li
41.019 28.0039 li
41.1289 29.1836 li
41.249 27.5635 li
41.3589 28.7637 li
41.479 29.9238 li
41.5991 31.0234 li
41.709 27.8232 li
41.8291 29.0234 li
41.939 30.1641 li
42.0591 31.2637 li
42.1689 32.3232 li
42.2891 33.3643 li
42.3989 27.7432 li
42.519 22.6035 li
42.6289 20.1035 li
42.749 21.5439 li
42.8589 20.1836 li
42.979 18.9834 li
43.0991 20.4639 li
43.209 21.8838 li
43.3291 23.2637 li
43.439 24.6035 li
43.5591 25.8838 li
43.6689 27.124 li
43.7891 28.3232 li
43.8989 29.5039 li
44.019 26.7432 li
44.1289 27.9639 li
44.249 29.1436 li
44.3691 17.3232 li
44.479 18.8438 li
44.5991 17.1836 li
44.709 18.7236 li
44.8291 20.2041 li
44.939 21.6436 li
45.0591 23.0234 li
45.1689 24.3643 li
45.2891 25.6641 li
45.3989 26.9033 li
45.519 24.9639 li
45.6289 26.2432 li
45.749 27.4834 li
45.8691 28.6641 li
45.979 29.1436 li
46.0991 23.9434 li
46.209 21.3643 li
46.3291 16.1436 li
46.439 17.7041 li
46.5591 16.4834 li
46.6689 18.0439 li
46.7891 19.5439 li
46.8989 20.6035 li
47.019 22.0234 li
47.1289 23.3838 li
47.249 24.7236 li
47.3691 26.0039 li
47.479 27.2432 li
47.5991 28.4434 li
47.709 29.6035 li
47.8291 24.3838 li
47.939 22.5439 li
48.0591 23.8838 li
48.1689 21.3232 li
48.2891 16.1035 li
48.3989 17.6641 li
48.519 19.1836 li
48.6289 20.6436 li
48.749 22.0635 li
48.8691 20.6836 li
48.979 21.0234 li
49.0991 22.4434 li
49.209 23.7842 li
49.3291 25.1035 li
49.439 20.0439 li
49.5591 21.4834 li
49.6689 22.3037 li
49.7891 23.6641 li
49.8989 24.9834 li
50.019 22.3838 li
50.1392 23.7432 li
50.249 15.2842 li
50.3691 16.8838 li
50.479 18.4238 li
50.5991 19.9238 li
50.709 21.3643 li
50.8291 22.7432 li
50.939 24.1035 li
51.0591 25.0039 li
51.1689 19.9434 li
51.2891 20.8232 li
51.3989 22.2432 li
51.519 23.6035 li
51.6392 24.9238 li
51.749 21.624 li
51.8691 23.0234 li
51.979 24.3643 li
52.0991 18.0234 li
52.209 19.5234 li
52.3291 15.084 li
52.439 16.6836 li
52.5591 17.6641 li
52.6689 19.1836 li
52.7891 14.3037 li
52.8989 15.5439 li
53.019 17.124 li
53.1392 18.6641 li
53.249 20.1436 li
53.3691 21.584 li
53.479 19.084 li
53.5991 20.5635 li
53.709 21.4238 li
53.8291 22.8037 li
53.939 24.1436 li
54.0591 18.8438 li
54.1689 20.3232 li
54.2891 17.9033 li
54.4092 13.0635 li
54.519 14.7432 li
54.6392 16.3438 li
54.749 17.9033 li
54.8691 19.0234 li
54.979 19.9238 li
55.0991 17.4834 li
55.209 18.0039 li
55.3291 19.5039 li
55.439 20.9639 li
55.5591 22.3643 li
55.6689 23.7236 li
55.7891 25.0439 li
55.9092 19.9834 li
56.019 14.8037 li
56.1392 16.4033 li
56.249 14.2637 li
56.3691 15.8838 li
56.479 17.4639 li
56.5991 18.9834 li
56.709 15.8838 li
56.8291 17.4639 li
56.939 22.0635 li
57.0591 23.4238 li
57.1689 24.7432 li
57.2891 26.0439 li
57.4092 27.2842 li
57.519 22.1436 li
57.6392 22.9434 li
57.749 23.2637 li
57.8691 24.6035 li
57.979 19.2842 li
58.0991 20.7432 li
58.209 19.0039 li
58.3291 16.584 li
58.439 18.1436 li
58.5591 19.6436 li
58.6689 21.084 li
58.7891 22.5039 li
58.9092 23.8438 li
59.019 18.1436 li
59.1392 19.2432 li
59.249 20.7041 li
59.3691 22.124 li
59.479 22.9238 li
59.5991 24.2842 li
59.709 25.5635 li
59.8291 26.8232 li
59.939 21.6836 li
60.0591 19.9033 li
60.1792 21.3438 li
60.2891 23.7432 li
60.4092 25.0635 li
60.519 26.3232 li
60.6392 21.2236 li
60.749 22.624 li
60.8691 23.9639 li
60.979 25.2842 li
61.0991 26.5439 li
61.209 30.5439 li
61.3291 31.6436 li
61.439 28.8232 li
61.5591 29.584 li
61.6792 30.7041 li
61.7891 31.7842 li
61.9092 29.6836 li
62.019 29.8037 li
62.1392 17.9639 li
62.249 19.4639 li
62.3691 20.9238 li
62.479 22.3232 li
62.5991 23.6836 li
62.709 25.0039 li
62.8291 26.2842 li
62.939 23.6436 li
63.0591 24.9639 li
63.1792 26.2236 li
63.2891 27.4639 li
63.4092 27.9639 li
63.519 29.1436 li
63.6392 30.2842 li
63.749 21.9033 li
63.8691 23.2637 li
63.979 28.7432 li
64.0991 29.8838 li
64.209 31.0039 li
64.3291 32.084 li
64.4492 22.624 li
64.5591 27.4434 li
64.6792 28.6436 li
64.7891 29.8037 li
64.9092 30.9238 li
65.019 32.0039 li
65.1392 33.0439 li
65.249 28.7041 li
65.3691 29.4639 li
65.479 29.9033 li
65.5991 31.0234 li
65.709 30.6641 li
65.8291 30.7432 li
65.9492 31.8232 li
66.0591 29.0039 li
66.1792 30.1436 li
66.2891 31.2432 li
66.4092 32.3232 li
66.519 33.3438 li
66.6392 34.3438 li
66.749 35.3232 li
66.8691 23.3037 li
66.979 24.624 li
67.0991 31.0635 li
67.209 32.1436 li
67.3291 33.1836 li
67.4492 34.1836 li
67.5591 30.9033 li
67.6792 30.9834 li
67.7891 32.0635 li
67.9092 33.1035 li
68.019 34.1035 li
68.1392 35.084 li
68.249 36.0234 li
68.3691 36.9434 li
68.479 31.4834 li
68.5991 32.5439 li
68.7192 33.584 li
68.8291 34.5635 li
68.9492 36.5234 li
69.0591 33.5439 li
69.1792 34.5234 li
69.2891 35.5039 li
69.4092 36.4238 li
69.519 32.4639 li
69.6392 26.8838 li
69.749 33.2432 li
69.8691 34.2432 li
69.979 35.2236 li
70.0991 29.8232 li
70.2192 34.4033 li
70.3291 35.3643 li
70.4492 36.3037 li
70.5591 37.2041 li
70.6792 34.2041 li
70.7891 35.1836 li
70.9092 37.8232 li
71.019 38.6836 li
71.1392 39.5039 li
71.249 40.3037 li
71.3691 41.084 li
71.479 40.8232 li
71.5991 37.7432 li
71.7192 38.584 li
71.8291 33.084 li
71.9492 34.084 li
72.0591 41.2041 li
72.1792 41.9434 li
72.2891 38.7842 li
72.4092 39.6035 li
72.519 40.4033 li
72.6392 41.1836 li
72.749 45.3838 li
72.8691 46.0039 li
72.979 39.9639 li
73.0991 40.7432 li
73.2192 41.5039 li
73.3291 41.2236 li
73.4492 35.624 li
73.5591 35.8643 li
73.6792 36.7842 li
73.7891 34.5234 li
73.9092 31.6035 li
74.019 32.6641 li
74.1392 38.8232 li
74.249 39.6641 li
74.3691 40.4434 li
74.4893 41.2236 li
74.5991 41.9639 li
74.7192 43.6641 li
74.8291 46.0439 li
74.9492 46.624 li
75.0591 47.2041 li
75.1792 44.8838 li
75.2891 44.4834 li
75.4092 45.124 li
75.519 45.0439 li
75.6392 41.7842 li
75.749 42.5039 li
75.8691 43.2041 li
75.9893 43.8838 li
76.0991 49.6836 li
76.2192 47.0039 li
76.3291 47.5439 li
76.4492 48.084 li
76.5591 48.6035 li
76.6792 49.1035 li
76.7891 49.584 li
76.9092 50.0635 li
77.019 44.1641 li
77.1392 45.8037 li
77.249 46.4033 li
77.3691 46.9834 li
77.4893 45.4238 li
77.5991 46.0234 li
77.7192 46.6035 li
77.8291 52.3232 li
77.9492 52.7041 li
78.0591 53.0635 li
78.1792 55.1436 li
78.2891 55.4238 li
78.4092 55.7041 li
78.519 55.9639 li
78.6392 56.2236 li
78.7593 56.4834 li
78.8691 47.2236 li
78.9893 47.7842 li
79.0991 48.3037 li
79.2192 49.8037 li
79.3291 46.3838 li
79.4492 46.9639 li
79.5591 51.9639 li
79.6792 55.8232 li
79.7891 55.084 li
79.9092 55.3643 li
80.019 55.6436 li
80.1392 55.9238 li
80.2593 56.1836 li
80.3691 56.4434 li
80.4893 56.6836 li
80.5991 56.9238 li
80.7192 57.1436 li
80.8291 51.0234 li
80.9492 51.4434 li
81.0591 51.8438 li
81.1792 59.1035 li
81.2891 56.3643 li
81.4092 56.624 li
81.519 56.1641 li
81.6392 56.4238 li
81.7593 56.6641 li
81.8691 56.9033 li
81.9893 64.6641 li
82.0991 61.4834 li
82.2192 61.5635 li
82.3291 61.6436 li
82.4492 61.7236 li
82.5591 61.7842 li
82.6792 60.8438 li
82.7891 59.7432 li
82.9092 59.8838 li
83.0288 60.0234 li
83.1392 61.1436 li
83.2593 61.2236 li
83.3691 61.3232 li
83.4893 57.5234 li
83.5991 57.0439 li
83.7192 57.2637 li
83.8291 59.1836 li
83.9492 59.3438 li
84.0591 59.5039 li
84.1792 63.1035 li
84.2891 68.2842 li
84.4092 68.1436 li
84.5288 68.0039 li
84.6392 67.8643 li
84.7593 67.7236 li
84.8691 67.6035 li
84.9893 62.1436 li
85.0991 62.1836 li
85.2192 62.2432 li
85.3291 62.3037 li
85.4492 62.3438 li
85.5591 62.4033 li
85.6792 61.7637 li
85.7891 66.9834 li
85.9092 63.0039 li
86.0288 67.084 li
86.1392 66.9834 li
86.2593 66.8838 li
86.3691 71.9639 li
86.4893 71.7041 li
86.5991 71.4434 li
86.7192 72.1836 li
86.8291 71.9238 li
86.9492 71.6641 li
87.0591 71.4033 li
87.1792 76.3037 li
87.2891 72.4834 li
87.4092 72.2041 li
87.5288 71.9434 li
87.6392 71.6641 li
87.7593 71.4238 li
87.8691 70.4834 li
87.9893 70.2637 li
88.0991 70.0635 li
88.2192 69.8643 li
88.3291 70.6436 li
88.4492 70.4238 li
88.5591 70.2236 li
88.6792 80.3438 li
88.7988 79.8037 li
88.9092 75.3838 li
89.0288 75.2236 li
89.1392 78.9033 li
89.2593 78.4238 li
89.3691 77.9434 li
89.4893 77.4834 li
89.5991 77.0439 li
89.7192 76.6035 li
89.8291 76.1836 li
89.9492 70.4434 li
90.0591 74.6836 li
90.1792 74.3232 li
90.2988 73.9834 li
90.4092 76.584 li
90.5288 76.1836 li
90.6392 75.7637 li
90.7593 75.3838 li
90.8691 75.0039 li
90.9893 79.8232 li
91.0991 79.3037 li
91.2192 76.3643 li
91.3291 81.1035 li
91.4492 81.5234 li
91.5591 80.9434 li
91.6792 80.3838 li
91.7988 83.0635 li
91.9092 86.5039 li
92.0288 85.7637 li
92.1392 85.0439 li
92.2593 84.3438 li
92.3691 82.9834 li
92.4893 82.3643 li
92.5991 82.3838 li
92.7192 86.9238 li
92.8291 82.7637 li
92.9492 83.1436 li
93.0688 84.4238 li
93.1792 83.7432 li
93.2988 83.1035 li
93.4092 85.9434 li
93.5288 81.3232 li
93.6392 80.7637 li
93.7593 80.2041 li
93.8691 79.6641 li
93.9893 84.3037 li
94.0991 83.624 li
94.2192 82.9834 li
94.3291 83.3438 li
94.4492 89.9834 li
94.5688 89.1436 li
94.6792 88.3037 li
94.7988 87.6436 li
94.9092 89.8037 li
95.0288 88.9639 li
95.1392 89.8438 li
95.2593 94.1436 li
95.3691 93.1436 li
95.4893 92.1836 li
95.5991 88.624 li
95.7192 87.8232 li
95.8291 88.0234 li
95.9492 90.7041 li
96.0688 89.8232 li
96.1792 88.9834 li
96.2988 81.8037 li
96.4092 81.2236 li
96.5288 84.7041 li
96.6392 89.1641 li
96.7593 95.3438 li
96.8687 94.3037 li
96.9888 93.3037 li
97.0991 92.3438 li
97.2192 94.124 li
97.3394 92.4434 li
97.4487 91.5039 li
97.5688 90.6035 li
97.6792 89.7236 li
97.7993 88.8643 li
97.9087 93.2041 li
98.0288 92.8643 li
98.1392 91.9033 li
98.2593 90.9834 li
98.3687 93.5234 li
98.4888 96.4834 li
98.5991 95.4033 li
98.7192 97.8438 li
98.8394 96.7236 li
98.9487 99.7236 li
99.0688 95.9238 li
99.1792 101.724 li
99.2993 100.483 li
99.4087 99.9033 li
99.5288 98.7236 li
99.6392 97.584 li
99.7593 96.4834 li
99.8687 96.4033 li
99.9888 97.8643 li
100.099 99.6836 li
100.219 98.5234 li
100.339 97.3838 li
100.449 101.424 li
100.569 100.403 li
100.679 99.2041 li
100.799 98.6641 li
100.909 97.5234 li
101.029 96.4238 li
101.139 101.144 li
101.259 100.903 li
101.369 93.3643 li
101.489 95.6035 li
101.599 97.5039 li
101.719 105.023 li
101.839 103.664 li
101.949 99.7236 li
102.069 98.5635 li
102.179 98.0439 li
102.299 96.9238 li
102.409 95.8438 li
102.529 95.7842 li
102.639 94.7432 li
102.759 93.7236 li
102.869 95.9639 li
102.989 101.084 li
103.109 102.804 li
103.219 105.584 li
103.339 104.224 li
103.449 103.523 li
103.569 102.224 li
103.679 100.964 li
103.799 100.743 li
103.909 99.5439 li
104.029 98.3643 li
104.139 97.2432 li
104.259 104.504 li
104.369 103.164 li
104.489 104.823 li
104.609 100.844 li
104.719 100.264 li
104.839 100.784 li
104.949 99.5635 li
105.069 99.4033 li
105.179 102.304 li
105.299 104.504 li
105.409 103.184 li
105.529 110.243 li
105.639 108.724 li
105.759 107.264 li
105.869 108.784 li
105.989 107.304 li
106.109 106.504 li
106.219 105.104 li
106.339 103.063 li
106.449 102.764 li
106.569 101.504 li
106.679 101.983 li
106.799 109.084 li
106.909 104.964 li
107.029 103.624 li
107.139 102.323 li
107.259 108.063 li
107.379 107.243 li
107.489 105.823 li
107.609 104.443 li
107.719 104.104 li
107.839 102.784 li
107.949 101.523 li
108.069 108.644 li
108.179 107.184 li
108.299 105.764 li
108.409 104.384 li
108.529 107.704 li
108.639 106.264 li
108.759 104.884 li
108.879 104.164 li
108.989 103.823 li
109.109 102.523 li
109.219 105.903 li
109.339 104.523 li
109.449 108.344 li
109.569 106.884 li
109.679 105.464 li
109.799 107.044 li
109.909 105.644 li
110.029 104.264 li
110.139 102.943 li
110.259 102.644 li
110.379 106.243 li
110.489 104.864 li
110.609 103.504 li
110.719 107.364 li
110.839 105.924 li
110.949 104.563 li
111.069 109.624 li
111.179 108.124 li
111.299 108.124 li
111.409 106.664 li
111.529 106.264 li
111.649 108.084 li
111.759 106.624 li
111.879 105.224 li
111.989 103.884 li
112.109 108.323 li
112.219 108.584 li
112.339 111.563 li
112.449 110.004 li
112.569 108.483 li
112.679 107.023 li
112.799 109.823 li
112.909 108.304 li
113.029 106.844 li
113.149 105.443 li
113.259 101.443 li
113.379 104.284 li
113.489 108.104 li
113.609 109.604 li
113.719 108.104 li
113.839 106.644 li
113.949 108.464 li
114.069 107.983 li
114.179 108.264 li
114.299 107.424 li
114.409 106.004 li
114.529 106.124 li
114.649 104.724 li
114.759 106.323 li
114.879 110.084 li
114.989 108.563 li
115.109 110.323 li
115.219 106.164 li
115.339 105.764 li
115.449 108.464 li
115.569 107.004 li
115.679 105.584 li
115.799 104.224 li
115.909 102.903 li
116.029 106.264 li
116.149 104.204 li
116.259 112.724 li
116.379 111.124 li
116.489 109.584 li
116.609 109.084 li
116.719 107.584 li
116.839 106.164 li
116.949 104.784 li
117.069 100.804 li
117.179 99.584 li
117.299 101.364 li
117.419 103.344 li
117.529 102.044 li
117.649 104.864 li
117.759 108.664 li
117.879 111.403 li
117.989 109.844 li
118.109 108.344 li
118.219 106.884 li
118.339 105.464 li
118.449 107.044 li
118.569 105.624 li
118.679 107.483 li
118.799 103.424 li
118.919 102.124 li
119.029 100.864 li
119.149 99.6641 li
119.259 104.624 li
119.379 104.784 li
119.489 103.443 li
119.609 102.144 li
119.719 103.823 li
119.839 111.523 li
119.949 109.943 li
120.069 108.443 li
120.179 106.983 li
120.299 105.563 li
120.419 104.204 li
120.529 103.864 li
120.649 99.9238 li
120.759 98.7432 li
120.879 104.243 li
120.989 105.864 li
121.109 107.704 li
121.219 106.264 li
121.339 104.884 li
121.449 103.523 li
121.569 102.224 li
121.689 100.983 li
121.799 101.464 li
121.919 101.224 li
122.029 100.004 li
122.149 98.8232 li
122.259 104.684 li
122.379 105.424 li
122.489 109.204 li
122.609 107.724 li
122.719 106.284 li
122.839 104.903 li
122.949 103.544 li
123.069 102.243 li
123.189 100.983 li
123.299 100.764 li
123.419 99.5635 li
123.529 101.323 li
123.649 103.323 li
123.759 103.523 li
123.879 103.943 li
123.989 102.624 li
124.109 103.864 li
124.219 102.544 li
124.339 101.284 li
124.449 100.063 li
124.569 98.8643 li
124.689 98.7236 li
124.799 100.523 li
124.919 103.384 li
125.029 105.304 li
125.149 103.943 li
125.259 102.624 li
125.379 102.864 li
125.489 101.584 li
125.609 100.344 li
125.719 99.1436 li
125.839 95.3643 li
125.959 101.184 li
126.069 100.964 li
126.189 102.684 li
126.299 101.403 li
126.419 103.384 li
126.529 102.104 li
126.649 100.844 li
126.759 99.624 li
126.879 98.4639 li
126.989 98.8232 li
127.109 97.6836 li
127.219 96.5635 li
127.339 95.5039 li
127.459 91.8232 li
127.569 94.8438 li
127.689 93.8232 li
127.799 102.063 li
127.919 104.023 li
128.029 102.704 li
128.149 103.144 li
128.259 101.864 li
128.379 100.624 li
128.489 99.4033 li
128.609 98.2432 li
128.719 97.124 li
128.839 97.5234 li
128.959 99.3643 li
129.069 99.2041 li
129.189 95.4033 li
129.299 94.3643 li
129.419 93.3643 li
129.529 92.4033 li
129.649 94.6836 li
129.759 93.6836 li
129.879 97.8438 li
129.989 96.7236 li
130.109 95.6436 li
130.219 94.6035 li
130.339 95.3232 li
130.459 97.2236 li
130.569 97.124 li
130.689 96.0439 li
130.799 94.9834 li
130.919 91.3232 li
131.029 90.4238 li
131.149 89.5635 li
131.259 88.7236 li
131.379 92.624 li
131.489 95.7432 li
131.609 94.7041 li
131.729 93.6836 li
131.839 92.7041 li
131.959 94.7041 li
132.069 93.6836 li
132.189 98.8438 li
132.299 97.7041 li
132.419 96.6035 li
132.529 92.8838 li
132.649 91.9434 li
132.759 92.7432 li
132.879 91.7842 li
132.989 90.8838 li
133.109 89.9834 li
133.229 89.124 li
133.339 88.3037 li
133.459 84.7637 li
133.569 90.2236 li
133.689 89.3643 li
133.799 89.5234 li
133.919 88.6836 li
134.029 87.8643 li
134.149 87.084 li
134.259 83.6836 li
134.379 83.0439 li
134.489 82.4238 li
134.609 81.8037 li
134.729 86.3643 li
134.839 85.624 li
134.959 84.9238 li
135.069 84.2236 li
135.189 83.5635 li
135.299 87.5635 li
135.419 86.7842 li
135.529 87.0234 li
135.649 86.2637 li
135.759 85.5439 li
135.879 84.8232 li
136 81.5039 li
136.109 80.9238 li
136.229 77.624 li
136.339 77.1836 li
136.459 76.7432 li
136.569 76.3232 li
136.689 79.124 li
136.799 78.624 li
136.919 78.1436 li
137.029 77.6836 li
137.149 77.2236 li
137.259 79.7236 li
137.379 80.2041 li
137.5 79.6641 li
137.609 79.1436 li
137.729 76.0234 li
137.839 80.7637 li
137.959 80.2041 li
138.069 81.3838 li
138.189 80.8037 li
138.299 80.2637 li
138.419 76.9834 li
138.529 76.5439 li
138.649 76.124 li
138.759 75.7236 li
138.879 75.3438 li
139 74.9639 li
139.109 74.6035 li
139.229 74.2432 li
139.339 77.8438 li
139.459 77.3838 li
139.569 74.3037 li
139.689 73.9639 li
139.799 73.6436 li
139.919 73.3232 li
140.029 66.6641 li
140.149 66.584 li
140.269 63.7432 li
140.379 63.7432 li
140.5 63.7637 li
140.609 63.7637 li
140.729 63.7637 li
140.839 63.7637 li
140.959 63.7637 li
141.069 63.7842 li
141.189 65.4834 li
141.299 66.4238 li
141.419 63.7236 li
141.529 63.7236 li
141.649 63.7236 li
141.769 63.7236 li
141.879 63.7432 li
142 63.9434 li
142.109 63.9434 li
142.229 69.084 li
142.339 68.9033 li
142.459 68.7432 li
142.569 68.584 li
142.689 68.4238 li
142.799 68.2842 li
142.919 68.1436 li
143.029 68.0039 li
143.149 67.8643 li
143.269 65.1035 li
143.379 65.0635 li
143.5 65.0234 li
143.609 63.2432 li
143.729 63.2637 li
143.839 63.2842 li
143.959 63.3037 li
144.069 63.3232 li
144.189 63.3438 li
144.299 63.3438 li
144.419 63.3643 li
144.529 63.3838 li
144.649 57.0635 li
144.769 59.0039 li
144.879 59.1641 li
145 59.3232 li
145.109 56.7236 li
145.229 54.3232 li
145.339 54.6436 li
145.459 54.9434 li
145.569 55.2432 li
145.689 55.5234 li
145.799 55.7842 li
145.919 56.0635 li
146.039 57.3037 li
146.149 60.4639 li
146.269 60.5635 li
146.379 60.6836 li
146.5 58.0439 li
146.609 58.2432 li
146.729 58.4238 li
146.839 58.6035 li
146.959 58.7637 li
147.069 52.3232 li
147.189 52.7041 li
147.299 50.4434 li
147.419 50.8838 li
147.539 51.3037 li
147.649 51.7236 li
147.769 52.124 li
147.879 52.5039 li
148 50.124 li
148.109 44.2432 li
148.229 44.8838 li
148.339 45.5039 li
148.459 46.1035 li
148.569 46.7041 li
148.689 47.2637 li
148.799 48.8037 li
148.919 49.2842 li
149.039 49.7637 li
149.149 50.2236 li
149.269 52.3838 li
149.379 47.4033 li
149.5 47.9434 li
149.609 48.4639 li
149.729 48.9639 li
149.839 49.4434 li
149.959 49.9238 li
150.069 50.3838 li
150.189 50.8232 li
150.309 51.2637 li
150.419 51.6641 li
150.539 52.0635 li
150.649 52.4639 li
150.769 50.084 li
150.879 43.9238 li
151 38.2432 li
151.109 39.084 li
151.229 39.8838 li
151.339 40.6836 li
151.459 41.4434 li
151.569 42.1836 li
151.689 40.2637 li
151.809 41.0234 li
151.919 41.7842 li
152.039 40.7637 li
152.149 41.5039 li
152.269 42.2432 li
152.379 42.9639 li
152.5 43.6436 li
152.609 44.3037 li
152.729 44.9434 li
152.839 45.5635 li
152.959 46.1641 li
153.069 46.7432 li
153.189 47.3037 li
153.309 47.8643 li
153.419 45.6436 li
153.539 39.9033 li
153.649 40.6836 li
153.769 41.4434 li
153.879 35.5635 li
154 36.4834 li
154.109 37.3838 li
154.229 35.624 li
154.339 35.8643 li
154.459 36.7842 li
154.579 37.6641 li
154.689 38.5234 li
154.809 36.624 li
154.919 37.5039 li
155.039 38.3838 li
155.149 39.2041 li
155.269 40.0234 li
155.379 40.8037 li
155.5 41.5635 li
155.609 42.2842 li
155.729 43.0039 li
155.839 43.6836 li
155.959 38.0039 li
156.079 38.8643 li
156.189 33.0439 li
156.309 35.0635 li
156.419 29.3838 li
156.539 30.5234 li
156.649 31.6035 li
156.769 32.6641 li
156.879 31.0635 li
157 32.1436 li
157.109 33.1836 li
157.229 34.1836 li
157.339 35.1641 li
157.459 36.1035 li
157.579 34.2637 li
157.689 35.2432 li
157.809 36.1836 li
157.919 37.084 li
158.039 37.9639 li
158.149 32.4639 li
158.269 33.5039 li
158.379 34.5039 li
158.5 35.4639 li
158.609 36.4033 li
158.729 37.3037 li
158.839 31.5439 li
158.959 29.8643 li
159.079 30.9834 li
159.189 32.0635 li
159.309 33.1035 li
159.419 33.4238 li
159.539 34.4238 li
159.649 35.3838 li
159.769 32.4434 li
159.879 30.3232 li
160 31.4238 li
160.109 29.8643 li
160.229 24.624 li
160.349 25.9238 li
160.459 24.4238 li
160.579 25.7041 li
160.689 26.9639 li
160.809 28.1836 li
160.919 29.3438 li
161.039 23.8643 li
161.149 25.1836 li
161.269 26.4434 li
161.379 27.6641 li
161.5 28.8643 li
161.609 30.0039 li
161.729 31.124 li
161.849 32.1836 li
161.959 30.4834 li
162.079 31.584 li
162.189 26.3037 li
162.309 27.5234 li
162.419 28.7236 li
162.539 25.6035 li
162.649 26.8643 li
162.769 28.084 li
162.879 29.2432 li
163 30.3838 li
163.109 24.8643 li
163.229 26.1436 li
163.349 27.3838 li
163.459 24.7432 li
163.579 23.2842 li
163.689 24.6035 li
163.809 25.9033 li
163.919 27.1436 li
164.039 22.0039 li
164.149 20.7432 li
164.269 22.1641 li
164.379 23.5234 li
164.5 24.8438 li
164.619 26.124 li
.75021 .679683 .670222 .90164 cmyk
@
32.249 28.6035 mo
32.3589 29.7637 li
32.479 30.8838 li
32.5889 25.3037 li
32.709 26.584 li
32.8188 27.8037 li
32.939 28.9834 li
33.0591 30.124 li
33.1689 17.1641 li
33.2891 18.6836 li
33.3989 20.1641 li
33.519 28.5234 li
33.6289 29.6836 li
33.749 30.8037 li
33.8589 31.8838 li
33.979 26.2842 li
34.0889 27.5234 li
34.209 28.7041 li
34.3188 29.9834 li
34.439 31.1035 li
34.5591 32.1836 li
34.6689 33.2236 li
34.7891 31.5439 li
34.8989 32.6035 li
35.019 33.624 li
35.1289 34.624 li
35.249 35.584 li
35.3589 31.3838 li
35.479 32.4434 li
35.5889 33.4639 li
35.709 32.3037 li
35.8291 21.4238 li
35.939 22.8232 li
36.0591 24.1641 li
36.1689 25.4639 li
36.2891 26.7236 li
36.3989 27.9434 li
36.519 29.2432 li
36.6289 30.3838 li
36.749 24.8232 li
36.8589 26.1035 li
36.979 27.3438 li
37.0889 28.5439 li
37.209 29.7041 li
37.3291 30.8232 li
37.439 31.9033 li
37.5591 32.9639 li
37.6689 33.9639 li
37.7891 34.9434 li
37.8989 35.9033 li
38.019 36.8232 li
38.1289 35.5234 li
38.249 29.8037 li
38.3589 30.9238 li
38.479 32.0039 li
38.5889 40.1035 li
38.709 40.8838 li
38.8291 41.6436 li
38.939 31.9834 li
39.0591 33.5635 li
39.1689 34.5635 li
39.2891 35.5234 li
39.3989 36.4639 li
39.519 37.3643 li
39.6289 31.5635 li
39.749 32.624 li
39.8589 33.6641 li
39.979 34.6436 li
40.0991 35.6035 li
40.209 36.5234 li
40.3291 35.2637 li
40.439 36.2041 li
40.5591 37.1035 li
40.6689 38.1035 li
40.7891 38.9434 li
40.8989 39.7637 li
41.019 40.5635 li
41.1289 41.3232 li
41.249 35.4033 li
41.3589 36.3438 li
41.479 37.2432 li
41.5991 38.124 li
41.709 41.124 li
41.8291 41.8838 li
41.939 42.6035 li
42.0591 43.3037 li
42.1689 43.9639 li
42.2891 44.624 li
42.3989 43.084 li
42.519 43.9033 li
42.6289 52.0234 li
42.749 52.4033 li
42.8589 46.124 li
42.979 34.8037 li
43.0991 35.7637 li
43.209 36.6836 li
43.3291 37.5635 li
43.439 38.4434 li
43.5591 39.2637 li
43.6689 40.084 li
43.7891 40.8643 li
43.8989 41.6035 li
44.019 43.8643 li
44.1289 44.5234 li
44.249 45.1641 li
44.3691 43.7236 li
44.479 44.3838 li
44.5991 39.0234 li
44.709 39.8232 li
44.8291 40.624 li
44.939 41.3838 li
45.0591 42.124 li
45.1689 42.8438 li
45.2891 43.5234 li
45.3989 44.1836 li
45.519 45.3838 li
45.6289 45.9834 li
45.749 46.584 li
45.8691 47.1436 li
45.979 54.624 li
46.0991 55.0439 li
46.209 56.8643 li
46.3291 54.9238 li
46.439 55.2041 li
46.5591 48.8438 li
46.6689 49.3438 li
46.7891 49.8037 li
46.8989 50.9238 li
47.019 51.3438 li
47.1289 51.7637 li
47.249 52.1436 li
47.3691 52.5439 li
47.479 52.9033 li
47.5991 53.2637 li
47.709 53.624 li
47.8291 54.084 li
47.939 54.9434 li
48.0591 55.2432 li
48.1689 57.0439 li
48.2891 55.1035 li
48.3989 55.3838 li
48.519 55.6641 li
48.6289 55.9434 li
48.749 56.2041 li
48.8691 49.7842 li
48.979 57.8232 li
49.0991 58.0234 li
49.209 58.2236 li
49.3291 58.4033 li
49.439 58.7041 li
49.5591 58.8838 li
49.6689 59.2236 li
49.7891 59.3643 li
49.8989 59.5234 li
50.019 61.1836 li
50.1392 61.2637 li
50.249 59.7236 li
50.3691 59.8643 li
50.479 60.0039 li
50.5991 60.124 li
50.709 60.2432 li
50.8291 60.3643 li
50.939 60.4834 li
51.0591 61.2432 li
51.1689 61.4639 li
51.2891 61.7041 li
51.3989 61.7842 li
51.519 61.8438 li
51.6392 61.9238 li
51.749 70.4238 li
51.8691 70.2236 li
51.979 70.0039 li
52.0991 68.4834 li
52.209 68.3232 li
52.3291 62.0635 li
52.439 62.124 li
52.5591 62.3643 li
52.6689 62.4033 li
52.7891 62.584 li
52.8989 63.2842 li
53.019 63.3037 li
53.1392 63.3232 li
53.249 63.3438 li
53.3691 63.3438 li
53.479 64.9033 li
53.5991 64.8643 li
53.709 65.0039 li
53.8291 64.9639 li
53.939 64.9238 li
54.0591 62.7236 li
54.1689 62.7637 li
54.2891 70.2637 li
54.4092 70.1836 li
54.519 69.9834 li
54.6392 69.7842 li
54.749 69.584 li
54.8691 70.0439 li
54.979 70.0234 li
55.0991 71.3438 li
55.209 71.9434 li
55.3291 71.6836 li
55.439 71.4238 li
55.5591 71.1836 li
55.6689 70.9434 li
55.7891 70.7041 li
55.9092 70.6035 li
56.019 68.2236 li
56.1392 68.084 li
56.249 68.6641 li
56.3691 68.5039 li
56.479 68.3438 li
56.5991 68.2041 li
56.709 76.5039 li
56.8291 76.1035 li
56.939 86.124 li
57.0591 85.4033 li
57.1689 84.6836 li
57.2891 84.0039 li
57.4092 83.3438 li
57.519 82.8438 li
57.6392 82.3838 li
57.749 82.624 li
57.8691 82.0039 li
57.979 79.2432 li
58.0991 78.7432 li
58.209 78.8037 li
58.3291 79.8438 li
58.439 79.3037 li
58.5591 78.8037 li
58.6689 78.3232 li
58.7891 77.8438 li
58.9092 77.3838 li
59.019 84.0039 li
59.1392 83.9834 li
59.249 83.3232 li
59.3691 82.6836 li
59.479 82.2432 li
59.5991 81.6436 li
59.709 81.0635 li
59.8291 80.5039 li
59.939 86.2236 li
60.0591 86.0439 li
60.1792 85.3037 li
60.2891 81.9238 li
60.4092 81.3438 li
60.519 80.7637 li
60.6392 80.3438 li
60.749 79.8037 li
60.8691 79.2842 li
60.979 78.7637 li
61.0991 78.2842 li
61.209 94.5234 li
61.3291 93.5234 li
61.439 94.0635 li
61.5591 93.7236 li
61.6792 92.7432 li
61.7891 91.8037 li
61.9092 91.4238 li
62.019 91.3643 li
62.1392 88.4238 li
62.249 87.624 li
62.3691 86.8438 li
62.479 86.084 li
62.5991 85.3643 li
62.709 84.6641 li
62.8291 83.9834 li
62.939 84.8438 li
63.0591 84.1436 li
63.1792 83.4834 li
63.2891 82.8438 li
63.4092 89.1436 li
63.519 88.3232 li
63.6392 87.5234 li
63.749 87.4238 li
63.8691 86.6436 li
63.979 92.8232 li
64.0991 91.8643 li
64.209 90.9434 li
64.3291 90.0635 li
64.4492 88.5635 li
64.5591 97.5234 li
64.6792 96.4238 li
64.7891 95.3643 li
64.9092 94.3232 li
65.019 93.3232 li
65.1392 92.3643 li
65.249 88.8838 li
65.3691 88.7041 li
65.479 94.8232 li
65.5991 93.8037 li
65.709 92.5635 li
65.8291 92.4639 li
65.9492 91.5234 li
66.0591 92.1436 li
66.1792 91.2236 li
66.2891 90.3232 li
66.4092 89.4639 li
66.519 88.624 li
66.6392 87.8037 li
66.749 87.0234 li
66.8691 84.2236 li
66.979 83.5635 li
67.0991 88.9834 li
67.209 88.1641 li
67.3291 87.3643 li
67.4492 86.6035 li
67.5591 104.624 li
67.6792 104.144 li
67.7891 102.823 li
67.9092 101.544 li
68.019 100.304 li
68.1392 99.1035 li
68.249 97.9639 li
68.3691 96.8438 li
68.479 95.8838 li
68.5991 94.8438 li
68.7192 93.8232 li
68.8291 92.8438 li
68.9492 89.2041 li
69.0591 89.9033 li
69.1792 89.0439 li
69.2891 88.2236 li
69.4092 87.4238 li
69.519 94.9639 li
69.6392 91.7842 li
69.749 96.9434 li
69.8691 95.8643 li
69.979 94.8037 li
70.0991 93.9238 li
70.2192 102.724 li
70.3291 101.443 li
70.4492 100.224 li
70.5591 99.0234 li
70.6792 99.4033 li
70.7891 98.2236 li
70.9092 96.3037 li
71.019 95.2432 li
71.1392 94.2041 li
71.249 93.2236 li
71.3691 92.2637 li
71.479 92.1641 li
71.5991 98.7041 li
71.7192 97.5635 li
71.8291 96.584 li
71.9492 95.5234 li
72.0591 97.8838 li
72.1792 96.7637 li
72.2891 97.2041 li
72.4092 96.124 li
72.519 95.0635 li
72.6392 94.0439 li
72.749 102.844 li
72.8691 101.563 li
72.979 98.1436 li
73.0991 97.0234 li
73.2192 95.9434 li
73.3291 95.7236 li
73.4492 94.8232 li
73.5591 100.724 li
73.6792 99.5234 li
73.7891 98.9033 li
73.9092 99.2637 li
74.019 98.1035 li
74.1392 103.063 li
74.249 101.784 li
74.3691 100.544 li
74.4893 99.3438 li
74.5991 98.1836 li
74.7192 94.3643 li
74.8291 92.5635 li
74.9492 91.624 li
75.0591 90.7236 li
75.1792 99.7432 li
75.2891 99.4238 li
75.4092 98.2432 li
75.519 104.044 li
75.6392 104.264 li
75.749 102.924 li
75.8691 101.644 li
75.9893 100.424 li
76.0991 105.304 li
76.2192 104.483 li
76.3291 103.144 li
76.4492 101.864 li
76.5591 100.624 li
76.6792 99.4033 li
76.7891 98.2432 li
76.9092 97.124 li
77.019 96.1641 li
77.1392 92.4238 li
77.249 91.4834 li
77.3691 90.584 li
77.4893 108.784 li
77.5991 107.304 li
77.7192 105.884 li
77.8291 110.584 li
77.9492 109.063 li
78.0591 107.563 li
78.1792 105.344 li
78.2891 103.983 li
78.4092 102.664 li
78.519 101.403 li
78.6392 100.164 li
78.7593 98.9834 li
78.8691 98.5039 li
78.9893 97.3643 li
79.0991 96.2637 li
79.2192 92.5234 li
79.3291 93.1035 li
79.4492 92.1436 li
79.5591 104.224 li
79.6792 112.684 li
79.7891 111.924 li
79.9092 110.344 li
80.019 108.823 li
80.1392 107.364 li
80.2593 105.924 li
80.3691 104.544 li
80.4893 103.224 li
80.5991 101.924 li
80.7192 100.684 li
80.8291 99.6035 li
80.9492 98.4238 li
81.0591 97.3037 li
81.1792 101.483 li
81.2891 99.084 li
81.4092 97.9434 li
81.519 103.743 li
81.6392 102.443 li
81.7593 101.184 li
81.8691 99.9434 li
81.9893 113.743 li
82.0991 112.644 li
82.2192 111.044 li
82.3291 109.504 li
82.4492 108.004 li
82.5591 106.563 li
82.6792 106.004 li
82.7891 110.823 li
82.9092 109.284 li
83.0288 107.804 li
83.1392 103.684 li
83.2593 102.384 li
83.3691 101.104 li
83.4893 101.424 li
83.5991 107.104 li
83.7192 105.684 li
83.8291 103.523 li
83.9492 102.224 li
84.0591 100.964 li
84.1792 109.523 li
84.2891 114.104 li
84.4092 112.464 li
84.5288 110.864 li
84.6392 109.323 li
84.7593 107.844 li
84.8691 106.403 li
84.9893 102.464 li
85.0991 101.184 li
85.2192 99.9639 li
85.3291 98.7842 li
85.4492 97.6436 li
85.5591 96.5234 li
85.6792 102.384 li
85.7891 107.204 li
85.9092 107.304 li
86.0288 111.063 li
86.1392 109.523 li
86.2593 108.023 li
86.3691 115.563 li
86.4893 113.864 li
86.5991 112.224 li
86.7192 107.964 li
86.8291 106.523 li
86.9492 105.124 li
87.0591 103.764 li
87.1792 108.544 li
87.2891 103.204 li
87.4092 101.924 li
87.5288 100.664 li
87.6392 99.4639 li
87.7593 98.3037 li
87.8691 104.084 li
87.9893 102.784 li
88.0991 101.504 li
88.2192 100.264 li
88.3291 96.4033 li
88.4492 95.3232 li
88.5591 94.3037 li
88.6792 108.364 li
88.7988 106.903 li
88.9092 107.023 li
89.0288 107.584 li
89.1392 111.344 li
89.2593 109.784 li
89.3691 108.284 li
89.4893 106.823 li
89.5991 105.403 li
89.7192 104.044 li
89.8291 102.743 li
89.9492 98.9033 li
90.0591 110.764 li
90.1792 109.224 li
90.2988 107.743 li
90.4092 102.304 li
90.5288 101.044 li
90.6392 99.8232 li
90.7593 98.6436 li
90.8691 97.5039 li
90.9893 105.384 li
91.0991 104.023 li
91.2192 92.7842 li
91.3291 97.9238 li
91.4492 94.124 li
91.5591 93.1436 li
91.6792 92.1836 li
91.7988 91.4639 li
91.9092 95.7432 li
92.0288 94.7041 li
92.1392 93.6836 li
92.2593 92.7041 li
92.3691 98.6836 li
92.4893 97.5439 li
92.5991 98.1836 li
92.7192 103.144 li
92.8291 97.9834 li
92.9492 94.1836 li
93.0688 94.3643 li
93.1792 93.3643 li
93.2988 92.4033 li
93.4092 101.243 li
93.5288 101.544 li
93.6392 100.323 li
93.7593 99.124 li
93.8691 97.9639 li
93.9893 102.924 li
94.0991 101.644 li
94.2192 100.403 li
94.3291 96.5234 li
94.4492 100.864 li
94.5688 99.6436 li
94.6792 98.4834 li
94.7988 107.983 li
94.9092 102.544 li
95.0288 101.284 li
95.1392 99.2432 li
95.2593 104.164 li
95.3691 102.844 li
95.4893 101.563 li
95.5991 88.4238 li
95.7192 87.624 li
95.8291 84.1641 li
95.9492 93.2842 li
96.0688 92.3232 li
96.1792 91.3838 li
96.2988 90.624 li
96.4092 89.7432 li
96.5288 92.8232 li
96.6392 97.9434 li
96.7593 98.0234 li
96.8687 96.9033 li
96.9888 95.8232 li
97.0991 94.7842 li
97.2192 90.2842 li
97.3394 96.3438 li
97.4487 95.2842 li
97.5688 94.2432 li
97.6792 93.2432 li
97.7993 92.2842 li
97.9087 97.4434 li
98.0288 98.0635 li
98.1392 96.9434 li
98.2593 95.8643 li
98.3687 97.0234 li
98.4888 89.2637 li
98.5991 88.4238 li
98.7192 97.4033 li
98.8394 96.3037 li
98.9487 100.424 li
99.0688 87.3232 li
99.1792 91.8232 li
99.2993 90.9033 li
99.4087 91.7637 li
99.5288 90.8438 li
99.6392 89.9639 li
99.7593 89.1035 li
99.8687 85.6035 li
99.9888 92.0234 li
100.099 87.1035 li
100.219 86.3438 li
100.339 85.624 li
100.449 90.9834 li
100.569 92.084 li
100.679 91.1436 li
100.799 91.9834 li
100.909 91.0635 li
101.029 90.1836 li
101.139 93.7041 li
101.259 90.0439 li
101.369 89.3037 li
101.489 88.7041 li
101.599 83.8838 li
101.719 99.084 li
101.839 97.9434 li
101.949 84.9238 li
102.069 84.2236 li
102.179 85.2842 li
102.299 84.584 li
102.409 83.9033 li
102.529 80.584 li
102.639 80.0234 li
102.759 79.5039 li
102.869 79.2041 li
102.989 90.9033 li
103.109 86.0234 li
103.219 90.4834 li
103.339 89.6035 li
103.449 90.5039 li
103.569 89.624 li
103.679 88.7842 li
103.799 85.2842 li
103.909 84.584 li
104.029 83.9033 li
104.139 83.2432 li
104.259 88.9033 li
104.369 88.084 li
104.489 83.3037 li
104.609 70.7637 li
104.719 72.2637 li
104.839 71.1836 li
104.949 70.9434 li
105.069 68.0439 li
105.179 73.084 li
105.299 82.5635 li
105.409 81.9639 li
105.529 87.6641 li
105.639 86.8838 li
105.759 86.124 li
105.869 81.4033 li
105.989 80.8232 li
106.109 82.0039 li
106.219 81.4033 li
106.339 87.7637 li
106.449 84.3037 li
106.569 83.624 li
106.679 82.1836 li
106.799 87.8643 li
106.909 75.1836 li
107.029 74.8037 li
107.139 74.4434 li
107.259 75.3037 li
107.379 76.6641 li
107.489 76.2432 li
107.609 75.8232 li
107.719 72.7637 li
107.839 72.4639 li
107.949 72.1836 li
108.069 78.2041 li
108.179 77.7432 li
108.299 77.2842 li
108.409 76.8438 li
108.529 71.624 li
108.639 71.3643 li
108.759 71.124 li
108.879 72.624 li
108.989 69.6641 li
109.109 69.4639 li
109.219 62.7842 li
109.339 62.8232 li
109.449 68.9238 li
109.569 68.7637 li
109.679 68.6035 li
109.799 64.4434 li
109.909 64.4434 li
110.029 64.4238 li
110.139 64.4033 li
110.259 61.7041 li
110.379 69.8438 li
110.489 69.6436 li
110.609 69.4639 li
110.719 75.3643 li
110.839 74.9834 li
110.949 74.624 li
111.069 80.0439 li
111.179 79.5234 li
111.299 72.2842 li
111.409 72.0234 li
111.529 69.0635 li
111.649 69.124 li
111.759 68.9434 li
111.879 68.7842 li
111.989 68.624 li
112.109 76.2637 li
112.219 75.0635 li
112.339 69.7842 li
112.449 69.584 li
112.569 69.4033 li
112.679 69.2236 li
112.799 66.584 li
112.909 66.4834 li
113.029 66.4033 li
113.149 66.3232 li
113.259 54.3438 li
113.379 59.8438 li
113.489 66.0439 li
113.609 61.9834 li
113.719 62.0439 li
113.839 62.1035 li
113.949 62.3838 li
114.069 59.7432 li
114.179 59.084 li
114.299 60.9639 li
114.409 61.0635 li
114.529 60.2236 li
114.649 60.3438 li
114.759 56.4639 li
114.879 62.7842 li
114.989 62.8232 li
115.109 63.084 li
115.219 51.2041 li
115.339 48.9434 li
115.449 54.6035 li
115.569 54.9238 li
115.679 55.2041 li
115.799 55.5039 li
115.909 55.7637 li
116.029 51.2432 li
116.149 58.584 li
116.259 64.124 li
116.379 64.1035 li
116.489 64.1035 li
116.609 61.4238 li
116.719 61.5039 li
116.839 61.584 li
116.949 61.6436 li
117.069 49.8232 li
117.179 50.2842 li
117.299 46.7236 li
117.419 47.5039 li
117.529 48.0439 li
117.649 53.7432 li
117.759 60.1641 li
117.879 55.8838 li
117.989 56.1436 li
118.109 56.3838 li
118.219 56.6436 li
118.339 56.8838 li
118.449 53.1035 li
118.569 53.4639 li
118.679 54.0234 li
118.799 42.4434 li
118.919 43.1436 li
119.029 43.8232 li
119.149 44.4834 li
119.259 48.5234 li
119.379 48.084 li
119.489 48.6035 li
119.609 49.1035 li
119.719 45.6035 li
119.839 50.8037 li
119.949 51.2236 li
120.069 51.6436 li
120.179 52.0439 li
120.299 52.4238 li
120.419 52.8037 li
120.529 50.4834 li
120.649 39.0234 li
120.759 39.8438 li
120.879 45.7842 li
120.989 42.3838 li
121.109 43.3037 li
121.219 43.9834 li
121.339 44.624 li
121.449 45.2637 li
121.569 45.8643 li
121.689 46.4639 li
121.799 46.2236 li
121.919 44.124 li
122.029 44.7842 li
122.149 45.4033 li
122.259 47.2041 li
122.379 35.124 li
122.489 42.1436 li
122.609 42.8643 li
122.719 43.5439 li
122.839 44.2236 li
122.949 44.8643 li
123.069 45.4834 li
123.189 46.084 li
123.299 44.0039 li
123.419 44.6436 li
123.529 41.2842 li
123.649 42.2432 li
123.759 42.0234 li
123.879 41.9434 li
123.989 42.6641 li
124.109 37.5234 li
124.219 38.3838 li
124.339 39.2236 li
124.449 40.0234 li
124.569 40.8232 li
124.689 38.8838 li
124.799 35.7236 li
124.919 41.8232 li
125.029 42.7637 li
125.149 43.4639 li
125.259 44.124 li
125.379 43.8438 li
125.489 44.5039 li
125.609 45.1436 li
125.719 45.7432 li
125.839 34.4434 li
125.959 40.6836 li
126.069 38.7637 li
126.189 35.6035 li
126.299 36.5234 li
126.419 37.6436 li
126.529 38.5039 li
126.649 39.3232 li
126.759 40.124 li
126.879 40.9033 li
126.989 40.7432 li
127.109 41.5039 li
127.219 42.2236 li
127.339 42.9434 li
127.459 31.7236 li
127.569 26.1035 li
127.689 27.3438 li
127.799 39.8037 li
127.919 40.8037 li
128.029 41.5635 li
128.149 41.5039 li
128.259 42.2236 li
128.379 42.9434 li
128.489 43.624 li
128.609 44.2842 li
128.719 44.9238 li
128.839 44.624 li
128.959 41.2637 li
129.069 39.3232 li
129.189 28.2236 li
129.299 29.4033 li
129.419 30.5234 li
129.529 31.624 li
129.649 32.8838 li
129.759 33.9033 li
129.879 40.9639 li
129.989 41.7236 li
130.109 42.4434 li
130.219 43.1436 li
130.339 43.0234 li
130.459 39.7236 li
130.569 37.8232 li
130.689 38.6836 li
130.799 39.5039 li
130.919 28.4033 li
131.029 29.5635 li
131.149 30.6836 li
131.259 31.7842 li
131.379 32.124 li
131.489 38.3438 li
131.609 39.1836 li
131.729 40.0039 li
131.839 40.7842 li
131.959 37.5439 li
132.069 38.4033 li
132.189 42.6436 li
132.299 43.3438 li
132.419 44.0039 li
132.529 32.7637 li
132.649 33.7842 li
132.759 33.9639 li
132.879 34.9434 li
132.989 35.8838 li
133.109 36.8037 li
133.229 37.7041 li
133.339 38.5635 li
133.459 32.7236 li
133.569 29.9639 li
133.689 31.084 li
133.799 29.4834 li
133.919 30.6035 li
134.029 31.7041 li
134.149 32.7637 li
134.259 21.8643 li
134.379 23.2432 li
134.489 24.584 li
134.609 25.8643 li
134.729 33.1836 li
134.839 34.2041 li
134.959 35.1641 li
135.069 36.124 li
135.189 37.0234 li
135.299 33.1035 li
135.419 34.124 li
135.529 32.4238 li
135.649 33.4434 li
135.759 34.4434 li
135.879 35.4033 li
136 24.4434 li
136.109 25.7236 li
136.229 20.3232 li
136.339 21.7432 li
136.459 23.1436 li
136.569 24.4639 li
136.689 25.9834 li
136.799 27.2236 li
136.919 28.4238 li
137.029 29.584 li
137.149 30.7041 li
137.259 27.8037 li
137.379 26.3037 li
137.5 27.5439 li
137.609 28.7236 li
137.729 17.9834 li
137.839 25.5635 li
137.959 26.8232 li
138.069 27.2236 li
138.189 28.4238 li
138.299 29.6035 li
138.419 24.0635 li
138.529 25.3643 li
138.649 26.624 li
138.759 27.8438 li
138.879 29.0234 li
139 30.1836 li
139.109 31.2842 li
139.229 32.3438 li
139.339 26.7041 li
139.459 27.9238 li
139.569 17.2041 li
139.689 18.7432 li
139.799 20.2236 li
139.919 21.6436 li
140.029 23.1641 li
140.149 24.4834 li
140.269 19.124 li
140.379 20.6035 li
140.5 22.0234 li
140.609 23.3838 li
140.729 24.7236 li
140.839 26.0039 li
140.959 27.2432 li
141.069 28.4434 li
141.189 28.8037 li
141.299 27.2637 li
141.419 16.5635 li
141.529 18.124 li
141.649 19.624 li
141.769 21.0635 li
141.879 22.4834 li
142 13.1836 li
142.109 14.8438 li
142.229 22.5234 li
142.339 23.8838 li
142.459 25.2041 li
142.569 26.4639 li
142.689 27.6836 li
142.799 28.8838 li
142.919 30.0234 li
143.029 31.1436 li
143.149 32.2041 li
143.269 21.3438 li
143.379 22.7432 li
143.5 24.084 li
143.609 16.0635 li
143.729 17.624 li
143.839 19.1436 li
143.959 20.6035 li
144.069 22.0234 li
144.189 23.4033 li
144.299 24.7236 li
144.419 26.0039 li
144.529 27.2432 li
144.649 28.584 li
144.769 28.9434 li
144.879 30.084 li
145 31.1836 li
145.109 25.6035 li
145.229 14.9639 li
145.339 16.5635 li
145.459 18.1035 li
145.569 19.6035 li
145.689 21.0635 li
145.799 22.4639 li
145.919 23.8232 li
146.039 22.4639 li
146.149 19.8232 li
146.269 21.2637 li
146.379 22.6641 li
146.5 17.3643 li
146.609 18.8838 li
146.729 20.3643 li
146.839 21.7842 li
146.959 23.1641 li
147.069 22.3232 li
147.189 23.6836 li
147.299 13.1035 li
147.419 14.7637 li
147.539 16.3838 li
147.649 17.9434 li
147.769 19.4434 li
147.879 20.9033 li
148 15.6641 li
148.109 17.3643 li
148.229 18.8838 li
148.339 20.3643 li
148.459 21.7842 li
148.569 23.1641 li
148.689 24.5039 li
148.799 23.124 li
148.919 24.4434 li
149.039 25.7432 li
149.149 27.0039 li
149.269 27.4033 li
149.379 10.0439 li
149.5 11.8037 li
149.609 13.5039 li
149.729 15.1641 li
149.839 16.7637 li
149.959 18.3037 li
150.069 19.8037 li
150.189 21.2432 li
150.309 22.6436 li
150.419 24.0039 li
150.539 25.3037 li
150.649 26.5635 li
150.769 21.1436 li
150.879 20.3643 li
151 21.9238 li
151.109 23.3037 li
151.229 24.624 li
151.339 25.9033 li
151.459 27.1641 li
151.569 28.3643 li
151.689 17.624 li
151.809 19.1436 li
151.919 20.6035 li
152.039 12.6836 li
152.149 14.3643 li
152.269 15.9834 li
152.379 17.5635 li
152.5 19.084 li
152.609 20.5439 li
152.729 21.9639 li
152.839 23.3438 li
152.959 24.6641 li
153.069 25.9639 li
153.189 27.2041 li
153.309 28.4033 li
153.419 22.9033 li
153.539 24.3838 li
153.649 25.6836 li
153.769 26.9238 li
153.879 25.9639 li
154 27.2041 li
154.109 28.4238 li
154.229 17.6641 li
154.339 26.1035 li
154.459 27.3438 li
154.579 28.5439 li
154.689 29.7041 li
154.809 24.1641 li
154.919 25.4639 li
155.039 26.7236 li
155.149 27.9434 li
155.269 29.124 li
155.379 30.2637 li
155.5 31.3643 li
155.609 32.4434 li
155.729 33.4639 li
155.839 34.4639 li
155.959 35.5635 li
156.079 36.4834 li
156.189 32.2432 li
156.309 30.6035 li
156.419 29.5234 li
156.539 30.6436 li
156.649 31.7432 li
156.769 32.8037 li
156.879 21.9033 li
157 23.2842 li
157.109 24.624 li
157.229 25.9033 li
157.339 27.1436 li
157.459 28.3438 li
157.579 22.8643 li
157.689 24.2041 li
157.809 25.5039 li
157.919 26.7637 li
158.039 27.9834 li
158.149 29.2842 li
158.269 30.4238 li
158.379 31.5234 li
158.5 32.584 li
158.609 33.6035 li
158.729 34.6035 li
158.839 33.3838 li
158.959 27.7236 li
159.079 28.9238 li
159.189 30.0635 li
159.309 31.1641 li
159.419 39.1641 li
159.539 39.9834 li
159.649 40.7637 li
159.769 43.0439 li
159.879 44.2637 li
160 44.9033 li
160.109 33.624 li
160.229 34.7432 li
160.349 35.7041 li
160.459 29.9639 li
160.579 31.084 li
160.689 32.1641 li
160.809 33.2041 li
160.919 34.2041 li
161.039 33.0039 li
161.149 34.0234 li
161.269 35.0039 li
161.379 35.9434 li
161.5 36.8643 li
161.609 37.7432 li
161.729 38.6035 li
161.849 39.4238 li
161.959 33.584 li
162.079 34.5635 li
162.189 35.6641 li
162.309 36.584 li
162.419 37.4834 li
162.539 40.5234 li
162.649 41.2842 li
162.769 42.0234 li
162.879 42.7432 li
163 43.4238 li
163.109 41.9238 li
163.229 42.6436 li
163.349 43.3438 li
163.459 51.4834 li
163.579 45.2432 li
163.689 45.8438 li
163.809 46.4434 li
163.919 47.0234 li
164.039 47.7041 li
164.149 36.3232 li
164.269 37.2236 li
164.379 38.1035 li
164.5 38.9434 li
164.619 39.7637 li
0 0 0 .7 cmyk
@
119.589 151.274 mo
119.869 151.394 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
@
119.869 151.394 mo
120.159 151.504 li
120.439 151.624 li
120.719 151.754 li
121.009 151.874 li
121.289 151.994 li
121.569 152.124 li
121.849 152.254 li
122.129 152.384 li
122.399 152.514 li
122.679 152.644 li
122.959 152.774 li
123.229 152.914 li
123.509 153.054 li
123.779 153.184 li
124.049 153.324 li
124.319 153.464 li
124.589 153.614 li
124.859 153.754 li
125.129 153.904 li
125.399 154.044 li
125.669 154.194 li
125.929 154.344 li
126.199 154.504 li
126.459 154.654 li
126.719 154.804 li
126.979 154.964 li
127.249 155.124 li
127.499 155.274 li
127.759 155.434 li
128.019 155.604 li
128.279 155.764 li
128.529 155.924 li
128.789 156.094 li
129.039 156.264 li
129.289 156.424 li
129.539 156.594 li
129.789 156.774 li
.0178531 .0106203 .0106203 3.0518e-05 cmyk
@
129.789 156.774 mo
130.039 156.944 li
130.289 157.114 li
130.539 157.294 li
130.779 157.464 li
131.019 157.644 li
131.269 157.824 li
131.509 158.004 li
131.749 158.184 li
131.989 158.374 li
132.229 158.554 li
132.459 158.744 li
132.699 158.934 li
132.929 159.114 li
133.169 159.304 li
133.399 159.494 li
133.629 159.694 li
133.859 159.884 li
134.089 160.084 li
134.309 160.274 li
134.539 160.474 li
134.759 160.674 li
134.989 160.874 li
135.209 161.074 li
135.429 161.274 li
135.649 161.474 li
135.869 161.684 li
136.079 161.884 li
136.299 162.094 li
136.509 162.304 li
136.719 162.514 li
136.929 162.724 li
137.139 162.934 li
137.349 163.144 li
137.559 163.364 li
137.759 163.574 li
137.969 163.794 li
138.169 164.004 li
.0435492 .0310369 .0310369 3.0518e-05 cmyk
@
138.169 164.004 mo
138.369 164.224 li
138.569 164.444 li
138.769 164.664 li
138.959 164.884 li
139.159 165.114 li
139.349 165.334 li
139.539 165.554 li
139.729 165.784 li
139.919 166.014 li
140.109 166.234 li
140.299 166.464 li
140.479 166.694 li
140.669 166.924 li
140.849 167.164 li
141.029 167.394 li
141.209 167.624 li
141.379 167.864 li
141.559 168.094 li
141.729 168.334 li
141.899 168.574 li
142.069 168.813 li
142.239 169.054 li
142.409 169.294 li
142.579 169.534 li
142.739 169.774 li
142.899 170.014 li
143.069 170.264 li
143.229 170.504 li
143.379 170.754 li
143.539 170.994 li
143.689 171.244 li
143.849 171.494 li
143.999 171.744 li
144.149 171.994 li
144.299 172.244 li
144.439 172.494 li
144.589 172.744 li
144.729 173.004 li
.0766613 .0555734 .0588388 3.0518e-05 cmyk
@
144.729 173.004 mo
144.869 173.254 li
145.009 173.514 li
145.149 173.764 li
145.289 174.024 li
145.419 174.284 li
145.559 174.534 li
145.689 174.794 li
145.819 175.054 li
145.939 175.313 li
146.069 175.574 li
146.199 175.834 li
146.319 176.094 li
146.439 176.364 li
146.559 176.624 li
146.679 176.884 li
146.789 177.154 li
146.91 177.414 li
147.019 177.684 li
147.128 177.954 li
147.24 178.214 li
147.349 178.484 li
147.449 178.754 li
147.548 179.024 li
147.66 179.294 li
147.759 179.563 li
147.859 179.834 li
147.949 180.104 li
148.048 180.374 li
148.139 180.644 li
148.229 180.914 li
148.319 181.194 li
148.41 181.464 li
148.49 181.734 li
148.58 182.014 li
148.66 182.284 li
148.74 182.563 li
148.819 182.834 li
.108003 .0798962 .0851759 3.0518e-05 cmyk
@
148.819 182.834 mo
148.889 183.114 li
148.969 183.394 li
149.039 183.664 li
149.109 183.944 li
149.179 184.224 li
149.25 184.504 li
149.319 184.784 li
149.378 185.054 li
149.439 185.334 li
149.5 185.614 li
149.559 185.894 li
149.619 186.174 li
149.669 186.454 li
149.719 186.734 li
149.779 187.024 li
149.819 187.304 li
149.869 187.584 li
149.919 187.864 li
149.958 188.144 li
150 188.424 li
150.039 188.714 li
150.08 188.994 li
150.119 189.274 li
150.149 189.563 li
150.179 189.844 li
150.208 190.124 li
150.24 190.414 li
150.269 190.694 li
150.289 190.974 li
150.319 191.264 li
150.339 191.544 li
150.359 191.834 li
150.378 192.114 li
150.389 192.404 li
150.399 192.684 li
150.419 192.964 li
150.429 193.254 li
150.429 193.534 li
.140475 .107088 .111666 3.0518e-05 cmyk
@
150.429 193.534 mo
150.439 193.824 li
150.439 194.104 li
150.449 194.394 li
150.449 194.674 li
150.449 194.964 li
150.439 195.244 li
150.439 195.534 li
150.429 195.813 li
150.419 196.104 li
150.41 196.384 li
150.399 196.674 li
150.378 196.954 li
150.369 197.244 li
150.349 197.524 li
150.33 197.804 li
150.309 198.094 li
150.279 198.374 li
150.259 198.664 li
150.229 198.944 li
150.199 199.224 li
150.169 199.514 li
150.139 199.794 li
150.099 200.074 li
150.069 200.364 li
150.029 200.644 li
149.99 200.924 li
149.939 201.204 li
149.899 201.494 li
149.849 201.774 li
149.809 202.054 li
149.759 202.334 li
149.699 202.614 li
149.649 202.894 li
149.589 203.174 li
149.539 203.454 li
149.479 203.734 li
149.419 204.014 li
.174868 .132937 .138125 3.0518e-05 cmyk
@
149.419 204.014 mo
149.349 204.294 li
149.289 204.574 li
149.219 204.854 li
149.16 205.124 li
149.089 205.404 li
149.009 205.684 li
148.939 205.964 li
148.859 206.234 li
148.789 206.514 li
148.708 206.784 li
148.628 207.063 li
148.539 207.334 li
148.458 207.614 li
148.369 207.884 li
148.279 208.164 li
148.189 208.434 li
148.099 208.704 li
148.009 208.974 li
147.91 209.244 li
147.819 209.514 li
147.719 209.784 li
147.619 210.054 li
147.509 210.324 li
147.41 210.594 li
147.298 210.864 li
147.199 211.134 li
147.089 211.394 li
146.969 211.664 li
146.859 211.934 li
146.75 212.194 li
146.628 212.454 li
146.509 212.724 li
146.389 212.984 li
146.269 213.244 li
146.149 213.514 li
146.019 213.774 li
145.889 214.034 li
145.769 214.294 li
.212253 .165286 .17023 3.0518e-05 cmyk
@
145.769 214.294 mo
145.628 214.544 li
145.5 214.804 li
145.369 215.063 li
145.229 215.324 li
145.099 215.574 li
144.959 215.834 li
144.819 216.084 li
144.669 216.344 li
144.529 216.594 li
144.389 216.844 li
144.239 217.094 li
144.089 217.344 li
143.939 217.594 li
143.789 217.844 li
143.629 218.094 li
143.479 218.344 li
143.319 218.584 li
143.159 218.834 li
142.999 219.074 li
142.839 219.324 li
142.679 219.563 li
142.509 219.804 li
142.339 220.044 li
142.179 220.284 li
142.009 220.524 li
141.839 220.764 li
141.659 221.004 li
141.489 221.234 li
141.309 221.474 li
141.129 221.704 li
140.949 221.944 li
140.769 222.174 li
140.589 222.404 li
140.409 222.634 li
140.219 222.864 li
140.039 223.094 li
139.849 223.324 li
.247196 .19559 .200748 3.0518e-05 cmyk
@
139.849 223.324 mo
139.659 223.544 li
139.469 223.774 li
139.269 223.994 li
139.079 224.224 li
138.879 224.444 li
138.689 224.664 li
138.489 224.884 li
138.289 225.104 li
138.089 225.324 li
137.879 225.534 li
137.679 225.754 li
137.469 225.964 li
137.269 226.184 li
137.059 226.394 li
136.849 226.604 li
136.639 226.813 li
136.419 227.024 li
136.209 227.234 li
135.999 227.434 li
135.779 227.644 li
135.559 227.844 li
135.339 228.044 li
135.119 228.254 li
134.899 228.454 li
134.669 228.654 li
134.449 228.844 li
134.219 229.044 li
133.999 229.244 li
133.769 229.434 li
133.539 229.624 li
133.309 229.813 li
133.069 230.014 li
132.839 230.194 li
132.609 230.384 li
132.369 230.574 li
132.129 230.754 li
131.889 230.944 li
131.649 231.124 li
.283635 .223056 .228244 3.0518e-05 cmyk
@
131.649 231.124 mo
131.409 231.304 li
131.169 231.484 li
130.929 231.664 li
130.679 231.844 li
130.439 232.024 li
130.189 232.194 li
129.939 232.364 li
129.689 232.544 li
129.439 232.714 li
129.189 232.884 li
128.939 233.044 li
128.689 233.214 li
128.429 233.384 li
128.169 233.544 li
127.919 233.704 li
127.659 233.864 li
127.399 234.024 li
127.139 234.184 li
126.879 234.344 li
126.619 234.494 li
126.349 234.654 li
126.089 234.804 li
125.829 234.954 li
125.559 235.104 li
125.289 235.254 li
125.019 235.394 li
124.759 235.544 li
124.489 235.684 li
124.209 235.824 li
123.939 235.974 li
123.669 236.104 li
123.399 236.244 li
123.119 236.384 li
122.849 236.514 li
122.569 236.654 li
122.289 236.784 li
122.009 236.914 li
.320256 .254887 .260075 3.0518e-05 cmyk
@
122.009 236.914 mo
121.739 237.044 li
121.459 237.164 li
121.179 237.294 li
120.889 237.414 li
120.609 237.544 li
120.329 237.664 li
120.039 237.784 li
119.759 237.894 li
119.469 238.014 li
119.189 238.134 li
118.899 238.244 li
118.609 238.354 li
118.329 238.464 li
118.039 238.574 li
117.749 238.684 li
117.459 238.784 li
117.159 238.884 li
116.869 238.994 li
116.579 239.094 li
116.289 239.194 li
115.989 239.284 li
115.699 239.384 li
115.399 239.474 li
115.109 239.574 li
114.809 239.664 li
114.519 239.754 li
114.219 239.834 li
113.919 239.924 li
113.619 240.004 li
113.319 240.094 li
113.019 240.174 li
112.719 240.254 li
112.419 240.324 li
112.119 240.404 li
111.819 240.474 li
111.519 240.554 li
111.209 240.624 li
110.909 240.694 li
.358618 .288426 .293584 3.0518e-05 cmyk
@
110.909 240.694 mo
110.609 240.764 li
110.299 240.824 li
109.999 240.894 li
109.689 240.954 li
109.389 241.014 li
109.079 241.074 li
108.779 241.134 li
108.469 241.184 li
108.159 241.244 li
107.859 241.294 li
107.549 241.344 li
107.239 241.394 li
106.929 241.444 li
106.619 241.494 li
106.309 241.534 li
106.009 241.574 li
105.699 241.614 li
105.389 241.654 li
105.079 241.694 li
104.769 241.734 li
104.459 241.764 li
104.149 241.794 li
103.829 241.834 li
103.519 241.854 li
103.209 241.884 li
102.899 241.914 li
102.589 241.934 li
102.279 241.954 li
101.969 241.984 li
101.649 241.994 li
101.339 242.014 li
101.029 242.034 li
100.719 242.044 li
100.409 242.054 li
100.089 242.063 li
99.7793 242.074 li
99.4692 242.084 li
.398016 .323583 .328191 .0037232 cmyk
@
99.4692 242.084 mo
99.1592 242.084 li
98.8389 242.094 li
98.5293 242.094 li
98.2192 242.094 li
97.8989 242.094 li
97.5889 242.094 li
97.2793 242.084 li
96.9692 242.074 li
96.6489 242.074 li
96.3389 242.054 li
96.0293 242.044 li
95.7192 242.034 li
95.4092 242.014 li
95.0889 242.004 li
94.7793 241.984 li
94.4692 241.964 li
94.1592 241.944 li
93.8491 241.914 li
93.5293 241.894 li
93.2192 241.864 li
92.9092 241.834 li
92.5991 241.804 li
92.2891 241.774 li
91.979 241.734 li
91.6689 241.704 li
91.3589 241.664 li
91.0488 241.624 li
90.7393 241.584 li
90.4292 241.544 li
90.1191 241.504 li
89.8091 241.454 li
89.5093 241.404 li
89.1992 241.354 li
88.8892 241.304 li
88.5791 241.254 li
88.2793 241.204 li
87.9692 241.144 li
87.6592 241.084 li
.43061 .351507 .356756 .0107729 cmyk
@
87.6592 241.084 mo
87.3589 241.024 li
87.0488 240.964 li
86.749 240.904 li
86.439 240.844 li
86.1392 240.774 li
85.8389 240.704 li
85.5293 240.634 li
85.229 240.563 li
84.9292 240.494 li
84.6289 240.424 li
84.3188 240.344 li
84.019 240.264 li
83.7192 240.184 li
83.4189 240.104 li
83.1191 240.024 li
82.8188 239.944 li
82.5293 239.854 li
82.229 239.764 li
81.9292 239.674 li
81.6392 239.584 li
81.3389 239.494 li
81.0391 239.404 li
80.749 239.304 li
80.459 239.214 li
80.1592 239.114 li
79.8691 239.014 li
79.5791 238.904 li
79.2891 238.804 li
78.999 238.704 li
78.709 238.594 li
78.4189 238.484 li
78.1289 238.374 li
77.8389 238.264 li
77.5488 238.154 li
77.269 238.034 li
76.979 237.924 li
76.6992 237.804 li
.4589 .379034 .383612 .0242618 cmyk
@
76.6992 237.804 mo
76.4092 237.684 li
76.1289 237.563 li
75.8491 237.444 li
75.5688 237.313 li
75.2793 237.194 li
75.0093 237.063 li
74.729 236.934 li
74.4492 236.804 li
74.1689 236.674 li
73.8892 236.544 li
73.6191 236.414 li
73.3389 236.274 li
73.0688 236.134 li
72.7988 235.994 li
72.519 235.854 li
72.249 235.714 li
71.979 235.574 li
71.709 235.424 li
71.4492 235.284 li
71.1792 235.134 li
70.9092 234.984 li
70.6489 234.834 li
70.3789 234.684 li
70.1191 234.524 li
69.8589 234.374 li
69.5991 234.214 li
69.3389 234.054 li
69.0791 233.894 li
68.8188 233.734 li
68.5591 233.574 li
68.3091 233.414 li
68.0488 233.244 li
67.7988 233.084 li
67.5391 232.914 li
67.2891 232.744 li
67.0391 232.574 li
66.7891 232.404 li
66.5391 232.224 li
.490547 .407019 .408484 .0473335 cmyk
@
66.5391 232.224 mo
66.2988 232.054 li
66.0488 231.874 li
65.8091 231.704 li
65.5591 231.524 li
65.3188 231.344 li
65.0791 231.164 li
64.8389 230.974 li
64.5991 230.794 li
64.3589 230.614 li
64.1289 230.424 li
63.8892 230.234 li
63.6592 230.044 li
63.4189 229.854 li
63.189 229.664 li
62.959 229.474 li
62.729 229.274 li
62.5093 229.084 li
62.2793 228.884 li
62.0591 228.684 li
61.8291 228.494 li
61.6089 228.294 li
61.3892 228.084 li
61.1689 227.884 li
60.9492 227.684 li
60.729 227.474 li
60.519 227.274 li
60.2988 227.063 li
60.0889 226.854 li
59.8789 226.644 li
59.6689 226.434 li
59.459 226.224 li
59.249 226.004 li
59.0488 225.794 li
58.8389 225.584 li
58.6392 225.364 li
58.439 225.144 li
58.2393 224.924 li
.516472 .431495 .431495 .0754711 cmyk
@
58.2393 224.924 mo
58.0391 224.704 li
57.8389 224.484 li
57.6392 224.264 li
57.4492 224.044 li
57.2593 223.813 li
57.0591 223.594 li
56.8691 223.364 li
56.689 223.134 li
56.499 222.914 li
56.3091 222.684 li
56.1289 222.454 li
55.9492 222.224 li
55.769 221.984 li
55.5889 221.754 li
55.4092 221.524 li
55.229 221.284 li
55.0591 221.044 li
54.8789 220.813 li
54.709 220.574 li
54.5391 220.334 li
54.3691 220.094 li
54.209 219.854 li
54.0391 219.614 li
53.8789 219.364 li
53.7192 219.124 li
53.5591 218.884 li
53.3989 218.634 li
53.2393 218.394 li
53.0791 218.144 li
52.9292 217.894 li
52.7793 217.644 li
52.6289 217.394 li
52.479 217.144 li
52.3291 216.894 li
52.1792 216.644 li
52.0391 216.394 li
51.8989 216.134 li
.542718 .457679 .454627 .107088 cmyk
@
51.8989 216.134 mo
51.7593 215.884 li
51.6191 215.624 li
51.479 215.374 li
51.3389 215.114 li
51.209 214.854 li
51.0791 214.604 li
50.9492 214.344 li
50.8188 214.084 li
50.689 213.824 li
50.5591 213.563 li
50.439 213.304 li
50.3188 213.034 li
50.1992 212.774 li
50.0791 212.514 li
49.959 212.244 li
49.8491 211.984 li
49.729 211.714 li
49.6191 211.454 li
49.5093 211.184 li
49.3989 210.914 li
49.2988 210.644 li
49.189 210.384 li
49.0889 210.114 li
48.9893 209.844 li
48.8892 209.574 li
48.7891 209.304 li
48.6992 209.034 li
48.5991 208.754 li
48.5093 208.484 li
48.4189 208.214 li
48.3291 207.944 li
48.2393 207.664 li
48.1592 207.394 li
48.0791 207.114 li
47.9893 206.844 li
47.9092 206.563 li
47.8389 206.294 li
47.7593 206.014 li
.568017 .483009 .477821 .146273 cmyk
@
47.7593 206.014 mo
47.689 205.734 li
47.6089 205.464 li
47.5391 205.184 li
47.4692 204.904 li
47.4092 204.624 li
47.3389 204.344 li
47.2793 204.074 li
47.2192 203.794 li
47.1592 203.514 li
47.0991 203.234 li
47.0488 202.954 li
46.9893 202.674 li
46.939 202.394 li
46.8892 202.104 li
46.8389 201.824 li
46.7891 201.544 li
46.749 201.264 li
46.709 200.984 li
46.6689 200.694 li
46.6289 200.414 li
46.5889 200.134 li
46.5488 199.854 li
46.519 199.563 li
46.4893 199.284 li
46.459 199.004 li
46.4292 198.714 li
46.4092 198.434 li
46.3789 198.144 li
46.3589 197.864 li
46.3389 197.584 li
46.3188 197.294 li
46.2988 197.014 li
46.2891 196.724 li
46.2793 196.444 li
46.2593 196.154 li
46.2593 195.874 li
46.249 195.584 li
.591119 .50695 .50222 .190311 cmyk
@
46.249 195.584 mo
46.2393 195.304 li
46.2393 195.014 li
46.2393 194.734 li
46.2393 194.444 li
46.2393 194.164 li
46.2393 193.884 li
46.249 193.594 li
46.2593 193.313 li
46.269 193.024 li
46.2793 192.744 li
46.2891 192.454 li
46.3091 192.174 li
46.3188 191.884 li
46.3389 191.604 li
46.3589 191.313 li
46.3892 191.034 li
46.4092 190.754 li
46.439 190.464 li
46.4692 190.184 li
46.499 189.904 li
46.5293 189.614 li
46.5591 189.334 li
46.5991 189.054 li
46.6289 188.764 li
46.6689 188.484 li
46.7192 188.204 li
46.7593 187.924 li
46.7988 187.634 li
46.8491 187.354 li
46.8989 187.074 li
46.9492 186.794 li
46.999 186.514 li
47.0591 186.234 li
47.1089 185.954 li
47.1689 185.674 li
47.229 185.394 li
47.2891 185.114 li
47.3589 184.834 li
.613397 .529625 .523186 .2374 cmyk
@
47.3589 184.834 mo
47.4189 184.554 li
47.4893 184.274 li
47.5591 184.004 li
47.6289 183.724 li
47.6992 183.444 li
47.7793 183.174 li
47.8491 182.894 li
47.9292 182.614 li
48.0093 182.344 li
48.0889 182.063 li
48.1792 181.794 li
48.2593 181.514 li
48.3491 181.244 li
48.439 180.974 li
48.5293 180.704 li
48.6191 180.424 li
48.709 180.154 li
48.8091 179.884 li
48.9092 179.614 li
49.0093 179.344 li
49.1089 179.074 li
49.209 178.804 li
49.3188 178.534 li
49.4292 178.274 li
49.5293 178.004 li
49.6392 177.734 li
49.7593 177.474 li
49.8691 177.204 li
49.9893 176.944 li
50.0991 176.674 li
50.2192 176.414 li
50.3389 176.154 li
50.4692 175.884 li
50.5889 175.624 li
50.7192 175.364 li
50.8389 175.104 li
50.9692 174.844 li
.631617 .551904 .543175 .289769 cmyk
@
50.9692 174.844 mo
51.0991 174.584 li
51.2393 174.334 li
51.3691 174.074 li
51.5093 173.813 li
51.6392 173.563 li
51.7793 173.304 li
51.9292 173.054 li
52.0688 172.794 li
52.209 172.544 li
52.3589 172.294 li
52.5093 172.044 li
52.6592 171.794 li
52.8091 171.544 li
52.959 171.294 li
53.1089 171.044 li
53.269 170.804 li
53.4292 170.554 li
53.5889 170.313 li
53.749 170.063 li
53.9092 169.824 li
54.0791 169.584 li
54.2393 169.334 li
54.4092 169.094 li
54.5791 168.854 li
54.749 168.624 li
54.9189 168.384 li
55.0889 168.144 li
55.269 167.904 li
55.439 167.674 li
55.6191 167.444 li
55.7988 167.204 li
55.979 166.974 li
56.1689 166.744 li
56.3491 166.514 li
56.5391 166.284 li
56.7192 166.054 li
56.9092 165.834 li
57.0991 165.604 li
.648371 .571221 .563867 .345068 cmyk
@
57.0991 165.604 mo
57.2988 165.374 li
57.4893 165.154 li
57.6792 164.934 li
57.8789 164.714 li
58.0791 164.494 li
58.2793 164.274 li
58.479 164.054 li
58.6792 163.834 li
58.8789 163.614 li
59.0889 163.404 li
59.2891 163.184 li
59.499 162.974 li
59.709 162.764 li
59.9189 162.554 li
60.1289 162.344 li
60.3491 162.134 li
60.5591 161.924 li
60.7793 161.724 li
60.9893 161.514 li
61.209 161.313 li
61.4292 161.114 li
61.6489 160.914 li
61.8789 160.714 li
62.0991 160.514 li
62.3291 160.313 li
62.5488 160.114 li
62.7793 159.924 li
63.0093 159.724 li
63.2393 159.534 li
63.4692 159.344 li
63.6992 159.154 li
63.939 158.964 li
64.1689 158.784 li
64.4092 158.594 li
64.6489 158.404 li
64.8892 158.224 li
65.1289 158.044 li
.662654 .592065 .578393 .40354 cmyk
@
65.1289 158.044 mo
65.3691 157.864 li
65.6089 157.684 li
65.8589 157.504 li
66.0991 157.324 li
66.3491 157.154 li
66.5889 156.974 li
66.8389 156.804 li
67.0889 156.634 li
67.3389 156.464 li
67.5991 156.294 li
67.8491 156.124 li
68.0991 155.964 li
68.3589 155.794 li
68.6089 155.634 li
68.8691 155.474 li
69.1289 155.313 li
69.3892 155.154 li
69.6489 154.994 li
69.9092 154.834 li
70.1689 154.684 li
70.439 154.534 li
70.6992 154.374 li
70.9692 154.224 li
71.229 154.074 li
71.499 153.934 li
71.769 153.784 li
72.0391 153.644 li
72.3091 153.494 li
72.5791 153.354 li
72.8491 153.214 li
73.1289 153.074 li
73.3989 152.944 li
73.6689 152.804 li
73.9492 152.674 li
74.229 152.534 li
74.499 152.404 li
74.7793 152.274 li
75.0591 152.144 li
.675593 .606348 .595972 .467292 cmyk
@
75.0591 152.144 mo
75.3389 152.024 li
75.6191 151.894 li
75.8989 151.774 li
76.189 151.654 li
76.4692 151.534 li
76.749 151.414 li
77.0391 151.294 li
77.3291 151.184 li
77.6089 151.063 li
77.8989 150.954 li
78.189 150.844 li
78.479 150.734 li
78.769 150.624 li
79.0591 150.514 li
79.3491 150.414 li
79.6392 150.313 li
79.9292 150.214 li
80.2192 150.114 li
80.519 150.014 li
80.8091 149.914 li
81.0991 149.824 li
81.3989 149.724 li
81.6992 149.634 li
81.9893 149.544 li
82.2891 149.454 li
82.5889 149.364 li
82.8892 149.284 li
83.1792 149.204 li
83.479 149.114 li
83.7793 149.034 li
84.0791 148.954 li
84.3892 148.884 li
84.689 148.804 li
84.9893 148.734 li
85.2891 148.664 li
85.5889 148.594 li
85.8989 148.524 li
.688991 .623255 .613916 .53872 cmyk
@
85.8989 148.524 mo
86.1992 148.454 li
86.5093 148.384 li
86.8091 148.324 li
87.1089 148.264 li
87.4189 148.204 li
87.729 148.144 li
88.0293 148.084 li
88.3389 148.034 li
88.6489 147.974 li
88.9492 147.924 li
89.2593 147.874 li
89.5688 147.824 li
89.8789 147.774 li
90.189 147.734 li
90.499 147.684 li
90.7988 147.644 li
91.1089 147.604 li
91.4189 147.563 li
91.729 147.534 li
92.0391 147.494 li
92.3491 147.464 li
92.6592 147.434 li
92.979 147.404 li
93.2891 147.374 li
93.5991 147.344 li
93.9092 147.313 li
94.2192 147.294 li
94.5293 147.274 li
94.8389 147.254 li
95.1592 147.234 li
95.4692 147.214 li
95.7793 147.204 li
96.0889 147.194 li
96.4092 147.184 li
96.7192 147.174 li
97.0293 147.164 li
97.3389 147.154 li
97.6592 147.154 li
.698085 .636164 .626184 .610101 cmyk
@
97.6592 147.154 mo
97.9692 147.144 li
98.2793 147.144 li
98.5889 147.144 li
98.9092 147.154 li
99.2192 147.154 li
99.5293 147.164 li
99.8389 147.164 li
100.159 147.174 li
100.469 147.184 li
100.779 147.194 li
101.089 147.214 li
101.409 147.224 li
101.719 147.244 li
102.029 147.264 li
102.339 147.284 li
102.649 147.313 li
102.959 147.334 li
103.279 147.364 li
103.589 147.384 li
103.899 147.414 li
104.209 147.444 li
104.519 147.484 li
104.829 147.514 li
105.139 147.554 li
105.449 147.594 li
105.759 147.634 li
106.069 147.674 li
106.379 147.714 li
106.689 147.764 li
106.989 147.804 li
107.299 147.854 li
107.609 147.904 li
107.919 147.954 li
108.219 148.004 li
108.529 148.063 li
108.839 148.124 li
109.139 148.174 li
.708309 .647578 .63769 .677394 cmyk
@
109.139 148.174 mo
109.449 148.234 li
109.749 148.304 li
110.059 148.364 li
110.359 148.424 li
110.669 148.494 li
110.969 148.563 li
111.269 148.634 li
111.579 148.704 li
111.879 148.774 li
112.179 148.854 li
112.479 148.924 li
112.779 149.004 li
113.079 149.084 li
113.379 149.164 li
113.679 149.254 li
113.979 149.334 li
114.279 149.424 li
114.579 149.514 li
114.869 149.594 li
115.169 149.694 li
115.459 149.784 li
115.759 149.874 li
116.049 149.974 li
116.349 150.074 li
116.639 150.174 li
116.929 150.274 li
117.219 150.374 li
117.519 150.474 li
117.809 150.584 li
118.099 150.694 li
118.379 150.794 li
118.669 150.914 li
118.959 151.024 li
119.249 151.134 li
119.529 151.254 li
119.819 151.364 li
120.099 151.484 li
120.389 151.604 li
.718868 .658686 .646998 .739681 cmyk
@
120.389 151.604 mo
120.669 151.724 li
120.949 151.844 li
121.229 151.974 li
121.509 152.094 li
121.789 152.224 li
122.069 152.354 li
122.349 152.484 li
122.629 152.614 li
122.899 152.754 li
123.179 152.884 li
123.449 153.024 li
123.729 153.164 li
123.999 153.304 li
124.269 153.444 li
124.539 153.584 li
124.809 153.724 li
125.079 153.874 li
125.349 154.024 li
125.609 154.164 li
125.879 154.313 li
126.139 154.474 li
126.409 154.624 li
126.669 154.774 li
126.929 154.934 li
127.189 155.084 li
127.449 155.244 li
127.709 155.404 li
127.969 155.563 li
128.229 155.734 li
128.479 155.894 li
128.739 156.063 li
128.989 156.224 li
129.239 156.394 li
129.489 156.563 li
129.739 156.734 li
129.989 156.904 li
130.239 157.084 li
.72726 .667658 .65304 .791501 cmyk
@
130.239 157.084 mo
130.489 157.254 li
130.729 157.434 li
130.979 157.614 li
131.219 157.794 li
131.459 157.974 li
131.699 158.154 li
131.939 158.334 li
132.179 158.524 li
132.419 158.704 li
132.649 158.894 li
132.889 159.084 li
133.119 159.274 li
133.349 159.464 li
133.579 159.654 li
133.809 159.844 li
134.039 160.044 li
134.269 160.234 li
134.499 160.434 li
134.719 160.634 li
134.939 160.834 li
135.169 161.034 li
135.389 161.234 li
135.599 161.434 li
135.819 161.644 li
136.039 161.844 li
136.249 162.054 li
136.469 162.264 li
136.679 162.474 li
136.889 162.684 li
137.099 162.894 li
137.309 163.104 li
137.519 163.313 li
137.719 163.534 li
137.929 163.744 li
138.129 163.964 li
138.329 164.184 li
138.529 164.404 li
138.729 164.624 li
.734615 .672541 .658747 .831296 cmyk
@
138.729 164.624 mo
138.919 164.844 li
139.119 165.063 li
139.309 165.294 li
139.509 165.514 li
139.699 165.744 li
139.889 165.964 li
140.069 166.194 li
140.259 166.424 li
140.449 166.654 li
140.629 166.884 li
140.809 167.114 li
140.989 167.344 li
141.169 167.584 li
141.349 167.813 li
141.519 168.054 li
141.699 168.284 li
141.869 168.524 li
142.039 168.764 li
142.209 169.004 li
142.379 169.244 li
142.539 169.484 li
142.709 169.724 li
142.869 169.974 li
143.029 170.214 li
143.189 170.454 li
143.349 170.704 li
143.509 170.954 li
143.659 171.194 li
143.819 171.444 li
143.969 171.694 li
144.119 171.944 li
144.269 172.194 li
144.409 172.444 li
144.559 172.694 li
144.699 172.954 li
144.849 173.204 li
144.989 173.464 li
.742702 .676081 .66482 .86743 cmyk
@
144.989 173.464 mo
145.119 173.714 li
145.259 173.974 li
145.399 174.224 li
145.529 174.484 li
145.66 174.744 li
145.789 175.004 li
145.919 175.264 li
146.048 175.524 li
146.169 175.784 li
146.289 176.044 li
146.419 176.313 li
146.539 176.574 li
146.649 176.834 li
146.769 177.104 li
146.878 177.364 li
147 177.634 li
147.109 177.894 li
147.219 178.164 li
147.319 178.434 li
147.429 178.704 li
147.529 178.964 li
147.639 179.234 li
147.74 179.504 li
147.839 179.774 li
147.929 180.044 li
148.029 180.324 li
148.119 180.594 li
148.208 180.864 li
148.298 181.134 li
148.389 181.414 li
148.479 181.684 li
148.559 181.954 li
148.639 182.234 li
148.719 182.504 li
148.798 182.784 li
148.878 183.063 li
148.949 183.334 li
.75021 .679683 .670222 .90164 cmyk
@
2 lw
32.3389 45.874 mo
32.459 45.6338 li
32.5688 45.3838 li
32.689 45.1436 li
32.7988 44.9038 li
32.9189 44.6538 li
33.0391 44.4136 li
33.1489 44.1738 li
33.269 43.9336 li
33.3789 43.6938 li
33.499 43.4536 li
33.6089 43.2139 li
33.729 42.9736 li
33.8389 42.7437 li
33.959 42.5039 li
34.0688 42.2739 li
34.189 42.0337 li
34.2988 41.8037 li
34.4189 41.5635 li
34.5391 41.334 li
34.6489 41.1035 li
34.769 40.874 li
34.8789 40.6436 li
34.999 40.4136 li
35.1089 40.1836 li
35.229 39.9639 li
35.3389 39.7339 li
35.459 39.5039 li
35.5688 39.2837 li
35.689 39.0635 li
35.7988 38.834 li
35.9189 38.6138 li
36.0391 38.3936 li
36.1489 38.1738 li
36.269 37.9536 li
36.3789 37.7339 li
36.499 37.5239 li
36.6089 37.3037 li
36.729 37.0938 li
36.8389 36.874 li
36.959 36.6636 li
37.0688 36.4536 li
37.189 36.2437 li
37.2988 36.0337 li
37.4189 35.8237 li
37.5391 35.6138 li
37.6489 35.4038 li
37.769 35.2036 li
37.8789 34.9937 li
37.999 34.7939 li
38.1089 34.584 li
38.229 34.3838 li
38.3389 34.1836 li
38.459 33.9839 li
38.5688 33.7837 li
38.689 33.584 li
38.8091 33.3936 li
38.9189 33.1938 li
39.0391 33.0039 li
39.1489 32.8135 li
39.269 32.6138 li
39.3789 32.4238 li
39.499 32.2339 li
39.6089 32.0439 li
39.729 31.8638 li
39.8389 31.6738 li
39.959 31.4937 li
40.0688 31.3037 li
40.189 31.124 li
40.3091 30.9438 li
40.4189 30.7637 li
40.5391 30.584 li
40.6489 30.4038 li
40.769 30.2236 li
40.8789 30.0537 li
40.999 29.874 li
41.1089 29.7036 li
41.229 29.5337 li
41.3389 29.3638 li
41.459 29.1938 li
41.5688 29.0239 li
41.689 28.8638 li
41.8091 28.6938 li
41.9189 28.5337 li
42.0391 28.3638 li
42.1489 28.2036 li
42.269 28.0439 li
42.3789 27.8838 li
42.499 27.7236 li
42.6089 27.5737 li
42.729 27.4136 li
42.8389 27.2637 li
42.959 27.1138 li
43.0791 26.9639 li
43.189 26.8135 li
43.3091 26.6636 li
43.4189 26.5137 li
43.5391 26.374 li
43.6489 26.2236 li
43.769 26.084 li
43.8789 25.9438 li
43.999 25.8037 li
44.1089 25.6636 li
44.229 25.5239 li
44.3389 25.3838 li
44.459 25.2539 li
44.5791 25.124 li
44.689 24.9839 li
44.8091 24.8535 li
44.9189 24.7236 li
45.0391 24.6035 li
45.1489 24.4736 li
45.269 24.3535 li
45.3789 24.2236 li
45.499 24.1035 li
45.6089 23.9839 li
45.729 23.8638 li
45.8389 23.7437 li
45.959 23.6338 li
46.0791 23.5137 li
46.189 23.4038 li
46.3091 23.2939 li
46.4189 23.1836 li
46.5391 23.0737 li
46.6489 22.9639 li
46.769 22.8638 li
46.8789 22.7539 li
46.999 22.6538 li
47.1089 22.5537 li
47.229 22.4536 li
47.3491 22.3535 li
47.459 22.2539 li
47.5791 22.1636 li
47.689 22.0635 li
47.8091 21.9736 li
47.9189 21.8838 li
48.0391 21.7939 li
48.1489 21.7036 li
48.269 21.624 li
48.3789 21.5337 li
48.499 21.4536 li
48.6089 21.374 li
48.729 21.2939 li
48.8491 21.2139 li
48.959 21.1338 li
49.0791 21.0635 li
49.189 20.9839 li
49.3091 20.9136 li
49.4189 20.8438 li
49.5391 20.7739 li
49.6489 20.7036 li
49.769 20.6436 li
49.8789 20.5737 li
49.999 20.5137 li
50.1089 20.4536 li
50.229 20.3936 li
50.3491 20.334 li
50.459 20.2739 li
50.5791 20.2236 li
50.689 20.1738 li
50.8091 20.1138 li
50.9189 20.0635 li
51.0391 20.0239 li
51.1489 19.9736 li
51.269 19.9238 li
51.3789 19.8838 li
51.499 19.8438 li
51.6089 19.8037 li
51.729 19.7637 li
51.8491 19.7236 li
51.959 19.6836 li
52.0791 19.6538 li
52.189 19.624 li
52.3091 19.5938 li
52.4189 19.5635 li
52.5391 19.5337 li
52.6489 19.5039 li
52.769 19.4839 li
52.8789 19.4536 li
52.999 19.4336 li
53.1191 19.4136 li
53.229 19.3936 li
53.3491 19.3838 li
53.459 19.3638 li
53.5791 19.3535 li
53.689 19.3438 li
53.8091 19.334 li
53.9189 19.3237 li
54.0391 19.3135 li
54.1489 19.3135 li
54.269 19.3037 li
54.3789 19.3037 li
54.499 19.3037 li
54.6191 19.3037 li
54.729 19.3037 li
54.8491 19.3135 li
54.959 19.3135 li
55.0791 19.3237 li
55.189 19.334 li
55.3091 19.3438 li
55.4189 19.3535 li
55.5391 19.374 li
55.6489 19.3838 li
55.769 19.4038 li
55.8789 19.4238 li
55.999 19.4438 li
56.1191 19.4639 li
56.229 19.4937 li
56.3491 19.5137 li
56.459 19.5439 li
56.5791 19.5737 li
56.689 19.6035 li
56.8091 19.6338 li
56.9189 19.6636 li
57.0391 19.7036 li
57.1489 19.7339 li
57.269 19.7739 li
57.3892 19.8135 li
57.499 19.8535 li
57.6191 19.9038 li
57.729 19.9438 li
57.8491 19.9937 li
57.959 20.0439 li
58.0791 20.084 li
58.189 20.1436 li
58.3091 20.1938 li
58.4189 20.2437 li
58.5391 20.3037 li
58.6489 20.3535 li
58.769 20.4136 li
58.8892 20.4736 li
58.999 20.5439 li
59.1191 20.6035 li
59.229 20.6636 li
59.3491 20.7339 li
59.459 20.8037 li
59.5791 20.874 li
59.689 20.9438 li
59.8091 21.0137 li
59.9189 21.0938 li
60.0391 21.1636 li
60.1489 21.2437 li
60.269 21.3237 li
60.3892 21.4038 li
60.499 21.4839 li
60.6191 21.5737 li
60.729 21.6538 li
60.8491 21.7437 li
60.959 21.834 li
61.0791 21.9238 li
61.189 22.0137 li
61.3091 22.1035 li
61.4189 22.2036 li
61.5391 22.2939 li
61.6592 22.3936 li
61.769 22.4937 li
61.8892 22.5938 li
61.999 22.6938 li
62.1191 22.7939 li
62.229 22.9038 li
62.3491 23.0039 li
62.459 23.1138 li
62.5791 23.2236 li
62.689 23.334 li
62.8091 23.4536 li
62.9189 23.5635 li
63.0391 23.6738 li
63.1592 23.7939 li
63.269 23.9136 li
63.3892 24.0337 li
63.499 24.1538 li
63.6191 24.2739 li
63.729 24.4038 li
63.8491 24.5239 li
63.959 24.6538 li
64.0791 24.7837 li
64.189 24.9136 li
64.3091 25.0439 li
64.4189 25.1738 li
64.5391 25.3037 li
64.6592 25.4438 li
64.769 25.5737 li
64.8892 25.7139 li
64.999 25.8535 li
65.1191 25.9937 li
65.229 26.1338 li
65.3491 26.2837 li
65.459 26.4238 li
65.5791 26.5737 li
65.689 26.7236 li
65.8091 26.874 li
65.9189 27.0239 li
66.0391 27.1738 li
66.1592 27.3237 li
66.269 27.4839 li
66.3892 27.6338 li
66.499 27.7939 li
66.6191 27.9536 li
66.729 28.1138 li
66.8491 28.2739 li
66.959 28.4336 li
67.0791 28.5938 li
67.189 28.7637 li
67.3091 28.9238 li
67.4292 29.0938 li
67.5391 29.2637 li
67.6592 29.4336 li
67.769 29.6035 li
67.8892 29.7739 li
67.999 29.9438 li
68.1191 30.124 li
68.229 30.3037 li
68.3491 30.4736 li
68.459 30.6538 li
68.5791 30.834 li
68.689 31.0137 li
68.8091 31.1938 li
68.9292 31.3838 li
69.0391 31.5635 li
69.1592 31.7539 li
69.269 31.9336 li
69.3892 32.124 li
69.499 32.3135 li
69.6191 32.5039 li
69.729 32.6938 li
69.8491 32.8838 li
69.959 33.084 li
70.0791 33.2739 li
70.189 33.4736 li
70.3091 33.6636 li
70.4292 33.8638 li
70.5391 34.0635 li
70.6592 34.2637 li
70.769 34.4639 li
70.8892 34.6636 li
70.999 34.874 li
71.1191 35.0737 li
71.229 35.2837 li
71.3491 35.4839 li
71.459 35.6938 li
71.5791 35.9038 li
71.6992 36.1138 li
71.8091 36.3237 li
71.9292 36.5337 li
72.0391 36.7437 li
72.1592 36.9639 li
72.269 37.1738 li
72.3892 37.3936 li
72.499 37.6035 li
72.6191 37.8237 li
72.729 38.0439 li
72.8491 38.2637 li
72.959 38.4839 li
73.0791 38.7036 li
73.1992 38.9238 li
73.3091 39.1538 li
73.4292 39.374 li
73.5391 39.6035 li
73.6592 39.8237 li
73.769 40.0537 li
73.8892 40.2739 li
73.999 40.5039 li
74.1191 40.7339 li
74.229 40.9639 li
74.3491 41.1938 li
74.459 41.4238 li
74.5791 41.6636 li
74.6992 41.8936 li
74.8091 42.124 li
74.9292 42.3638 li
75.0391 42.6035 li
75.1592 42.834 li
75.269 43.0737 li
75.3892 43.3135 li
75.499 43.5537 li
75.6191 43.7837 li
75.729 44.0337 li
75.8491 44.2739 li
75.9692 44.5137 li
76.0791 44.7539 li
76.1992 44.9937 li
76.3091 45.2437 li
76.4292 45.4839 li
76.5391 45.7339 li
76.6592 45.9736 li
76.769 46.2236 li
76.8892 46.4736 li
76.999 46.7139 li
77.1191 46.9639 li
77.229 47.2139 li
77.3491 47.4639 li
77.4692 47.7139 li
77.5791 47.9639 li
77.6992 48.2139 li
77.8091 48.4639 li
77.9292 48.7236 li
78.0391 48.9736 li
78.1592 49.2236 li
78.269 49.4839 li
78.3892 49.7339 li
78.499 49.9937 li
78.6191 50.2437 li
78.729 50.5039 li
78.8491 50.7637 li
78.9692 51.0137 li
79.0791 51.2739 li
79.1992 51.5337 li
79.3091 51.7939 li
79.4292 52.0537 li
79.5391 52.3135 li
79.6592 52.5737 li
79.769 52.834 li
79.8892 53.0938 li
79.999 53.3535 li
80.1191 53.6138 li
80.229 53.874 li
80.3491 54.1338 li
80.4692 54.4038 li
80.5791 54.6636 li
80.6992 54.9238 li
80.8091 55.1836 li
80.9292 55.4536 li
81.0391 55.7139 li
81.1592 55.9839 li
81.269 56.2437 li
81.3892 56.5137 li
81.499 56.7739 li
81.6191 57.0439 li
81.7393 57.3037 li
81.8491 57.5737 li
81.9692 57.8438 li
82.0791 58.1035 li
82.1992 58.374 li
82.3091 58.6436 li
82.4292 58.9038 li
82.5391 59.1738 li
82.6592 59.4438 li
82.769 59.7139 li
82.8892 59.9839 li
82.999 60.2437 li
83.1191 60.5137 li
83.2393 60.7837 li
83.3491 61.0537 li
83.4692 61.3237 li
83.5791 61.5938 li
83.6992 61.8638 li
83.8091 62.124 li
83.9292 62.3936 li
84.0391 62.6636 li
84.1592 62.9336 li
84.269 63.2036 li
84.3892 63.4736 li
84.499 63.7437 li
84.6191 64.0137 li
84.7393 64.2837 li
84.8491 64.5537 li
84.9692 64.8237 li
85.0791 65.084 li
85.1992 65.3535 li
85.3091 65.624 li
85.4292 65.8936 li
85.5391 66.1636 li
85.6592 66.4336 li
85.769 66.7036 li
85.8892 66.9736 li
86.0093 67.2437 li
86.1191 67.5039 li
86.2393 67.7739 li
86.3491 68.0439 li
86.4692 68.3135 li
86.5791 68.584 li
86.6992 68.8535 li
86.8091 69.1138 li
86.9292 69.3838 li
87.0391 69.6538 li
87.1592 69.9136 li
87.269 70.1836 li
87.3892 70.4536 li
87.5093 70.7139 li
87.6191 70.9839 li
87.7393 71.2539 li
87.8491 71.5137 li
87.9692 71.7837 li
88.0791 72.0439 li
88.1992 72.3135 li
88.3091 72.5737 li
88.4292 72.8438 li
88.5391 73.1035 li
88.6592 73.3638 li
88.769 73.6338 li
88.8892 73.8936 li
89.0093 74.1538 li
89.1191 74.4238 li
89.2393 74.6836 li
89.3491 74.9438 li
89.4692 75.2036 li
89.5791 75.4639 li
89.6992 75.7236 li
89.8091 75.9839 li
89.9292 76.2437 li
90.0391 76.5039 li
90.1592 76.7637 li
90.2793 77.0239 li
90.3892 77.2739 li
90.5093 77.5337 li
90.6191 77.7939 li
90.7393 78.0439 li
90.8491 78.3037 li
90.9692 78.5635 li
91.0791 78.8135 li
91.1992 79.0635 li
91.3091 79.3237 li
91.4292 79.5737 li
91.5391 79.8237 li
91.6592 80.084 li
91.7793 80.334 li
91.8892 80.584 li
92.0093 80.834 li
92.1191 81.084 li
92.2393 81.334 li
92.3491 81.584 li
92.4692 81.8237 li
92.5791 82.0737 li
92.6992 82.3237 li
92.8091 82.5635 li
92.9292 82.8135 li
93.0391 83.0537 li
93.1592 83.3037 li
93.2793 83.5439 li
93.3892 83.7837 li
93.5093 84.0239 li
93.6191 84.2739 li
93.7393 84.5137 li
93.8491 84.7539 li
93.9692 84.9839 li
94.0791 85.2236 li
94.1992 85.4639 li
94.3091 85.7036 li
94.4292 85.9336 li
94.5391 86.1738 li
94.6592 86.4038 li
94.7793 86.6338 li
94.8892 86.874 li
95.0093 87.1035 li
95.1191 87.334 li
95.2393 87.5635 li
95.3491 87.7939 li
95.4692 88.0239 li
95.5791 88.2539 li
95.6992 88.4736 li
95.8091 88.7036 li
95.9292 88.9238 li
96.0488 89.1538 li
96.1592 89.374 li
96.2793 89.5938 li
96.3892 89.8135 li
96.5093 90.0337 li
96.6191 90.2539 li
96.7393 90.4736 li
96.8491 90.6938 li
96.9692 90.9136 li
97.0791 91.124 li
97.1992 91.3438 li
97.3091 91.5537 li
97.4292 91.7637 li
97.5488 91.9839 li
97.6592 92.1938 li
97.7793 92.4038 li
97.8892 92.6035 li
98.0093 92.8135 li
98.1191 93.0239 li
98.2393 93.2236 li
98.3491 93.4336 li
98.4692 93.6338 li
98.5791 93.8438 li
98.6992 94.0439 li
98.8091 94.2437 li
98.9292 94.4438 li
99.0488 94.6338 li
99.1592 94.834 li
99.2793 95.0337 li
99.3892 95.2236 li
99.5093 95.4238 li
99.6191 95.6138 li
99.7393 95.8037 li
99.8491 95.9937 li
99.9692 96.1836 li
100.079 96.374 li
100.199 96.5635 li
100.319 96.7437 li
100.429 96.9336 li
100.549 97.1138 li
100.659 97.2939 li
100.779 97.4736 li
100.889 97.6538 li
101.009 97.834 li
101.119 98.0137 li
101.239 98.1836 li
101.349 98.3638 li
101.469 98.5337 li
101.579 98.7139 li
101.699 98.8838 li
101.819 99.0537 li
101.929 99.2236 li
102.049 99.3838 li
102.159 99.5537 li
102.279 99.7139 li
102.389 99.8838 li
102.509 100.044 li
102.619 100.204 li
102.739 100.364 li
102.849 100.524 li
102.969 100.684 li
103.079 100.834 li
103.199 100.994 li
103.319 101.144 li
103.429 101.294 li
103.549 101.444 li
103.659 101.594 li
103.779 101.744 li
103.889 101.894 li
104.009 102.034 li
104.119 102.174 li
104.239 102.324 li
104.349 102.464 li
104.469 102.604 li
104.589 102.744 li
104.699 102.874 li
104.819 103.014 li
104.929 103.144 li
105.049 103.284 li
105.159 103.414 li
105.279 103.544 li
105.389 103.664 li
105.509 103.794 li
105.619 103.924 li
105.739 104.044 li
105.849 104.164 li
105.969 104.294 li
106.089 104.414 li
106.199 104.524 li
106.319 104.644 li
106.429 104.764 li
106.549 104.874 li
106.659 104.984 li
106.779 105.094 li
106.889 105.204 li
107.009 105.313 li
107.119 105.424 li
107.239 105.524 li
107.349 105.634 li
107.469 105.734 li
107.589 105.834 li
107.699 105.934 li
107.819 106.034 li
107.929 106.124 li
108.049 106.224 li
108.159 106.313 li
108.279 106.404 li
108.389 106.494 li
108.509 106.584 li
108.619 106.674 li
108.739 106.754 li
108.849 106.844 li
108.969 106.924 li
109.089 107.004 li
109.199 107.084 li
109.319 107.164 li
109.429 107.244 li
109.549 107.313 li
109.659 107.384 li
109.779 107.454 li
109.889 107.524 li
110.009 107.594 li
110.119 107.664 li
110.239 107.734 li
110.359 107.794 li
110.469 107.854 li
110.589 107.914 li
110.699 107.974 li
110.819 108.034 li
110.929 108.094 li
111.049 108.144 li
111.159 108.194 li
111.279 108.244 li
111.389 108.294 li
111.509 108.344 li
111.619 108.394 li
111.739 108.434 li
111.859 108.484 li
111.969 108.524 li
112.089 108.563 li
112.199 108.604 li
112.319 108.634 li
112.429 108.674 li
112.549 108.704 li
112.659 108.734 li
112.779 108.764 li
112.889 108.794 li
113.009 108.824 li
113.119 108.854 li
113.239 108.874 li
113.359 108.894 li
113.469 108.914 li
113.589 108.934 li
113.699 108.954 li
113.819 108.974 li
113.929 108.984 li
114.049 108.994 li
114.159 109.004 li
114.279 109.014 li
114.389 109.024 li
114.509 109.034 li
114.629 109.034 li
114.739 109.044 li
114.859 109.044 li
114.969 109.044 li
115.089 109.044 li
115.199 109.034 li
115.319 109.034 li
115.429 109.024 li
115.549 109.014 li
115.659 109.004 li
115.779 108.994 li
115.889 108.984 li
116.009 108.964 li
116.129 108.954 li
116.239 108.934 li
116.359 108.914 li
116.469 108.894 li
116.589 108.874 li
116.699 108.844 li
116.819 108.813 li
116.929 108.794 li
117.049 108.764 li
117.159 108.734 li
117.279 108.704 li
117.389 108.664 li
117.509 108.634 li
117.629 108.594 li
117.739 108.554 li
117.859 108.514 li
117.969 108.474 li
118.089 108.424 li
118.199 108.384 li
118.319 108.334 li
118.429 108.284 li
118.549 108.234 li
118.659 108.184 li
118.779 108.134 li
118.899 108.074 li
119.009 108.024 li
119.129 107.964 li
119.239 107.904 li
119.359 107.844 li
119.469 107.784 li
119.589 107.714 li
119.699 107.654 li
119.819 107.584 li
119.929 107.514 li
120.049 107.444 li
120.159 107.374 li
120.279 107.294 li
120.399 107.224 li
120.509 107.144 li
120.629 107.063 li
120.739 106.994 li
120.859 106.904 li
120.969 106.824 li
121.089 106.744 li
121.199 106.654 li
121.319 106.563 li
121.429 106.474 li
121.549 106.384 li
121.659 106.294 li
121.779 106.204 li
121.899 106.104 li
122.009 106.014 li
122.129 105.914 li
122.239 105.813 li
122.359 105.714 li
122.469 105.614 li
122.589 105.504 li
122.699 105.404 li
122.819 105.294 li
122.929 105.184 li
123.049 105.074 li
123.159 104.964 li
123.279 104.854 li
123.399 104.734 li
123.509 104.624 li
123.629 104.504 li
123.739 104.384 li
123.859 104.264 li
123.969 104.144 li
124.089 104.024 li
124.199 103.894 li
124.319 103.774 li
124.429 103.644 li
124.549 103.514 li
124.669 103.384 li
124.779 103.254 li
124.899 103.124 li
125.009 102.984 li
125.129 102.854 li
125.239 102.714 li
125.359 102.574 li
125.469 102.434 li
125.589 102.294 li
125.699 102.154 li
125.819 102.004 li
125.929 101.864 li
126.049 101.714 li
126.169 101.563 li
126.279 101.414 li
126.399 101.264 li
126.509 101.114 li
126.629 100.964 li
126.739 100.804 li
126.859 100.644 li
126.969 100.494 li
127.089 100.334 li
127.199 100.174 li
127.319 100.014 li
127.429 99.8438 li
127.549 99.6836 li
127.669 99.5239 li
127.779 99.3535 li
127.899 99.1836 li
128.009 99.0137 li
128.129 98.8438 li
128.239 98.6738 li
128.359 98.5039 li
128.469 98.3237 li
128.589 98.1538 li
128.699 97.9736 li
128.819 97.7939 li
128.939 97.624 li
129.049 97.4438 li
129.169 97.2539 li
129.279 97.0737 li
129.399 96.8936 li
129.509 96.7036 li
129.629 96.5239 li
129.739 96.334 li
129.859 96.1436 li
129.969 95.9536 li
130.089 95.7637 li
130.199 95.5737 li
130.319 95.3838 li
130.439 95.1836 li
130.549 94.9937 li
130.669 94.7939 li
130.779 94.5938 li
130.899 94.4038 li
131.009 94.2036 li
131.129 94.0039 li
131.239 93.7939 li
131.359 93.5938 li
131.469 93.3936 li
131.589 93.1836 li
131.699 92.9839 li
131.819 92.7739 li
131.939 92.5635 li
132.049 92.3535 li
132.169 92.1436 li
132.279 91.9336 li
132.399 91.7236 li
132.509 91.5137 li
132.629 91.2939 li
132.739 91.084 li
132.859 90.8638 li
132.969 90.6538 li
133.089 90.4336 li
133.209 90.2139 li
133.319 89.9937 li
133.439 89.7739 li
133.549 89.5537 li
133.669 89.3237 li
133.779 89.1035 li
133.899 88.8838 li
134.009 88.6538 li
134.129 88.4336 li
134.239 88.2036 li
134.359 87.9736 li
134.469 87.7437 li
134.589 87.5137 li
134.709 87.2837 li
134.819 87.0537 li
134.939 86.8237 li
135.049 86.5938 li
135.169 86.3535 li
135.279 86.124 li
135.399 85.8838 li
135.509 85.6538 li
135.629 85.4136 li
135.739 85.1738 li
135.859 84.9438 li
135.969 84.7036 li
136.089 84.4639 li
136.209 84.2236 li
136.319 83.9736 li
136.439 83.7339 li
136.549 83.4937 li
136.669 83.2539 li
136.779 83.0039 li
136.899 82.7637 li
137.009 82.5137 li
137.129 82.2739 li
137.239 82.0239 li
137.359 81.7739 li
137.469 81.5337 li
137.589 81.2837 li
137.709 81.0337 li
137.819 80.7837 li
137.939 80.5337 li
138.049 80.2837 li
138.169 80.0239 li
138.279 79.7739 li
138.399 79.5239 li
138.509 79.2739 li
138.629 79.0137 li
138.739 78.7637 li
138.859 78.5039 li
138.979 78.2539 li
139.089 77.9937 li
139.209 77.7437 li
139.319 77.4839 li
139.439 77.2236 li
139.549 76.9639 li
139.669 76.7139 li
139.779 76.4536 li
139.899 76.1938 li
140.009 75.9336 li
140.129 75.6738 li
140.239 75.4136 li
140.359 75.1538 li
140.479 74.8936 li
140.589 74.624 li
140.709 74.3638 li
140.819 74.1035 li
140.939 73.8438 li
141.049 73.5737 li
141.169 73.3135 li
141.279 73.0537 li
141.399 72.7837 li
141.509 72.5239 li
141.629 72.2539 li
141.739 71.9937 li
141.859 71.7236 li
141.979 71.4639 li
142.089 71.1938 li
142.209 70.9336 li
142.319 70.6636 li
142.439 70.3936 li
142.549 70.1338 li
142.669 69.8638 li
142.779 69.5938 li
142.899 69.334 li
143.009 69.0635 li
143.129 68.7939 li
143.249 68.5239 li
143.359 68.2539 li
143.479 67.9937 li
143.589 67.7236 li
143.709 67.4536 li
143.819 67.1836 li
143.939 66.9136 li
144.049 66.6436 li
144.169 66.374 li
144.279 66.1138 li
144.399 65.8438 li
144.509 65.5737 li
144.629 65.3037 li
144.749 65.0337 li
144.859 64.7637 li
144.979 64.4937 li
145.089 64.2236 li
145.208 63.9536 li
145.319 63.6836 li
145.439 63.4136 li
145.548 63.1538 li
145.669 62.8838 li
145.779 62.6138 li
145.899 62.3438 li
146.009 62.0737 li
146.128 61.8037 li
146.25 61.5337 li
146.359 61.2637 li
146.479 60.9937 li
146.589 60.7339 li
146.708 60.4639 li
146.819 60.1938 li
146.939 59.9238 li
147.048 59.6538 li
147.169 59.3936 li
147.279 59.124 li
147.399 58.8535 li
147.519 58.584 li
147.628 58.3237 li
147.75 58.0537 li
147.859 57.7837 li
147.979 57.5239 li
148.089 57.2539 li
148.208 56.9839 li
148.319 56.7236 li
148.439 56.4536 li
148.548 56.1938 li
148.669 55.9238 li
148.779 55.6636 li
148.899 55.4038 li
149.019 55.1338 li
149.128 54.874 li
149.25 54.6035 li
149.359 54.3438 li
149.479 54.084 li
149.589 53.8237 li
149.708 53.5635 li
149.819 53.2939 li
149.939 53.0337 li
150.048 52.7739 li
150.169 52.5137 li
150.279 52.2539 li
150.399 51.9937 li
150.519 51.7339 li
150.628 51.4839 li
150.75 51.2236 li
150.859 50.9639 li
150.979 50.7036 li
151.089 50.4536 li
151.208 50.1938 li
151.319 49.9438 li
151.439 49.6836 li
151.548 49.4336 li
151.669 49.1738 li
151.779 48.9238 li
151.899 48.6738 li
152.019 48.4136 li
152.128 48.1636 li
152.25 47.9136 li
152.359 47.6636 li
152.479 47.4136 li
152.589 47.1636 li
152.708 46.9136 li
152.819 46.6636 li
152.939 46.4238 li
153.048 46.1738 li
153.169 45.9238 li
153.289 45.6836 li
153.399 45.4336 li
153.519 45.1938 li
153.628 44.9438 li
153.75 44.7036 li
153.859 44.4639 li
153.979 44.2236 li
154.089 43.9839 li
154.208 43.7437 li
154.319 43.5039 li
154.439 43.2637 li
154.548 43.0239 li
154.669 42.7837 li
154.789 42.5537 li
154.899 42.3135 li
155.019 42.084 li
155.128 41.8438 li
155.25 41.6138 li
155.359 41.3838 li
155.479 41.1538 li
155.589 40.9238 li
155.708 40.6938 li
155.819 40.4639 li
155.939 40.2339 li
156.048 40.0039 li
156.169 39.7739 li
156.289 39.5537 li
156.399 39.3237 li
156.519 39.1035 li
156.628 38.8838 li
156.75 38.6636 li
156.859 38.4438 li
156.979 38.2236 li
157.089 38.0039 li
157.208 37.7837 li
157.319 37.5635 li
157.439 37.3438 li
157.559 37.1338 li
157.669 36.9136 li
157.789 36.7036 li
157.899 36.4937 li
158.019 36.2837 li
158.128 36.0737 li
158.25 35.8638 li
158.359 35.6538 li
158.479 35.4438 li
158.589 35.2437 li
158.708 35.0337 li
158.819 34.834 li
158.939 34.624 li
159.059 34.4238 li
159.169 34.2236 li
159.289 34.0239 li
159.399 33.8237 li
159.519 33.624 li
159.628 33.4336 li
159.75 33.2339 li
159.859 33.0439 li
159.979 32.8438 li
160.089 32.6538 li
160.208 32.4639 li
160.319 32.2739 li
160.439 32.084 li
160.559 31.8936 li
160.669 31.7139 li
160.789 31.5239 li
160.899 31.3438 li
161.019 31.1636 li
161.128 30.9736 li
161.25 30.7939 li
161.359 30.6138 li
161.479 30.4438 li
161.589 30.2637 li
161.708 30.084 li
161.83 29.9136 li
161.939 29.7437 li
162.059 29.5635 li
162.169 29.3936 li
162.289 29.2236 li
162.399 29.0635 li
162.519 28.8936 li
162.628 28.7236 li
162.75 28.5635 li
162.859 28.4038 li
162.979 28.2339 li
163.089 28.0737 li
163.208 27.9136 li
163.33 27.7637 li
163.439 27.6035 li
163.559 27.4438 li
163.669 27.2939 li
163.789 27.1436 li
163.899 26.9937 li
164.019 26.8438 li
164.128 26.6938 li
164.25 26.5439 li
164.359 26.3936 li
164.479 26.2539 li
164.589 26.1138 li
164.708 25.9639 li
164.83 25.8237 li
164.939 25.6836 li
165.059 25.5537 li
165.169 25.4136 li
0 0 0 1 cmyk
@
32.3389 23.2036 mo
32.459 23.3135 li
32.5688 23.4238 li
32.689 23.5439 li
32.7988 23.6538 li
32.9189 23.7739 li
33.0391 23.8936 li
33.1489 24.0039 li
33.269 24.1338 li
33.3789 24.2539 li
33.499 24.374 li
33.6089 24.5039 li
33.729 24.624 li
33.8389 24.7539 li
33.959 24.8838 li
34.0688 25.0137 li
34.189 25.1436 li
34.2988 25.2837 li
34.4189 25.4136 li
34.5391 25.5537 li
34.6489 25.6836 li
34.769 25.8237 li
34.8789 25.9639 li
34.999 26.1138 li
35.1089 26.2539 li
35.229 26.3936 li
35.3389 26.5439 li
35.459 26.6938 li
35.5688 26.8438 li
35.689 26.9937 li
35.7988 27.1436 li
35.9189 27.2939 li
36.0391 27.4438 li
36.1489 27.6035 li
36.269 27.7637 li
36.3789 27.9136 li
36.499 28.0737 li
36.6089 28.2339 li
36.729 28.4038 li
36.8389 28.5635 li
36.959 28.7236 li
37.0688 28.8936 li
37.189 29.0635 li
37.2988 29.2236 li
37.4189 29.3936 li
37.5391 29.5635 li
37.6489 29.7437 li
37.769 29.9136 li
37.8789 30.084 li
37.999 30.2637 li
38.1089 30.4438 li
38.229 30.6138 li
38.3389 30.7939 li
38.459 30.9736 li
38.5688 31.1636 li
38.689 31.3438 li
38.8091 31.5239 li
38.9189 31.7139 li
39.0391 31.9038 li
39.1489 32.084 li
39.269 32.2739 li
39.3789 32.4639 li
39.499 32.6538 li
39.6089 32.8438 li
39.729 33.0439 li
39.8389 33.2339 li
39.959 33.4336 li
40.0688 33.624 li
40.189 33.8237 li
40.3091 34.0239 li
40.4189 34.2236 li
40.5391 34.4238 li
40.6489 34.624 li
40.769 34.834 li
40.8789 35.0337 li
40.999 35.2437 li
41.1089 35.4438 li
41.229 35.6538 li
41.3389 35.8638 li
41.459 36.0737 li
41.5688 36.2837 li
41.689 36.4937 li
41.8091 36.7036 li
41.9189 36.9238 li
42.0391 37.1338 li
42.1489 37.3535 li
42.269 37.5635 li
42.3789 37.7837 li
42.499 38.0039 li
42.6089 38.2236 li
42.729 38.4438 li
42.8389 38.6636 li
42.959 38.8838 li
43.0791 39.1035 li
43.189 39.334 li
43.3091 39.5537 li
43.4189 39.7837 li
43.5391 40.0039 li
43.6489 40.2339 li
43.769 40.4639 li
43.8789 40.6938 li
43.999 40.9238 li
44.1089 41.1538 li
44.229 41.3838 li
44.3389 41.6138 li
44.459 41.8438 li
44.5791 42.084 li
44.689 42.3135 li
44.8091 42.5537 li
44.9189 42.7837 li
45.0391 43.0239 li
45.1489 43.2637 li
45.269 43.5039 li
45.3789 43.7437 li
45.499 43.9839 li
45.6089 44.2236 li
45.729 44.4639 li
45.8389 44.7036 li
45.959 44.9438 li
46.0791 45.1938 li
46.189 45.4336 li
46.3091 45.6836 li
46.4189 45.9238 li
46.5391 46.1738 li
46.6489 46.4238 li
46.769 46.6636 li
46.8789 46.9136 li
46.999 47.1636 li
47.1089 47.4136 li
47.229 47.6636 li
47.3491 47.9136 li
47.459 48.1636 li
47.5791 48.4136 li
47.689 48.6738 li
47.8091 48.9238 li
47.9189 49.1738 li
48.0391 49.4336 li
48.1489 49.6836 li
48.269 49.9438 li
48.3789 50.1938 li
48.499 50.4536 li
48.6089 50.7036 li
48.729 50.9639 li
48.8491 51.2236 li
48.959 51.4839 li
49.0791 51.7339 li
49.189 51.9937 li
49.3091 52.2539 li
49.4189 52.5137 li
49.5391 52.7739 li
49.6489 53.0337 li
49.769 53.2939 li
49.8789 53.5635 li
49.999 53.8237 li
50.1089 54.084 li
50.229 54.3438 li
50.3491 54.6138 li
50.459 54.874 li
50.5791 55.1338 li
50.689 55.4038 li
50.8091 55.6636 li
50.9189 55.9238 li
51.0391 56.1938 li
51.1489 56.4536 li
51.269 56.7236 li
51.3789 56.9937 li
51.499 57.2539 li
51.6089 57.5239 li
51.729 57.7837 li
51.8491 58.0537 li
51.959 58.3237 li
52.0791 58.584 li
52.189 58.8535 li
52.3091 59.124 li
52.4189 59.3936 li
52.5391 59.6538 li
52.6489 59.9238 li
52.769 60.1938 li
52.8789 60.4639 li
52.999 60.7339 li
53.1191 61.0039 li
53.229 61.2637 li
53.3491 61.5337 li
53.459 61.8037 li
53.5791 62.0737 li
53.689 62.3438 li
53.8091 62.6138 li
53.9189 62.8838 li
54.0391 63.1538 li
54.1489 63.4238 li
54.269 63.6836 li
54.3789 63.9536 li
54.499 64.2236 li
54.6191 64.4937 li
54.729 64.7637 li
54.8491 65.0337 li
54.959 65.3037 li
55.0791 65.5737 li
55.189 65.8438 li
55.3091 66.1138 li
55.4189 66.3838 li
55.5391 66.6436 li
55.6489 66.9136 li
55.769 67.1836 li
55.8789 67.4536 li
55.999 67.7236 li
56.1191 67.9937 li
56.229 68.2637 li
56.3491 68.5239 li
56.459 68.7939 li
56.5791 69.0635 li
56.689 69.334 li
56.8091 69.5938 li
56.9189 69.8638 li
57.0391 70.1338 li
57.1489 70.3936 li
57.269 70.6636 li
57.3892 70.9336 li
57.499 71.1938 li
57.6191 71.4639 li
57.729 71.7236 li
57.8491 71.9937 li
57.959 72.2539 li
58.0791 72.5239 li
58.189 72.7837 li
58.3091 73.0537 li
58.4189 73.3135 li
58.5391 73.584 li
58.6489 73.8438 li
58.769 74.1035 li
58.8892 74.3638 li
58.999 74.6338 li
59.1191 74.8936 li
59.229 75.1538 li
59.3491 75.4136 li
59.459 75.6738 li
59.5791 75.9336 li
59.689 76.1938 li
59.8091 76.4536 li
59.9189 76.7139 li
60.0391 76.9639 li
60.1489 77.2236 li
60.269 77.4839 li
60.3892 77.7437 li
60.499 77.9937 li
60.6191 78.2539 li
60.729 78.5039 li
60.8491 78.7637 li
60.959 79.0137 li
61.0791 79.2739 li
61.189 79.5239 li
61.3091 79.7739 li
61.4189 80.0337 li
61.5391 80.2837 li
61.6592 80.5337 li
61.769 80.7837 li
61.8892 81.0337 li
61.999 81.2837 li
62.1191 81.5337 li
62.229 81.7739 li
62.3491 82.0239 li
62.459 82.2739 li
62.5791 82.5137 li
62.689 82.7637 li
62.8091 83.0039 li
62.9189 83.2539 li
63.0391 83.4937 li
63.1592 83.7339 li
63.269 83.9839 li
63.3892 84.2236 li
63.499 84.4639 li
63.6191 84.7036 li
63.729 84.9438 li
63.8491 85.1738 li
63.959 85.4136 li
64.0791 85.6538 li
64.189 85.8838 li
64.3091 86.124 li
64.4189 86.3535 li
64.5391 86.5938 li
64.6592 86.8237 li
64.769 87.0537 li
64.8892 87.2837 li
64.999 87.5137 li
65.1191 87.7437 li
65.229 87.9736 li
65.3491 88.2036 li
65.459 88.4336 li
65.5791 88.6538 li
65.689 88.8838 li
65.8091 89.1035 li
65.9189 89.334 li
66.0391 89.5537 li
66.1592 89.7739 li
66.269 89.9937 li
66.3892 90.2139 li
66.499 90.4336 li
66.6191 90.6538 li
66.729 90.8638 li
66.8491 91.084 li
66.959 91.2939 li
67.0791 91.5137 li
67.189 91.7236 li
67.3091 91.9336 li
67.4292 92.1436 li
67.5391 92.3535 li
67.6592 92.5635 li
67.769 92.7739 li
67.8892 92.9839 li
67.999 93.1836 li
68.1191 93.3936 li
68.229 93.5938 li
68.3491 93.8037 li
68.459 94.0039 li
68.5791 94.2036 li
68.689 94.4038 li
68.8091 94.6035 li
68.9292 94.7939 li
69.0391 94.9937 li
69.1592 95.1836 li
69.269 95.3838 li
69.3892 95.5737 li
69.499 95.7637 li
69.6191 95.9536 li
69.729 96.1436 li
69.8491 96.334 li
69.959 96.5239 li
70.0791 96.7036 li
70.189 96.8936 li
70.3091 97.0737 li
70.4292 97.2539 li
70.5391 97.4438 li
70.6592 97.624 li
70.769 97.7939 li
70.8892 97.9736 li
70.999 98.1538 li
71.1191 98.3237 li
71.229 98.5039 li
71.3491 98.6738 li
71.459 98.8438 li
71.5791 99.0137 li
71.6992 99.1836 li
71.8091 99.3535 li
71.9292 99.5239 li
72.0391 99.6836 li
72.1592 99.8438 li
72.269 100.014 li
72.3892 100.174 li
72.499 100.334 li
72.6191 100.494 li
72.729 100.644 li
72.8491 100.804 li
72.959 100.964 li
73.0791 101.114 li
73.1992 101.264 li
73.3091 101.414 li
73.4292 101.563 li
73.5391 101.714 li
73.6592 101.864 li
73.769 102.004 li
73.8892 102.154 li
73.999 102.294 li
74.1191 102.434 li
74.229 102.574 li
74.3491 102.714 li
74.459 102.854 li
74.5791 102.984 li
74.6992 103.124 li
74.8091 103.254 li
74.9292 103.384 li
75.0391 103.514 li
75.1592 103.644 li
75.269 103.774 li
75.3892 103.894 li
75.499 104.024 li
75.6191 104.144 li
75.729 104.264 li
75.8491 104.384 li
75.9692 104.504 li
76.0791 104.624 li
76.1992 104.734 li
76.3091 104.854 li
76.4292 104.964 li
76.5391 105.074 li
76.6592 105.184 li
76.769 105.294 li
76.8892 105.404 li
76.999 105.504 li
77.1191 105.614 li
77.229 105.714 li
77.3491 105.813 li
77.4692 105.914 li
77.5791 106.014 li
77.6992 106.104 li
77.8091 106.204 li
77.9292 106.294 li
78.0391 106.384 li
78.1592 106.474 li
78.269 106.563 li
78.3892 106.654 li
78.499 106.744 li
78.6191 106.824 li
78.729 106.904 li
78.8491 106.994 li
78.9692 107.074 li
79.0791 107.144 li
79.1992 107.224 li
79.3091 107.304 li
79.4292 107.374 li
79.5391 107.444 li
79.6592 107.514 li
79.769 107.584 li
79.8892 107.654 li
79.999 107.714 li
80.1191 107.784 li
80.229 107.844 li
80.3491 107.904 li
80.4692 107.964 li
80.5791 108.024 li
80.6992 108.074 li
80.8091 108.134 li
80.9292 108.184 li
81.0391 108.234 li
81.1592 108.284 li
81.269 108.334 li
81.3892 108.384 li
81.499 108.424 li
81.6191 108.474 li
81.7393 108.514 li
81.8491 108.554 li
81.9692 108.594 li
82.0791 108.634 li
82.1992 108.664 li
82.3091 108.704 li
82.4292 108.734 li
82.5391 108.764 li
82.6592 108.794 li
82.769 108.824 li
82.8892 108.844 li
82.999 108.874 li
83.1191 108.894 li
83.2393 108.914 li
83.3491 108.934 li
83.4692 108.954 li
83.5791 108.964 li
83.6992 108.984 li
83.8091 108.994 li
83.9292 109.004 li
84.0391 109.014 li
84.1592 109.024 li
84.269 109.034 li
84.3892 109.034 li
84.499 109.044 li
84.6191 109.044 li
84.7393 109.044 li
84.8491 109.044 li
84.9692 109.034 li
85.0791 109.034 li
85.1992 109.024 li
85.3091 109.014 li
85.4292 109.004 li
85.5391 108.994 li
85.6592 108.984 li
85.769 108.974 li
85.8892 108.954 li
86.0093 108.934 li
86.1191 108.914 li
86.2393 108.894 li
86.3491 108.874 li
86.4692 108.854 li
86.5791 108.824 li
86.6992 108.794 li
86.8091 108.764 li
86.9292 108.734 li
87.0391 108.704 li
87.1592 108.674 li
87.269 108.634 li
87.3892 108.604 li
87.5093 108.563 li
87.6191 108.524 li
87.7393 108.484 li
87.8491 108.434 li
87.9692 108.394 li
88.0791 108.344 li
88.1992 108.294 li
88.3091 108.244 li
88.4292 108.194 li
88.5391 108.144 li
88.6592 108.084 li
88.769 108.034 li
88.8892 107.974 li
89.0093 107.914 li
89.1191 107.854 li
89.2393 107.794 li
89.3491 107.734 li
89.4692 107.664 li
89.5791 107.594 li
89.6992 107.524 li
89.8091 107.454 li
89.9292 107.384 li
90.0391 107.313 li
90.1592 107.234 li
90.2793 107.164 li
90.3892 107.084 li
90.5093 107.004 li
90.6191 106.924 li
90.7393 106.844 li
90.8491 106.754 li
90.9692 106.674 li
91.0791 106.584 li
91.1992 106.494 li
91.3091 106.404 li
91.4292 106.313 li
91.5391 106.224 li
91.6592 106.124 li
91.7793 106.034 li
91.8892 105.934 li
92.0093 105.834 li
92.1191 105.734 li
92.2393 105.634 li
92.3491 105.524 li
92.4692 105.424 li
92.5791 105.313 li
92.6992 105.204 li
92.8091 105.094 li
92.9292 104.984 li
93.0391 104.874 li
93.1592 104.764 li
93.2793 104.644 li
93.3892 104.524 li
93.5093 104.414 li
93.6191 104.294 li
93.7393 104.164 li
93.8491 104.044 li
93.9692 103.924 li
94.0791 103.794 li
94.1992 103.664 li
94.3091 103.544 li
94.4292 103.414 li
94.5391 103.274 li
94.6592 103.144 li
94.7793 103.014 li
94.8892 102.874 li
95.0093 102.744 li
95.1191 102.604 li
95.2393 102.464 li
95.3491 102.324 li
95.4692 102.174 li
95.5791 102.034 li
95.6992 101.894 li
95.8091 101.744 li
95.9292 101.594 li
96.0488 101.444 li
96.1592 101.294 li
96.2793 101.144 li
96.3892 100.994 li
96.5093 100.834 li
96.6191 100.684 li
96.7393 100.524 li
96.8491 100.364 li
96.9692 100.204 li
97.0791 100.044 li
97.1992 99.8838 li
97.3091 99.7139 li
97.4292 99.5537 li
97.5488 99.3838 li
97.6592 99.2139 li
97.7793 99.0537 li
97.8892 98.8838 li
98.0093 98.7036 li
98.1191 98.5337 li
98.2393 98.3638 li
98.3491 98.1836 li
98.4692 98.0137 li
98.5791 97.834 li
98.6992 97.6538 li
98.8091 97.4736 li
98.9292 97.2939 li
99.0488 97.1138 li
99.1592 96.9238 li
99.2793 96.7437 li
99.3892 96.5537 li
99.5093 96.374 li
99.6191 96.1836 li
99.7393 95.9937 li
99.8491 95.8037 li
99.9692 95.6138 li
100.079 95.4238 li
100.199 95.2236 li
100.319 95.0337 li
100.429 94.834 li
100.549 94.6338 li
100.659 94.4438 li
100.779 94.2437 li
100.889 94.0439 li
101.009 93.834 li
101.119 93.6338 li
101.239 93.4336 li
101.349 93.2236 li
101.469 93.0239 li
101.579 92.8135 li
101.699 92.6035 li
101.819 92.4038 li
101.929 92.1938 li
102.049 91.9736 li
102.159 91.7637 li
102.279 91.5537 li
102.389 91.3438 li
102.509 91.124 li
102.619 90.9136 li
102.739 90.6938 li
102.849 90.4736 li
102.969 90.2539 li
103.079 90.0337 li
103.199 89.8135 li
103.319 89.5938 li
103.429 89.374 li
103.549 89.1538 li
103.659 88.9238 li
103.779 88.7036 li
103.889 88.4736 li
104.009 88.2437 li
104.119 88.0239 li
104.239 87.7939 li
104.349 87.5635 li
104.469 87.334 li
104.589 87.1035 li
104.699 86.874 li
104.819 86.6338 li
104.929 86.4038 li
105.049 86.1738 li
105.159 85.9336 li
105.279 85.7036 li
105.389 85.4639 li
105.509 85.2236 li
105.619 84.9839 li
105.739 84.7437 li
105.849 84.5039 li
105.969 84.2637 li
106.089 84.0239 li
106.199 83.7837 li
106.319 83.5439 li
106.429 83.3037 li
106.549 83.0537 li
106.659 82.8135 li
106.779 82.5635 li
106.889 82.3237 li
107.009 82.0737 li
107.119 81.8237 li
107.239 81.5737 li
107.349 81.334 li
107.469 81.084 li
107.589 80.834 li
107.699 80.584 li
107.819 80.334 li
107.929 80.084 li
108.049 79.8237 li
108.159 79.5737 li
108.279 79.3237 li
108.389 79.0635 li
108.509 78.8135 li
108.619 78.5537 li
108.739 78.3037 li
108.849 78.0439 li
108.969 77.7939 li
109.089 77.5337 li
109.199 77.2739 li
109.319 77.0239 li
109.429 76.7637 li
109.549 76.5039 li
109.659 76.2437 li
109.779 75.9839 li
109.889 75.7236 li
110.009 75.4639 li
110.119 75.2036 li
110.239 74.9438 li
110.359 74.6836 li
110.469 74.4136 li
110.589 74.1538 li
110.699 73.8936 li
110.819 73.6338 li
110.929 73.3638 li
111.049 73.1035 li
111.159 72.8438 li
111.279 72.5737 li
111.389 72.3135 li
111.509 72.0439 li
111.619 71.7837 li
111.739 71.5137 li
111.859 71.2539 li
111.969 70.9839 li
112.089 70.7139 li
112.199 70.4536 li
112.319 70.1836 li
112.429 69.9136 li
112.549 69.6538 li
112.659 69.3838 li
112.779 69.1138 li
112.889 68.8438 li
113.009 68.584 li
113.119 68.3135 li
113.239 68.0439 li
113.359 67.7739 li
113.469 67.5039 li
113.589 67.2437 li
113.699 66.9736 li
113.819 66.7036 li
113.929 66.4336 li
114.049 66.1636 li
114.159 65.8936 li
114.279 65.624 li
114.389 65.3535 li
114.509 65.084 li
114.629 64.8135 li
114.739 64.5537 li
114.859 64.2837 li
114.969 64.0137 li
115.089 63.7437 li
115.199 63.4736 li
115.319 63.2036 li
115.429 62.9336 li
115.549 62.6636 li
115.659 62.3936 li
115.779 62.124 li
115.889 61.8535 li
116.009 61.5938 li
116.129 61.3237 li
116.239 61.0537 li
116.359 60.7837 li
116.469 60.5137 li
116.589 60.2437 li
116.699 59.9736 li
116.819 59.7139 li
116.929 59.4438 li
117.049 59.1738 li
117.159 58.9038 li
117.279 58.6436 li
117.389 58.374 li
117.509 58.1035 li
117.629 57.8438 li
117.739 57.5737 li
117.859 57.3037 li
117.969 57.0439 li
118.089 56.7739 li
118.199 56.5137 li
118.319 56.2437 li
118.429 55.9839 li
118.549 55.7139 li
118.659 55.4536 li
118.779 55.1836 li
118.899 54.9238 li
119.009 54.6636 li
119.129 54.3936 li
119.239 54.1338 li
119.359 53.874 li
119.469 53.6138 li
119.589 53.3535 li
119.699 53.0938 li
119.819 52.8237 li
119.929 52.5635 li
120.049 52.3037 li
120.159 52.0537 li
120.279 51.7939 li
120.399 51.5337 li
120.509 51.2739 li
120.629 51.0137 li
120.739 50.7539 li
120.859 50.5039 li
120.969 50.2437 li
121.089 49.9937 li
121.199 49.7339 li
121.319 49.4839 li
121.429 49.2236 li
121.549 48.9736 li
121.659 48.7236 li
121.779 48.4639 li
121.899 48.2139 li
122.009 47.9639 li
122.129 47.7139 li
122.239 47.4639 li
122.359 47.2139 li
122.469 46.9639 li
122.589 46.7139 li
122.699 46.4639 li
122.819 46.2236 li
122.929 45.9736 li
123.049 45.7339 li
123.159 45.4839 li
123.279 45.2437 li
123.399 44.9937 li
123.509 44.7539 li
123.629 44.5137 li
123.739 44.2739 li
123.859 44.0239 li
123.969 43.7837 li
124.089 43.5439 li
124.199 43.3135 li
124.319 43.0737 li
124.429 42.834 li
124.549 42.5938 li
124.669 42.3638 li
124.779 42.124 li
124.899 41.8936 li
125.009 41.6636 li
125.129 41.4238 li
125.239 41.1938 li
125.359 40.9639 li
125.469 40.7339 li
125.589 40.5039 li
125.699 40.2739 li
125.819 40.0537 li
125.929 39.8237 li
126.049 39.5938 li
126.169 39.374 li
126.279 39.1538 li
126.399 38.9238 li
126.509 38.7036 li
126.629 38.4839 li
126.739 38.2637 li
126.859 38.0439 li
126.969 37.8237 li
127.089 37.6035 li
127.199 37.3936 li
127.319 37.1738 li
127.429 36.9639 li
127.549 36.7437 li
127.669 36.5337 li
127.779 36.3237 li
127.899 36.1138 li
128.009 35.9038 li
128.129 35.6938 li
128.239 35.4839 li
128.359 35.2837 li
128.469 35.0737 li
128.589 34.874 li
128.699 34.6636 li
128.819 34.4639 li
128.939 34.2637 li
129.049 34.0635 li
129.169 33.8638 li
129.279 33.6636 li
129.399 33.4736 li
129.509 33.2739 li
129.629 33.084 li
129.739 32.8838 li
129.859 32.6938 li
129.969 32.5039 li
130.089 32.3135 li
130.199 32.124 li
130.319 31.9336 li
130.439 31.7539 li
130.549 31.5635 li
130.669 31.3838 li
130.779 31.1938 li
130.899 31.0137 li
131.009 30.834 li
131.129 30.6538 li
131.239 30.4736 li
131.359 30.2939 li
131.469 30.124 li
131.589 29.9438 li
131.699 29.7739 li
131.819 29.6035 li
131.939 29.4336 li
132.049 29.2637 li
132.169 29.0938 li
132.279 28.9238 li
132.399 28.7637 li
132.509 28.5938 li
132.629 28.4336 li
132.739 28.2739 li
132.859 28.1035 li
132.969 27.9536 li
133.089 27.7939 li
133.209 27.6338 li
133.319 27.4736 li
133.439 27.3237 li
133.549 27.1738 li
133.669 27.0239 li
133.779 26.874 li
133.899 26.7236 li
134.009 26.5737 li
134.129 26.4238 li
134.239 26.2837 li
134.359 26.1338 li
134.469 25.9937 li
134.589 25.8535 li
134.709 25.7139 li
134.819 25.5737 li
134.939 25.4438 li
135.049 25.3037 li
135.169 25.1738 li
135.279 25.0439 li
135.399 24.9136 li
135.509 24.7837 li
135.629 24.6538 li
135.739 24.5239 li
135.859 24.4038 li
135.969 24.2739 li
136.089 24.1538 li
136.209 24.0337 li
136.319 23.9136 li
136.439 23.7939 li
136.549 23.6738 li
136.669 23.5635 li
136.779 23.4438 li
136.899 23.334 li
137.009 23.2236 li
137.129 23.1138 li
137.239 23.0039 li
137.359 22.9038 li
137.469 22.7939 li
137.589 22.6938 li
137.709 22.5938 li
137.819 22.4937 li
137.939 22.3936 li
138.049 22.2939 li
138.169 22.2036 li
138.279 22.1035 li
138.399 22.0137 li
138.509 21.9238 li
138.629 21.834 li
138.739 21.7437 li
138.859 21.6538 li
138.979 21.5737 li
139.089 21.4839 li
139.209 21.4038 li
139.319 21.3237 li
139.439 21.2437 li
139.549 21.1636 li
139.669 21.0938 li
139.779 21.0137 li
139.899 20.9438 li
140.009 20.874 li
140.129 20.8037 li
140.239 20.7339 li
140.359 20.6636 li
140.479 20.6035 li
140.589 20.5439 li
140.709 20.4736 li
140.819 20.4136 li
140.939 20.3535 li
141.049 20.3037 li
141.169 20.2437 li
141.279 20.1938 li
141.399 20.1436 li
141.509 20.084 li
141.629 20.0439 li
141.739 19.9937 li
141.859 19.9438 li
141.979 19.9038 li
142.089 19.8535 li
142.209 19.8135 li
142.319 19.7739 li
142.439 19.7339 li
142.549 19.7036 li
142.669 19.6636 li
142.779 19.6338 li
142.899 19.6035 li
143.009 19.5737 li
143.129 19.5439 li
143.249 19.5137 li
143.359 19.4937 li
143.479 19.4639 li
143.589 19.4438 li
143.709 19.4238 li
143.819 19.4038 li
143.939 19.3838 li
144.049 19.374 li
144.169 19.3535 li
144.279 19.3438 li
144.399 19.334 li
144.509 19.3237 li
144.629 19.3135 li
144.749 19.3135 li
144.859 19.3037 li
144.979 19.3037 li
145.089 19.3037 li
145.208 19.3037 li
145.319 19.3037 li
145.439 19.3135 li
145.548 19.3135 li
145.669 19.3237 li
145.779 19.334 li
145.899 19.3438 li
146.009 19.3535 li
146.128 19.3638 li
146.25 19.3838 li
146.359 19.3936 li
146.479 19.4136 li
146.589 19.4336 li
146.708 19.4536 li
146.819 19.4839 li
146.939 19.5039 li
147.048 19.5337 li
147.169 19.5635 li
147.279 19.5938 li
147.399 19.624 li
147.519 19.6538 li
147.628 19.6836 li
147.75 19.7236 li
147.859 19.7637 li
147.979 19.8037 li
148.089 19.8438 li
148.208 19.8838 li
148.319 19.9238 li
148.439 19.9736 li
148.548 20.0239 li
148.669 20.0635 li
148.779 20.1138 li
148.899 20.1738 li
149.019 20.2236 li
149.128 20.2837 li
149.25 20.334 li
149.359 20.3936 li
149.479 20.4536 li
149.589 20.5137 li
149.708 20.5737 li
149.819 20.6436 li
149.939 20.7036 li
150.048 20.7739 li
150.169 20.8438 li
150.279 20.9136 li
150.399 20.9839 li
150.519 21.0635 li
150.628 21.1338 li
150.75 21.2139 li
150.859 21.2939 li
150.979 21.374 li
151.089 21.4536 li
151.208 21.5337 li
151.319 21.624 li
151.439 21.7036 li
151.548 21.7939 li
151.669 21.8838 li
151.779 21.9736 li
151.899 22.0635 li
152.019 22.1636 li
152.128 22.2539 li
152.25 22.3535 li
152.359 22.4536 li
152.479 22.5537 li
152.589 22.6538 li
152.708 22.7539 li
152.819 22.8638 li
152.939 22.9639 li
153.048 23.0737 li
153.169 23.1836 li
153.289 23.2939 li
153.399 23.4038 li
153.519 23.5137 li
153.628 23.6338 li
153.75 23.7437 li
153.859 23.8638 li
153.979 23.9839 li
154.089 24.1035 li
154.208 24.2236 li
154.319 24.3535 li
154.439 24.4736 li
154.548 24.6035 li
154.669 24.7236 li
154.789 24.8535 li
154.899 24.9839 li
155.019 25.124 li
155.128 25.2539 li
155.25 25.3838 li
155.359 25.5239 li
155.479 25.6636 li
155.589 25.8037 li
155.708 25.9438 li
155.819 26.084 li
155.939 26.2236 li
156.048 26.374 li
156.169 26.5137 li
156.289 26.6636 li
156.399 26.8135 li
156.519 26.9639 li
156.628 27.1138 li
156.75 27.2637 li
156.859 27.4136 li
156.979 27.5737 li
157.089 27.7339 li
157.208 27.8838 li
157.319 28.0439 li
157.439 28.2036 li
157.559 28.3638 li
157.669 28.5337 li
157.789 28.6938 li
157.899 28.8638 li
158.019 29.0239 li
158.128 29.1938 li
158.25 29.3638 li
158.359 29.5337 li
158.479 29.7036 li
158.589 29.8838 li
158.708 30.0537 li
158.819 30.2236 li
158.939 30.4038 li
159.059 30.584 li
159.169 30.7637 li
159.289 30.9438 li
159.399 31.124 li
159.519 31.3037 li
159.628 31.4937 li
159.75 31.6738 li
159.859 31.8638 li
159.979 32.0537 li
160.089 32.2339 li
160.208 32.4238 li
160.319 32.6138 li
160.439 32.8135 li
160.559 33.0039 li
160.669 33.1938 li
160.789 33.3936 li
160.899 33.5938 li
161.019 33.7837 li
161.128 33.9839 li
161.25 34.1836 li
161.359 34.3838 li
161.479 34.584 li
161.589 34.7939 li
161.708 34.9937 li
161.83 35.2036 li
161.939 35.4038 li
162.059 35.6138 li
162.169 35.8237 li
162.289 36.0337 li
162.399 36.2437 li
162.519 36.4536 li
162.628 36.6636 li
162.75 36.874 li
162.859 37.0938 li
162.979 37.3037 li
163.089 37.5239 li
163.208 37.7437 li
163.33 37.9536 li
163.439 38.1738 li
163.559 38.3936 li
163.669 38.6138 li
163.789 38.834 li
163.899 39.0635 li
164.019 39.2837 li
164.128 39.5137 li
164.25 39.7339 li
164.359 39.9639 li
164.479 40.1836 li
164.589 40.4136 li
164.708 40.6436 li
164.83 40.874 li
164.939 41.1035 li
165.059 41.334 li
165.169 41.5635 li
0 0 0 .7 cmyk
@
.57895 lw
32.4233 18.8237 mo
165.373 18.8237 li
165.373 108.564 li
32.4233 108.564 li
32.4233 18.8237 li
cp
.193668 .150057 .155337 3.0518e-05 cmyk
@
32.4233 18.8237 mo
32.4233 108.564 li
@
32.4233 63.4038 mo
165.373 63.4038 li
@
32.4233 99.2939 mo
34.1636 99.2939 li
@
165.373 99.2939 mo
163.632 99.2939 li
@
32.4233 90.6138 mo
34.1636 90.6138 li
@
165.373 90.6138 mo
163.632 90.6138 li
@
32.4233 81.354 mo
34.1636 81.354 li
@
165.373 81.354 mo
163.632 81.354 li
@
32.4233 72.6636 mo
34.1636 72.6636 li
@
165.373 72.6636 mo
163.632 72.6636 li
@
32.4233 63.4038 mo
34.1636 63.4038 li
@
165.373 63.4038 mo
163.632 63.4038 li
@
32.4233 54.7236 mo
34.1636 54.7236 li
@
165.373 54.7236 mo
163.632 54.7236 li
@
32.4233 45.4536 mo
34.1636 45.4536 li
@
165.373 45.4536 mo
163.632 45.4536 li
@
32.4233 36.7739 mo
34.1636 36.7739 li
@
165.373 36.7739 mo
163.632 36.7739 li
@
32.4233 27.5039 mo
34.1636 27.5039 li
@
165.373 27.5039 mo
163.632 27.5039 li
@
26.6265 112.414 mo
26.6265 111.863 li
27.7163 111.863 li
27.7163 107.573 li
26.6265 107.843 li
26.6265 107.283 li
28.4458 106.833 li
28.4458 111.863 li
29.5259 111.863 li
29.5259 112.414 li
26.6265 112.414 li
cp
.75021 .679683 .670222 .90164 cmyk
f
21.4058 110.503 mo
21.4058 109.963 li
24.6655 109.963 li
24.6655 110.503 li
21.4058 110.503 li
cp
f
27.1763 21.6138 mo
27.1763 21.0635 li
28.2661 21.0635 li
28.2661 16.7734 li
27.1763 17.0435 li
27.1763 16.4834 li
28.9956 16.0337 li
28.9956 21.0635 li
30.0757 21.0635 li
30.0757 21.6138 li
27.1763 21.6138 li
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 41 /parenright putdup 97 /a putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QMYYKB+MyriadPro-Regular*1 [41{/.notdef}rp /parenright 55{/.notdef}rp /a 158{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf0 10.0439 mo(a\))[5.78369 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [41{/.notdef}rp /parenright 55{/.notdef}rp /a /b 157{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf0 142.015 mo(b\))[6.79199 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 99 /c putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [41{/.notdef}rp /parenright 55{/.notdef}rp /a /b /c 156{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf177.145 48.9937 mo(c\))[5.37598 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 32 /space putdup 40 /parenleft putdup 84 /T putdup 101 /e putdup 105 /i putdup 109 /m putdup 115 /s putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 42{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 140{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf80.0581 122.465 mo(Time \(s\))[4.8501 2.33984 8.33984 5.01025 2.11963 2.83984 3.95996 0 ]xshQMYYKB+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf249.053 213.403 mo(Time \(s\))[4.84961 2.33984 8.34082 5.00977 2.12012 2.83984 3.95996 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/x <1C60D8A8C9B74CDDCE74E258E27BD7DEC2AC84271E6C98FD20D770EC885A525E4B13092058B38B98D913CBB4CB890C6B5723895529FEAE9BA916EC36A86A9F59939408772A8E004C80432C1BF5EAC4792ACA2BAD6B237FD805243D3976056A1B26> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 120 /x putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 42{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf94.5234 262.879 mo(x)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D598E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 49 /one putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 34{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [5.83 0 0 -5.83 0 0 ]msf99.1533 266.209 mo(1)shQMYYKB+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf27.2222 196.451 mo(x)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 50 /two putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 33{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m 5{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [2.61747e-10 -5.83 -5.83 -2.61748e-10 0 0 ]msf30.5522 191.821 mo(2)shQMYYKB+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf25.0317 65.6284 mo(x)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYKB+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD833E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYKB+MyriadPro-Regular /Encoding getdup 78 /N putdup 110 /n putdup 111 /o putdup 114 /r putdup 117 /u putpop%ADOEndSubsetFont
/QMYYKB+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 27{/.notdef}rp /N 5{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /.notdef /u 2{/.notdef}rp /x 135{/.notdef}rp]QMYYKB+MyriadPro-Regular nfQMYYKB+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf189.002 138.858 mo(Neurons)[-6.58008 -5.00977 -5.50977 -3.16992 -5.49023 -5.5498 0 ]ysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QMYYKB+MyriadPro-Regular*1 uf/QMYYKB+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Chris) ()%%Title: (2D Representation Decoding.eps)%%CreationDate: 12-04-27 4:17 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&l!!XKf-n:-J9(]*R3;kmU+uoe<"r2L%M03i%FEr*oA_q+YD-"S#tYE?]DHmJh,bgHQ*mVmXgr2Ch!W%$3U$u"rPJ3!N0B6B%c8_#2`_peh17<0mh:9?437kVGVn!LV(hV7],\S2+1Me69*_D+89I^@?.o!Y!YrGlCUhNo#c\p9"<17Hi`BV5XGpW+!*PpDE8#,>+%cGE-9%]Mtnl!sg`?N#uj64Z1#\eFtaOW[LqR`jB#1_>#r:%K1k%t62Fq5H1d(/C/%1[lU3I2&!";=AfkmYFc\),2C8jlcs7?u$6u%#!*(*j3&7&mV(8e)k`*umpZ]Ccf'lE#Q!9k(CNJDciY&*Y'AL"dDO3gR;aq,E%LdR8>['"./Lf"*!a3R!QAMCmgJ@L@(q_U`F(`P%o?!PcVR*NM%09i@r"i/LSZ*H]n(io^fgo5$BJ-f:1)tMX!".hWg^4H1[7GqNM7>@5MM!S(F;j%;B1Ml8+T@pO<^i]0b%/[gMrrq^%J.?BH`\@0$hmlsO7&`$]5anJ9UbU].VEJpPL`eq.O+b7&GlU,.`!u,<W@ok(?VO$`3:)S[7507;W=+2DBeDbGJ)&8dao1i4oeIO_%6t==aB[/q.j.'@6`['Sp-'OiTPtF*J"Mt=EOc?1PoITgV3$:TpO!'&@g&SI),7XL%8LBZ'PiC\IROcgZVp7'9Jj7Uq_C=dM2#/5;%)c0qI&1@$&!8A6l<&b:"^1q*[pYUK7-c,kHNrs?hQkP?_!H?#R,V0(;R:-^JR%Sr!Kg,sdILPufNPa"0!e.#qn?Z4B=//Xf2]@Bo%UJZ7p)T?oG*^5RU8gIfF6j!?[,[dZ@!k(]HGb2]EVdZ':)R`58+nNLaYZ3^n>JY7I'=KA+@B3iL5$9GR42iC[_t3@McR0@pBqC+S%Gof2&H]7i[qh$W_]C8C458n[Si?rFF`rnV8.l\k2;LB"8#_'WKE('1/NgiiH57>L75N+7T,5;Hf@6.i<E('1/NZ7tO=5fMh:/"B@%+1?d]JtK7VcbjO/IULJVNA2/&Q/F$=&s"%,*qp]L%:b/V-Z_[Zi.%sG*$>*3ORN\<;<*"J`o(4V$BC1k0W#2+(6/oS_I%8(GlHYL%mQ%o]5@H'%559tI&T\8U/&i)S&fuQd-i??o%/192*O`h,,BUaHa1[6ka8Nl"0k<%H\-;[5gVD2Kc@hsF:ZG=4]5W/e'=PdU%EF6<%JtIahYRMSC_bE+[a:>'e`dkUhn1`f9_JQO?Qr>[l&@ip)MWp.JLT-=(@_0CIP8PNR_gR<B#^-Us5EG9nJ%4ZD1,1`J3QJMC&:!gX%o<0Y2p_ejV8?44CKMF#cA*t[kYOWc_>3-nOl09f5.]`.@HUK7gT2qpWqF^TWn7&p&8X<r75PQ%1799E.EVPRj(]T,R%/s3*idVG^%4H?VDJ+:9a')u#4id[pArgcXngaW&+5*,02J+:9?!WQ4#idVG^WJ%IRJ+:9o)?3b;idZpX&*n9rGOQ9l/,i7liP/cJ>c\d#_sdD#%5/ikOJ?I!l5*[ZF9B6nUKYR%1/fEj5HY#/mn<mqks,H2MCNtnMckQZsrf/GsR5k*K>=%$U11+L9EXcK4=(5_L$,_;Nj'8)V:WKsj%^']g0MW!.JJ(t9b)gs)X9!LLm$\(NkI#:Sf.>0P^s+4PmE(_MYT*?ll\Rd3j`'&c`JF+M>+=&QG@DEXp)EnP4a#X'>*l3Tun0``a%^hk4-iIC>W-ALd2UOKNU12cjqU`I7*HAu@lIZiR'VdLInB,M2HZ'5YIL1sEHMQ$rd@7[=e-&;m$Ko?u"$W@8FLr9+#hIPoin2#kQ%,n(<mL@YlBi`:`,/>5;HM)g>_?n06-.H1!)kAjA74NUB?Qq-5BQ^B&_/V\rC!9p*\NfuS[1i1(-#]<0H6@XfZckXkRiE"TP-mNDK%H/&bE_K-'W0po]M3>EI.,FgJ>"\]p1)"eBdM=?Uc/ZmH].:]s)Stk1711,PiZFg``@sJ53dmX0hQ-an'8FSW]4Ul$75ub@\M.'(m%^G%$C?H]6Gb!Bd:mg=iD?R[a?paItIa=R[,T#.\T*`F<u;^i$fa"^?iDB\sVBnPJ\j[k.j+`]hX76AS3XNEQ;Mn,,:3;ed6L=F$1%bp(:S\>[`LpPQnb0kY7s(ip)%c)Gf\[?$1WiT'UG'tpKg30?kX;htZU:G<kHH'NPH>*`!=!t"&p?*K!][%QY.pKZ7#J9*-M`(?T.%Z_l$._l_]c&UghQLHPU4:Bd"-.b-49aF%CL&=Vi?\L\hiLIogU-(8igojurEjq,]eP9Ti*8VsMdOLAcKk[X8/d/9X:K]C(S'l7H`%ou".HUI8/sMSY]I\/![D49kU$[oYOJ[_b,INbPGE2"D!MMDS=4/IJlfP,C;(QV&>f"V'(`Z@]HLN#T-eC!J%>DH6<GYm5Mi[%p(b%Ap)m!W(9B+_^uab"S"J]O]So`?8'D5)PqF]Wl^cJj<r#j<4)jCMg:<;a7Fsq&Sks#XJ?(tB<'MuEsp7C#b/[aX1AW1=>t+L/[6&<%CJ$A*PQlrk\;@,;\\cYl`;5[#1STk$)2/:#L*dP5p75;!66!>96ujFS<NV(fM-*k8!`^_+9g^TP)-S*U*.)3G:LHA`I0([6EJ5W1%9Sm]g[U\s2i4j4VfP8jK/,bC#>)CK;NZmH'IZ`=h@VN(m.98.)d/n=A?4h*Vm@Es#eX";-8>ZX^+qt<gV'V]`dH?mT\=tINZo(Zm%!5mr.KOWTW<O@>DUHgFSQBPuc:::7<mM(RIk$+V6#VX@s^_'t8>Ep2H>:GulA6[$r<$e:^(./s2JsLaS(&0WZ.?X7"4soel<LnlW%*gp*Fdo!^>F?IGQI[&rI6rAVmE)_JgF3NO/5C'!Vb-VZ!Ym?Hr'oTsMAV`jZIM*/)HeefSiAB)/7[>Gl=_0?@Prak5@hlb5r.TMN%pJLJ8aQQ/V*6I\!**]DV-hXi]Ypo,[cQmB)A?*YW;F3>QF1WWMMM5"-HYhNB/cnfrM6;u]=XIBFaUTuQ7#_il$s>B#r&hZI?a8>m%Q*h["Wju)Dj$%F%ofMl@<%1Zf&6Vj&+n;?Bk`htpgM^DX+B2XL8<tfN`6.;8k3\.KFc9EQP#4P^3"EheLr<ZA$Robk)5\>B2<^1n%V5VBlajuY'&jjTirD]ji#`UMrg"O;lQP'TNQ7C@pM<K"Mk0nR<a:QCSH(d').3;D4'Y"@Bp/&#=A^tj]77doG\Vm=/Zp]Y7=(t&"%>XCNNNt;cDn1'8?M-icc/ZhgA=u;4u8J7'l_n]bNSlM3</dsU'q_?`p!#\G.I_DbPM(cc?E@^mY`)3+].V#K+&Nk@kUsPg6Z(]0D%T&K][%TNhS4]ZW$])Q?EU1KtL/UGFDcU8Er"uR'Z=*-[$8Xt$1>"PKc>/a/,-5RnmL@?+IDH3Q)mYTRR71u@P?f5qQIR!d:.pFis%iZ8Zs:M_Gl_^1/:_;cg:0>\=>Io,eVNK9qG\ON6+BhKWX@RFhS-?^>J,u6:'Z;2CV=Xqs2OM%-ciH6k3cH7P:@^K/]&u+N4O9XX"%>uLPm7Nc?bLt5QM#u&er)3LF0_[slt@N1C,(6*4*m8f1)+$_IlkU8[5?qs_8&[c8W%A]_3N!j8D'cR`bZslqNW@QAM4r^6DWV##0%15Bn1&bhlWZZmr]7m$q@2.6rOFD+>cImK!Fbb:W[#R-'D;-k^:'B(4\6`M/:3H[aBf2]Hdid7#*3iI3q/&tilTtRAr,GA"pbUrAJ%nQj?VW_J[u$,gTKg1X6HBVHkfgF>QjU&^@oQFX6<-<74g\Q?`LH(ml0\L#b%1+"9I0$B%XQ2&jRhM=*^ij$/_X05\o3[UVJ?cI7$%kB^7%fH+1*V6r4N83aBCFO*t1cg]S.O^Vod0/S,]JiQ<.@q\?k3e$/?nPYbU=du`P3qG#RSVelg*5YNm7]8e'7_76PT\.b]XOddd%DoHGXJ4:_qBN`klXCMqMbuK1p?H3p9Q-NL##[Fc=A.6JLVN*lBX`BXg9oY%U==,m(#IjOTiD`u%[CSZSY*>K=EuU4%&T20n9@:L4%s4:G(8pAAKVE%,r.=!ou5iPW"K;kGO;PT#+s&.77OpP&H:6B_=gE9gd4D1[\X7*`Q/gIE3AV*GF\>Uqn-$*6\OE9E?r/J`QVYInW%4]6Z%>qmS)/jt`P.#Ed?C7Ri>=;1-QY--=e:Q%jWY(F1JI$g3lKSpP9;74$!GCWKI4:/I#G^TpY7EM]oL`SpF\Y4[s\V*1VC(KC>%7Yr`?e5=6hq+(.)P_`2%_Dn+<NFCU_s-6hFje%n!"e+=[D5Zs)SA-1l-s<1c[NJmUUGYZh'].2@/@a]@oc7"I5kHTB)l9rDE&Lbb%F]$,NqG1:U)eTZfFbrj>5#j_KOT]"P@BJ^o;M2'30kiu37%Bi3U>sacWICW/Vt(PX2-GB.6F?5Q0C[GDGN9`R.D][H/GE/@TaV[]%=HZO0-n5QU-"Ab?Rf8.s::I=Y^=CaAF3ULCQ,HfSC<k2019iUV[*$3Q\%o(NZ:o$hnr#/dOGE(>]??BZgh;JX'rPQO060gri&.=p%B\LN$Pjdg2;d:kdNYb2B*Viu9(ZKfrl&S5F3YCUL_I"MBbnnLr#,27gbThB>gl<)\@W*q=$'DO?>qX(:ojTW?M3/b*bRnP<:C+Ie%J=o>amQg%ia'U(]T89/K_9WJpGaACHd?BTHL`[A27n)Oe!<td(D$Et/J^S.^^cN`=gieS0:8t[#V<nt@AVlm/ERUc<e.Gh5D0nUa%01q?Jkb'=n\q&Y"q*L<8E"mAu$b(dY3m5oA>XW1U"=Z&%NdrLs_PGd$!@gZScRaUtMfbl'5LQ5)]ne3bTdR]_ZOtst"^Q@.?1c(=%8A6(SR?*$s[mR\_)_L75_.9N',(KWKPK8!J^[,':8,c8[hNnL5%43:s4r3;:jTti.%0UWU`r<RakAZNrl/.\\peQ)ZN6t_B?%]:6%!Y6\TI>t+3E`]m#?\56ma4&!ur*$&60I=ZbBJ>&`T?i1n(s1g[aNMdSs!^I8O@LW\d%uOX7Xkso!tliOj9LErI]:rh`STOV!Fuaq%BF<#=b-s#q^b]/#8lO5<,Ul@#d4YXJ&c!>q!R'g10Lo^Tca3op"O4>(B,tD5.NLoA5h!^HF?'RWieZYE(+iJBo9_>V9'=?a1`,r`%"jO1d8tudLkQWuWU#;&Qhr#8%gnI5iC#N8Z3)fGE+@85N-XnWK--5P<Lmn]V,S4(RYs^YthoeSuOI"phYZq/gS5."2UapuY*;=$O%WB#G'EBdfj`JjC,gr,\pOd[aq\l6+]5NDZDfd1R@DuM&gg+9Q++Pp1Js,7Njh+5mPo=\j.]`0c$*A;5\Q"Aam-DM/</+Ig4N51KB%A2*f\ZEj6m8Kaf>C&esH.)6^U59+KsKn9RE_."OGH@rE)#T2bBm?`mXUhOc#"_qKH+>0>("5m,BaN[iR$VgqrN^nV#J3r@.e&dD"%!tY;SpEH/cPf1s9E,obgk%#Tcrt-W,dE0?EfQ[ODqkNt"gmO0d,5A@SW>lF3NbSClB\i_&#'Y8QY%R6!lD$(;Jm/t(\t!&"^8;An%U5\[bL]aI%:$2ap3hOkO?VnKpQ\0u/('ZRe,p48QKBU64_8GIaq7HXjP5$o"`p2UZC3fB:31A,@Yf[\'=3a<%R]QhN(^Ukk,3ZT>%\NU!?Yos)cWNaog2Ll-mDeEJ]eC@fTM19:!iG7c<27mgS^>ph9bPAX=IQAJu@(!HXkji;,'t4/2^sPCX9Pu2E5c^:5#'rsgC%5Pc%"gg2.!,hcp6SAe^js!<,co"-tE*pG7mqopD8.uHpA!N[b.h/F+]-FTV#Im<7.qk"_5RmGf,9itZp3&Kg_3-Hao37T=#j1-97kL2;%^c9j@[-A$QXE@tjhgslXMa'J]4!M'=E-oqBB?&nY!D5pcNYZOsBB355Mp@t?dN"3s(+)`mkDb*#UUh%><+Yn0s7[dh#OWStMm0EX%J''iDXV1F!#Q2(7?[fee^R[+BQ1O*sEV@2uV`P-8%f?a:cqYQU?qJ)J?Sk;='m5=Jl-p8pRgZlOLpYR7h-#0^(p_1Xs)G-iP;Tq3%7R?8C_7%HJeH%XUE`PYd)Jm;&/;%kLmY,'JO*hfFdTn[10)(X\Zf+1;,=6h]Sq4W\a9*0Q5PY!%<W.6t'+JlO35,?NJIC<J6U7P@%K+@D7JB8,7VKk`GrpPBi"+7+KpD\@GOuU9p3+q:R:e%u'58JaAR)?Pmj2q5Z00u&!!%D_:TGsnJqNim>P.'lVgn`a/82+p.pLLH&%otQ_P'B!0N+O"NQ*K!!APT_W2s6dBX"'"4%g)(c:Ni'=r7Y=f-5.^EYVLM*.Ya1NX2?&0R)2WMRJ*j?:D\D]d?a`BD2Z8t&)@is_%S1gc"Iohj4cgbFU/jSS*g,pKeG1lD8>V89KrenAYs+6K\^]+3c[`8?Q(sGL&mf.H9bU$0G,a3C@mR1Jo51FK_VFg1!0PU@OlJQ??%%5Xt_Cu)W#*qU6*G(q;%r-(Z-]_5m\W;bEed@Yo81s4QXer8`5>DhNL+,r'SQqf5fd?uV;7o1#:(AM_gG"/n9b^Y3:7r#4f>tSB7%]q+=n2ugZarS(TpM[Q3`]V/X.Ol!>bLHRZr@#)@m`ophh(1tDlp#IfV_(S;'P1"RdV)])7E*$X0]bT!M?W.qEK`u_054&\%(l$;_%I3V3]g0VSf[YkdSP.l>T>q:_2md\JcfGcB^:A'<)0S@uG%(]iJA/+hIQ?=Zk)74YVPi%TJ9$W/:cGbK9%22m!OXC1lK:H:@91aXA%^S/E\mU@Y+42OOUFS3MSHXm>397MfDl!L/AKB]/Ao`O$t@-6fNTl^0n'<X2gM7^]n4>C+oi*rm2^6#3Zd:VEmps3EGA_K-XAt[P!%0OBc9&l1"sY_=2O3`A?0JNf*kOob^@LTc`\9;7LQ9_"IZ1<j.F8cE5;pa$Png(\p+`AmEGSrT#<54k6?9BAg7.hm@\YHWjs.]RTW%b^!'Qr$BSGMktBn6p)NMRh!T_3]i3ad=c&$6scD$ag=,4`,t_C;NjPu!T6X[+Te#Tb&\-K`t5Q^HZ1:V^R]S)^BX^(Uo.<u[f'Hi%9::!mF2HI&]58jWpPCYoIbZIj1GC<ESo>D)Kd9@S1BH^CmN9f.5n@oF+nODoW+93r,LkZ&[T*OPC1a8-AFU]p^U)]7/;2;V1g'\'%Ej:b8W!egg;Ws%a`cO\I>Hds6o(/LjOq.G<2O1*j8SH_F%Dk07&Oll9oT"Y$:nFQfRAQD!lR@]GJ)SU)(K4n^'\s6;GGe>7m&g!3%)7c=k2RuO1'2b<[aNq4,"s\hlX]6#17S)bMUQOD`XgA2k"h`>l")^:BbW8#Z%XjXKK0(!I\Hp4ug$9a=,'aO.X(Fd",^G",ongP#%E,k#\g4>/f:=W[U['H5r<NG$t9T[htc3K#q-FSmhC7Gr2^Qft;fH7LQ6K:t.NQW>Z>`u*PiMN!9+qN>W'f<@Z<aE4X"n$J_iW>J3%YqFMi%#pjp&(R?sJubO5+XE9JLXqZ>Fd<t@]/7<_c&&[Yp-ps,:"m&([)1(('+6bVPZmj]p#K:$`gT=k$f6VINH`6RaLEEWo>N-5%_[mCj'1lCQ3q+l7^$:R1H"PVHKA3/Xm7toP[XmITXmuUa,35X@c=Tt!!8kI-L-*KC[9QC:EtM3gXBS;3g*@R!XP;a=:f2eE9tRXs%hp\d4\[Ybnls&)c:egZ%q4Kqa<h04XIG0h$67[kjiUgn>&oFuhk+0=t/Bk2bi\lrp/<!bV7hRL_';0djco>6O't.)kF9fN4etT:r%$Vr&sg;4d#T]$^66f1i,5;ISQZpGOZL1N&q&1cu'8=5+GD79>b]Pk.UGSgX),4J\$aU`[t$]mE=G+J_5[MUQ[q%%Od6`u2=JOi-s%9I8Xk]+,j<!AM-$RRu"8Kf)Se?eH$e\HQtM6U3E3#Gd4)%lP=V.`+YZ8kIZK9rj,(BlipT?Yuu`1fep>UFk#3)m/@2)l\)L(mf:U%39pbCdmAr,-Auh]1m>YN'.[L`c,7m9PMgUe9=C4CJ]<@Oo`R+JD"^KEIqE+\YE4iA@+;K#7s0B+ZK>&;GU"uCm;Q[Q*$T?1k?<^T%NFiJS,H6@lg`1BZ*%#rlmeDj.^/Q%H(Z1rt6#^50Y_o^D$d_@$rA(R]VIl&j,g!E-.s`Y^$_/T;JU5Ve+(n.`quqF_WStYaWiKT;%UbsXHbX@@-\R-X.CkP,pgX1qVDh_:'H<]^ZM:>mNE^6,/W6C]MX*Ib`M$2D`Fr'3J2k#`;Ik2EN[HUHK<[7ic(5%a4YVENqF1;`t%9cKn1el`lIBN1`Z@g/`t'#QX!AVZ3oC94p7+>b-B8C8Ee;)![-e:&(90;qH+;cO/E]SUd#&IT>V5e:bonPJ%j_jA<"Esqq'_qI]4%9h?S-$E-CAk13@O!q4?2#>\u<$Prn&Qs0t>2<ZVDj'2ru#*2sr0NQcJ8_97p5coa^KVYT+dkn#R3\:b^]#pl+<k'#j5)L?lE!m&H%4C>eHa.()LchSBd-4#=&JVjqr_@=irL62SDI\G$#j@M^Ur^E%4\C"mL):K#0rJI^WRolK[0c$N8!b9eR`O%Op^DMrraG6<YcL#+g%,PH\@CR"UT"qK.dJ8]V7X?p&Q+K&]:WO20kLX8<s"kpdNmh#!V0.ae`ddg0"_ep-T-IE!2I4l&LYkb&mnPr;W=!Za#;0<UhK8G;2%?b6SR,Y4"M+Joc&fY`hq@lbN)oJ@X!Eeb$<r+L\T\I^)N60_U]6spa)?f/3l7g_Xj3FfoUGg^]GDB1fQg>3L,Bk6O/mXbXT5j.tq%HOaYr2#VcQGIXcG=@C$W>XX`q:H8ha3"WuGJ-:dr0OFf[$BG^#hjEo>Kptid#I8>UP3L92XZ.Eq*M2eqY,>Dga)a9a$%$I?OS6+J%a,jiQEM$NS\Pkqd2%8&,lR$SF7!'3k*L&Wi-Bt_9?9p):-TrqtA+Nj6Ic?EgS%\RR+?jh_E]XgT3T]bM3L>eJEW5ng:7QCa0*kIC%3,+!FD5U="_om(o</F[W-,WKnZ4J;Ve,oM'>rlW65B9LH:(`Ke5_c3l\@sYa^pOLV;:#W2.?@4(SXkZf"ORsT"159U3(Lh-\6'*]%)@'Q\W&S.-^L?jh-7+m[<5DsY'/5[o[WbK]<:kgRF#b,T_O[noJca;)Be\:d+t0"oekU6fgq_R,kh.Z(2j+'(`Dt4)CGgASSHP5H%9Sk".<c/@@elkd:4a"@N-oGa":otqtCn03lott%4^.nK?n_DZ:1@9N`e$3S^Q]71j<mU'O)mc=TKO@"#Qn@*JF)..];sZM:r:AiT%T_nb\9#J5_#13"Q_R`.1l'$=,;M1hW.].^ei(<+4K)9fG:_e,:37RX3$#8!ds1F>^*en\#7XL9K4`.pVaN@@ri.)6,9/kJ5UGe2P%DH*pYLIhqmj0SY+DE('Cd)rU$:+bV?d^15Mn<%MPZ-!sqAkr#Ogs-)5k^i^D^'6LI8(W^VrjXBr?,hW3.*V1HQN86o#arLRR/Mq8%CacVu;S+I;EnYNi+BpmNWXbJ!FY5?b\?%L*c1Ka*BF#Ng8g<5kn<\A'*1R%;be/*d7\h^\JT/>+]XUMO9-PW)]GWfG3IV9F+&>$I%_GfqZH@-AUjJ9rn44Bh3/pUOFlR<<snGF]^Wg4<RR9Ze5Fqm*be6b@?3GI/@nn%5=j^r#-6\_"qIS0P]F-Jb3&,UG$i,#!Sf=6XS%SNEg_,gtms;<V)"la^h*C_d8RBAHHFm-1^HWqY3I?a@V^1Weh&U@e%XLcpNFq=1gU#K'hp#L3s;9>2*%H7\uQ4HBtrl&3+=(]lck%VSA9)[kFr\qdT?:*%B\ro9RQ0q6sU@*ZbPY62-Q:<dJ*_2^0%;$(.gdp%Fb(N,k\kbZEbM;>a0QZPmk3*gaHSrAU'+pH2nETZcrd%HiJL$^)d6>/p\>:67DMJP])9d-b'[_6>u+-Vgl@1DRg_$obP;P+",aS4*hkp>R*Iq\Y?"@(WE6Nm,@O)qkVs]L@Eq?;#[JEA'?J;%&X(T#kVG#>^[)\)mW2/p$G8"_p#bctm(Y2tEqp0jM*$!-bN1*WcT#liFV79+?V^pKA7YZSbtHk#2DE@Z$H-iHErH'[QLp!Ta!fE[%%#PVtbV+<cl4!p9_C4(Sit8ZamTf9+Hh^\QVW2_O0,H9u_m<lnqB!^AoNj:XkO8q34e&stJBef,6T?AFM9!R%"OcP90_?YX12B)G%l4!Q5GZBV,fjikRGa9J<"MF8bTV*VA2q'dsLnX9g1Hm==b<D5-\9Tf2rkuU^2Ko1(pPB3HSX"h4l+DKq_g+AhT(IK7hpG+I*<u"N%$?6pkBN2K@3q0"iJG#Mj_+%lB?&Q<%V%5t/i"2O$'$lE,DZ7BB'.A8tC;4=Gn/N/US^qYhiI5P'Di06<l)Qi>c2G@fq@7]mf"V1"%`-b>PT$&3li1U^/b2;]bT?!#Pi$T*sq&6mBI.>D+!WnsA-BiYeWJW@Zr#OD[2g'V00DToO9H-<3bkkfA(UNUJi;>n9`</.oUkIOF%rSerLJ%8[a%S]GrM@O/@Sg5*QeHD%V;d;<;jl`5Ic[BEO9+:ihM]rqXIV/Bgi!t5j:me-;olHt+/3U7K+u&2MJ'XI;8mj2,SM'5n%r5U+A3$oT3SUC"bY?Ep3AFH-NhpHcdG=5)a`:>N4o%rDpYP=Zu)jUU!0X#LH&:jHgC7&VD#<=UGKPGlCL3Dc2p:nfBj@Qh'QVTed%O8:kM<(@H;fE[[^.+h*19hBXZeqsr]rr/o6!#juN>q4@Y6_iM4Q;kIg48B&5VT^c"-$H]=3K"+1CQ)$`;Z)pjS5ha?%_"JO0WOOW%?S9<]Kgb.e!@aNm>C?c$Unu/qb[:-JoYuU4jC+Lls*d!1+DLo\^oSNG???$a./B%@qtg#:a52gaM*V"YCJ/%!b>V,chG1hj(+_[4%<J_%f#\n;P;*NSrI=_h*Zdah[5NZ2<mTeN73.H/P1.qM(6<U,3<'pYiW;!3V9XZYIc3A[)_KmZerd<lFBUSp*67H]9kq($7e)*[G%dcg*#:A-<'IF(-^\T0q-)*#0oIfYPb4cC30jle#Jr4FT'GLQB6>ddfEK-m3$5RZ)&$gdKU,Mub_a4.`"1!jFg_Dioc1WOaKB_dUo%Zfa9d8MXE^%[kMZ99,usa(=bf.kiihQcIu9gS\cTmHG$a'6<_&[U29q!%`4b6%6'#m2*ls5N&"ah8%@X:D3jJ%L+iO6+c_MnEm-,%S&gS%(lQg*fSG97Y`)5$&6.hX-SC1fP2%#3-.k3\"nVh)_8AYP@AeL,-GCf/6_ctMi6uub.:(LLX_25!!-i0.0B^j6Q]%=aB[f'J%+"qo.PR+ts4\)H<]qn8Ml1s\V-;`Rj.V/Vrm6hgfmA:PjRg'$(kGf)&JW@mt?d8qJ1uuI>e=W+8&Ec=&X*lZ>Mk):_,J`1B7/="J%-Y*TE0.)Wd_%tA"3^"sX<E=s1DEoaB`56"QPT]%[`XEe*&f'p@2.i8,$H;Y4#1(Bc'G0!T:dU%pqf8Q"$K5Eh:M34)eCi9q.]+5>%LmnK=(l=,$OROtQ!&Tl`<'PV6i;HAA]p<":ae/(L<$"sb?@<$9@DB;e)kndDLPmR8,T5V8-#Ud_1a"ad4AsM+f(JXtmiQ9X53EOH%JZ&Oed0:hdT)`*KYOeAfm0rISLOg1M`(hXJXF9:<GV5h$md[O30+Qi'Eol`YpDBATb+4>A)Wouem</UR;)eYe0l91.3a1g(I-9/T%CL$X@<?%im[[=tfK?'H6IP:/]9=<JlJK@YH6d4F^8iO<C]@6j&lmOf)[9*JYG0!oEUQ96TPFq./7Ljf!+:*C_Q+Om080JT+6<)a]%(-;DWkV$";h[4[%Qcla.(tf:D:#/X>)sp%DckOL.kn-/Y_X?(aJ>X6//2W>kh7_rZ^OW3b]_2'k0#<C(cieYe3sI&j65/&<;`HT:%LPA0.:$ha@<$RXW-nJB[3G>sYZ@DLg=[6l+8gbA's'(Th$D^6U<IHIL$4.5.i9M(pF"dO0XnusdggT?N_Bo`U7)pL-mEZEQE9Z@0%.B$bZOTd##9`FscRX>t&n+/K?)IRb3SX;FfNgKtbR%@rIKO5=A8n!tJ^EDte^)<C7s/R.TDb?:g>6Nr.RtXFn0)-2e<+ZB+F?4@R%]@MS9Rfk0C&(WG"HukM[J>`:ZD"mAqL<Hu0BfT))pPXQ(_q:ENT6hV#(;F3^):7?'%l4$#@5-IjOT!&c.KBO4``GhGO:2O+h?u^=%e>;"uR%;@k`Zk[_e"nB\:)*J>q),6=8b2=gr^4C^=TYS`h!&ecF&qcYnrcUgl^*=[7]sT'g>ctZUW^)-Is^"!J?_#Cnb<c_BfnOj%P/Ck/_:3,V;.Y2$8ik2%<9eGk)mdGaYU#j)V!h>8F7jd<&=bH;-_E*(.l(JriWTM_AlbiG@`nhj#$Z/8Ae&/(oBDHB8@`^^q[F),%-l+<<F4.m9Q1t0-0qbZj6$s@49n7Atj7s4XlPkj@R`fm2-b7:P^iAKucl<&GQi99u:2/mV"@b7J\s3,bR)`5f``54?/J\*3!4+&d%>U"ZV/0N0SXHVP?RWPp&?E,5HH9ir=r@/<>K*9CJKO03/;#W'3+PMYB.Bp96@(D-d7bLD=2F:+nCs$l0ADc!V/Fp2,gV_Kb>.a3f%HK0+/0VA(>`9HGYWE;=%`[EZdSV;&-!,'V!:ZE>_o2q7A<,G#1U[T93J2Sdrm;TQi`p6[jXo._WIK?#.]5kZ?GHYJ\^(n?a=uUH^%#*_Yc5b$4UG9Y?8XUg%@p'Zc6AU@_O"&CBAGVs8OD)Z@#bXTcbq>I2^!IU(EW,TIuj_fToc,[K]>G1s:;qMnJd74^gg%3d7l!cc"%.E!="_YIDcUS#<5&+Dhjgm,?Z@EA-fg/YrnjYTlHGcCS6ZZ1bh!:?:n)Ke5dIsfc,57Wb/V(Y*;_C0O@/7!RM?KBliZB%,)^3^-1%,(4G$Fk$=I5T0_ooPRtFp_.#AH%U/qq^B,?*f_!D"`k\XESm$`e9MVq(#nuHOQMkL`E^&TZ8)^)^7l&'e^)iKB&L55!\Rb4c^3?c%^X:CbmG\/%qrDVjnnQ_=_4SC.T%rOuS;?XJ+j-QkY59T!EcCm!!mMQpo?B8p<Z*Rg*n]n9BUBMe3h-:VEqPD4RIe?qV0H9n37m\T%]Qta3?@^f.HNtlXpIfde1+4IXaSRr<\BtA6_&S,ZI+Ape;uX7p/WK%8eHqNhnbpg7qJ(ISMh?YW3+2+*9n%,+0f@r63%pBXDPl5m%qW]TJk&3$:>4/1?UHNP+B3B.J$Dj(c-g1'B\))8l/,^>75DtG0*Bhk9P33n=rV(JaqL.B/'[ngqi\$psYA35dVp6qD/ic!f7#`$/%4j98]o?$VFEZ758?ak)aOg1pJHWrYoMtshG?d/33W^iuR76V_0k)GkkrBIiJq[7u$Q53G<J0mHBaCQF3IP*LA5#>R+'hatdq9`FJ%/o#dg*@Z1'Zr"&ndFC3qQE4&:IJJ:TBe'i3"cBTJLM?Th^`>Y[\VIBc,mF/sEOdWSms:[4k5&^]3To>\5&nA6MXo2R,-J\+Xq#&n%%'6(Ur16dH>C?GrU_[Gs3N>$];Y>H%0*OFb3U8bI[fA(iIgb;+ZhQ#bg`?Ie211.MdL#4CH7n=aY1e<"oQ;g<@#t+%;\F=0J,?=W%GulRF*PO1!?W/Ci^p%N\2>]SI[e%ER^WrUSprMt5F:OHf&W9pGroiTZ^i8i&GH#WF(4hC+:>d+.pYgD#J3Dl)(VN<U>eWNFnPg.-%mk@^C#1NX7XR\dX?=,07SNHtWW:H.e@1,pDAtKTTfsB?T/W7OV!oJ;9MMfV?pma<Z`QJ"$W-/O`"hTWq2*r=3kIGq,RrlHt-fo5n%!\fDH4p,8>o#^#/&*BP@aA;D7?=PO:o!O]"#VY\=R""0I&-\Blrn(dT;Di9OkJ`DMQ/k$5!()&taYV^4Ig_Y/P::_1;S86pc@/@F%i"S4o$-Yr*G&DsK%V>)QE-h>-8Po^pS[ZHaR6*a/KY3D7J;Xe,rt=UT]1hE=.k)^>;\3#1+&a#9AtQX7?KEoaCj4#B-L7?gGSsrl%hoLi]&["_G_SmE?IlFJ_9#7"S*q>JL9;U7II6gtqbM@fh)i/$0&mnDi<V=YWDtU8n!p,WLnaS=>gOBj904`uA>QKgi%\q,M==eiW%PK._%`Y/=THk0Af41bQ'=??SOq61HCLKhUnR*1M7+74^HJMk^6%Z9aon[b7i6j=rV2LeK&aq8;[32BLAXfi0YPj?EK0U%bB>1/6,%(e#'&7j^^9jAWg`:K?Nb\F^g$]pGFJ,24$^:W1KI(l\:97q4a[*@!3MlK%Q>W7@3WI&]!g;^MMoguhn8$@KN9F7Q^Q-,&T7qF_Fc%$"[N^0oa)ApgqoKi,:Q"51^$5hH\q3f(3e]"hf^%0FkSom.8:!IjBB+D[(8j?MaX-N<M%L\[t!!aJVA`"6^:CFR01Td6oP(L:ppQ%U%S,@8tHj"`UB/M!K=5mEnT42H`:&h*[lrcqT"+N`XBiKgrWb.\=Lar!5eti]0OP(%tW"(RcX!-nOJQO(7oPfhpXljFr:I"Ior'U%.9*TfhfqoQIk2rW2eZ>V/bS.\K5>N&3_5e>qTBugo)J8`^+49"U7W.M7!+Tna6%D=d5VW+k)orq[!)LljK4ecp82!NNR*XA6Y^Wt%e*D/F1S!BA'Lj8>^@Lpo1]d3R.&bf]guS=FZfF@.QJZYjKa5RdTh4`;L*hMDC^.V,*7)W+,kM?h^?*U83rQU`gGBK!\M:C@e/eu,%fE^?I^+TKfgMW\8DO9Wob[Z_0qc<8oV-SD7ql,41Nup5.91\0j7pr''bWO3^Y@gg0'G7D(akiB^K1Ip?CtB$i<:Bt+4!&pW+B_\a%+u@B*acSa!12s)th>C!L$C=E_D+Fn,e"te$?l[+O'B*s-"/=C<q8^aHe'gVYrTUot'MbTDd/5]I\p=+62,'Qj220<P(+7RO2rTZ2%Y'drLEcQ.=J<@?*)gr+\rY=l&m!SG1%^f766L6EFU1SoE*pi(Y965UB[jIW;K%S]`Ju^H'`MYukT)s<&A;7"Y[mBnQ@Pe5u$L<8f%)4Q25hA3kI]hms&<.*2`I"o7]4lj;a!^,;@nJn&sj4EA.'8gB=_"]]lmbF/hWb0agIYNkM[>,CG,X_-m7QD2#,=e/n2Wp5P$_KZ"%r8cY`i'4nn*#+.Zd\Z8f;7f>+J%VCYgf3_TRAX'jN()f=(D3m?X=Z&m5+$cVk4o"/=#sETa;hqIg0,1dIg!nqJM`J"5S2#`rOgoK%Wrc,"j4R;@<IQr#pE)\[%!ks.H26rVrr0OAJ:7@qcBPUlmI%IsHBfW0TsmqpV&o?'4aR0H!5rL_^`"tKc[dtYdT6kOciq_ST?4nE%6RT`=!`srgq=c'?^N$OFD'l:<\5g8:)^j&)qaCO1"I3EgnEs8+Y5F].QOB>?-,*[!B_BjiMKhAhmg>QoZS(/.F4qB,*e7Ie?X[#D%R;'6a=&1,DLq2N4aD'Ced)TE\hed2Tc%.$qQ\Md:S'SES+Vd]P[MqH+4;Qoeoe'2A&;q%-,b:KLo"j#PAZh>jT;AR@a"T`+N]iW'%f4UuQbd[':e,3pH"WkQL`Y(GG%2;2/4+ON+0H2Vc:cMWS*s%8$1oekJl"#5RO9@5(8?@Z'U%W;oiYN-\qfI),oT!(-q*kN<]eT+0%J=TjJc75u,1iP9)V-u>=:K:l'hif/OZSDSX[nBo#YL;1Ul`Dni9(G-:\TeW(,(2\e#6)"?XbnqiW)_Wm8@'qP1hYX-1"$:')EZk4%IMJj"XeMA5Jla*/V"&B,i+\O;OiH*N%+"^P%$;V#4^aV:J;1Tm)Cr__5F,!)-4\jkAj1-foTQ6o5.=LeB[<Z0[M$`./iqr=6NY%%%#RMA__rK.,2gVbHoak$:Mk..s:>:;_hmgjFLt9$rX5TDtkuBG<ON+.JXRr+G9p*Fc2[9^*WQN="XWY;!],s_.o%h7&PDC,$S`en)%Ak8tQ@ag\;e9J(J"7P$/4I1qf9$:#]mIQpa]GVl(piQ=*71-84BD&5!+Is>oNO@X\riLKZ377nXIc;D<*h#Ph6.B*F0!A!hRQ0qq%rS3CS86lgA5&2-(V#D,"hX^[;ABo<$O="TM[skFOA>(S"D25bbUkr]3pjeKm?\c:+UsD&ur_eaq+a(<X#M%^WEd2hu5\Tg]YPcha%'PVI[;9YLPIIT&:N&X<u+ckjn>RS6rH=Ci%LpZttIU\3,qR(WP0L?+(J*a#Q4F!GqL'0]=+"j&]:+p17oV'Q*9p)k6OidqQFgqn#%>%8Ucd@:NkF5On4j(I3[l/R'0DhJhgA;Ks>,JSI[+n09+H+UW])'ci/l2Nl2Z@50:Di=*:643,'l<))d_"!U+;P*]orQQ6*]ug)G%Qi+Lp6OGV"&8h4jPV=8"Wp4oCB'L54E3Q9SL#uWD5/+rXd_Laeg`2p\hO!75+I0Y#;b94):]K75N-(H\lR^:8F*/Kn83,"a\#Mk8%QKJ.h6\mRp+pD(Z"]5fB?4R]35an1GW5@/#)C%E>Q@h6h](5cY#:"Y$A1fb#osFiKe^I0A"e^jVWkoMj9%K&Q!)e9F7k+tnI596p%D-/mJC9-8Vc6B(3o2`PbO?tLCXG8J#Gitn(OYSEi^.oal4=tG(!)d]'4%oCpU_Ri=Zc71s.A2mZXnq@[iVfV2atad:JVD3OcP\7W%)i$n,_$og!Qb.39Jp3229XQZJ,l&Z#hHs]\KBi2iQnkGK'.J4u<fQG5.^NJf/5kifF40jJMdoiVk-9;LEd)M$]=9tn)rIbPD[ptS%&;Vu6mO(3$F(\.,akbZP,EmK\);\(n5I8:kE^9ebeX7Xn/jl[`'?;]`V0llq2sYl?Afl**]*cOB"omVF1an_R>n)5s'DJ]MGH^T8%c`&S_1VS3a#;#Glr1b5c\c;:XNm8l>akcLU1c,nF`cp0UNPqA!_Ts,sm*5R)E;/YH+28=S*u`oLT"*7%@$3IDR.tdJ0+Mkfj/9YZ%[r9U=`IZuRpZ$,Z_<\Zr2nCM2V]WAXG;OO0otpUbeb`V1io[['L3H^`OHfb^cWtI\P2Y6YB?'7]B3h.nmL$qKrDT=QpZNFCVpAth%lqE92Ak5LaV5m*N8:*)AcULb<c&tPi)')kir3[3h'eJ0(\q1I]+KkY+h7L<Q^*W^.JFR:"'rlZ^?g)3k`/gI[:5>K$boFTu@ZF]i%-6<_Y4tTX9K;,0FXFg."1-"[rJ;8>F#2r<FX#HjWc?%\Fahc9MPW$?jLJb#L0?6')koALgBtI09NVQo*OWO#\+]G0F?V&t>+AEi-%-ts;Wq,#IROLF$uOB,V+F/5(Ye5hZ#Tm&er9iV^R'?aI/Zng&Bpl.`]CECma^!5A18:/CtLFQ2Pj^clP<mg1<%(U4eN&9+'Rj1)S%qi!uo[:iG(@"K(\P9>&4Qm!2<O[=!!_IQ?\MEDMMUsL2tR?9G,,/rDmG,uM#\liTs^t1j8d5Q=pY*V:Um;<D&Sa;iQ4LdCofk;`b%5DF&J>JMsDg@Fk+>UR,@l(Bt3R*MlipOdBQkl4p2_@Xj>&mr2["#R_!arfdTQ+fQ[+W+;#Jp4Ra23*66oXkn"ILC?'d*^)0D!(-@%la'%\I3J/5QJCui:dO$kV7GZ'&*V>4M=h[6Gh=F%6)\Pem&]QN5(I6ErG=QW75\s&s,n`"E0]2^kV@2sGIu6-A-Pc$+nt=m)*o]j%eqmEV!`F-DZl7lc0sk1Y5Ji3:`Oo,j?)MdMJr=P5oRZ7`o/-f2ass&=LrK;fqJnaHdDm7JP8fJLS?:>$`oh<i,=EWj;or\WebP,p%5MTVJS%mmHbV(XkJipJ&6I=I#^GW:_cX3M/!Fsf==;J[nbaI;G[__A]Z'[2jmuq&&;Y`qY(sQ2^<]KYL2kmr&h'4BsmnEQ&gm[X@%.q7aB:HLP`X.JltECM0L7^#fT%en]1GV?Db[s:CC&N(nCV04COAVO)cI_Aldp'9jU+T-JXPHHFC/&MY(Au)l[V:'!;[-5n/XhN30%ZrRU!qXnejWK4:mR<=/pKo_N\.[nC7U[fG#;&QF^G&X<9'5Ie_U1)3JV6EG,-t9.6F%0u!O0u\_4\]RSf3^o]-(hgj@D4MRB/;&d%X"[80ioGUnY[[CH"u'O`5jC0dfWu&He]XM&;#dpHGLfZI3*G1)7OE0o/-k^#4BLmfQn:AH"/G+6Ss"7`iJ4K<;%hW62hZf6es&*;%hp]B?Y$[!K1VY8"j*nPUF8F=0OMQP#^^JUeM.S@(Cm^[UV?B$;Ot:aX?.Dl)r`I(URi&#F5,3iKHPNY`V9G+?^#Al!;p3G!-Y(g7%SaX(iM$:p9=kfeFJVC4*qd[O?"8KS@c+9.'A`)naR_!UHP5SL//:Dul%'F[9m*D<"R&VRnjB[</4@7`4?OjPN@-ce^X+"d6`"=[Z%T&4pWW`QY7MJ4s8NYKrW[#HL]B=;>?isJTLO>_'[6;]1MmN&?V7<s@7T>fJ%bs=@s`d4^n20H)CmM,u]fN5$:,OleMZ<u_MQA+#s%JMLQV?(K*V\Qbni*/ST/*W'7eTT/;BY#)%E(u%b0R#L-CXssT2H*K(u<["';,M5pMm)h@@@&G5qhf:69X:os/&J?;j:Wd<`U'a[<%Z-?`u]VMO&\2AV(4u6l7r/ONhHV9:A&==_#0(93dAHVU6+s8!:4#$&b_nApF[T!56O&7+qF0R(r!605qBtS@F^@TS9Pr6Z(2MkaD%W4mkcI"oY)VfR:Ag\dPs%oWL[CfBR&CgX8bSRsVPcNWpZ*jfeRVdoZ6Q54X4gbeA[UEiC3p^Y62d442JFJ0@eW5mQ6V2_F#I<OjQ%0ApF['!#7=n<8p7HXl?UY@L1u7i@[B=;M\+8BG2<r]B*"c-mp<K\(*f")<9p,BUJ*QFBD'N%Z&g5(%I^9l^ki#B[M`Oe[!!ajNV=%d_@NKKJ=b\_X\jeOomG^f)Y*'j_M5n9^,8GVEsN?_l_%>es3E&?"kn\*GuhAZoeS]gVYUW8,P*s+7h@hFe5glG-dXg$q@Y0fLCTL%F1V[&WTe9X(4;^aFeQEl]lMkDFS*6-NnP>3_j]%i3hs0L!gqL<(7i.nN\K&+6H?+*1\#$"Fcr6I+iTeerg;9dq7HaqrXCQ]Vl$lW%=\G<OPCXA'H$o`@ha=t0YH3W8bu[2=&NfQ8H-A>,$@sqDlJs/;A%C]]]S^=G_W4R0I-]a)"3D!uUTTFu3'0bUK(>qffi'qW'0$rb%4Y#;I!2a$FgrP:ded%=+DGKgI-+p[i'aD%*X>;h?-XL1fbnb`OfD*R[Lo5ThUnldALYF4@=#?B'5bk_Ff4\b6&g/-?ctN$EI^RnD%#B'UdI*m`%8t.>%&/_mgVc3dB6M"Sdfl%aBZn5h'[CJa_b$?,L]5+e)Ib%g;S.F)FZQ(2B=qS\:%b&YQNFp%&(t/aoZZKmIUF<jQ%g_C>*JC"/)9jMp$51nM/p%2W18D@L7#LdC_A<dT$Ani(]gI0.-ff)p;mFgX6+8!GJjnXlrgcISGE6CP_Sq^AU8+4N9e/S$\+Ui#H%/J&2FTdR@]o"Gm"\`B-hjG']A#hXl75:]qTP]IXEC\YDtJ$3;/f3`%rGDl6(KXJgM.=,gD2$C_]KTE"=:_Qt3?p!OVMI;1WUYW')%j5qdB6S%l?Mgqp],29u*XOs;1Ir>J/iEco4Q8Q%XKg`fa#?T\5ekfueiKiu+C("T(.skX3g5Z;+s(#XJ<Ei%5Sl3%+R/-lW?gjlN%W.pO-.]kKB0N_H;;;1M]M,"8jC^HmH:D\P=YKJCtl<5dY->pFOM7'0o7.b"gcE1,CJLJ>3fR3I-U?1!FVpfk3=@b.ogCQ$/@1!s@%V7*@+1<h29)Q(g8,"ONC\RloO\+P+4bt)P9\3M<GGT'c+7Wu8R'`k7?]kO2&AY[cp#]*q=M:YYL:-R?IAO&>@OHVQVD_6O.\/<2(%`+&<ii!?h[<T]-oND<WQKe7sNZ,gqq89Gd=VJlWboXe8=G=P5+nGB*i/*#ot:b)*G<'f\dn#(oc\q4gr@VEq'3pR,6*51cH6YB[j%B2pOn8I_55"eE)*E;LP7lO#\.HTsB0eeN;<C;I#fkc?;u*:EdTcrjGsU"p`9W1gP8LT7!?:d\l$5t>SHG,_1AY+V!WZ1Ttrg'u0d%'kT6HDqf:C]Qkf"mWYEYR:U[`a3qPYgSZ'qNI!%rle?DlD<#lcN_oV@?9kF.-@<kZfD$7*o:9J4d:p#2Ap(#>he"TF^d\r*]>eIa%/@b<HO9`D3EmF[Z_X$:%2UQZ*3U=:f?MV)X%;+"aeWMq[*Smr5cCV1Q#:Zq/m-WK-J80_=+B\?^2M8Z/pTlc5pPp.-'5]Wa9@mJ&%FgJO/9tM'ZZc!uk0=thT8[4cTZAh%?>$L@%eQ*6`[KM8g=P'B:e$WTi"Jo'R@(X/s0^TW,&@5C=g(bQ5(R#e;52+Lh_SMH/('c>Q%F_KW?\2'bjBp%XL-)P]'TA:."os$Yu[$FG^A,=^.qSZfM2,2N"(_mU![ph3gR2>Q9<IpjW$DqrR0+2Q>@Zri:lW4nThIkH@R-lZ*%pKX[h/+_2rZc2a:8XCu5Bql)!k`klaG\-/Vc!U<\h&c>#lM)^Wmi"1@TT3r-9oM(gBPMd'@*QfB3(mQQ0X"1'"IRc?lq"D52,VOd%'Jj)'fm&Ua7ba5<g;Io->1r,H31K73Yq6'6IW]K.UFb]-GtX'A3PDjT"/%+`e&o^X(4WEJm`#!aN?H5L-eMWpm90X>-LZcK$LNK+%>sQ1\/AnE?NaC8(2PCF_._"LJXfdVMa#rK1DX1k`4ZU`Q(j0Y58dt!u$L>cAjge?m?[8BYmDPS<ah>q\@BCVsZ*#Pl<t&6_qN+=A%aX1_[Pu*<^8sTX$#$T'[,0FR'[dqI(QeZc5(5b=g8uIBpY..Z%fm+QQ3b=XQqGeLe$]k]W>:d"]1=!7"\p@mhcF-S>`hH,Rc)d:4%Kq5o9bduWp2N$KF\tjh"a#SK,f4AKe8*S]qR*JGrk+&Oom(Q-[dRH\q=lW^"2N0;5aiJ/A)IR?Ph1oU(O\p=HfIoVH4<n?4/XZOn%G(VJ3=">#bgXYJ(P*%K@o0^BrgM(T43![eW@>g?:m?5OB<sm2.\$#E$`pGb/Ze@TX'$jd`oo9&7JHjE:eb53V5smH^3NKR/G080,%I@G/<e(L'jc.:I"[H1o0XUAakK'V^e2VZDg\3mZ9GJB_l?(G`j/1ZG+D\,4RFlk?VU,go`<]u!/d%f@(%^()ZG@Y,Lk?.V1c[F<\%iVbHGdc*@?_eo#EZ-DUnN-@SV],kjf*NHR6iR[?lh,?HVd`FRDi4=4o_`*19mLS*]*_sHhMCeep[iWiQ]qZ.kT'P?O]Hpqrol/En%cs-A?>RtHYMjZ-^^eDnZ$Zrt+1#A@MD"!51]jfXL\$WIhEb1TUG-^#Z]t>C9+e(P:f>=fH)/OYR(W+Q'c^XPrn])32?#/d]Ph!:s%GRs^uNRkC/M!=XqbHc%8L'C:rY_:94&4[sub3;.1Q!Sg:Lq6_KG'E-VYQo6k1!sL.@T\(rDc'90o>UgEpE54Xfj<M>N8RfpTtTY)%_:_*_Bdc4PGC8!OL1@rhDYuCEdr!YIR._7Nle[@cK3EP),91,WQc"F,f"0:1!B!l>qRDTDeCWS@<hoe)ql<89rS9h0.XM`a7n'Fs%E##a7@]psj^tD:t;Y=M-hC>h>2hp;?VA6*(?NX#X`5_]NOFUHG1j.8A7duBu)/jI_$o?`t'4EPt-'uK:lES$g_EiZfm>`7T+L`bQ%1Rja0QGW$R\$TEJ[oltHD(2"C*CM!ts%"T/@9-h*V/U&B0q7\NYb-)<JaWKY(55Q<%2,/D&ROpe[J0A]2-=fed`9r-*jh%pL;:/L%,2^4ll--Og);]1L6!K=T$qG+ciE0o%J5q%K3BA(:NT+PUQY^[FPoV_9%rqm<(7uLXaNh`s6O.-K^L"X;V.]e$R>WU'os44=qJggg%)R9isYn4Hn/00V7c-gm1H%.mR$m`Wt8cuHm'`"Y.^;kNE%SGA$7-S#-TDW(nlumePf4)RJ*OLu#MVSaag'p)kV'uF,b7n=;B#SX`%VH%9uA3SS=_@@TeD1XTa#S5I71FmWQ;dhVCRNmO,C7?E$LMHS.C9`0?$9MOu>9hEj8@9aOkbr2!WP7!o*frB;X0@NX/1TurGTgm\%Pi6E2L'^b&*hPN;?2?B.G5JKnFur<`,H]`B5-%4UcJs!'%'B^hUj!U8]rjMc+pE:o>]0)c=ZsVT/0Nj2e*ND"dtk,Ld3>?$LZLt^%P54`_nhqTp1=JZp24\.!m?l`B<MLh#JO(kkmC?T9j]:id!j]gog,5UfN=AYV8pa<UDq3M%cnF]dM6H9V1@J1^c$iRVI3)#Q]!mma%N6[PAI&G+^-cp4mKj/ieg"+]8;hpiFo,_o=^-9_-jOW\`gX@<dVW0HmpW_i,h6gNlHe*^aU>+<mWHjiap?0KLQ^?sJpZ3?2GI;Vp%h7?;Kk1+S.k$^0KVDF)3e1BChWp,IWl&=L1ZV*0H;,5J'??WEI1TI;+U%32UASfhdp01VIl,]U&Xklu6SIqg.D[>%+Ra*=[[qCg^%WMVITVkIqgSuV%6C?]gj,C?Ad1Wm%;h[?oSC-&+p],JBNX.%>n4]d!3VDG6Ke*\747l?j"d71IWf4m@A0'V80]R)N,dJQ#[)nDk)%Wp,K)cYthm:=XHeT[o\`]L=]K\So%)C:]BQ[WOI`.Ob'E[=)-*D+h.YWp,Hd/B?VJl&5V8g?Q@Pdhr1*m(Jk5BXMA^&,a`'F@NZ[%qWN(rC-&-\1%!-)5-!k+C?bBaAbTq#,@Y=]bM#THSW-7E4]KlJe^@Tja1$BqGj[.T-ihbf0@jLj@b<4CF6Vn+E&NKb_C+*l!dba\%5-N819:"GR<p/"9H5H;=[.\$7%?i8@das=_fPiD.Ys<#s(+>PN4WAT[[7dr-JZ[D_2W?*Z0&bV,(H1RCmF'*i,DDD;Z(R:o=*c`h%>hY"T@-r5eWAOtdgT2t^F-ICq5Nm!;RPj,8m^2GnZKIBhIa"@nL:O[r5&Bt\4,Z]`H\HRMh?e)55?U26DT;c`/ciq7/T.h5bak;`%ioT=CrKq12/Io@u;l`m)3p)IP^2:.dfJG)m4`:K6NQ/WYH`gtg^"$8UB5VQ$^TQIg"GW64mTdpkX4c3b!VfUH4)/"k\)t2Pp&%sV%p[djIODaIB?\b`j6h="lG,s%6@1mq?6rl*<rTQ>qc3[]G8$:DV29)MJcM63lB'VUa>V3V-JI;80:sJt+L2--t2cS8gDQ#E3Ri>kL%_RHE5dC8^F#_HO^3cKk$1H=-W4AD&ni9VqE#`;B$RoKg!hq<^6XY6c`3.Y@B=KB*/R$*urnYrp][f9An#ctPgaMTh.q&qH;f$86W%G+"Na8+c+<C#cj-$RZ"%CHh\,C2cms8CO"ugiO'LCEqHeihX6#SR;_?jk_IF+/Yoh%%G?;Ht_i=U%O\3-iRE-M;mf)MRQck7W:8d%k;53>C?62LgQ"mU:?%!5n`U+o\r^@<'jg*Nq,[n@4MPY^;f%?M:++hrop*O0ghe?l.js+hIr=p+-eqjLj62H6I8iCr!dcsWDiOPE%4t1D'F\-1Xghf/'_cM2ge0Wd.BQE,Hmadp&)I1NqXZtdimT[rp-C)7YG0/JrbbJ8:Ksee6a-p16L],(niLj\J19_@DC+:>":g!Vk%CK0-(l$KQeS5$=m7dl-5E;!+1$_`ZA:=c]&H8t'UKql-.;"'&o/Rs+^W4q(QU1`1[d8+,j5Ra9.c>-;?^6u`<7cO^*-t<%7FKq._%MQJI?>,_e6(Ud96@N)a@mCX<pP0,.VBkf^u9HTEMG2GKdKS?"@MjT_bKi]!*T]h$=@c#0\`"f7[]4F[E*5c5FUiQqfQ=>)u/[=OW%[S7c0[-qJQ)V;jT\*9A#%,Y3Khp?7E&[j#;ZFaRu.Af>)EQ\J?"D*sjgr>+PftXe8EP_3^_;10!m*(U6ZW6\2?DFn[h_:n-HFBhn%<Mc%=n/ieuI&+t[/5">Nlc(5spZKZ,_d.TNg\7Q-ZBWO6'DIj46F^5N(*YWGNO(ViL;uI*G#-C9l-<^Qbsj?Uol(C"/5CPs39]cg%e"Bi8;\'[(l/%dBiPiS1m]:1rlXXkKQ?hlTr.+6)9T_+.IGr`_WPa_A@ABmAoLM3KNk#Oo.AYZI0km3cbc0BOrh-mUds(c/V"X8m%CKd/R/O*CU,!8+F7,[FRQo]:`=,*V7>u*Q1(TY]n0rN.0l>-Esp\1OUO6beLcO?ddKTr#(QFaeY1*nVQ^4*&K+AGinLDT6<hBJb[%76X,6.<bc?PD_+N/$j0Lm_lK'][rV1I]_@V)"TV(45!<Y'*_2Z&R9cF=ulK%1/FDrZ?B:'-3O&1Ek52nNi.'pO'1/uQ]cMtJ[:I^%0eZ,p[G*!4!FaBTNOH]k'fJ?@[\p6-0.#),<SAFoND*6fUYgZ8A*T"JApGhB[^F8P!)3FTamH.Wf'UhKpVGSCVl>\:\)#e;g18Ch%\h7]"dm.5U'A`X?/X0&>.KqZT'5o9P(AkIZ\3I$@A$tSO4C)+&D?m0416!fpm&@&[ZJFV8M]=9oDqn[U)HV["^SbhBp[TA+H,.d5%GL)>`QhU"+7PO!p9@b&rf6YWaZ@;7UGon]5Kf+C(lc%FE/J+<F/hK0\1#8^h%QDp>bmF\ulS7/E0HG&AY8Gq^3nS%"QoEhWLK>/U%*+,Tees6'SY)H8%LgjE*b+L[\BJpE$f"Z>nmuNi*ik:5'ESRXW/@AT0Ar>tBZ?Q7o%b01f\Ai9So;9XLOtNlf^N`LBe+Xj7nAa]F%XmB!?TbL>(mgVoMFmljr0*U-Fr\Sa5T$rJAhO*7FXL%dc!K5UoQaXKV!nc5EIlF(Rg@KaZ&!GZp`M37*=NhK39"FGkGGr[-2H>9N%CB4#h]!j(!ZOqMH[q_:]=BfrbWs0-\rq9?BqY;qJ!Mjn;DG^RN?,NqQ0",=+TT3#G,L"\dY\#\ubDCP4@bXoaC8SqD#&pEYb*3mX%S>\rsaBMUERWh>m/((J#ir6$<9'8?SHmmlA-aIT;.%g4?XT,7eq2DTdq`g<`rJ>@f30XroaI`@Wan/Cn[$%rP$$]Yob%Hrmg]*sp%QKKL]m8-!Yk?%(j.%_ie!'=2A]pa'.VIcebf]6#HICpL+T'NkP9!5k@)euj'rNnr@(H--8gXbk!5O5D46&jDqkPFGQ;Ko.u[dSt!%TBg-\'f(ce2a#^<A;9/DrQO+-[HY5N[Q&QqF8`1aL/=;=S^-o7;9?5$F8^&(QWZ@NYqJ21lXrAfeak<#44hgT<55P1!&6Ibc[%jr%4&e.'f?\E)XP[d,`OUHK43gOV"g+V]h=;f>iZlV3gZ_s-CI<kXH1l3[TCo14)npmGoNXWH:tK4ooZ$(j)=<kj:\EK<4MEu.]\>[&%cPd.ZrB6\:B>'s)mHEEk>X.Pk=bDU]Xj6Sq?;MfCqWUaff_SjfeST9tWIABMdamM/o!s5#b06Qc?/(t:B=L^3\.CVlgAP8@lODJ"%MU_%>p!_E/Xdn[cnt)m6ch4Uk+?>R$f5pmAAZZ+rGou5G=g&<RE$!mHDt22Ga1$EOKCPpiRoaYJTBg.'6u9TlG-c8gX?Ci6o=k+4%Ib(FnmADFNh>Rh<HU$]i=g'dMG7eY<Y+PBdIQO(?\%sC#X7Q+0I[Q4:Wo%..j'*HqgN\(_lFDA5*6"i)0Y<nA[o.%93Rpp)(u"Lb%5D?cZ:\EJ>.W'5ca-=V&4P.p%c$B6knbuk?p"N!mlhY]$m+&f;HENkA`TGk;gR[Z>fq'^HF8`O#L0%.Ce!uImY:=Boo43!DT>b$[%2EKI97$#H-^krl]nm"EFND:uaV(L$d1FnNEXeV9^R\u+rSlG-*Y2<i2jgO@KBb]1AWIDJG*i.-TZfVOKbp;bhF8`0\6Y.Q`a)h3\%$Y!+o]\BuGeu/?^pg[O!lY#;^@39)'kPEm)@<O`a:HOd:;uJ8JCH"6)ce:@[WT(:5Y+N+AO?Fo"<#K!s&+u;YQa'guh=71cY>k-B%4cEd\:Si6^.]01)>Aq1+Q7_Co==e]p?+i8LLqS"+VnA+#<Xo6uAHJY1.Rb_sofIt;7@;9qi`iu\&^OH:>#-6&7eO;;EV$idhj84*%+a<'.qKNb$`tO%"pI/W('KfAMQ1gib*'GCR/f$WPT"g1'[,2ObUZUTFaZZ.NlQ5SC(36nuc2-m!EnIGeF2Q>in!_m&VlsI.^CO%^%<r6W\h[W,X9&sa_n58_$5<ar*hbQ?5F#.\::;1=kkM/CE2n^8(MB9;<VW'GlAraT$I*_KR6QdDZnt,e$NU'F7h34!ISS&ins'+U-%`>*8[JWjt&a7.=K)8k>rnkA.aHHfE,Y.l8sE#t1.he/Ok-[=Hu"*_kPQ=mto^hN*1"\sm^Q+\p6LZF4Imp@,&WOrfP'p:[4W4qn?%^*l/9q)X"o5OGI@5iQhf4b_cT@q(GM=S'.I"T2dZ2b@8d*j9>[UTrg@/jI6DraY\$j!]%*._$GBb,+:-H#X`q+($;q8oZ8HVUoi:%=[2ldC_>Ug#Q.$3,n8]2-c6#24()60,cs0DC%;"@O#4CIkYB4peq,q>eb[X73)=i?J8qGkXSc2qIE4hmr_ajZlU2(kY*oIEXtFd&%Xo%F32=Yr48B4NPq=N'?YP<9d=@FIr$LL(rM`"[<3NG8giAY\J'Qc!RDtW+A/\br(%X2n86s)E/PB(mBRq<j?_[uQ>m0/o6n/Hs;%rWqqJ#f3Ei_*"7uUZ\b30EOmhqk45u6VJaHo:_e,@_!r_R0fOYkcIR'^YhEg_=7M]@M!sG*bD[Mr.ja;`dGJ_qRMg$9*5'pd2`ZO%P>C:pT>"0EGEa%ck:h%Z`V,O#@JWInoLla2:cC^2(Z4;n[1A7]Xjdjaj]VXAG.;P`b'UY!g^6nt.^KNcY=2uc&AMgb_:"^Q-L)TK%a^NhmGIIYN2Lq9=Ah8=&a)-X<01UOq]^U<9gG!Np9b\b@>6_c!T']QscqbNqp\BM3@1!Z^o7=t_Eu5()mt9gVk=]>"ZJ:3A(<1Q_%@^o:a>n3`[n$s+oiJ;);TJEc=71nZsoI=X*!&7pccf*^],""Y,,DYl,TQMG)c<@L=I.FE&`R<goDRpg*R=EsE>^ef;ch"Qba%qu6%38_##,X[%iWY<C;Wi+2WI)OgbQ(BX2bk@n$9jIZUC2rGVi8i>WjW+Xh=7uqBni*]nLEPRn`5cp/6@99<)AV[M"@@;8k@8cb_uB9k%.GXX@;8)cfl2<l)agY`1o#"B@NhrM0jdEQad!em#\Yh5BV.LDn@&.CBAN`jH.r$CPbCXZcb?SRA4%HlZZkOE;L2'2%9!?J/QX_!8%!CPe_lXE@L>@&N0&0QrRIY#oQL*6qL_9^^n]Gj_&q^V'(NjE&6QmXq='DtQ#Z%`i#RP=p_`_aFmliR]L9"L_ZndPGO#71cjfLTVZ%MZ.@%?49ad5l\L>%&nWi)f3mm*J)q]Vq!Kc"jAOL!_Sg:5c65"+4#g8bB`'$c=(.'0]C^CHW$ZHc<9_3>5TB&Hb`">'kA%aanXfT%>bP9$ScmP7@:ipu/T2!?DuU$AO.`SCqD$'$f3rsMm;YPd.!&PuOPLp<Sq)/&Na85sAC/&k7$"lZ.XE't01GJb[ta6ab/_*5O9_[X%-)20Y(D*$07ZU2//F)[!0-0KEn`Oc;cmP^'/)NpYoCi&h%SEl,pNbT.N=79i(X2!ej9b>il65IHoLa?h[2BjL<QOh(5kU/\^rpVI%??Ark-imrlR]<Cp(X`0@D$;c!_qk=0(`T!)_/s=]8pK@oq:@_qYO8iae?P`d5.8>bjIk#B3T%>c'c@.<3P=\(gt.+h$pPiG2dh_0%ik&/HIpE'31-_,0?>P>F.,[93S1K^C=Jr&1m^%:H7qj>5QC>:D%ns;L35cI-G3,Ec9JDgN*q8g*>]k<Ra1=k9Y^p4Gc[;u!$ggRq%E(T$*C_&Xn2BG(Qo:P1\k-FqbL3&sJ8td;fNT*SJEc"J;k\7Z>@MdD;G1Y&`n'[OfXD^,-HSf>.hJYu*(3dt&MOg?FeQb!93:![M%!\H;H/KB+`2E2)K<%f%N/f.?K<4RuV#'%?YD=32PquT/Faoc86MjuF7M_hc"E#Qu66Ua!^25.9BV=HA)Z6p1F[gMm/FG$+PV:n>l%O`ol$LKikT,G%B1#Y#Bb!)(W'^`De)!>2>'UK@rhQ'HHhHH$MkH`JiXS;tb\ESplQ/RYN!X*I,;%\H)G>&&m5+*UX@C3Iu^f>9U>%!2((ek)C)e0n1JhX6.HCFE9M9dnq7YZEk^e-A@J\kIg&&<1QVQ-4uTVE)].(+I:LEnHt(=KEB!\:DHp\[:%qO0q;rkhQA2f_-%-a%j2Me;7HQ-$?]d^Y4oD$iLgk3M1:W_T<6k_eb]QVh.V,j(I'6N="lI0`i\#=bIJQd#b!rLK3Xh/.h1=UZ;bddGr4,>4J0H$3aqr^X%eaqN]N/UN_7WT,8h@/N?LN#m%,!Ab0\q;6A"5'6Sp(\i:Q"!OlBr$^F1F!Xg08N@/WOHqjpBoDRXJ11F:%a^@.3s..B@\S$i;0ni%&Y<\\k["<I9[*hLEm]F"F[2RP"L3bT!f%`gB1S;&'V=$P2+0FM$n$]2I^bUG+b^%S;Fgl)A+Gl:+N!ApLsOMGP/%g%^DpJLJTCT_%VQl4oUYr1%7&[hR%t7]8#iUjo+2F^T&#!HeeM.]<9!\QX8+`7%YQ4a<k6en8H[?=p)hP3Q!R6OV7**Q@]C[9,%B<=:*=2:$]<u+-%1lN:XPlKL7&$8Mnd?`NA(%?no]3L3LVR<FrJ@Ft&8@irL%FYbM'nC*N2[#7Lpik1@0XhWJ"CZ@0fO-iRe,bX[V?'!W@Kf/X%BZ*/%+a^<mLq\i#'YTe8".u-O$Kc+J7K=EGq]KK>Ah>Hk"^Lb0?uh&l+Q`ooC*B7_CWuf&7=QacQ,9_#DTDd]C--Y+](AS'Wuq+Rn<hb)%5Z"tYeoA3$5eMmF/@$.cK-4.>+IL2c90>n7D8@>5*ig@D,!-7/)WD46Nl,^\(tD$Fh6IQEa/\<Hg_smjc6B=kU)I6h>?Rs:SThQR%ekn$)'dYp>5[]pB!%aZY],O[kO-1Z%N^+B5C,WYse*uLWM[#7k7^fYEB_<h"HFZA3`Cm9Z.K57P=mPHHp0`qTf:(b'%Te_79?g(R%!?A>2qBd35?[R-rZ@i#-"RW5-/:[gfgp>=+i%38hUQ>UjY1.[*SA<V#@"_GNTX9n8Sd1k1?'4sZLt4gRT)tH'7#p:W<uP]b3)kPB%@Di`.6A40Apsl$e8>2l8eJfeE/L3`eR_M_^EnEF.kD[VH@1_8/L6S,=Os0).&n(FR]UUoo5N4Ks\AE<oMF\:1UnXiP\+.M8R_/dP%Go"2p>L.Tn%-?O=hO]>e_;pZTH=i!%r8]gMc'N3i'N38f^B4#G0r9ij"_D&.b6EG/4nb4\d@2Me;NQnb7U/&1+R8[lOmfK+,YT.)%UW:bsKhB-8hXE<nC&gU#'Vg@Q2oC&M?e6NTc;PdunK8<8e[u7%LE@R38^uRSemR&I9o6?'ch+koD7nd.HtNsaZ$=f[4-.s"1l4SG%fbGl\<c@3Y2_O\.P.OsNrUfM=.-;&u,U\jf`O.U2F"B!/P"eE!LB-q.-@XWKnn%5=AX%[@V%$'?:3mV#-$9hV^$#!q]HS["511qi%(S29g=5fG=OMJeJ*e`hqq.TbSQAlqMG3cs6n(!XR,>>R/c1MXYcY5hoI"f1f/$tNCk!aVI?#;7R-F18pVP)@&U]3UI57On52Wp?l%9Ft\UB&.u1!iJ_O%>7U@Q#,X6M,-2B,B3^8bR8f$*R755BC\C2'6C\[?p%tS0*42t4c^AG_`[3#jJs[(*>*7m0LGK[][!dJ&;QZ)%gNA;:O<m\sH2l8P>:I!IOP(#(6).G5.kKrKn`N'=&liLd21l,^p3HUa+8MM>e'+ZXbqYRPRo@UVQ`(#Ss35R+A(N`qc(3&DYopn'%PEg]d:XpUZK)i0k6jo5c8h]1PIFao`k;p#n)?o)NgOhn]nU,%WK+*!<V1'M6D\N<=$OY#$K=KV@0LI-7Y;!b++p,(H3b>V4N"`,s%#6HG]j.HkC0!ICY>S%GnN)'BCfM9NJ5%p0<Or$QJ)i0$<D"qd"MgXI3.\Rt^6I9h;$mh&AkZpH1^tEXoo@dBsEecs-aem69??dZ0%2c#OT)=:qHMGMOhWtG\[BW)En0:c(q*AKW,4(^=nrmLnj\pVU(fp=1!p/CJ!?%EH2h`7&9/clK&H6,4u(h_gMaPa,=Q)"(2>.<fH%s4IC:^WA:>@PYo-<pF<?G3E:RD[Z:g:dTjDn56kQATkS1E%S]j`9]ZZME0Ipi5>GGl_p&JL'HX/+*fcQrL3?%D:lk&-,#`IXi`<Y%YE0bm?Gmd^JfN'NoXn2-gD)?cDHf`GL2"DbGhEW\pf>%XG"j.a3P#-2`eN9B3;<7DGo%>$0+'D1CE&,^QGNg_cO[r%n?8koI#_,i%[O$JJ+4TNJ><c=$]:f2n$5k,QOa$cg+:a];R&WcZ#t3^a,U\[_:IBC\"7EhIWnrH8BP.b1aa/B$468YtB-k3b'69`&Je>B3<l:io%"/,AV!\TV5iL/%!-t+al?#\RB3qX&hHh?O_s6&cBgF]ICFFQUTLEZac;,t5okI$\N-AGt>bnOaqTlU\hJNSAXbPgh[ZLphq]qHs<%^7D16:K1QH>5##5ZKu`.eS8(0fAn<me*`MqiPj,-U$V'tWpfKTcJA9fMn:i5]Q:]%2q;p#?C1&V5P8"B[G*p[jM(Kcq3NOZ4Bq"1%X*:._Z)1t@SuqjleS():I?"XX<VCWD]iK"DUBc/n]I*G;$`OX!g+\C+hQ4//s2fG.pc2QBRp(<,[6:UnohNS8CMaStCKGtK[@Oe7%f(1lR>()`mZo6A'jBug`p?I>"4\p5;./177mlpQe;s2^Z]f,kj=""LD+(+(Wp=@tW`[H"_2?`@BAUEg$a'*9/+4."",],ok7b:N8%X!uegdBLCU\%_b<]iQW.MGX0;hrms-ME*VEk<FIpDpPk'$@U"k)>j*_T?&DM-pC_7l/%D7F^#;d+23#i<Yf&UH.6Zuj-k\8nkAXm%Z0#gTgu_IgU%*U'K9)Y&,A"Rn<XNS;I!`VKh"#So[[4nlDgYH8g*>Qo%='&.9Uk<Scqr/MT[FTRBC"-JN?aGB%BA=[NXmW;?@2Hl%`rGP:X^0TPq$Y4`p\<X\N5(n#rEKR$e1^KTg0Mi_h^P)Cna*Fk2M,hDC]F('?6As_7m?ad*EgkXndUEPDa08B]R,.#/@?Ssq[Ji`%n)@Zcq((JL[0<2BV"6$bkN8\gpcDh)RFVSG<6tOpq;dkaIGpB>@pD,4'jL(b5ARX9s2qJ$*ZUgLnAb2S3)600I.G/Za"KZf7D\Mb%mRX.H&0CklPM^&f=i]YhaV;J!8#GH?b#>Dak0l?qmsjn3?!b3cQR][_HhGS:e7eFNII?^",gkgkbQ%":AGP,"6_''O1q6'=/FL8n%O'4!(U@%:4E2gk;4]/o2f<8+$Y?pD8^YSX.T=ul+6ZL^Iqth1j=C6.:l)3i_4S?A%oC:'jH1E1UhN@`7]("&'\6IR1ceS!f%JRX9%oJqE'4E@W<"ghFH]_I9VSoQKNS+io7Ek&<Es09`G3kn93<^"i_2d`3iHgn0''bXI*6:dmUd^@r!IdQ^&deE-5Bn<jGkr#'2mdV%G%ec4t`oYtXFXc:EBGHe4qTD$%_d;3ZInn>B>nb+Um+7g_l,f^Ms-4/LW`qJ!eV<9#(P/`?trJS+q)nKUZQJ!2Fs2S:iDEA`:R<[HO%huDtFk$*mR:,hDhVGnSSUUP$MpoXSje1rHss/W]I^R?TVDqXoh..=+$qo^R@kFLZ#\n(a)aVa:6rl$87887c6GQ$O'^\mp"$n'5j%hgNUrrlF]7p1SsUp:V9M#mj)td9BSkH%r?dF`%$7ZXnLVVt]E=a'U=`k-oO_)h6hoDPkr/]^Q!K``gAmB7BmSc.4)]9:Y2)'0SV\%U?,XJbFE>q=mJZUl1Q?_a-T$fQ0!=lp&2m0HOAYX!Pkn^/fnkIk't?"TDJ*0=s`jJ:KDc:;$BF7b('EO9.pqg$K7XiTjN6er]aNH%?b[fK5'Z<NRqA^,r6!1J6^_Q@>j+&t\cBHO9'*VZ.]n:]WeoT8Y<f3ss7e0,gsN.,V:t8lYL[)d%bc:-r#s[sDjj\S]r=V1A*M#e%L6mqX^X/aLjHdAg;Le8Vb;Er-lKN&Zn%;OgnSbt@(M^>Wgjf/\<[Ai8h"iUX.e7BC]k=cTs8!5-(`q"fXh@tZnBNU8XM%<\`<1,a%IXCI]+)b64F7\g%735h6W;48b?e"`VD*Sn0"7,gGdr/T,,=[Bp=6kZjE0grJ@L(ppYhHemp[I!`_t3h9Dglc&]uI2+s89L"[[+ua%gZDY(o>K:WIE//@^X]+X6IkpF4PGkR5B?_'e(\ttm=RoHI.m4<&$\R@]0(bn>Jhcs4Ns3nda'OEL.+^_/(r6_-W9F3e#"71`F(b-%TDe8ReN/]a>(,s!)=@/fp[DdDqjU*Jj*@'eptkf*q.JAcVp="G]RS8bH0+2%\je:dN8As9?i0Vpf4>SUQ<6iOXuo085&[P%l)`p>%h<L?1M]'7YqCT6A`a@?]L1C;4lS&bls)UX,oWM?7kLp+,5(;u6%EC(n>=JH2eYVS"pq:;,:Oi:AeadhHFh8g3J$uYrnsoaHC[0#j%s,R\*Y5ZD@rm'9-1HCLTH>WS@4^5\khT%:k-qihZ2UC9/r\jFm^I+>WeKrRHm^`15T=dOkNr#haht;2cI!M=sLYb2hRo5"tB%H"6%k0q#8r'V9(k_"C-IYqVXYCA4GPWk;M5]qTq?(?4olqQs56U&=aa6qHD(]A.ZD;4PemYPO/2kJqRV`?"ik>>t*lDO&VqVYjE;02U;%`d>1jJn^:_eTJoFEa%RnrWB9cNh>C^g2#:lc\(P(*ptn4*c<t6Em+I"heqb*5<!8ds3ffho!C@B@DBDIPJ_ifgp$hJD3QhnF<$#T%o?33/d#VF/D\"_!]]&^lR2Y;Q^V9[-E0f\1Dm.XB^<L;+^3[.K`ErP`lYR[7'"*s#(Wb@?p^l<RYL'Mec!nG6qn4>B4q%21n!e=)%9dDq$6tZKJnbAjs(k:rK(S4YPIHfb`D+3npIsuA"[9"DpG:53=(5LXW/m>9@naaA+9LSmQEo)97X@RUcrUe[9hq\7mU]&p`hu2`5%hqe7plaO=2a7i*%=KV,ddhhfKdYFG!5j=?W*j0k(#V=iIaX?H3^.muZn)"2bhqtBd6!JL#48GU:HG=a]+6]mNJ&O&"maIME<;.W'%pt8_cP!>*cQQL)8Qa;J5r28G[VePVj;6^(BkHBs;k1O,A1MM1:F]0Z`p-2@si7?re,V:NkrHkuM2nsXD:\Gm%ICIm:qj'rF@llnJ%IXL2IZgZfMJckrfT:L9cTIi^841`7N(fL$>pUcm`h>I%o1L[Q<RgkY-Np.19ForI$=M)R%82]c*GP@t92Ti2Zk0&j*,?",WPjk6D%H[Og%T$ukoC9R/\]DF&=QL0gVc>Rk>Dnr:EbWE!lo>=UYId\O'm1Uu;?1bIAe%o4F6f"R+5PX&khs^OPfBq6M5!OGp?>K&@ee3]Y%k^WBBcWr!s&[1WUq,=kNl^`N3I.NCXs7+pShgL"I`g*I*gj8K*kMH+8lQ>Qnj-sudps&j7l-9fHrU]TLmshqFeC@bV^3faB=8$b!%S$.;9qO=NEqQ=t'd!2*oS>1Q.\Q)tFOZS%Vmf2tAhnSdL(O,kkIJDU'<>/\fQ85MP^3l`Z,bB;Bg)D+SO50NRGP.Rls7>K;li2@t%h+)@qrkY-qDJlZT^,#Jo,=O2Fa<0NeO.NoXq7RlmqdKAJb,hQ)qRL7RI.>56hK\^If8^rFgL#ElrR8G%5)TA[pE+n]BPZL?DWg:h%OB=/fW6*6//o',K4o*45J'q*\?iKX!g4Hn?+9)3L*dQc-(Vca>H^4TVduW:30t^NDqXI?'\b=juF-#,Srp;pINd9!O=Xut&F(+:1%(\SUs"ZN%`B<8jmo^YfVn8?L#paGQ'++2Y6fhFF:*#rO2Hs'4<P#YNJ,HH-2[&R_K2is=)q=^d*iCOm2.9(XZZeC3:HnlE7LN]gA%s6rA*UAq%FAWsN(:\rk!c'Zn'5."IFeQhL=rO?U9dBgEbn`[4.!IV)*rqd4DZ*V%Ak!gEVHF;5FTB^oSc]d^1mpH!7Y^i2?cqeOu%;Xr<g2g'o:T22bl]_144I`/Yf\),f:f>,r:o/6Ku&%^D.0AiB]&jCWQL@aZ5[$e"!DS)eY8)?A5QJO.bc)91mI/>SmhO?0(m(_Fp%SV<rLe]k"%Hi;MA]cZ=QGA`t8GNH):0Cca#=QOnU5'?bApE"h\o@naDYPmk-5JHpkqotT-9-6Co.=4d=mAgc3PB6Ia6`?R50-Au2%$2];bO+$h!:Bp'YOOs>9?i9=VRTI.1j%NZt[+rD_l'YW,?Tb`'I[ce>nDUXe^3?==*EQljDc^i*)ZRc(qHmSlHM^ioR_O<Fa6::>%ii2AZs7C.r0`!1lgI/L0/]Ddp8H7,h=E?:K_iUX]h+Vs_:QRM`Q2KcKjD/(NjMnUjs*2Q.4?C*BNqhmHHU^Q0gZgN.IhEOsmbde0%?i9jL;XV*rOH`sYmiUb'5C]S+S*O<3Tt('a5Q(I@0AA\gTjNf<s7!lMTCD32LZtkK2EA7\qr"ANcb]I\8R7UgAqkA.LUHf83V_>^%TW@B]4s'`/\Rmu5gZik+?H4;*`]<FGpY#q/RXrZ@o/<Z7Fggr(CX5ee3+_*[*Be>Gnr5$Y%BoHRdG6#7hnIKPIDKq'Q.*77s!:&A%Kga\U1Z&p%<%_L]k<m]/pZD(@]o^&89`JT`*SShu?F(hnI!9cIEW,U+ch@m-T/e!^?N/dLSpUJ9cQ4dRo%9#<]6E]u'sW2Y]6%g$%n\GHK]dP)=HX`qP<9X$DPNM?%T:WbgCMHqkps+kBFJIZSFJZ+H?&adBEU)%LIf(b(\-N@fp<t_dFVS;E9Ch9'5FIOM:5:dq4oO"*%lsf:7DoXfWPDdous2iTW>\r;@5C[_Db$ts)L@rG'huB"+MsZG(pTO02h"gJG)2(6-629W`Dos2M0HT,aDMI*0ItTI0"RV]Z&&FOO%Y20*@lVB5@VjkRHZnDL[o'ssP+#QFTr9_9!@#K8/.-He;^[>?,]9DP(Nq'P$+F@7On_UkVgQ(f1HfFmH#e'EC02VL6&_F1X3Citi%!i@Sm^81^7&hsa'Ia0"#Zb4%`&_Cpub%K("*S8T../m:Sj7KZiIH@_hI#V@FjVdn(a4kM9Q2>+nHiil*7,5<G&D$eQ[XI2X/!'X0%&\m/>gpll1+s%L32`daRB(Y7S%*pVc3'G3%L)8]qiecf]8]2Fk^H%2H9qW[2$7S"lqQ!#oLDWXk%%J+U7!OO/^K:%'nTX_7]06)[%es#sB8&#R1^W!t"GNm0*?%48]rR+p+H5Nj7cR&UmLmu-kkI41jA&$=KD`opB"Cm@GmC0fanN'_mqfT+$s.sAD$-5D#pn+\UjnS3.%F]mUni?-CB0F70Sf?oEPYTr+Fr9MZ_7:cF&601o*&FhF0Y2LHL\S7(>Ea'HErV!J*S=Y:UW?-QJa'L(R9;q2ONd^R]hrXY%^<*Wq%RI>1oGMhJ;>2ORkj1kI<8(pmFmrJ>MhrNF;noC)W^\]?JlroHo3W?X/Er<E(%=.Xoa"*4A]?Ba%I?S10;P3Dur-.&Zf_:Wm],^jK%RiMBZndtIDX]Aa'?`[=C[Ar'8qS-"5dV;d?0E4]<Wp<Qbl@/(ClW$1Khrh.)IH<3;7/H9<pKuYaUaqKh<[mKdo@#r(7R'G9^%BRY%hgPO_MuWe=+'77Jrh$=lL]23PXua=)odSGkP)/tmb:?Aqhd1HWY!/clOj@pYplD'8I.u/ehu3'C(]X:!X%s>lK@_3XpWB&-:L3A&%rN-"ll)RV0VqF87^TRTYNHVEfX&&NDQ0mjpom]4$Y:KWXrj,mYkK7sg8'#tj>5q-9YY+d;Kg:-(om];Vd*jWIqZ0:SDc!;0pD&2N%eb[=9epg>(5LS*^]'?`)Y@%8'PO7YeV"^E1+i[G0-!X1AG4Ku2="gbq4e.DU=_SDL]R/bR/'$0fY$M"arJ1AFho-W#PkU?Djq(<P%`1q&R><_jfZI0dB/HpV21&4EThK(Nkqr8E`*-&S_h+f7D=1&;cKnNgI>PX>Db9XF.._g,Y_C:_D,l6JCp!#N(-#K4X3gV)[U&D6A%n*;(9k&SCbIo1^pC*!<R\f.cd?8YeE7u?nQnqdSNdZVa%`jf(j5/gIQMa(!qmSs$M.rV9'beFg[5Ad!AQVMF.=tFe-/C!J$'jPn@%cdV_8?`\29i6%\X:`ZI)L8r0joTf)i+<CFFJudp!i&sjtlFaL%;qCnhm#2%.N`1h+j;c(1dZ1)D.a;Yr%-X=W[0OEJhgo,#aa_kX%Y2XjMqr@jP3m^L`j.+q>Es/SN[/EtE]<j:-hK%>Z#%'aP:E_#rXULbCG9W&]7YO(orYK88OY>"m#/))ZX)'V#^*4c.R2]gbB>B`m%Fu3Sk6Yj=NBB6HtI#eK[*?.4oU1BqejLE,!TUhnc9FS,_`6\W8`7mdVJRW:^8)R8A)&`TgI1LWo[jQXrP#&nQ%l2K;Q;ukWo:VX%%29q+9dWca]MpqWi!Mm\n+^VOrCJM5>G</?;XDT[k5^a*829.2]N7CRu53_W2d&(._;WhCBmFMN5F+9V0rRjF3Ijg,ElFUEn,ubT0%31)5-;spf]peu=!H_n]FMlB2Q!pcF+12LjOhYr#'3(c&oj3/T%jKh\2j%_&a)U!M^D@]7Oe0tb#W3dHE\ciYiQ,[!;obMW?#Ls[F%F$$W@T6G="Q.Hb9kGn9UnLIZ_;+!rdGr\acWHt+rM<,`_`RUtumh(rJq>/P,G6,'kaqR2,q6nr;<Eb(s4j,!pF4TMij%?[X#D=:I%ID2r+^pKJB$s\N'n@9HQVcAeAq0f;PG2@JtG(/StnpF?litN$b#8etMMa-i^G>(MTTe56RqClR\=ad\ma_fTOY!Rkm(M#Slm-[Aj%'R/:,eLJi:@BN_m8$:;Q6V_Ks0VihP8t^uFLW]/5.]Q,*UE[$Khoq?D.!q9%jVN"/'%NC.@?gt(RAYh;]DnlVb\WhecbaE`dU&V2%RQPIIV=scYd/oP55BcO0`iUU'olhFaFk!a!PDQ!f6+)cUq]ko(N$c+CmPB>LURC4MG)PakEsMj5:^9K.9V'GH8J50-)oF_->8Blk%!K3j,YNXa,<##C6'uu'>;ojeHNaKCh*`d!6Nhf%Nok>U+kG[+o6=][$C$R1Q]fE?O8e]!JU?\P]!N6YS\>kb@c)iB@.Jk8EYCM`_%VKgojeVe^7]KT/VV"*mT9XU=mNt1`LH'%i>1<A9OP5-kHp,XZ48369ihd@O]%f??2dH<T!d^q]dNb:(!X8moVFOVJY7h3c^AAYAa%f0,>1DLmQc`3B[><kG</l[_5N<@tlEmb*b.[]eFKEE2=MW:l3`Xa2==X846G,O)QMrLLT)FaAJiC8MddDmPprF)F8oeX:;0-gc7?%#.rQKI>_b;BQc2T]khZOrkn%Q7uXO%H?r#*D3u-A&_ekKW&"TI;cOh("t7ITZigB\E8N%M>+p_/bU-D."Q$&^3gY8U;nQ)/Zbj$r%NiPn^S!#h8*L99WMt'iuG(3aE=XGV>fW12E>h2:p_)E,6:$(KWF8@;Q*AX$0S+%J!a.\R<G#MA3LL.r<I:aPr,keWam''_f63E9(%dt5/frKQ&5eX6gQY&7Th-A=Cr-Z"r<&C=WB5Vp-tcnhd2@0"o'F5=R9fN71rTTmCbmmjjtXiLq0l0:;oCshj1Fq%Xgl`Y#I7$,G&%f-NYB9(i)*HURS4:6VJ@7b$\k*$?m@%%3:5p1c9l39Ad'$85VS^(t?<2m.2Ir^!EgaLsEKh,;n@lFS8dMs%l^<u()7UOo39`"lOt%1',T#d!0Qo]Aua_J!V9r'7!T]J,u=GHMN\oR2&Jr'Yed$pZD,5CN-:m!$9mT!XWR#>0=-b&`E^hlQgNkXY86=Wm(s&K,\nf;"]#p%:`=oMdrj9LWQQaWC!FP44A;779F'`Z<@]-#9'^J8Mh8B#Z`S,]\ssg/.ZIG-f_<1rH&2W'mG>l/MV808Up@kN*(L6UU2abN4A*q,%L^"No^Z.'*0IWXoab/U'5Rnes\@!e>@N%8cX#@k6FpN=&UiLSrn[?t[3Wc`6j'LoHHTs8m:"rp\m`J8D;ms@k/?<^7UWp`_V;ocA%CbqjAb;P=8UMM9ImWeH$YNXX'e'N-NW4_Iq]]<4K\)sMGVo.^!9C\<)Zoql7@U/Q;*iCoQ%UjFKh/'Y^TrDc2=.^@VlP)$k;Lao3%et`k6m#`f7i!6<.of--I&(?<l<M'S+oK_34cQlHS0r.S3gi5e\hbg\FUDn?UcOLXuW)=?SB]\;/*?#3D^&+\6+$-3k\N9ST)<I`]%BH5@^B?bDDJMdiFBF@&(N`]oAepTQ@O=D90Ja3"VY<E:7=S(hSB=!&]$#f/oLWg/%979;OJ1+'VqOk+,7$,sK_(.(2Aatna_&tE)%jXq"5RI+Ufo_r=`WM>qrr5?jC9&+c)-Ic18Q'nj<T*@r/<G=Yg8$f!omU`#f2N$Qf,9o6klYb/X7!n$,a%\A:QH)CG>M\852X@hs%@+ETi*N3iC&4*nb::hi<F`=oK)GLWLlIe&B9_at3@3Jl!gHeeQ@Rd3SNtT#Tj58(5BZQ_S/gCp%AfYAJ#p%6Gj$;=^j_YKqBUm[R%KC)tim9'hJSGs.[,929)H*`qhYB>XJkiDsKd3PsW^A]8o4Q6tCbZRXtoDm[<&&WcK/pCTW<#nZ]/H%!D)_G)pC=-]AbN_H5/;ZM1%'eI<Zg!^PXg'DAD1NmP5aCS\cr^pZ.%cf<*QD:i,n%<SH2OBVG2W;g@K/K-aTuAg;<3o`Hp:[*d</?9!Jr*GFV[mMd7#UW'%(QZ4%9+XZ8%KQiQJYhZ<R*laPjEDI/K+02ART5SPG"oE:&#\4dJfP-E`:,1"4K""YX?rG!9DB"r=iLS\!.*!sp?5qBBKO'ZB7Vn]D#Su0%A`G@F+$&lT&K'#:"<\Sp7c(;A>(O%0cs*`Zi:9%E8TdVJ,o`$!h*+j.48;BRO)`-hHH5V'W<eSQTqNr>7O4VQ?d8A&^r&YWYUHs:%B;d*K$%8LA0GdE:T"kn3hBK;Je[:mN7NQh1RuQ=BpCqg*)pT7V`gBZ\/61>79!Pn7mVta3H(*X!)O1M*8ei9-rb//cMnQKY[&Ndc%aIlffGcAWBR5ZRB;9Woa,s.Z.Y$RqU$iM!9qAa,]G^3#FZE^4LC+HFMjRnA01b;sq&m&]t$-EI8(0N*/or"#+dU:au6nUNGU!I^i%%;I%,W?b4jW>fG-CT"inPsdE*P6YL)Md[[*h-+6rO=Z[ok-*L6BJH.9!ok^Nh@-!45ed7nCH.PNo`:%5G]936W=F\L:?n=Y$:,Mj%FU+XL`IL>g7)Q[j8a@-nopWt2K-kA+c]LD\]"u[04=?UEoOq@)_[L5i$T(:LP&:2hPl@-)eEeGWT&tGYkhQ09Y7q5RnMO0*cMZ'F%[or-1HZlhD?%^\gUn]G#>o+Y?87&Ti*KDhAapiBsqE(cd$g1>X(U][[Y7tRAW(PNO.Vep=CLN3W+NHPPocF`JRTo0l]3=\6[>3#7%HDDaGO>TgL@,3Ya+hc!$DPKd@?968f&SF$KVjU'=7<G8\#$r\iCDNkOIKQ9$AM"0-C_$,LiNDHjFqmRViNrr1:L%V_.\,AGeAf'Q%WDd6jN?,\]%],2GJ1,k[8&CCO>%Zn>P)M2:bStaXY9(AbOlE(uOh!>B7BEdEU85fLF\Y8fe4u)`eFuL;G:=@Y;duK#XVC0)WK>ta%2kTr&40=$\?*9K%"dG(MLT("ZZD1RhV3Ho%\`$C^/u%OcZj,;!ZkV#q$3R?Wi"^E[_:Fbo94jbC%4bCZK$BZ<?%9G]V-O5;A4ia3%_lq%5RTp/V?o#@WfMH"`l11WGB/[rXaNKSNE`;PsfhO$69/,AAKE'`ch[-rop*)XCoV.KXFMuH#Wp[WJIhF5HX_s;r=$qkX\;SAe%"SQoa<0'0]@2pfXc'-'iZ&:*l?&,DdEsXHf/]-pX"VNRK6*H')'T3?da^Fj&f[-tMGf4^f(?3Us*289rY<stWRJ-oFPFsdGGESGM%.HIVQp)8Uqrc==!<R=1lbibq3+o:929_S##+'a@9`*Tm=kq9^\U4<8US#@rcpLXuMDNb4#RB;JjYj95sJ`rsF22Ga0WD,M1gBJeb%Z?Zrf"u02tJS=b"%tNWcX\%R0A0\M_e5#^`;7WZ.!;6fEX("AEedG_SG3.E^As4"Tp?rIs)@MSjI(d63X5,'#'R0q93AtkRFJuiA%8,!Wnq^>(a&]hQ(b\sO2<C+a.Ne$Ke4(GF<(>bsnk"<7NG[H1YXn)<VmT)cl,Oa>/^_r."W)jP7FW""9%"Zt[G3%?l"D7F2DcYe.%%"Zu.YW^DU=\\/5lO.'r85q/hZp/_XoTl.H>#?HpThk+#+"[Ie@P?K3oT_f9G#Gp)`1Rd43<DXO=j#sHXLi[3nO;F&3A!ij,7m?p%NG'3F9N&a#jqc&[@"uY:]TV^AH<u1mh5d<*U#nA0<n@Zo@o9]ZB`6`Dc"SO5lESakDAaL^W1`i&$bSA+Fe9X4V&dWpS8I'?1%d:S%)>0&hqhCBUc^\gh&B?)Fhi-c;hD`>kU;f`=0`f_]-T95WUNYm@_AjkdB%0cEF@[4m`fD+h"4HhM:_e*$3ht%<eCHEB:l&S&),'1d%bFOS^%_C)a<ESjW1sG=@dK)^W[X0BVXYh8TjO.)_+1\a`DKB#rD$^qS>M7@#6&)_%m9R.PFeb>?,?@D&Bb\?skO94/_`/eD71ITH%o^3`X]M6EB3pKm0UQcW,OdApp8\2<)ZZkoUX!e6:dWj/tKIL[1:>u^Zl=$%)1R("S+s\=S%alVb\.aTD%sXjXBu))dfr#9PT?osr%V'Pc-%=+5Y2XDaA9%_pU)UoC7N_t^C=jdH%"W(U&gA+,/(.87M[=i1Lik:NY8_GSja+Luk>`r0hY5q>GX*'aDX>kYd?+;5G'C'@@%L1ou'IM]BjRCGhlbn,U0gI4DlJ"$:Q?g9*iA*A*7DB`Mg)70W)!?"1l;49)5Sa$<N**](8/Q=sq>4\\rq&TE2IpBF0k)X+HZddj\%h(t&ej;ajDWVb3g79ZGU6P`gF-e*43VK5]ik]<g_BhFH`"@tt30Z0(jV-9=4P:!6Id1X%.=8*jOQLIboHjO"E;:f:a>Ea/H"](($%3_]oF0a3VUE*<j0>[Ic*P=C'XkY"<]<,)Nc_,3cccS%sG@VHLO#D!46h)Yri]fIjP"E,ChW&[8FXKY#/]NPoK/NHN-AV@`O"[JT`%g%PEW=Cjf^^k@gG]?V@;7oXcYGTo2sBb>e)$G<M^0f[[iGW3#?4"PqFr6`M?#k0&29f1&AQG;YAe25&hEN-<qAEn+'fW':s<Y2aG%\YK,.a1_V4-%m%^69+uMRER5UZB7,J4%U\"P1lRm&nSW<"dF!olCdR/hBm26A`'@\W:i$V'0`8):F)tQa&SiL?Xb_"3@63uV:+cu%ZB^'k9&pgd!29WF'%<2NS'D^+0pAJT6"[;#kLG%ZOaARp?9=gq?V,KO6:r^pJe8&D[8FQa(^bT=,bQ8UEZ(hWQ):P_Q64bRj!O4:%:i%rPBUul!392+Oqa[dY"c=&>VP?>tc>TCT(3[(h,Q`OT.8fg9RTB,](aVa.[I]U=YjhRsh]jdqE:aj8*^A*pX\.n((Nj@DR,od8%#s*u]I]FlWKn9\LN#p+?Z'@_4AI'.'@@[4IN+e?#fk>f0PAWVi.@t3`,ucbf8D<=jGL0lec?h!2D,Op7$.W0m;t-4F6LL.0`ttl<%#]45#7LO?^4!%P&3lO_Njaf%pHt;H(0sSE:g28M0B>=O*Ka0LZKF2'_mEsH&*<tg322L9/$VF':'^bc+Rq>QS$P_b"RjCX+.SV&2%8O1)RS11,]8)Yc$k,'2bD6kqF_:+*@V=CKt3:`OSpg@6r[f#quA0/F152iX#X5ok6^lQiNOuB+5+RP^`*ZUURbbAo+f+DG,Lq8#m%`8EJ3V\9Jq'1]"j5]X-?>3.69pf<qP/hQ]pKtc2o39kWJqZg9K,58CVFak[CBi8[DXg=m5e>OG@P-U$7%h"%.5a?AHb^24+nfY#*%nc<LKDgj$I5=r8Y5#Gp!JgM!\$D;ANMm+Bpm1S`EH60m'qc#u%XR,nMBrgu=SZ,@W@Q/0p(#]^Zi!p6t'XhDc)gn55_nnY0P2Y#T%hdBc`\Y<Xcphf;<DJ;hpSK>8Dohda^dHs4Y[HhV49@bkc$ZHDTHlY*Cp3!-V(al!5`IsdMGcbW<i2SM!3aI8A2jj)8e=@f7DMOqd%B"]4rgP6p:`+<_4`$+DE]pg+_^=o`NgkRNn3Epoic*a'Y&)5YDVj+k8X*/#=T`q+,[rU:%#8tf2pTb<4@IuqeG4;r[/m5nUPrWOt%/2bm7_pQN#+VVaZ^:+F,ZoOM"k4(NQ+]sCCm?M[#lWT3dW+78m&`)A6.=CY"CfIf[3g.W9S=_&Y"k9O?mm1_B(oQhj8(O!O%3):X%d\^%ZNa?rb5ca`$JV%CL1cnA@%O#cerl/:GW=C4=HB:jm[kI$PmYX$s"_Cu.dWpYag[W9uqLTr-SUH.V:>0$dA_BTiP.9/?dg[C"%LD+Hq3[c"[8^li0$_H'':84b"#\a7r-N,*"=A\(`_r@I@_^cY%G=-msAp2Ys[raU]ei[Zi/R(kq(P+ZVi*9V(ObiZ@18@;'AK.f^%1gmHbXuk18>BeiIK2XU,h[U^[Jj$.-ZN_<4R>U!$3cp9toXKn>62ML%VQP9;U>,52;&C>mj0jWsIAnR("6k/q",V-I6UBmtQkkat%2C$VqqBKX\kgmJi8/6Ao+Bk>tL2PPC-TUI-FJL6Xi<bdK,6:Y`/*N2EH8RS*FgXMr\K:g^S,t!hD?)5N"`&IU/fSLe8SKJZjWcpI%7CQJT,['Ea)qLKI1N2Mm/:(uCMl]0r._TNa!)lriDp$mZm#pS/HE>?Ed7_g5VcD?2)[];B.qr4@GL0&ul;g%B1'eq/ZBsoEc(N0R%WfM#QeZ!0#X`(QNKiW+B\M&0h5FT:0;D/sr\dd%NLQ5)Q'"$u$^h$iS%W<ah;/[\.QdJL-]CQuMGc8q$k_neLG)\r?E-!]df"2k6%s.X'f1o1rC;V\J^gV#mQO-I856ukYR0!7*Sf'Vb?2O'@uM_U2j2gaB!hr)J3Y.Va@g(A9D(!C4NnVB66ak6!\aHG"dVd@s+fGKlV%2cYN3,k%oTGTM!A6#Y.[)suYdd)Z5[Z/3=U/Wp=0N;8UH8A&'2P9KNGX`.eo^%^%@,oG8le94tB9nV.P9B%ilZ=JGu&1g93@D,id%PCM<e!\sXc8AXDR_::[FBST4GMTiJG*FC1josiQA\/kI75M22i\X+>:bmD`g=i"L8cX$E<.5>W06k*C-%'FsNI<]P3-B-mnoP.)j%IMNZ_hDBr(N"E>&!M!g0IK"E&\r%]g'?bB1pq]U22doK_D+DX<X[i&/0hF<OIptGrkW,s9(sRRW8HXo2NUC$kom`mr:+e3^g$k&5%r<&[;1#<`L@*SsnW!DU]+&/p1d#TMTLUJgQBJqtp4%anb@<.52:rr>Gh=r6:-R()c+5WiMdcS/e%80(`gpMuc6WJ[I(IKjqAXD43%E`RU?P"dsK*?A#jFYL9l1@o*5Fg9C'BuTnVeu;Mpc\:b\Sc/pJPh*f0s3VTFZeWa$^<u.TQUI:<-bEo[.-G^E#lPNYa=<j)eDbGf%V-FNrDPfKl])2am'"[,fglFMH5!6l_hU:YV+d4/D!sdP@-.1m0_%GX]%KNOh5#LHRl+Q%,q%i@D\)1K!ks;J3.r+Iai%AdbZ3NEh%B<^+9EUD<_q8IFn8O3\?/C:kXVpdFm#k<!VO7QQ,qD6mpYc6.-G$uWFGf3(MCO8)oj7jU`BF$;f336^)dl,I6],Nf<'4s=F4B3>a%BY@bl^/;d_1F.8SGnuIuR8eCjo?J[1@@K01B)t,AG]pu]mS-oI2E'fsF]1ZMeS\U43N<m08R0rddFU:MrJTQ]BZG_e5?d9=`HF>#%rFN>hCb,E=RpGY?Y-]dSNa_54]JqjZiOl0kIQ%t#&++Z"\AUtZH"H)XoQb1a6oT,"4!.E[_r'pdfo.SFGVc[H9K;>&D$X^VTpl3i%hqMh"NA2ecjD@iYe[[u9,hkCog4N'oW1Sm*K?^o\[Ub[QHnn\@OLC+?kr.eGB,oXajX<-$559*"(rP2\1dp**7[A"$="4Qe4_`C-%.OPIJGIt6N\$%b?-^)4nI'-P"(A*`A%QlsJ:^kFG)>ruY<:`beUB5e+i\&cQqV,`ofPNc[,FUk.VWq]AWu4X29AJ+8[cJ'I"&AMf%D9jRGJ,%T?h:&b$s0p?2$gf:Y;j'#^li<mPSseu`>YqX>%'*E![Y.TV]'_+'"[+)f\jJQN%^=neW_F.3a"%@?4MT3SW@lPC4d%B3%hLNcN'YKH-REYrp.X0[gTPiMl7`Ts*#ZT`>#'2-t!ckn(61'<L=$]EQ(YH0HKFI0(=]0hN1?Q$GdnnrIEu&QqMD]'ea*HJ8TM%K`%0WiqRH$tcK@<08\kQITt9fK8sA0ei'74&J(a_B'Xm1?W2-O(8B'/69-4V$nql+&+)d2N?f3"1-5K^8e0G(.ia@tsfbWAZilpZ(Is%T:t'F9/VEueYc?XVNVpaNsaMqIl'fe`Er9:'DP0p24]M@dk2i8Pf#[E@mR_U?%UVj[8.8K'[WEXDi;]5,<AWWiHh7M#3U9@RDqJ7%1c8gS@Fp(XZ0SJ=+A8%51eWNE:1g<;UZuhojjgu?Ph0`aE:ZW4_a=[OiR/06Oq,"R"(PU.)BHI-D`\VeP%'T6>k:e4D270_Km)r:%R[\H(rFp3$_=f7i=dlc`l-3VaSi^lEj'h\,"7D)4QXDV*8"RnhD/ORFd;@EJG;O.p3]Jh[qT1l]1+]"Q+eS,X2I?ol&^U'sMQURN%ohdN5A)Hul.3Z/>Ei\S,UMkXlXo=+@eN;l*BDuT!UpJiLh8:L&.i[$D5GlmKe\#-D'uZ5[\5]BOXhGq\?W'VeOk,V\dlhDb4@4t9%W_]gNn58ZDOpO[h(/7Gq*bgd,CO//KTrtDpQ_Hn`I>rc!`LA2#pfXf@LB:L!?@?q2Y^!PoC2.a9>G6-O"HH%0FHn!#n[dcio"'VM%njN7_/Sn93lbRe"8P;V3TPBh9D=VGtW4b+UKjOGFT4'uP5d\lIepqSSlP5WILS28kO;+E2K&4@$Vb!>D2fn-+Zjj&4X7=G\eFS"[%NV\/<?`Sr@bC&R3VK7mQR3#i"6-q$X^r_\\[YM:q>*IdlR](;kV7'VNk9,Cl(P7;rJ$^Pn=mT^pZ%9u14R-YGRB)OKa0<HnFD!2p%<fF_$/I9AhDTI@9<S/j^B3<K`"hBanSQk#^oBgEbFMAPqZ)6i>Lg-Ob\G*AHCWO%9-'e.)'&=0%UQ=.)/i6j:.8@FtPbs3LLt7>e%+V].UTrANoHDZB4m@8Rr4;3IsiX0%3fI(R$h7cqS_j2[-ShN_TcZ@I?7qk79-:T"#GQqpT9oO;K:DE8mpW^Z*G:gZd`.S,c$XpF+%[di#>Z[UMm*b%QnD@:T'T[@!jBSlqh`fF.ubA$F3jj]V\g9RTE9&<e!iQHGcs5/,hB;(Z/b1L3;S;j%J;rg4t+YK,2.g>4*p5@>>%ETk?LT*6Zd-S/#kokRW4^Q_e92G#P#[>=57LlW;tHk!(KL_?iGpI9tX&HH(%AeA6d5Hkp9&hZIkH8eVlH3n62hJH"<p#;;`GNe>^%lb)aF@mM[rj8(CWW1>m:.bqS?D=Po,Ri:4ur/@g5eZ(5BQZ[h\^2:aKXJQl,muCBaT*!MWRS&P^(jYB4a*!8^DP^>rj8)<K<DWo$%-5V2)))o/SgC<%1b%lP=-[Y'$EmOkh]6_^T11hcp??X>/,A::_k&\Bro)-_VML;TokF-UmDG?hlp6<IkQFLdR$1E?*%l0nKl=G<_%L:LK;`d6D*D1YpYgWoZVM&-.X1H2lt)qXZ'KpHbSY:^O]7c.Z.<:3i4RF0:bY4OTHXZ#S-$>>GYHML"T^n=XfZePbb<R%$6"moKo%0?Z<DDYF!32p@qS(`>7J;JWHu8Jc$.p+nX&co<2HaLi*\F+HlN'>Kkd-o:UbdP-MYggB?Qr[r48@h&VFi)I2cF$PcDLRH*]aIUk/%b*>rI[D05ae'8fu3qR`'K!)`MiuZ/T9#8_t4iE`H&+lAF/et:C:X</67@AqA(gAQF$"k?kh-NTO6ED?*-"PP[nDW]]N[O20q0oGZ%4#2-EO*2W6,kb-^:YHXN-Z&Zsb"6Lek7b;W*$HgEi%PC_EV"#!m&f>rJaRK;;:723ZpTGHQ)A)$O5<Sa(J5'kE/Cp3Jp^(1gXM(R%Wi1UY\b=hE0curn]iW\.Y8jW$'9'j%*Y?aWbq<c\I1k8$7OgKl:2W>L5Us96?*6TR_o]@F8*@`$5>f0I]-cEUQ%8WY^#-=>H7q5^%"ZKmgnr4<n"a@Esp9_)0@P()BE=8VlJp9jjq2r;!Ol5!KS-*(bDZ[c^A6Qpo^`U.\Q8@G\mLS0/)^'GN/9tqcUfaPN2ab_l9@bRD%G9ZCaZo5@PG"0gVd>h\^;D7q7b'fst:59p;;u*-]=VTY,/U'%m-+aN^>t.MJe_t*Ll^`3$F;-*WRl-X[k^CVo4ESVWpLZRGb<R%"%FqsJQj'$W00n/kQW*6R.X8s`49.Dj\+BjRS\9F6HKHp8>,=VM%J6m"3n.c6iWfQ/>e#f8`'m:D\<SW"u>d2:n\=m"o0C-$s1/p?<%K@_D5/f_-'Ok=Yp5-5ss/BE7`=!Vs:0nRQ4H?fa&kc/4:*?XFro]5Ws]5,"*]#+qN6%.o(-!ESTj+kkl^!g9TCMEP?idsA?AZapC%5/.&#QHJY[r3rY34<rdi?'=8frOCXil-)Ib0A5H4f/hY=G7Y"#%hj;1XUlO>CT0VgkmFAc$4SL4kD">c3]o7Hg\HqLX/5(j5J.pa%-dq^AS!f1'9Tbh5NL>!T%p+QCg=.eeI*TRm[mTjV\$(HDnGV'FenaXmT#FseZsh]_2Fa`,LKf<5]LD:d2Rhc;?Fm])'8_q+5aC*G%9hel1fK4hWebKtkXX`Tfd97MQi:FG&gec4=@W1slhLJoH\[kb7T&tM-4K$X<;n:t;47#DMh+-+Ea1Z@>aG"c^N',NEqL72LDhek0%kpPq[aHq&]Bg6t\dK;kj$bj)^5*j6rMcEsX5T3WSp?G9X2$el<K(]S)'@Ht/A\,uBYmTV-g;PNN.Lo7lLEDZh])4[LnsDfdWdgj:%3C18:,H^:ij"//j'5H-=e2<uK*Z1?p90@nE[#6a2TV]s04q&4g]jVbY:75FjnI7iCam'53*L"JRO4#oH9[dDl)76Mg;&r?r]V&Q#%Ok7#18Heo/'Xh[[b^2$XGS0'X?=]3''sYHWj+@tM#@1U[U^'NG>+tV>g;XHQ`>NC:dD0@rA+)CbecCrA%WGV;R&"j>oPkoj578ts%GT(o:/(!W&J_.bRQ3Suo:\I(YdD:lr&"9m;B!hgu8V;o_f'JW"=1_8GPV[%%g)ZoYnk!"`JP*5e0&=tmWb\p#+uFpXiAK7njE3%r%-e`6cFLp$6-HHnu)W7s*1!>0#m_[24di%+]RW>+T<s,XonjVE.`F'J`%<dG9YUc4J]<a>mk`2q`=*QoVpTYi(:f=q#KkCLXTO"(M%eogI&`ca7R>qgR;OG<R=c=&m`Bi*3^Amsd=\p!F+Z`jM7L".`XCC.ZJB5EZIe8^[0#gM"pn/<NVj?ZFs^im4S&)MK>Qo+'p]6\Y1%->A)>JVVW-^dr-<=mu)C.kf@(cH,<TkWF&,cqE+j_%5`5af8oA$f4_rjL=2g0LArkcidPt"O-uK][d@$H-gSbP"'+^S(!TE#gG[D%]G=\W]WNP<Ir+:1F[p?44K\US)2BX_ATdgZa*9Z`\Yf[U1-i./!DY]qP;K5Zdjn8j@<r)(%Bn+rLK>=(Fnp_3Z(6^!]t0a>-J<)5%Vk&QFg7VqpLL&ir%[gk`+ZQScS>AMAR'TW#k'#$:Kf6YMR'Y..hOnF6EL&RXYL&5b$a2;T=WXrgCe(pL8c(7D$2LdV\!,%EIl;J8%eog>L%N/[AS4OT+0kgV'Et69[Ud50V%oDTEH_dms!KnHeE*DRpUidDOJt8(uG(K:U*IqaW&%i[mZTMohD=CYEn2Op1a(g7IC4geI%DE(Q(eTL*(mNsr5Tfk(d@l%Krl!foi<ES$CS/ljN.;ji>@67,7$MeQL:H.\&L2k0`UerWa0%&pTV*W'52<],8F4:biR;Ut@e%Nig%=rb>Zk1:*T:B4:])PHZ$!A<pI/_2@;i\89C)7M$,`[rh6TZ']@:St``a0Z'sMd::*nBTITU8O$ko?opJ2gJ`'N>'ifNTXU.FY-S&%/nm^-*?:V4YL3i2L"AS7Q3T!)YHn6#S0ltQ#0k!c]G=n]]KqI`'Yi.`KJ^F!;HoTdFVS=fX3k8E\5m+^0^E.QX3IpS"bY95H.HV^%--Qapoi\UXkSR$[FMou4/Mpsn_J9R"QIiO;MJ3MSo!6A$2e^bR_.sL"Q3T!UcEl`3bULj>BmdNLk?3^"kfC)oV[qD':0qVR7)3Og%A<I-3F%iJaJ17?'C!o&_oN<)3Zor%0?0Vjiqg_s!%H(gC!PFW'Xo_gL(;-Wu7L&L:Amk[G$f>)nf93&^ct/t(X!XOn8I)GioN<6B%E"1/28Oc9kOJl_[(eHXY6Q!or%pI!$8(Y&28<d_j-+jFeZTMnMgT\,_$^\O;"1UUbeW+G"8QM0benA1:BNWPJ_f@(BQ?1H8DiGg2%<S2@pBU(@pVG*TAif(NIMtL69-*BG4SFKag4D5V5o3KO;`>=ts)gErbB6de+hK*SgOq,PTp7AGqm=Ct!,.?umG&]tm[&j)@IO9Qs%cf>W6RJ^KZ#;&*N2n$5+WF,pC2p2FZY9s\[R,TC9Wj"Cud]AFY1qm+&Zo0\^lLN>`@f]9Zep\\A%%;khGV+GYH-h`:Kc>F^CgOUX%c&Nii/[T,8cpBp(5h=>ra+,_f/@(Yn!c*tM<)?4d*\4p8j+<F3)5.p8"KSfF=di?!OUH/PI[-eO'ikM+/.F)W:hT#Rnl1V]'&A&c%a%eX_G&^"*TYhn=jVd!.1;6iQ1VfPm5s_1`H*$[9(YYBU.8?p?H.Dg.H'9##+bRRlX:?1:^hI<"/.F)=lV;FmpFnIG1Un0g_6*2F%i%FT3(>?,KK*B\W3I]+AKk<i:=cEI-d\('kZ\huY/>64)EGM/RaFb9-.]"k]MT2V`@;*YGK\'>I/?`jZ]rY]+`,e5ac3\0-:70R,%aWq<FqXs!j6@AO5ejMbA?S*&ja;:m6W$pC;TSi3pDjXq+)&!%OZ&hPG<AA_d(,sGjB\'pPX7_:41oT'irQ`u13%`U52SIhWhmpho%>56++!PO&*6]59tm+[*CU3Dn./_jHFJ/(%\ZbQXe!XlXV=gL5(8Zq.%7d'r,1Q[9%Cd`N-NQgsd-/37B.qspd@@Dm^iWrX\(n%1B%'li'pVLI$+l9VaT+4mX_738i.m*8^BjM]DI@U/LpiO"n18V;m\<MZhBcDdPdN$ZIi<Lfmg'a(aDgjgs&/@(Yn!c*tM<MZo!I+_%`%R9F8>"jC_@I?J2B%*2.Ykuqd*\S3KucdJJ\pXWG>:Y^S4/KM4geN0nAoNC%LV0tm%#-1B"c"[RP+NQ9N!U\m*4D7l4jRiE<\OJ2.%$b!Fna;9,-9BKuq`E)+n[D`np(0f_)i0ranbE*lk-#4\V1uhBICAc1!%4_51l,M.mpU&N"6*c"CVmZ.g)H:63=aKKWE#<tr)+t48%Z1LU+<4"K&0Tt3id-6sdArK-&NKq`Y\sCeCfDr&%IGb)Wd-TM<f0X8=2eX(V$;2?I%lB1In62_FbCc+hffkcc\+U7X&)*h)fP7rV%,7duO-+ND,%3<Xq1i"Gr[:V2;lWVXRB^GpSKQ_HjB'_p1NM4Se7P/RF<f;*#TT/Cf2`3GG`>NrR(2Js^d+[Nom^W_'[DtkmW59Ir%H%F-c^@E1PRH6_-/CW_bI:]_9Z&N/tc'Z36)S;X'5tak3:%&de!:oa0'/\0""]j)52,!6bk%;cZ7U)<6Kk=][R'o13cH(X(4=:aH%Vhs!sN\fq\1$4</X0b0H%DNHe_lqDqVSR#Amj&>lp'"ViYDs+>&t4C&TspO!Zt=U1Em,gj3gDUik_(i(i%^S^(3rWt4u\4>/PB-H%1^1,S.Y&=\cn]q6Y%@.i8lOWD]^!*EH-iiRGLL!5)8ec[hf!5s?K;Q!N:2?`j1BtTn0"7@GKnRI$Ffja3r1]99PFhfj]-g_nt9P9%C+il91"U)lAg[qu`Z,e??&S.lF`pMB\*)F)!R8mrZe?jrU^\e)K[5SJo--h0%>#sA:bcjcF</Q5Mp`#aL"?<LQ8`P5_,hm#7jTu*%I"g/ThaJTnlr3E04aSX\@)"`ZiNrTVUl?iTJBnU.4J_Nd!715/V0b&ZlhA3Od.hp`%7A4LlKf=4>taC>D@>C<bB43NYV,7XC&pFg%ZRTd=LH$71KkB=+=A=18V*RQ'M]8Dt*TEVn3J:ub!-h3p=l_ll54;VAOgA@E&N"8ai3b1KQIiP:L??>/\J9E-IA%O*#HP-(8X`Xf%:Y.k%c/+.dcI[Ts*3Yd,6%s4r"kKNs/Ik^i<,'@K#d84sZTMn=CW9Z';Hm1jYsdP.Q8m(R>,]'E\C!jq.;mTmK@&sAJ_+)I/8rmE%*>]*jNXI-0G2T`fCQ\l:Xl;?ci7+g(KDPYnH=65G%m8$fQ=F5Yll"V4An\L7M".5$Qra`T]Ks_KN-S,5Kk<UU?>GM+]MXT0_YK-(%c=`Yd3obm+H%VC``[l+sBV?:\$a5-O/?`j2gf.ZU135g7*?CgkP8%>5P-[8afnX`AdSdYD*/k'.&J:Sc)Ts\8CFR_(_QIH1E@<X_%<5<:Eat+',<qfM;\<h6U]p(>@AX3QQ98h`BYE_hY)1*fJMr5dtcna5]9-!:%1lDY/>'l\!NERmQc:J_=_3j^1N6Uq)(4>H%\B=d2%ME_;H$'Li.E*?='8V;n$BXOFPk7Xo)ER:ebA6/"E-YZE)]]WZOHhY1*V1:I5U%;G\RH6`X>VXn*[:5f9iT93Z_(;^hi"H?JRIFpE%@ISt_bX?]8REY5p-2?K>XG&9Nno;lW5dOT$G\u.ibCc+/?4%_-Ra3G-!*FITJ7j.%9B3J0f<r,6R['`sYInW@MnD?620ha"-82b%%rCS,)IZXje/Mj^eVJA$N[U>egn)r_q*A-iT,n>@.>t^X`B8'q;^@3%r^W7A%(pb$8`\N3Zb[,ORh(S>lAa&dQ8sY3.V5_!2X'3[t%XfHF-E7F1;g5(0_HDR$RF/,qM=J\=&]^'[LA_0LEp;PgulSM7eMD?h/k`1dN&YV$=7cdW[>i\2odNV:*rL$kXKk:APeeZY%*jdKo%lJ^?B<G:Fi/c"ZUYA<Z<=&W2+1d<G6p_C"O[k^O-MWQi&q"jE"LKPC]JZnP]r6Fl+Kl;/kQ:R@9pgZ]BB\!g4CFsOlf<p:\E3fDI%Ontg(3Yg#C;di_m;^Q3Td2/r4C`S'C]d@P%c%I\-2.:9_#;)pl@Dm+E($CVi_k:-dJCe7TQ8`Ipg^6[ogksJ&6j^'e/$h?O)*4_-%P,6PuBu]AQC2A?^"r0cdI)Il[(>>^28VS%,>t^]Nc)tVL8sO!>7<jfgbjqE<=k&WKSJUrcZ^)6U7K"D@>36$>,H_IU8i)JR/e%fe%[&tUT>Our4d_%Fj1ohG*(;mI@B^(Pmg3d?W@Vm/CC\-Jl7R,(KQDIQ*jL%r81^gOpQ3nFRUD@Vpk9T1I=]Jd</$llcMm[k%ZrSh:%"$5Bu<^4bHZjas;f+(oZ).Q6R#OEY<CWYp+Xg)F1]_8m%Zc3&QCFleSB^'ujqY\Q$dJA7;XNq-Tp%br,Y,/42a\#d[P!ZMK;V&/7%,&bt?/cWIOVA[Pn?=Wi<4D;iX+>1;N[71Ik2+hJg2E=?]MP\(dIEZS(]?Ao8Uq?n>ZTMo(e%GWQR^\n\o?*IXDjE=sYqY%d&u<l*%N59:<4Nm%oLjKX+qoLMM?>,Pb3S_sOTZ,79IdcOc0K;BT4q+O4Kh^",MW;nnof09G4jGTUO#'GY=WXr/),AehAjW0D8HH#cPZckA%`VPn\N,L`%pm0s!Djf]QbM8;&*,A?1d&]AO92Ehac)MW)nMmi^50g6]O*)1bS6H.=9:?[O[pI*'X>GjEj%Pn#b9JUWh=mW5`a)4U%Q3RpONUE0P=q!(50$_NW[AYg[6o?A['@[k*0ud37[%sZT7C9W)BP?Dm%Bk$R<F4;:fFb(,a7^ff5O9^6Rb5:3'r,-t6-F@0-uSA0%+JmcC>7Llid]<dcnKMifJ'c^)KiJS2OTlPA^)G`2Y/boiBbk]+a]DPhcn]6@EEga2)4F[&i>$E=j`N/(.7b(g/k@J:@_j]$a]0Ch%bU[S*bq!\.WJ=GZooQ4:BURJh7%;fFL1]r5QaQ<4%pI*a0H<+l"jSJ^L"-6@P1EWdl2Hjh7[rj,;4=m+n6/2IjUGAt(umT;KlK*4%35aeg0@%Z)=s?$0$a@]I_u_K]EAhfW+r=nQ6-Ea1nVl#=1KGT!X,lGF4t]8^U<Q+b6SnEQQQk06%pF:SToE<)+D@,BTp`tJ]I%[D%nt;g<do]8"gk]Gl7;0RU19[sI=l-*r>!4-7Ws?mQ4a=*ZcgnZ5`-44G(t85MAoA*H*C]I$(shcGA^2QX[ec,nA<P)N+Z@MrQ86M$%`+LF!h5B@NV6F.0T;5U)\_T!2X9OcFJi95r`ij_=-=&1.]):>"PCpR3^(;=O*AhR#i3i8BbCc,Ncu[eo+-'BjSTOAT8Y>*e/S/(%%`V,GP3M;UJ[:OTBREY4K/I#DA-2IdKi3gq#jc*HF0g_Tl7aS4kK%Cq$/.Yob-X"_Sa`>BmQ8;9VQ3T"tWT!11>t]BtqF,V%kmj#`%Jol!%)K^pp>1^#+F@%dD=EofMT&k)HoU1s'7uO:+=o10^4D<=*_.uboQ8`IpXG%r1ecM:g5O_ilRH6_-/G%;-?`rusR^IP4>0EQ"%NEWEkm)sj^d]BkCbC8q1%pJ\XM.#*aI7T+ta1+^&XIB?jookTHY2ZAiYkZVVe=#qmNQst+k2h9J31!e)W5Y2g,[.MZc'ge?XkD%k%TV[)'`a%(bZpO<6>e$[g$Z5CuAUUVl6-E[0/9*@jVHL6<<bqE82!?>d24A3*T!KQd/A/c6iAJf2Q@1JYqU4_HOJ#a/"Ks](=^KQD%*tmFhf=l'sScG6o<gjMlYVPHPPm.u:A&igcqHupc*a3:C-'_QFj<>+<b+)DWf0&2c6>4BF#d<bLMnH43n^8/uF4k5Tfk[3!2!m\4%?I1=MaFb9-VOdjJ^&jk&BJ21E0]=kh>NA)n>[EEWj#0g_.5V]>K\+/-7Ga]VGY&/t?;a>69+%TeP-[!D=@*gPnU.bZTioaQ20:G@%THt*"gN5#]\ctZ=epP8K]]:8Te7/?B8i4QNk1a$lebH=:)K]Zfna\"FVS'PJdg!lJY==dG*jcp9[:dn_?EpnPT$fI?;dN2i(3s2D%T;#TBZ:%'R=]5@)23h;cZn+iVqQenhPRs9PQsZ0mM`bYj]lr#5G^#u%LEjIO;9n`%/_9#NU;a4\%-iMtq#"9$f+NBTY^S?H%'bj&%Re;lgC>IqrD,=X]5/^TZ+-p1]@C?)`OuB8C`Ycuh6Ddmqm$uWB-Ws7WVB""f%YMb_Jn2P>33@CpUd7FV<*6mMGX5g;(2+Hci3e#L%Q3T"PbTSLdfc!d5OK91Kdot]]Xm:eu/o*45qVYT4d4cH6ctj6qYK7n'H-kOe>K:_2C[7Wrb65#VoiW?CoGD(dE9-e)IB_)B+:>=B%_6Z7;R;57YMhcA,O)(j'X>[l71USG'&8*P&[.Ha.OA2LHK4Z\U][kSFH(u/@Zlm`t<bTK6L"A;d=l,snf_[[c9XFH<XOc<BBjF6g%cOsDK8\L=(Qt4RFWIWThat+',>d6`@Y/MIr?9oLlM)e9QRAGm(N:15$`cX#TH7n\icS`grJim+O/$7#q>G7$pQKP:8,&bt?r?ERk%rs7<a2dRREs#A2SQ6,R5Zq?i?fP$P95&',diG+\1[:BCD"0RU@@DE&8"W)D8\7U$5&f6bXVmMgRB\)7\CJB8D#;'G.^M?tq!L.1)%<-XDEcgiD7`oPH=4LQ]W1TND/=W2B%gUo_D&(HW3R8TKm0mG:1B6g6f@u_+6lk(LYOPmJM3D&Ndn4?:mZjPB\->8Z#CXk2B5qgO)%K9ia;_<&nh9kX`O_J?g9/.Yq\V)C6"hueNt1'*i'Qf,9n`%2F&Q7X9VZM%P4(Rd5&Z>Kt#njY4^KpALF886Y&b0jP%b(H".W5Wj1%a&95Ec'ge?XkD%k\sAo]EicP4]FSP4"Z2,Cn60=ijZuOHk#lo@o+KH^A'h;=#-W0iZb0.nF^b/N6rf[q35TH9fIRP:HKValHp2mj%%3Hj2pu&N65=pKb4jU1qS_&W4`h6HOK@dtbQ3T"^;YrG`("*R$e#Y37<pPZVBjJcq?fe^=5#*7p=V-cJKY_@G4A1<eAQu+]Q>IeA%%>pKhTgdh:`>\\pAmKVN=k=[,eoe;]B^%$%CQ:nl`*$kdden90"u],,N\Y`F'CFH7AI<*oR0$^,:7:30b:ss2h`)OCYu05*\7785%=^KS:ES+0KdGpao)P`CQ0aag5``X3Z/5`q*Q7/gk2,NDb.(mWj[&D+HN5VOs/\K*a(O=BUpEE<GY-bp(BqhiY$ljrP7,^QU[.JTT%N5!_d/2Y?o1h66rCWq6i#;(A;B2$9+?9K32&XkEiiAJW\aQm"La"n*5a0F".=D/%Oj]*-Nnt9QNO-R/l8"l@G.(glj0(MI`(1V56%h?qM:bcSk=7Gau^3(f<H*2V$E;4P'R(O=@_8)[(/UTfi]iO^rScdJIq>gmj:bM$$3#26qpEFk7;/Rp*;CKW.46F4Z5?>D*u]WT4p%jKuqdHdK1/_Bf#%i3]@:97r8$-<Y&(9bJ]Z0#,s_(MTWSCQ9smiWpf>N5B:fEL$eLo?+4"f=\C&P(f3/=*CpWXs0sDeb\H,=r!M!%_dP.!0(P[SL"QtA[+lO4JS(SZ?43l<*jdJX`-sk\X#)n6ld=Ng*jj-M)\?l#fg'6e_I:".@$LsK*,1ARj-]6_EK+R=MGb7'j?ZFQ%k$p3)3cSTpoG!In*T8jN`%2?YH8MtJ(c`44M4e!m"Ks]'=l-*rRU]Ug`(Dfi):gk=,-Pd=*&ER?7LloI+@3:;#u58tP;K4/F/+<,%;.)K-TNP1oY;MSJ*jdIua\#d;P!ZK`5-@o-738feSLg&7FKu1s!^!!>:6n=Tf94_I`Ca@'(PQJ[OOiR5738i2!UsAfR-fJs(<#.<%+J,Eh3\6(ii:tZiA0<Fn#/[]'k\-7;_;V:u'cn>YB\)-pf/ih4*jk!R)ktdCV4s%[Y(b=aY?BSX_\aWA1Ub@=CPq&VVDu\LJmQs7%VO4k]4?i=`F/AG2;k2rl/U;21YI#2Q7iPm"*PK*DW%ZSl,OTjJ_0$5HQUg\"B&O,($f>+DW5ZUi&hSQdAcOBp#/IQ-B^),A9RC3G%DWVrb47V79'0f&-<EP:`J_$T\1BAguJ`GaK]WS*(BPHC):u!ns!mSRi]G=h[4D9RUSee6#/pQ0Y3!IP.%(m?`ZTMpC+cedXPu^s2%UJkTaodSh+5%U$<kSS\>(H=R"-Oh<ASAqJNdRG5m_CX&/1.VVb_J'!497r8$VHR\,9iYlX(s?)]?0$,[FN?Q4K:2'`DYV%?Qsu$X%I+Ch8=\u=:#V0aE&;"G*BO;.#M_sX"4n*p?"7Kkbn:&@ZcgjOW2At6#%T9"RA8#=38/HQH(@+rnotZd</Dg*n^saKGe7&H+?K/9@%WOrGPZb3I&W)70>DNSTa5Zn4GaT<<L(;R75kigm\!;PKf@1Wj1KePJ<KI:K/$G65@!jV_bc@j>M$@s"+j?ZE^lPY*1EGF*H>MmLI%lPmZSIH)kqcnY=8/o\$WOGrE0Vt#bQ2!A&aSFu!118iJg`G:l_QIiJTGKP12E2C,)`lq_&$=Msq!&*o9AQ`SuD-^]Zbr?Kt23)71%2ek'Z+qb?NKOtW]G`ACJnt;gL)<4gKXT^-5=$R\EE/[R/B;@g`8bS@K?,o^hB+FfkV"Q6r9Y*2.CXf$>ITG0?'0*&.)#Gkb.rZKH%/::`aIho^k1>imB"5ZK#W5F4R"kmr$aZroe%<Q5sd*X&6FXNGD6.WU\OGl75:?,(bC!]_3rUd8QR.oF%Ak^3=1%sUc4D6a`BiPcq%-<_=&bl]e<*oOHg1!Aldr3A$nr3A%),RZ3=DTpARTH_UNeWgp5c>'2DM&0JSnZt>kl-[HOfQ1T/#R8OK'R23_B6hk0[$1^KM.#-G%B]JtA/L?<;BGmR?f.mRYOKA0[VtId12!F/n`VQ[OZ,o&/YcJn"eTe3!>1X@P<ldn%=s62:cjFP=j=CZGr,A=CCP_SuH_FR]!O&nn%=WXpq5?1K0/Or%.gm)IO/A)2&ZTMo((5\;70+pRVSh$n#`'kSdFOtGj,kS$DD1kL37)3M2A<mE?bAiM6>=t8T1PcO=jg`;SYA9!M%*,2&\\ZaFh$R?*4E*@3TdRFu&efiDo3bT99i3g!WbCc,11,-&IWjLQe2m^.0RTWr'Y?>0`nt;g4+K`&l^@nqR*p3m(0H+/fAW7V0%.E5q#&L;.JESXW"Ul@F:+i\(p;+S\8j1;;$8F&<7%B"7g?iOqsD/BD4$Yf*6,FRXZ98bETZ)8Y2#&=IgRQGbr\^0i>V+amL9%q<8%#:S.k^h6APOp)$$cVnLQ2&*PLZjY,PM=?r_RH8QCR27='UL[]hf\mX8nL27i4N]2c>202;bd#7iQq8(/i3WKUV*W/M`>S7#`@81a%m?TBM7Gau^)S=cB@]V^GRrcG]b^Gd8lEJPGnuQoVCCcHp>3@lgK9ks&%=g6iNT$RlI6%T[S//u*['!lPT]<?*QG"uK)$gVRJab3$%>5VXeW3e6Y3C'n$%Sgg,ZS^lJ8riQ;;ooUs$a$_#*#E=a%Vm>$p$u\eo&YgsT;=hD=l<L\>VtpRbod%g#/7FNY%-XhRK;!rbAfui%;_5#cB43[>Jc\0t93joPdjgH<`tD/-Z"@^F%Vp\Jd$c)@/==7f/T@"6lEKDj<a[=Sa;%H[*4%Kc=A*;IRF9cnQHk086?eaI[2e#g%%jlPnLb[O)B\!I*CQ3;!#;,qZT9ebGU@W7*05(Q-?o?l5V2[O;&ON(s6I;eOK%HIM/.Yq\<gGJ&K6P.dL[HF',iH%!1.d+UF^]E_%=]c\W(08JDL".`XBo*cFMN!s&=r>!b-mYQh3/s=Wd\%hl`5Ou$d`!5Em,\eIJ["V^#VYbAAa(.igZ$M4UeX?=eYt+J7NFPWOJfDp%MOASF1Qt#GJq?=&ZZ]Gb#9hXOU!S`=$Ep_P7Ga]Vg*%_F3u$E@EhaX-dRG5]^*7KK&^qH.b,b#;j?^se#E3Q&!t*:T]C6_S?fZ>]%Nmi=_@!A&'CFUTf2E,K.>b$o\*HQ-coLj<u8/>HJm7itEFVTA]+/uVYIme!_9)Q7bZH.Y62m9)/btkBSOG7t#dqX2k"V'96>G($1%SQhuqgA#Q7JC2=RH-k";j^<t[qqAk#6*mEo?>GG)]Ks^@@$WbP(c2V.n6,h<o"(.&H+*rri1/UI(c2V/n6-+Dnt9R^)lTR3DZCIZ%i3;nabd*mL$jL"T)Dm+ZS@n>0-U5e,Q8nVk<n^Hk;OT<RiAG4&bCc,2#DY*!335;'X?Llpeoep&;%=.t/K#Q?bTmR(E*<7fd\%i/%/Lg56"Va;0!!]V1n18M-@SImVXi\V+lU6!"aj9ONA_AE0Zt5^pBGPZ/h'Q:c5tg+d0P1rC8&S(V8CgV3\MtL^1.d+UV=YJ^>'a)8%JT+je:Q)lg-#qXR+e1OR[1H)+Ah:"f_Qu)_f]U.YQ$1B,]nBu`$sj>$=WXpibJ[Im//&P_STsYXM4`mh>0OoPTG\Z0m)4P*:AcB>%X2rb=F4W-b9+/l:8)Z<(EL&NJYSPOdXhcg8g,h9r^!G-",:ii?m+!\<Kk:<9]EZ0X4D:_i9,tVP@E%?UX+3*Cm_%,Objr?2_WuM`%-Dd%3XHbK]+9@G@87l#O&>i'-`'jo`\2[OkL!p*=Op2Z%CFj+'@l`Qfb8JnkbCc,[/NR\7Hi_&km@[Tt#HtQ/=^K^cf-K'Fh.<@l%AVu1R^a6Vt>dHP+=UGb+[M0p=Adr<Y$PA:ZBIS"jX4$^@bQZGiG%E:I/^g;%/i:Us.5VFS_J<Kdc*K7*=<6mN`W7/o*:SEs!RL>J%(-8.]VUb?ZMCD6"CX=WF^h_mdbCc*<ZTHHCG/p')*G]7G9,i"U#Tm\[f>j<0ol4Sd4j/JD@qal)>11D@Beoi`1\!kX9g"j*2(`NH%]N<f&mj04]0B"bWR\`;=Rb'b1#Ib/TKJpPLRb'c^]MXTlG`cYj?>.@<L"BH)+qIl2db]R8naUQ+@\FYN$a0U$,-Pd%]^dt0V:+(\%h=q_H%-3)jpm"8dFS&gs50jiSX6=7;P9),dQm\C7#45lb"r24%<UFHp\V+LujjoZ3Q8Y`sVC2N5\-Pf';0g\+(O9;E?X")*?Wn",%ZM=*.$fW?>3gTKTjHoR*O=[R4g)daplT2o:rggpSrXG$uOKc0C0@HM'hUt\5hUr.Q:-&+9PY\SS"kGY8Si%!)=V-,4)TOB<3gP2d%'\@aTU"Lk*lb:[hYA8uCd5=UCm)ueFc9\e#%UM6]ZTMpcrDpqbA+.o&G2=[s]CgnfCZ^h^Y+Yc@%?@1mVN^bgN5I;*@tVX6CiG[F%/T^SL/Z/g%H>5.)3Aie>Jq>%tm@5Pai-&?jZZ?U_46Nr_XsJ:e)<SRR&KI[<8Tr+iBkMgZ"s&,_@a.%0"cbH]-<W,0V`"'K)KbTt%KXF.:&%#qnjr@fucNddHOU!IbbOH!aoBBrQT`Hg1L08!2!PO](Y+i"WLQsbV*eIoM]r[3KMmQ?:_/>Zfj?^''/SgFF/.2fF\S3S]%4ld'V!mT^3]G=ST]WPi7[8_M?;l-<:d/hKsq]ri:g8@@\[.M^Vk.I<TZW"RZ=A/6W[#7pb=$W[8b#ine[*j>cKe@$S]&:!CS`N/\%Z>GkeA_S]:LOITuMW`uX2!ETT,upc^o9)^ZG*9XVVgXl_[,d4aMG?\gon]D"!g7slE7ub/V%"o5JVZFr&0Vo)&Pcg[ZS\W%F7,7f%BT7"h+;q(*SAm!1d^kGp7m-?g`$;HU4S"mb*fID._tU<.3ubmmI+m9CCL8JLLY8&j%4WoNIn&AEBI^Y!]SjG*-1o'6od5sTME\r)%J7cHNn/?5NaFfdi.@%fVPQJso\o8Qd?_ftXR\tfXmd673#N(OaqX*[79[]RXa#m[W>%o:p1-uAUE<&)(`RZTDCI'&PSTsdggW'NC%:-<dg`6\"IV&*m+Yt(te)Ij#o)ETp\Ytrf@ig="Pl=CSi,>=P4m9!WE,d"-*^1LVXfi>Caa'<[7,kLsCi<8OWPm.uH!S!X*"/m?q%.0lcAnl]/JO]U_;=6H1$3;7g?\`\%Z4\ttF?,s6h0/RJ.i3e;'bNi?S\jk"W=egU[O^$BoqB?A0o&<?QU!u,eZ8DOgVfa>m2!A&1%O=G*]65#_-61ETBTB2&9bd9a1RJ*p=J&"'<q]r;E34c<#.ZWY&XbKRg'JSF;@$1ZsXX7s<OS]Be"bL8:&=h;Q-YZBhD)gf1dbG-\%1lGUN[D8?/2&0]gX'IgEQ.B!YG.rZBoEqdimmS;)E;D/M;+[:SbA;]>VZWH43bE)Y$>Y/V,B*r1_J;haOk7"NAOT]mo84*T6*FKo%KX3M639FdInS:9hBP,hLf1c&cYA<Y9HAc.W.jTaRiABbhV*W(`1fW1l1^IrG\Ktrlj?ZFGOIBZgQ.FNlk*-]Rk)bsLRR:PB['#$#%P3f:E<[Kom@Ia'L)s2O2eJ1mscM64\8rABG%:*Xjb*gf*p`p:ug+q'i6gQ<sq[uR@hL[bC\!Ws#.dRta+E0T-d.@]Pb,\n=>3%um%ZEgU>H"@AH2=n>\C_pg4d1"K-8*i-NXTPBhh)_IAN_*DUOh/XCerdPS%FtQK`;t4cFj0ELV,pR=XE0GZSb4f+/nJp1\QG\N(#8R<%J<u`PL5,uXJeu'8]sGASKps1NN:`tR4!@;&o)V$:+-S6(#\1GB.;Wi^:eVc3W\Y.F1s1FJmf0D].NBh;UB8\d.e$V;29Y;hW,5u>%LgHp3D)O\R)&!]j@tM$LB^&X:Zumr@VfmB?<X44Lm`N_[M_jpsASK#`[&"(1BGPF]g4[)ZK9e7?F=h8r!c<>"c>2B#bCc+/6J$ZI%AoobA5Z_S<co&u2nu6Du%+\8tWJhpl&X!;!1KsAeAMs8u&sIH;b%r(@g#m!;qtuX/aNm4'feo!SjV4/O"lV>FYfMH_,FL'58VoNG%A\%q:BZ;U>$IZmCc)S#A#B=q>Q)=7&XD33j['%8g*1P'QUh0[?Z@t,Mm@7dsB5(2IgSCRE39K!`BklPBWocH;ZRW%<KXbIG5r7p?%XMu4)d\(%ZI_/s=+%QKKh&?3'BjHF2[PGYLG:OV?$^r(uB!nS.Ud7G1LW0d(>*#N"%16t#42fR*1\+)[G4hCV<-mE$\#-K'8)?W1%A#lZEX)p&8<L0cckCXSSpoCT!@_2DC=5A&modaoUZp:cZBZKKZ@#3AD/f2*A?uL@Ieulk;RbJI=P&!:G1'H!FJ@M*Ne(Rg<9jEXF%Bt`mYcpi7!<h^V!kngqb`%u>/,7F0gFDAedn#5uFIM\P;$@fajcqu^IO2Bcm,MEoCA6MUm;(;Q)I[!OV'RGuaQ$]7umtucrLKr=M%I0:%[gin$t/dHEV[m49se<Osba4='Y[/RmP3`U]=iJ('Q[5RTH(3b3bdG)5UI=%$F;drpE6U5rP6i<(CVH;mP'kF/_'^bN1_*2]k%be'T7hLe%j7*h$AR/*dNoI/j7N.M/$o0hmmLrlmPjVba7d?3U`_U=mNn["7,QkU>A0G&@N%q$O4h_>DLLc^+f]'NCFehI`\q]Cat%C*",@%Y:!i3;GoqoQ6JS@q,d@)4BH)C^bmkFF.gYJnVk/5[D_(?1!2]R*`Z&0/S4[&:\L'!U#rQ-Q5@F%Roea>A4KHg)u[D'*r,\%Fc6;e,JVsk(]j<[7%=>\kej9Gc41'b"AA%lT[$/a^u59E3hhSe_^PdDOU(`tOr);$*.oA&Z,jg=#Z=K*cQGbY0V6rR#cJ1C_rlRP%o6d-,5`Kk&H4L]0!q/`k)!k`)LBe7OC0VhB_#%QiZbGso#J_JH=9XFFeLSuPJAEC-'S(d@LF"V]l4@p%+Bh89[?0eH]8csXht&&\%^^pcl,@Ib9nk,X!(f3RH*\RR!a2tTr#Sa5@3?fj8FT_j*O\nBWVL+1o@he;'GO,WnKSUki'kA2I"A_i]&&]c=JuB?I'EeKO`#qTB%-R\uueTWLFK7LO<!'\-;Rsl_0Po'X<<rce962dA,?Y0kFXS/.bJgdgg)$>#%jmb*Y+F2/Q+P=X(='>hpSKJf9bTJ#.D=T(q"9],A%9*#=^E_cU>JM5[+Y,^5?-nV@1FQb-3Jole^4pn'8p;=T51("MJ6:YGud#c,q$@G-?+&p`+#[2EE"Z#1$I">@'gAurln@"#-0at_/%mg^0oM6P#1(i0g2%dG(.0rSSnFKdDP@s%bUe`pPTLVc<Jq-Y%MB6cQKlM)Mt*XC_ur_B'H!"KJJ3sV:,AhqC-B2B:D#B5bYVLI8:%#H_XCbpCci)$J/&d5hc9iO.^'BT*&8:l*-Ji.(nSR`#>X(8<MnK%8%(89bZ>#nAlkc2e.fQm>kU5om!H3ZR11`jF&2d23,Jr.l]f%JFQ,d`^,3k-<eFjrD%Xk*Fp0hoLPdRA)Moj#j4l<FpD?Gfu"mGbV.Ar+%YN\1r]Po/KunXU;!c8$p;0;d0'Y/oTW+Y=,V#07-cPJ%2*U#^"5JIVkm6Pa33=<,Jk%qfQ7#TR)T*\#]fTJn$qgR/]YZ<'"pO-Y1j0*-JVRq*%[+[c!X;LF8W<af%(ncFe>V;LSrO'n7%NlS%(^,8r";i-T]*&u;Ltb=-GMnTT'91h!;lD"P!s@]h(`54[`W>aK0JjE[+FCMt`%]7F;>c^\K0rXLG_6'975X]B)4;5e+p-f-1k@rC%'kN)M^a0p:n0;R7JPjT=OMKncU*pRc:uDa?"9>0Md#]3sTF7NFg2qk(_C3L2'I-dO_'k@AYj:WkTYR4LB,'E$NHYU7%Rot!B-;bp%BE<[HK,2ke)'hZ)%MV<RfXkaOi^i@0#'OC050G*Z^dET*$>9_7\d+`ki7*HOljLK&JqH?SDi5u,!.nLa*XmX_[tA)LQ&m,pG%aDH%JD@$$!G9bs\kKmF\;a?N+cCc;gGD8#dbG%6&B2,g%DDhq)j(s?P._H%&k#UU1dRAHF6X)4JkD6N!-V@V%"^hgcN+0\7''!RLl/h8%1'j%nauOu;8h`ZnOC30Tpjuf,VXs'\3(kD5qgp)BUsdm36nnh")`;:HK5pGN"^_+ZoC)oY>e'AP6hKqs#K?a5klUT7:l)s""i*Aj%RgXat(Ke3J(cZL\/cZ)RTd-":"pbMf-k9X`Q,Yf1nED-9i5?.-)Qsp7V/am*lhj4X/]tRk>qQIjYgFE7*(?qCZ=G%01(NNHWYZ\g%>XU`n];-T9?4Flk,kVA98P"pl8+A8Z*RY'-6rf]j#%@p2@3EICl65\0iRQ-Pc]S;2VpgCc@8cRR1;b4UQ8`7Y`"XuEJBggJ=gDWD%!l(h)6'e/53oNp-("<Y8EIJDJ6Rk0+#RXCie=t\eAK9*Ql63hZS5fRs%NR#u&'aGVJABAIMMGC&nnr(SBXNb3%V6:Sg<M+&"rU<%%1krRp70E"SH<;HgE2J"2_q0(\qD4$Q8H$mpdt:L/20!V65KrEB%\UV1<!nFY*Q\<r"A@e'Oghu\Jdj1T4iFG0Y>A^7fE_4H.n=hp%0*T9B.A#E6"a#redb#?M).nq(24@h]]cI?qR&jVK6'RTQ+"(sF9[FbeTW+rX$DN``Ue_JE(i0gK]i5Pc(#p<BTIW5&Ao0)u4\JTl%%"f[B_E5QK8Lj+)6&\\&H,(Qdmnc<G)Ebp6I>F3N+g(635th>mmh$4T$07q7(^3t-K<VH/d+B:^ED/P5Dnlpa1tTbj8-\4/(6XgT%d/a?.!CP+)"]9%-7*?DK6RruTJPZ=T2Z"n-7m=ju[r6'1mt0]%*Yh)C2tNe47R>C[`1qo$FFiSNJgb1lU3.0'6W"s@`+\9"YQR>R%%Ag/0b@^rlVaD#P&gH.qa_ne?Efj]<)4a8(O`lF4)i7EW3\W*5+k!8"J;hDp#[01W-m@$!%8_`k@SfQbTD7_^OEHpf64B<Fp^@j]%oe*0ddKUW:OoYZ_mjg7`@i\^)JrE"HTE+01^5CP!9f!EC)C"!uWkW$`'T#WXFZIM2-LZL(@_6->hmWRjdE:c7#b'Dp\'YPDZ]"p"%Lr#Iq%NGVZ?ITO/"4FXhVR><,a_EtRLd@A,ITIN1R%f<P2!ak6+jsu$50Mp[h;h^86hHh4d:]f^(i5'Qe.BNpT'fu+pd8m!2+7:2%bU&lG,9=DE3Y&f7P3jJlm<:uD"_rkc`<;cnp)PP&/']XH8r,d"O9$ZG+BpKe@i3:!.+&k9)GoX-7=>H3]LG-md;.NTh[O=]S0THg%-m<nBq$2\PB.nfoTS2ORZT*[?71@7)$'Cqk_j"K6%>!,iPJ4OoSQJ8^X9)"MoKrC9L4S^^q1')eRk'R]$G9nf!<kkhcN'\8aqTdi%SdkolT.DR("CSkC'h#7a]mZ<&Itt7\:Sb?p_<@SEfO?O!9Ba'&7"^[3W$'NeYVRE6F8S,'^Z41Sc-#?#TH$Go1(#k%C`iUh3jR;P%.*/^\D*8?1k=?%*TRo_F$/RTB"mT@^$&nRq0SHAQ&-PEjJ_/coMucha9'[mE6%=XsU=5@+IB9.7DDe4V!>S##bJd*>37,Pe5+mMk%e603*1:5pR*>_ZdSS[<^p2'sS.l]'Me#iMDkg6)V88BA28nJoRT8O5Y+?HX`;j_Vg]g:`d%,c1UA,lhHbR,a@3j"$4eku4!Ofo!h%&=mDc'QO!UB_!*=6)6g^7LBmK9oC82dC:Ld:iRKY:ARbBej3,H1)VJ_;GBd61'f`:%k&P5bmTLsTI&uU!htl!JTd<(;iu/):d63D%Yd\E:SVple#T.36nfa8)n?tDG?rN,;ntBVX!!,f_"6tZ2nOa$RJ1Ae4\#:Bd`gREm^h*cSog=nOMiNeuOr$Pn`rK,;Gm#<$_/,9*%8!FO`m`r!J;*Nd2?\W57!h*4\<"FshlJgLmc/9Nbb(irP<YZVV)u;I?7.kNJ3(tc+++RWn(/[6MF<?DV7g1B8(=bcMZ-2V2aFJ@r%&Ztj%8IgS:&]MX^;d='H8\KUMUiGcUe!;D:fQRV^6aqmrf+*WaKBE79/XX^u]UO4uG/nLtSYcN%[DP]@%P:[l"B5Un+@s;)W#a=C%'mh3@G%ph#[/Yel61&X?)D*hrZlq,<;*(MD5G#mq#aiFqj`&\s=1^l/NKgROA&OMn>lYcD!KC'@$\t/H!&,h+6\&ihX-!dF7$E1_%"p0%^#RG,3'Y/1M>>GepEpT@)LV@R+">j8a1kpN]:gsJ/U(22.&>3W1H*a:oTB5<8LHn$[7u1D/ClP+Y.!oA;n>]IB3nfJq73e-.%l$!D[<.L57^jpIYO9RrS0/j$\GRA]*C.RBA-cmA06k]O9773MHE>BDtO=e+I!.ZIX#Sk>TqjXi@5_)n<+r:^C0cL!rC]gnWSMP<6%0^jcob5g2EVf:%F=IoAkbs1mkYq(l?1*dbNMo^YenueI.O\:FSO-\>tYcE,3>V`+1P6';N!+IB^18NeN.u@LdU]E__Th6I45^9hM%f\Q]4FT;GFhY$pL1nfa2"!FNH/f;#?N^E%;BMH0&._*cBf@d$j!)"7EVPF[q,\Sa,2Q)Aij<7)O:[J7lg3f!lV17)X!gSWRrWEnI%BA,'<]4<A?DWI:E6fJN^Y_De`\s?(G>$n\[cPuqX'lrS)lE@Apa`]0TMh?MZ[+O5BQVPY2rk4!P`3hqC[La9k9n@-]SA#.cS!Vro%GkuQrP.4JYMrr75=4@GIBT-j'[a>a)X_=Wh$(f=K=aC!*M%m<7e-EclEBO94=Jjm_f0=:!j2m!AdYa]_\55_2AaBI0+K^b*O0<WH%P3(8[lj3#!1]f9.5L!s!!PD0%ij<Lt'`_ZSLs32se5.d=_]t[.dRb#&0UjS#C[ppL4U#YI[:VB*m46hq4VY+8'B#t!ou`JpYC-c)%hIhS8d(U8_gQ/;.4kY!G$G_%-LV)CC:&5i+5`q)E:Ui=#CX)PeYiR[0j0o(Z.)=OhhJGZ;D2)+La,l"rW0A/,3).8Z:B?cQ&6jlL%T`?*+>854YJ.Cn!"-ZBoZ!jiZYd1^4VXD3d@1mWI!)4A9+b7gfdH9eum7kG->7eToQS"-rrf@9aa>N3mX;CtW5<2a0N<".]`Y>'O%0foGd!pJpg*<Oke'el*bi,]d5B++7n+^)8ML&e_ip-9@BriMdEm!na%7fOP>J:mja-H_A$gX"c(0ELB2`m-n6he;=Q_`>5-RM8M=%s5rIofi3.(,sV#adJJX4j.c.Qm$_"hO4B)@mQg_QZHX?%cS^j(C;#C0q/-QNccPuPk:]9s3;(Cc?:V.nN-b?;bBXh]Iei/-M9c,`%.Xp0YrNH6/M.Dn8Ho\)U!;/K>F",<KSZah!$YOe35M;L+7.4mpr%YnA?TK<8'tqp9f&d!8dDXFU(7aod?a5M)U,cS1iUst&-YOO/%prN^,(Obk=(p20aWmU]2O5Defq$^!RO1B?i%K:I?GJ@Q6@b?'%dJqp^YD3$p4RH;]K3p\nMc3"CZg!oVlf)&/\mHU;X(1KlIBoXF%X1H&]m)N(7Pb\!NK7[ALh-W/'37''kLY7"Hk^K'DISA/f7tM1oTXE77m</H</c&g,4X1d=o;f&ZDlXl[_oPs_rEo0*7fR9(]S?8)%SMR&@f@=OA?_H(+q6(\7^Z6JA1]!`38S/m&5LpunUAkVYV$6t;pb2KtfDgc`KJfP%.jsK*pD8>Yh)&FSqL<'\L]67I>O1ss2'%GE%MZ-sDQs8MTr,EbST+Y@jCNu]AV;[KGDJf&23cS[%(TqMC#Sc+@k1o<PWanX"DadO,Xo;r\mc]/tU[bZLStCFUd/SuE>R0:r5%rF:%$9;P/3ZS-Hr.Et3,GfN>r2HQGiNK)2]a<Qe:X(qUrK!8Vk^K'_YD_(`W_%)M^NCNbmRHs:/BWf0dJZQn%f^Vk]:Vf<3W/\>\9Rad%XJEYJnKgNWbo&R9=%k=AAL!L=Qq_d]m[p!pD+_\:(O^Dam>$P9`YtEjX,pV]qmCLRJ]6S$)nR3@KW@;J+.^)\]_s^AgD](ki5A$j%X+ij9KO*"*MR>8FcA:#hen8@iD`qoh!9Dba9kutBD:A8MpGg.S2)1tbO(mVPLV:WD&:iW$cDJGUGPKjDq+nK[pub_#^&B`6m&nr)%L8)FP6;Wd;m\,0)#3\m6U4IO/"JB]f?b9\IPjMrYKA-hd!49\s6OJWhB+$E+s!`iqC[pk$RNIH;UUO4_Zu9g,I=[:o)gWD6^ri:'%!&1%toWVhT`SR"S!3sDH"V"dgeC`gj^_WLQJBgtL*.V6ZK!#V@5iL<91]TuF*.V6`.(8OCeGr8>s-QT!'fg_Z-?f1a[etXKkDg9M%Z:4ekY#st=b&^#O/'?1m()B0b"<;qrnPdG"H-a7T-:'cI3^D?es6Z:o(BVs4AT-u8pkq'6TVS8%*^C[.0qfZ%!VfnI/HG<K#Q6=5%O`O'&_;9DS2h.=uiW%YQ@eu_brm65(!B@:a^qtQ<s-L1*p=uhPVW<$O3rjT<koG9Y\9\Cu>/]qO5PD,s%`#3#V`>]&$g8&5_ZQ81%O84C?"V.lpbn_qI8hD*q!#=>PNgfG<VYc&XONH!aHP/:_?Pa>O`8E)+5j)=5GR_Vu3&MpKM[hdJMa6pDrV@.2G-oBu+(3foRtIet%BJF0rnc<WVFMe7dd2Hs*/qBq)V$d:pN4Ek5$cpY=hul/7mkMkI[m4t;"V/Ct[/0"8^sS*bRTr,"p,%k9R0QJPGquM&Sd)Rr3aHW2%/<*Gl"u,l*s#s:?GNjRMJ^eud)Gkh3JJ[f(OmM_e^fgIpSek5DNM`KlNcn#/?GN>(`n\<T4P/)5]RY64>'"mE./N<%k*huI2CQ4g%BBJNO#/3;@No9Q_M0V@C7OP_Iq:Q&`kR@#UC&m^0PJ_/:SIlsT!L<ImFH"fQMU+9@"uPBDD?i+.3mP!+]G<Kl8,*+-S7B?n7jmSH%S"6C>!30Ko!GSXN%=",KFqtdbi6W-T^ama=rUq7e86EMH\,gM_p)OLMMD@ET#/!ldJf@N61A9K$nZU5)&);\:CKuL']]W@Vhq:$t%A-8>5^uq%\ZZ$'(P&3tp=!<hV*._2'BPYW>!*lEBp]7QrndLKISmOZW5De+_A<E'9>_,sRq_jP;"mh&8:E-H%Zf/<)[#E'!WR>'3%"8sJ_hg7]l2[Ki:^jGZs4:,7]`LIkZ!I@P0)Rb-Lk+2rni0@7?_AS_98.CRKRQrrk$ZFtRS,Zu&Y6bn&Gi9+]+ftErhsTe\63E-!%FR.B,!o,#,3!1h)c*ok?fRmTdhTBd;FKOeJ7h_XXDcJn"T0Ku>*[@oa6X0[6,7r%N)t#tL9Yek^L[X^-[?7sn'#71QMEC?lq61;@%i#/>!0l#JrIB>#-(M2OW!WQp9X`JE=YTS549[hi"<H/[1$XJfKdY[i1J)Cj,/&6!(-5XJ,l1P(Cah.T-jPBiQo%nRhN+.\Gn>Ea#%2Y:cE"*`95QVS1&*BJ0C($a!7qZ#<Yq"1k_?V`n\s/Qp`2r&sKCsi:ROkbfm=!Wf714],YG>.YD>`"3RGQL^[cCGMs!or^%!&Ol7%#RsIYEHa\KH8F1^rgH(W(jA7G9$XcbmkoZVq<jCI./,"o@"9k$JA6>#"&SlX#,pMj%ER(@2`1#8UB^5]\XOMq(^lCta"lYj2Dh)F%V7WE%`=3Xpj#+X"cO6)4Koo7t-T'1r^@#^N;FhS,HQ',Q'^-p7JnAMFT$T_IBZ=ja"&1/6+5>7pV<-Xg5**&j+O<EVH_CJ';Tomp%:m1Ued""q#(,trU5\IFt63GpQHu,L-,hi\=-k+rD)(4j-M'1T*.AXTq%HFhrf9*b"?dL"W_g>q&-\B@'Rb>\rJJBbEV@Wc<%*\E5%d-+=_gClk_&jc7n9RI#I$cenDj@9TFm>4)"%VC&3kY:fP+bEI&L=r.(/0#^l>=/N6B9p51B]-nRd7b\a-9dnN,]KK;HO7H[4iBYh%[#dO_E0o7L"=tXf6sm<_5\%I"fq&<b2pZ)_&nm4o1>A!X46j-f&nlC7R4U8"oijI6^oSig[2oA1BTru50^dD++TZJPbn_4bqT0`r%i%]c8Sd%<%SNl4MTO7BdJ-M#t4.q-L%1Hp#UWRDHJYcrrciCtebSD,LI,*$XX%+d?9Zgso,#CI^fq&KGV?k$tQr9Etp-d9*Snp^r%6QJ0S"J'<>ZV?I3Jr`))oHp\nDpW;@SM<J6SL4VR],1Yc5:)hP4pVKh:BI)*1p]=SoVQ!)63EeK6=tQ_aF1<["1^)%4(sIUr5gHG%0Gm4-9=P3YM2nmtT`HHoob-]/PSe#@VZA)uR;E`:c(dhQ)]E+kOkH<37a9i\6njLEG=)L7^[FDkFMF1p<3R[K!u5WI2?tF.C6er6%9MIbW.U^K3fg5j09n/gfX6XTD'L/!['ct5V#]7!tK@)No_aEYc3'?U<)2t][$Q!6o[56R$JTC/%(,B"f4$j-6''Zeh#)l51>KEIM%)eB$"f-2*jF^Q>N-Nb@TS*?n[E1()lWZZ]n<Ie5o;?EKmN9;*C_N\SH[\n_ndseVd'o\`$:BmTUcTW3TL=;RXa^B)Wf'j8tb=>@Z%n.Bt!DY1GY0O>.V:r$n@!_qt"_<As8/[U3=G^O,3:dNF9:]VfYbsiFU18kX3i$#>X63U$VlVKlnNZKZH%_C=W++96)X3WsEbb":t%<%s^EB=91?=k&]W1:WK5LCBQ)ds]^)pD`sWi?kr#i+GR$?rj[$\-_PL0fk8Gn_2p`qh5H',\=EG!=t[E[Wf*"qVKR"K0Hnu0VF%.%3JX6R5nbEB))@S$4e"$65]<RRSdZqJ*6n1f@%joON!UA,NM6^s*0%`?)/.]$_blfZR:ZgE<)"8=1+;t)PQ>*AQE+#[gG$Ip"W;DF%`sN\X`[.&?a^CG4]ci$-0%uE'f(X('?u!"$OMOaTmuYBHJVMk?0N.kFj5kdioBD]nrgP%O,Ba5.Jip8H'a&`#AM4>[`-I[daHI)D%0p!tdS!O<M;?094ON/-g(C4OZBELGd&/4nE`B^"V?RPDYckFMd(@O[#jK\_";ORI;6s^@N"clf?5aK]L5TU6<9Eaq;it?pe/<tlR%jtKI7j?`>c&]gELKg6\gHkLum(m-3Lo'"b-61A9c&V3Vo?t(6+_DN1O2SB>pnpb-lMg-QQnjh+NU_88A]6Y)$jOs/?=(!Q,SI%UE%c6uPONsO10+FfN9(O2#=/\iLTW\,L7Ul\J+%.Y-[Oqa*)Q6dt,>=@*f)3E<=M?t*s$%q$>NVEjd2M".8/`/3l;"_N_+=DDO(&KgW%JhY7i5mr=88C5-ppI(2K#.\Nl+9oA(bUG6eK-@_@+:k&,#_OZ.MD3-I0n;QuSH51:&<i8S`e7cuq^nP8JX@_f3ME)P1$Nuo6;7/4%9,QadDdjCo@Nskf@FujB-A]dkm@F[]br5.>WIc`>G3)eeKq7GI`1[i\4#@bt65sq.'Kn1l6F.>Xgog^k^``B:D,^P$!=X!EN+,+I%i1^ni\YjF$`NEUH!JB1L8J)0[=;,p9@#u=QYehNlW?qTL\Q:r6PR&sLQ8F,H?]kEG3J8N9KUN)K\R/dK5qoS1ADSpaYk;B(R.LLt%#6_Rb-oV,Q>r6gnOF*<\#r$'[;A3G)8%g%dSO)1c+SUQ!"pDIY9gAiKCipX=aF31IKa+Cm*Y@Bb;Ec8FIHWZk613P#$%a]nN?H;*%Z02KJd7T-)jNdFf+NQ-kNrYB0!Q@h=XfCah0PO7f.j2o&jnK-JD@&31#]`!FP6kUu6%X[C<rRtA=,7DY#'+5M3t]P.d=t%3[kBl6%;aF>5/.os_B+Q=22l0$+JD<OF+os]Lj[h^4??m0F',@2dI*"#CE`9t4$-95[.WW`9b%N(%\T(pk!SJA/873!jRrU2S5ctEA$NdWE%l2`=;^r4l?KqEc;W5?]>J6]9sTcbHs2bs)l\:S[!+HUA*mK-co'b<b:EaA#i&<Nq&W(B7W9"ZMP\LRH<"Q[.Jf*)2c.S#9tADa?T%ISU/J3JSk&f9If):Bjh8R3WnV&JRc$:>??mOK3US,Tp/#'M(Ja!!*^o'0q'NjHA3sr0!d"!tp]Rnean_Y)2]V!ch;*0aYpDB$,/8%5VZ=c+PXn?7-0M]NWFu%ehJ9RaQXP'"QX[c7fr7j/S(Nq;\G1m_SA`.XpJ]7J;MSHM*S3M854Vk6Kj7kY"\:.!Eg*C!g(TkjoI_"%#m^rg8P*D3!9Bm,GQNt",*d)'JE%^KP*0E^!0@jNK)jsV`[_)2$(=-[E_0aW!9CHVrAL*p!s&OgU9%u/O@u%/J1rFph&ug0,W7Om%-<JQ++HVL*onbpd=*#f%aJJ%FP$c$c4:oRL42c[]#SRReK'7bNp'c%n<J+^h2I\BKP1LB$16p-:Z3@s-^]bjBbsqPC!P`%)mr0:,%X[9\\!#XKu$tQg^R"A\<j9Hfh'Dqn7jR5mi)`K""'*.)-r^$U*$@`'Vq5^1p0bO<c!+^"1_20*L+Min)M2"Xlj<.PMW,DZtS_*B6%J@mMXbRf<k!G$tX%1sl"2,Y8D_m$sApAP*P[0pB(36@ip7S3]2S=qXP+"&HFkf;OCN?8T5n8Q&N#p982T)anW'`gPE4930XfBI#t%0MG@g2;lM8WY4f2O/a`b"i3Os$J<B?bo/Aqi5ZVjaQk/uTKp+]Ll(][!'g2FBtQ&Dd.2C6"9e_(KU=%L9h:r?mg'5UVbn,H">=&r%O2&[n-mn*bF<"l"dh!_C7'Y6l+0V`P\4Vd<'(8(Mp0_"X%j7(2n8H[7*=F$BEQCC:$^DhJ-,tLbS7B5_5pcrg!rY+A"]UXY'J0Fb%Z,^tp0-!%"_?9RC-Y$O&+j8pSM>VI7HH$[)a^@r.iAY!_;]LifP_nn9Ppd=-2h?GE\.k'c"(dYBjl&2+-;CjVb(/Ah,m-d;8d>(4%="5?2q*G6JIr3C5$Dq[YR>A3OqQYH#igrD"[dP@3[K(!:W,'b@F(Q<Ra.B1TRdsCnQ6JUZp2#r3cTW([iG?=dfa4,cDF4dG-aL*G%"I]`!5B^@$UFem\o6$2>T_&W-O*qT(\kmqj(B?[CTFET_9gBXA9,gj'"V9P3GsDI\lllBni5[iE*UmS%@fYs9n7-rSFBcXn^e,8J%+.ET*VUh$]KP;Inj.&%:p9F@RXpYuC-q?p(PJg?/(#8`?QjYZBq4\%KE!FeP,aS#:<%rF+!>S;0^qi5.@6422-\AH<"70Nid4el2%6r5ZM3CKOm4Ksl0NC437MV53HEuZ)H)3N_%!(>[=Bn-KA">umM_JSMSC@Q)3#.?;7JNgN_jcE^YJYj$PNua%^BT![Y_PMfIcBBd*%a.BQ6lR7@<3Mm'A?5BDi_d6Q7$'\s1no88XJ:-_Q+:O6K*.%1G8B$X,[=tF[q:M/?e6d`#;U,lqa8%"^o!&YGTB,$T;A1&32j5p9%N^L-mfE_43k?*:_m+G]0aN"V_!:[6<+*9TE!6YFoO.E8'lRqBj>e)c@9bNfg@O=o<)7[^ITa]`:S5@f)?Y4nZAcb*^`Cuqp-ub5q%E;\W8qs.DSig:&cZF+'ifGqL'+(s^D^rHcXdKqn\HNW&594q#/HQo]dGYhhdETlZW5IeaW58$747%hLG\At2aLW?M.JJ'+f)(/Y5%;O-4.mM@A"7N'ukk>[9h*-2,oA\^HPc%?AXZpc+C[:(OUm*qn4!Qh[@S1JO/!'W:[d@gS)G2U63mAXJB/$kF\Orf7GP:mbnbQXPY%!PlaQB)]LS(!M/WJra3^![KuJC]Q6j55&U>BDG#IWW5*58Ye^P!D0F];ZUK=E0'B6P79XI!\rk!;($D5J:$Wcik"QW@#`AKIO\I:%`,r:[Q9`7E2`0&`<P^hAY_R$<"!u'4_G4j[/nCX7"Q1?UGE;q9g'O+_^`GT;8GloY3g7k&+9M'nJN_:t2IMT:fq@Xj(SpNPQjscb%3CKOiIW1?hZ?%D]7.3N_O4P"@$/B%VNM4Z"G*Nob!P;6a67;4imMBi'SUj[`?+^`s<uejaP(3g#;<7q"O$.1t*HWtOLft,SZ*0hi%\3upa/in5%BP@V?ELrSNGd?D?!VlGj6&@_O8I3,PCPaJ@n?EE)[V0mpXl7rq=3-j69b%cbr4O6TeLpptfS=>E8W/ZhR$7S7p/e=<%a*\tjZjQ$=cB.(C/J@mli+%8S'!8f$'k4<HpGcZp!'\\iZ;DnKnW=dA`WS>(-p[USi#ZOV-C?/RcoPWs\*32:*bR=XW14%4!J\d:%afe2%nWH,-guB\^(q@Wc[J7^[)/f7q#GEM.Z]INTEdN@aS<p_C*o"1>PaJcW=f-a5p'D5<lV[^$YEO7J+4;G85"&kO&0VFJ@6use%Hb:"5)*Yrk)$'E`I=,_@Th0e2*82?>#`Rh#,]#C7$jiC,p\<r_NSNQYN"58qasSS339?>;I%56)#sR3)?T527ic(F&pBCaBmk:F*%AePHGI+SSulim'5P)%@;Yma/e:+ud5O1,TBLWCk@a\/\O6pp+:OM.p+.O6nhki9%*+T".c+iliBpenDYdhGUOEC(>$ICr@ihZEV;%fQ"]f'-rP+j+LY<rAYBj83brl!?qD$Oo@m9:)dioO42*/duVVO:A!R77&K-,I7L5DjPLb'&=d_cQQZSVkf63jW0(>>*!fWq"5PS/%OPoP.Erj>Q(&X:0(&5i/572ol:6Yb".a07?Z3n)SJDB^,KV+@X8HA>&[_Ns.r)r#t'4VpP;c5O\5aGnR!+\+0"@1P]K`GZ[+iHU2%!]'d80p0RB#!*Inj./CP$1Ft]0)T]u`"7EGG"*JWr0Hk.THBd/Au2P)CGjM#j[(9lpa4EB^aCU2:AXM2MO=%rS%9NrP=0g!rA[0B%aZWL<7FI5m_A.9;J,8NJo<YX>4WtA[U_a&>b2f/Xcs63QSo,0iI.J^5q![\T#_&<%XFq[2e,b#gTGN8'-U0cQa#=G@:erW9'41e8%nK$%G:f$N)Qgs^0]a3oFeW,XYj-u^jM0abl!;5E1mQgX=8T8QF:UDbZrV5SEQ1X)]%MS*I-\6Mn4irZbqJgBe?r'[i^e8pmDu0"7%q77,fU('@P^&l(Tou(;U0^;ISXjG)sp2Q+Q#ki6JNWAt/"!!t$PX[/QY=JBXQ,AaRj/]aC;p5mf\)AFAU(\/gS73@,5JAXXR(`C#%p>Nq3V_A54O7Pkm5IPV_ZAs8cDo>P&SY(cgOFDSb$mbd2_/)A$2B#)sma2MhZ2saj/ml!F$Jrh_AM8t<,a@Y*++#FTiK0i'^Ndid%I"4Bg3a^Y*5Tf/U3CFrr7ABj2CdAYXVZVA6bSG^bK7.RNNhfb7:?6p0qq-OM5isB\,`t9I4.5oNf:QEWQUTVbp6C.MHdi^X*G?gC%AoMeJmrmam2o.*r5P[no'`eBO5.9)qp0k1dJ(Ph/7&<9eK*bPn'Cb$%R0WMlQgn5Vm(i4NOZ\+V5Dl/"p'Z?9U_lpFHO)kAUP'^r%]nH_V^2dN[IdHY6RWq'tH8c*,fXW6BeUi!C:?EmY!#Vh6qQY6u^>]GaVpD"Xqk/bG:^F2eBPNZQU:k`cO)sO=,4%]&!Iu8]NMKdo%:(ji:n7-+H#b2=W%<&^D]-4<nFjQT"h^lW>OoQR%fKRI7+mVP>&C?J$C/WZ#%"L`6I[CN=\/&L#>/;kX5s(K%*3^*e%=pb#<ND_q%fSPVtJNrk<<]h5ATX?6e'6]Onn\ZGuNFK+eWa8H9+'[MYk:s8;P/\RCfUA?u4/#D//"d6<U<gqGp6q*&,X2I>9NZH=1i8-e8LHI7%M.6bRR<9JN8-o)3!r+O)!9>C0s4D2`E<Mi6r3]<#g-%*@:?8;R!851.!/CVtdY4%h!80+.n?i9^p<'-p!6>rI:=LkQTN*!KD1YN)%`"`8_%m:0KZO1kCj<fbW22*"NJF'fN]']kiVaUS.Rk8WC6ND-b!J'OE>Sh7n\/>&)\H;UDM)a]'3kb^sfupXX:Abffb-hKS3EL(R%jIBoP"9>b!/7].6M9sh7J*c_o-^&Ko;1O/_q*=/_%ap?^3&`Q>/41'FA*;g,S3-gr?u)J<>#/[E6;Bo^$N..d3r>A)'<[-W5PBIQ%nVREgOpKMIIr&I789+]*^A,hO\'X1=qXNt\]A+[%BFkFIfM$Yq&l.N!"oUCs,R45"5n(9ZUE=j:&,KmqD8BRA<?!r,NAmH$^\H3;%SHbmN?8MXDN.;QF/:r?;9oQ>P_MN50JNrjCc=d1Z:;-_OdJmB4!.ULhEsM]s9LOX`^.I;q<tks:*9%N[hW'/O:.PuVO)l?4Sa[sp%[sJH!$9A4efMhS;fr"g&`])j'BneVZ5gmpiieCt&KE+tlAeT'VMT*@Qqp7VB")]m$5i%*_kkH"i@kW9P^R/i$1n+XH3$iR-IdC_b%r0/-%d.olha4:pb?XF((=YZQkHWLKWqui[U6_GOaC?V<4]>fBh"PKTOm`6R)7"r<>5>E*AU`ZKCB@;i(T=!OSKE-0Nh>)c"+oD'#%#?M0RrSX+]8,0nX"JG]BfZ-1]JJtX'!(!8X1I1g'!T[tbUXB,,SO9K8_W$)0G'o(4`ZY=:_#o+%/^/,ZeKgi-_ZOQY`C76D!GI`9%k[VY(rBMIf=#&(Bq,IjqZ)>>X?5Jj,POJ5K0U0'OoWdYJ<8&r*YTF0/;;tcPO0,)gjuC^G)L+Lh],&eT@%%KM3sGK5k;GjC8<^2+%a$:`9(,8/YII-g[<s6r>7nZ)hqfgsIJ2HMJ]`@nRGGU5uI@T1'JNgN?!*g@/P;+i?3$]WLkTS>AM2sqdp2'^MjC8EpO_@ucp*#`I%5lh<+#Pm#%S1r!W!4f%Z5'Agf=N(Y$J]"rCd)S<S$GYV1%,e%"_2Zegi;thU6m<n?AjW`tEre=(7F:*CJD'K`K5%)aA3_4unO^J@%"MhrfU5qJ3*kFG#"MXZM0aVLs%J6oTLHZ(H&Cu6)!05bX"XG$%5V33;fMP&HmXf/J(Ga[aF(]sldt%7M`AnF*9q!ZL5.9p1"tj3a%<IjIU"kp"cl$GDun9M3L!H;"2RKWg6%M:CL#j>d7KLe:MaNEMuJnlWR3m#E@#F-DR4(&=rbs3@4?jLl$n-8"["8XuA(tcn.A3af0%IQWm]"8MDN>Dhq1WNoTY+3t':L,X'bb<Yjmd)cXRa$\$E_N0K;UCr#<Wu<&Kj.T!E_N1&7jeO!E"Nc?bE6?KmqXN')$M<AXC5/N+%:Mg;-5G%G.Oa]DMXcRuo[;%&fGUC-Upr?;JV[,PZ$?IEmH)fdD&]d?4E/6b#bcrAnH*V`>!Q[pMFT<O['honQH0W%r!9>S1&cp'p%B(#6=^sWoe!:j%]"9HSBTqVZ4:S!seJ3;rX+TQe&qaUYW9H\EO"NSd]j1F75Hgr^2'7&hJ^omnAGq*9Z!9C+m*WhG$6Db#R?AZ3#%!:j#]!"$a<jPLRg832B)0^B,QACDFkdI7KTSH4;3FV\<"/2MMS8&@q%JNW#!,6E.h-lN]=6Ut?K+H)s@"S,0pFLVL\8:a$t$LB,A%H(KDu:dIu.r.7ip/OU^Wq1+8dcI]lg39>K3"*np<:'C.;-C>)"V-%4OOCo1O&BJqUlS`++NSeaN6I^3U"htnq1D)G%)I28BP(C8B%?:"qY7DGB1a>77P_*FS>,F&cd6ZQ,A5[I0(9_\hB/7Ka&=i<R+Z\X/p'<i7t5rFQ;aA__&6BLRqnX.Yt?F,H>4I^;qn.*_fi$^;#%o*]jAA?`LmUVJ!*A@.5G]EHG("aPsp8IG$grsHhp0FeleFtjEp"[F3V,s![jaHLrS0p$&"F*4_t(N7>?!Vrj'YCit3;$-)>+HRt'%;2%9,K3p?^"#!52:1Q[(OCqEH_*L&`^(q2F9s$`)CMFRc=];@4a@\K)"*o$;#8kO?.o.m]=8=d@MrSrALsL#P:*pndJin<Z0*q.0%DGCc(feoef,Fhc+Ko^0g&UQf0em;Gmj>f$d3)n6^'>R1!gV:KOaKqgli?\@#/Jj=TrYBed\Sr8eH$tg6\ME7,[A<u6$Rs.uD$i4q%n91NK$f*0;ZI"#o+:I!Q$M$`o+XkFlBP)gjE/;:=$M%;^&0-C\)bUOD5_YpTO.L4D,>r9L+D9@!(&sS`!@c)]p5+BkLrZ;6F4*Sn%jJr*>Iu?;mT#/%6.R9(OPI--m9%5F8aI,U,=(,^((@;WgWs&WO:2s6kh?Qk!.EGGHI8Z.S-X9!"`t_I=&7iWK"[QbU?@j:UrB!<,%VoZ5u+:hm`#sn"4(+S6+658M&8rJOXbV4oB6"Yk#U*)+_>2_+#-eeimn;4/=,W_A$&EGJ!2Bg.I889i?HWTBROg#MfQm?LbA\gVQ%?Yna4rbl6b:[ii?ie>!`,VUefa@!h;]<GpPW'Fm616;`:+N6Se/RK;D@!ZWu+P4@^OGf]s%`9e3J:ZL:PX^GeaLpO7)E?ja16@8,%A:u(dRQntoK>^`d$5+n8_JRS\!!omUN<DQ8;pPXRE_j@8-+EE0/W(cdiBdgUS=G0R\#%sj#]``9F#XWr4Ah`1l3N5P%B!VfH4E3%%H]e<k26>eb"+iZ!V\'&79M@a6`P`GnR7p:a+ICD=^&IW<r:0db^]3Jf4r`R)fbni1W:8+pC%g2%A*I"n7=O"&mEt9]Z<I5\mX@CT%[ne7IrZf/AqlYGH4LgocnTZLmTk<=V0CgA?IsggugV[&QcYHmFPNARkY9W#&)D$@8]Ap2NgW]s2>V2L@#B8..rSmVH72%SidC1d7%RbMT?@HsoJB8QLeLT0_YItf'V:3R!X$^cBrj$i'uK1ao5YiV.F)E)oeif&#[H,@RE3d<>?RGg/:4IC/KG-JE@6PT=K1];#&g#VCB%@7s+BrPW?^_k/OWN5:\s^lYE6r'=e7dlI5DpZSrccKeemWC?/i*qd4Rh'Oek0pc9Q=*Z&LVOQl&C"cM.kG;9p].7\W9`n=h#rlEB%@^rL@g3C5kJ.J'qh`1CiO3_A0o`k`Hpe8$[07VWIq/tRZmg/</^TBG>DABq8;Xi[)Fo5!=dR;9%kcMoV%N7gcZ1!O9dsCN(0Ko*[%Rh);9(nf`5E:jilN%>Y&nq7+kCn3F<T4Fu!@DfHW=iS-@(XGpN0luhl5u9LEWdj8b2C_LVak<"mC6aQ>Dg^'0Z_mepY:>m'-,nLV%D`.rA7s!BPgj't46toJmcMPTPDpD!'\9Q2''Rb_8^B\!>$C$a]^b:'=3"&a]4HD5kT<e)+8Ed>QB;I2kN4F?AUU"o4ZdXs/94gA4%GTlKEce>c%MpuRB1ulckHPOtHfV24oU_Mu4kD#s:*Y_!qd\5SdB!8W?<Ag[#4P:h>o_ULVaus>6jUW:c^[D!^ST2;3m.i3n]bilk%2dCV#X[gV/=eaic2nN-+?FPOoIr?4RmHRO-230>5iu'ROfM\,M%BlM*Xg/m>T8ClfT<GhFgV9\3>MF)-pS3M--T_U1AqS/*e6]QH%,c&I"caGTR0L+0\DN!,Z*t@l;D"?_<(*h@H"au>W9A@$Xg>8%hY)f2t3iCZ("_=Ra#5!Z)eWtOT;f&5O_M'W\c1\Z/N+FR:[p%i?%/mJ)rhS"-m9/kT=acYRp?G)tiP"2+!r`t9QVg7L>&'Zb)n^1E*[CFO69Ws#l)oAXnMlU<A]-s%N\3>15pLd[BlE,T\)oSf6bJ)2B%YA!?da%n;M1J2Jjm!GnK:-S:DH`qDdSBm,eYCH?Bq0Cj^DL7S/q9%&:44[d$B8]e[Ab_u4S2U1l<l)s!IYSF+='X>sK+40$SiV5l%TTQkKN:Y20/G!_aOQ"+?3B(%D$?'/RebQ5a/Hsk@Z)B-U!e=6e2U5r#cBNFnM56;4ZZCT17l?A9D5Zjg[Lp\JTW4@$k]THrYP$5K%s#Ff"gR2d3nDhG$4T3'G2@G*m;b5Jfo@r_Wd-0ne5G):<0?9:Rk&$uepW+pchCEVmBC`Xo?a93Z^jTRpnWnBC]tH8H7Lr>*l_bgk%dH1m&SafIAHggt*QFp66/9T`I2bfn^^hbf][[Z-+btsW$o[g^2O&_fmbSH9$UZF<&57QN_dcDJGUXma!k\IPa?0;+/+.psOqn@R:%;*jku(jJ-Pm<V\A9X[&I0O)2,r:lr^rAk^<IXFuiIXHLQD0qoIHnGutg>g`S:)U^60OQq$gh*#=i&Gs8>Ji*(`fA_EjgY)8F'>/:%kB3C,hejBsfD-n+HMJ$L]$Jgr@k,o;6fXGR6K)'WAqGf3`)6HFHi^puNV0QI.gLKIMrmT+iYHBIYp:/Tk"INB=WC&QYsn0fo.hu1%b\"2,:-QgF?#^_Fm'c=H,usF#DsZ2P&ZUnj!40)UYA!C9cfjT*me,S]odARfBdS/,ql=(42NH6-]kt]?b?rk,N1TGj>P$1<;i<Wm%R3u!Flu.kE&#]@ZgRG0j*.9knq=*X@FiF&=NbL2.UH7"0J,."&d?!&]GpX?m@j^3YT;cTQH:bnaikU_VFZm%"g=OfeS$dM4I[T'1%V'"9m>Y/d4^OCo5?mhM#ZCU=5%s`S&1t22c-u([=OuLj:Lo]#\?+2,NhYBWPDQ^n4AclmWc-2<EAi@pkiA7#?0td8jp6INK-^nqr%l"B=KK>m#!$[]&S##F9N(.?un%NEYL2/Fjj@d`lCY_^ZP6gaPb.b3hQo]bcU?KR/,Z]3,<_V</%/R;;tCQOr2]_@_u=F3beb9(ig%q9Cp+B$9e:Xdu>7N&9G&DprN:^@PpGg!Y9B6t1ua(B^Maf%c,U=iE6?"Eg'^o/Q9:f_EW35#-R^p!9-$?Scf;fiq-$k"T?0GY"s)%5's>b[uJ-a72'^rHfh13UV=.mh!$f%U6F$Q?&ch@k-i6Gn#'+laJpZAN+n,4Ht?)\!,^<6p@nT&l(X3E@t"Aj;9oDY_/)+W^]oAO%9ar[CCdDdDn0%Oi`FZY4,G4;)pTTt^eS4VtSCoS_9>%p'#"GEV:.GB%o\PsYbWct*na=00^ZTCBGP_i9dYl#I(3qG`fR/'M3oHn"%Fk9gN`SFX4XJKcM'`OPee@93s^50"H8F.C9FG(r=:0naO3-bdI]N6YbZgkBj't4DA1(b41-LDFnrG*`tfhO)d4KFb5s*$9Ag'?!&%c$`ep5I77>`nKT]50ha[RNH,=m18+2r4MD=\&C-2iHO;fenbVT4/'"2Ekp%k79>,Jp)[m>]8uo<#\N)i@m`I<LI1gfI4g((?F87)%)r-F]6[[.TCi,*o>(0c)Fs_T@AkQ!7DqnOK6)Di^N,thgc1%@MRC;lf$,^TDIW)nT;s;hZrXlL,H0<ol:CD%'fTkpe+$FGQn?8=<%!F7MBa/G8Zrj,BMe+j41_JIk*NYonS3e?,M^mC4ni6ZuRjAM)oGd&6qd/u2aD*-jO6bP4\`=1aWR+q'gl(Pd&"CnlbQ+3a3]4Z/$%k(06i52.u4DsDf7e8R@W(O-i$UsesCL_D-@5%78oh,\!ep!4u6s7ck;HjuM;=c2%Mr8C$*a)1jd.9]CoC)2BdZd)8)3[12n71E7A%]A.[GVW<Xs`>dgk(['9?r:7fqV^,VS?qrqi1kkhWd/DIm/GP)l%mtp!R_1ce%oF'P=RZl%?LD4hR17WJD+/X#GT7=",dY>AjcFh=%12_e.e@gVHEdM6ccc.2jo,ROH->.`d:M'sE4spQU;!+qJ=bckj9*:XTC;4>FK:_;WI^>,%U*dS-NnZ<.^E_2!jq*4DK[X]H]I5r7%_OJlW/FXM8<&5KBMB^ouCi$-@gW`#chSH!rJ`H7c7u5Yooh/(u\c.LGVVr2$HtG^#>Q0RWV$8>P[(W</apEE3fiHfG5G-7CgZ5_A%b5U,UXBXQIl/s.;Re--bIpS"/O7.jb50?*X.D.d7Qo*hYN.r!N,I=XNY_+Yugu2o'_Ir'iJ$?j4PE)dZU%)`).T+[n@fOYoZC1=!%YSpL>FO+Es@9`MCNU;ti;EUZ@`c_49npKG/_mF_^9KH[&)RSnZe$&\--Oqf,lCpd(ik$h6ABke=KqHoh7m;UHf0SPg9SO$4K>of$%G%3;tnr:M[H"[G<gMAucN]Ikd_p#CG*6E$@p^Nh)fpLP4oeal.a)W-&EsilM4@+u.X;&ahcqkGZe$7X+r&#RA^H$,[FQ>T&I$/>%%nR,J8H`j`jCQ8+7))]e(=k/gNTBTuF+$H6gH+r-!CS&i[kq@O2gq_85rcpN[.r7>_*q)AACcLG,!C&:X%M<O;<5Sp,m-^6*P`N/G%2M'O8i\k,S(3^FQNSUFB)cg;=?6U0!EH0YN1Br!X`#$(s[pO;MKQihu:*L/(&$[*Z*<)<"+e@dG4)-b"PiB2G[#$(22dH'BAgnUD%7<+CAi=L&_KtjH9bJ3VRfBJ=D,rEM843\P!/dElHh$>?aJ-3,djTP42g#<lMKNjlOD8)a1RFs9.0>)QkS^`ZenJT4gcToo\0u?j%%jhc>oZGuEF;)$:3=IcM7_D`FRm[E\.mb#*2_$47t24UMLi%+T0"-9^,'Y*/,D5pj>;giuI0"cj$MXDqD##B00_:/@D;st+Yq:rk=%f''I>jUW;!^[CthoV'C:4>XA\VO1alM`8586Jr5i$Hqe,[(SVZEN1ZUqNcGua53l:qPA6@lg1SY)d$,U1?B,&_T@J!@PAa"CPRm+%RM$R5Xr[%k1N'O-JN5I`G95G^LikRR/.rCpf&LYAdRf!C7c)d@"](1NddfZmpc+e7OVD<6n.[b;S4%.M!*AYp3;f5]"?.8f58R;,%i7)ak?B<hQco*W/9SOe:.!>!e9j;u#1YK%A_76_gEb&W*ds7$88$"[3Nb/?apc]S-qUmU'`$1W%noXZnS-k,17MK?bF=,Ko3RO#`%BVT/2iZSGsU%atnr/Zm]edGX8*`Oi^Z6OnWJ(S0)Fk],u$UH,DA<!F!=3SXB@&"gP3e#e?H6h1r,K[qH+]J9<8"q<L<JSYk%O%fP%*<O=L8NjA!R6'EG`"'UWC('P%6Q!8aVH=%>CcX,P8">oY5sF;t)etaS`^8-+Y5-)U>c*&PR^*Hk^fY*+dchfrY&hEUgU+ZE;V)D-%7!3IX`J_gcg+aq2bjDYHl,#1bS/Cld:@<@",iUgheRj`EB!?6u2L(].T`igRecZ(FN.!#5q8@*%pXQ2R%ism=A3ZT$(MshlD&u4=%Qn+iu>IprZqWY&,`96;RH0FF(cJ<(1jUW;"^[Cs]60Q_#=K`[Y*Y"UkpT^1?N*>Rf3:F:EgKX!u4"NG'*t6?;%daMTg2sB;q!M*F%hC9;ZMdk_C?n_51[lN_5Cb6i56tC!DJJon/CC&KP=B\(f&eJ;9YZ7P9&K!BRi[GA8q`aNaL]Os<)t=Jp@;2\%iN"Q\!Jq\G;0,3T%=L$S3!..4C0]((_X2>WU]A>9d'rolT<gGJ(3&`:PY3ahrTur=)03aIu/3:&M>'dpJNVTh\1abX7bkCc+>p5#1hAhGjf&_b-_e$VQ%LTe`+/bioE@a7e^\Wn.LZ&*]ifZ2/eT,#=0?9A(kl1[D+^$0m7O#";]G^BDe+#[SWhY,8GK%.\kA\HVnRb4d9>h$U0X`0!C%X)`D%Yq]8tWl0>iMtj`g`Ca^F4:K<??*QG(F93''d5L^d4Q?!B>;\$CFY'W4/__]9HUj</9,_<LdG\$75&BiLg3nnVA;^4p^(Hs<60=<J%AqR.Y@D3iU`EO'8m%IRXC>coHFtnt\a/0r17C6q/6YigAVpkGsEZefCfOoF2f]s]8\;*2a.1nUX;&[;f(g3u7TfV&k%81L.KuCU/%+VnYY'[d@'T"#7>:uQ%+lA?3QnDMD_.qj'f)(fTJ`CI*q)Qj'pVHJTA$<)=dNI"jtDi.D1jX>+OG_0cHc+7^VgG81Q`b5;2,@#R\%9A?IjrTt+77DJ9fkEX,9:W(/57i@(@%Y;2,Ac17OCOo*uc=5+&9_!qbZ@X]pqjnuHTA=He1;LeDdDMGhH]&t0iL.WM_W$@0X\?]9%@q]_jM(N`/KT5YVnWFc9;:GcYSMo(W;A\+IgM)S.cWD#;HJ@ED<RKQg8Q)83-r]?4A(40nE0aeBAWX[fSnKssL`OtV0!W8,3`YjW%no.#2@LYYYHceEeDi-603Z\CXgSp%4@]NoYH8JX>@6po=gL?Ra/,W,rHO\9(o$)(k9#Li_6bVOLJR+;\KC(Q8D/ib+k`nT!CpUAP%ClL%7,Tk6#cM0Mlm:AJ>KXLdWo+><`3PNa)fDbW%O.;j:rUXcQY;i`EOMK&hW@.4p"i$UN")ATm2%u5mJ/gWsJsX7A0P0ae?Jq$9%MC^Cs7m_iLEk*i)A55ij86PUAZpn8ie*1,L*1bQ`7/YFm*ThT>]rc:o#8^@U*bf@i-s0="RGiLPP`8130qGVDY,s&'nQ))@XXK<N%?m`fjQRFu\kFQ?93/+9M\g-24Z\S.obI*AZej8%pTI*W4=ZB1)\1[7lRtkP'(1OiHZ]p0]4k0QbOi$(4bE]NFF^-uIZ97l<_eNKO%%\-VBpNum9o+C5upU4BHYb%=+fC=;%O)DC&O:Rk(5')76L!r]bJ[>)bp0O^VJ@`LKDK?WLcTc7(r4;>=[lr(,''QEU=9^?WYp]_#%fXM8:=ICfg(_jIf='%VIB^[5OEkqmhFOX/KJdmC$.?W\+E>[[#.oBs2UGW6opZA):5V#29%2#mSHCNE\*4Qetg"dEV$'.[*g_B&_%7WGOei$(b0!a)[ko@R"A#&T\7[`_=86]7%P?*Q40[$^U>Q9=)f?TKujYtsgL2LC[p[%JK,3Z6ngkdiA]+V`]W=dW-GX3aO;m)@tD%30R<(KQ]$Q]:-^sDmP/c0/nOf'DC!#7=jcHVf>\2/%5#d8lTE/-nIPaPg#_uU11rLDa@\!nm^\TXspkthHG?^1X#@^g+8kMWlOCh%?L->_S^IK.LC^+$2uW>AhFVm>''l)$TJX"64JZ@n\lHD:i$dIah?onDc.].eGUYAuFrE%']%LdpFDsPDS8su(%T>9\Rn>shjM2,)%?8sp7-g\UnD)J%#A)h+.#cX<W3OcQK2TbF\+b*fLj;YXIWY#UVH`h\R6eR8@G#JoM$oYH*L!AbBKA1"VDT3a6D)H,aGFIo9Tf:jl%DY&S6AdFIPhUCJOa@pO>AFZRO?i+)@S'fr-lX>]o=+(LRlF(phQn8B6)("^Z't.4S<MY%fY\fZ-L$d"8:#;Ou6k?c;.P.?:n`RUY%N+J5KIVm^UFr"uM#VD@#D:SUtW=>,9QcDbFeuK%12LB1C6*7WZq>&'DaS`d<T4_Bum;F?J1?nVOe1n8CD#*m7Md9&_OhI'0$.j-q%*<uEPPqdk#0'.:F]4)/9R\.b\\+QtB%2hXYVk4U8^@5#ol<*k[6tlLUq,q/gN"Du0$1_L'+e-e0WXDf[<h^@B;`$\n@<]3kX2lZW%T'f0m]_B9/!h>#'!Q\Cgp$b]7,MK%AM`rWg-#XtjoN:nli=blA:>&r7;1WB5k8R\#Aj/0LK#7&?r5$]BG7c4\VO'!2SAeBfc;JqZ%A@<E`-u^&hJi"VS72.]sDThLMf8[9&1nN7`o(Cc#/$:7QcI&[_k-T3=#IJoVU2nRereOY%pO1r2kIlL",]@.4J('cRo6%`mhI?q\%CTf/T43ONaI%7YaYfO]#leXDl1;;O\Y>_<a[j@?eGA9.!0]af=AjP5,eZi8Va<&c,@L6;Ig$mju81ikQCVe<fb'?j']QN=?pKY8M%qgtT;^f>/YY*6<W>e/"k/l@.AhR$-G[(40;0!3?hO;L,q$b5pGF;cY3lJh`mQ@lC*Y.C^n+dC,U:tDc`XY`l*Y/m_AJ?eUXU[=n*%(M2YP+i:Pi4'1CEY#USto]>eZ/4;BqJ$Y&G.lQ**"#TBbJAipW(R4pM#+d$,Fp.8_A8:t>q<W9r2f71/S"7n!^k1n0d-uFSDG@eC%nqW9pTD*cGSp5/3NG[jai]?L<8#0Z3Xft&-.*4>s''(A+84GiQMKU7biirj<)MNIV;nAT`hHUcRjqXoU\u"`PQfssh[\o_g>un\3%/)"h(IP5'@-qp>-`a)/BJ09MkY&QSC$78#HN/3&7?FOjanEn4W17(#D=-P?iLRYgpP^l^VWGEka-_CGrXclO(19IbRRN#V7qG!$)%(-18KC)dtXNI1BWSp:fkiH6g*eoK"sD*F5PNK`F[C99@Q\.^,"o1i_)?6oMO324Sb:-PH+b!epOV2p@)KM(diB[3W.rJEq<Q*_,F%7I.:ToN0?:oRa:)p?D>=D7]b>G$=X9T:^VCcgBn4T?f)erT+Zjna:DZ5YMk,KhW#@"eT<.3ZG7&HfnQ5N*rGk"Xg/3<G#Wif;^rG%W$nJ/#V13Miu:CXW=9Q$+oaaa.91>Vg&gYNT&NN"HI)\ue16Xe'-k?k[#aCDpDk)XAqNITFs&55d_#X.;H7n5U+CHK40T3'3\]41%/IbG[<ZuUAdfC7P*GC\>AtS;@c*%E9Q'qC^o515G`ikd)`JS96#C8??'g&AQKJQiFnbd[L`.hG^X&(nj3U4,>fLOPQ0uSUYMWpi"%d'[aJ^f>=A[o#"%IGnQE<CW\ZOP+^O!;XioID"JW?eG3-^>7p+eo-]ErEgX#5B$D]S]<k&PSb,mJ;MRZC&C6t85bGJHD?g15u:q-%][;td?S?XsRW<.Z`#[0&E,>4PJfV2Vgb:i!/(I.r072S+Y=^>';@2+8.Xmp$'("3<.<M*,.\=*5HRk1^NU%BB31Ot/c\*NbcP]FH%\1Q,PS^g\Zk4g:Bp3"kf5`JB+SO)`hbb=^V?V;c;=?SJeK!YPp(0:ZV!!^tr&06:@k?RPi2Q00!0"r+23lbk&i:t"<%'HFZj(NVT%W>eeFe1CM/0S]M+GZd;<=>HqZW63qn:;f(4CU-Ae*_Qa4D1g+jFW__1#gP)-4="4qh"tPCH^j`[q+TMoh9sd..^jW6T3(krrpWI2%T==dj63EfQPrm@^6>h\&Z9i-++V\&/JfO(*2Fo5Sa_&FhLJ,d@D`C"rkW(5^N0uWB`k[uDKo=R=Mgc$,QbDCVUbEt)frQPZUI7F:%$GX!IP7tCMGa4X(kR-nu(13=bc/QEfQ*ta)bZjQqc0RU=--_1+Qp=<5$1F(<F`cYqcH:^OLXl<@<R]g?3f7\SJZBfo9)A`6m*L+9%-Y>1U#^PK>gb4s`*`3_#XM=TuH_smeZL$fCmT>'EeOFrP`akk)V&ni+ZQ];Q(bIP;`ss/BC$]GiLIa-c'^3NhS<'(bX<l+sn9K)%%RR-h`r;;UZ56%(LqUisW07VWIq/tRZ*e5"c4=*gHE4;9:`>2t5j1!'5AqY6D9Q=N&_WP=('X7=^4RM9]]uP"_[09(>n7Ch3W0kLV%hcZ^`ISr/SM"68#(PY88.%]D+pq^r$DC.hP7WOXG2JmAMl[&/K/l$d0oCE6t\(P_H2+Fr<=)?=c=itRNA=2d:LoW;fF2N[X;f(1!%;Wu,Z]n9$-Lp:3Y/>$II!EQk,]96e3[TQlJ<?mY=b_Gq/7+/6mcr(G`i\gpQScFUiV>XQhmDW]kD/X65m=@af-+PTO\OQ?Ih:?i,%_XE,@C#%'2=0g&g.]$q.1Q0s?Cc7H"3Sf`fmD^21rE6qJQgHT@pM2"rd2r6>Is?M:ceJGE!RZ..aF%H\nnjkDCt[Gmr96r3P&011%@lJN<D-btL-C\;s_YW1RFUKDkLUmZF2i"sJ9-*%r;`5",o^!=BI@oehR#bm1FL)0!S.;*gK]WT_EApS[F/e[`1Ke5i7ODG\1L^^H%L4"hK`,T"Vc!u*JA6re:4ER6a-;5Hci[2UOUL\bM5MC010]c^,1ukOTk8,sf`.>FX[G]s.U9j:9_Bui1qCk`bh/16aM,Zj7&<Y17%n`#jiE"O=@<?Sh]"/(N2G20iAJdq8FR/+BcgnhIAH2*jdf(H`$B?717DkFi-IfJ$kGCJE@%k=5:)^Z*=bh;M?W(#UJVRb3mlI\DX%>h_BlZAd79>b\:Wg*.G7TcdAN]YG<3e&$jl?JqCM;mDRK>A6e`-()/![?O4->?jh*;D`WH[L>I9fE.c@-uWl%4=dn-K`^0ofE?/?%2)%0U-1/_>TO!HY\8f-X7(>M?K)OYbE$r@#Dq/t1pYC3AYH&Bbd\O#]QqU&_Bn6T7E7"_#mk(TnN!1POICj0H$")WQcB@A)?;\8O%cbn&VEY<;lfnhHg'XK6IIlEI:Q.iW#iAMu.m%Aef#WhUfi@St?H/9PL`KgC=T2gRAU"B.brbjoA5P!L"D5seuM?.hF?iKP:d[t`3%(hu5XMnsQfPE]=cLUM3H[>!)@.;-\76,6<po"l1_C1_Wu`F@fMGj:*:o'I[+c2_&%/ebA.<On9smHjlOk+Q*a=?R.j`I^e:<-*=p%<9nX@K6Z.*7'e$^SS[\GOZ>hh5'SpGAT'V?\phf</CF8KgD=p:Q[l?FBrV+''sX4_D%72(6r1XRY_hjRcr?!pJeDtB7duP<Tt^n1%`V*&\$5A\E\A':?cdUe-2:kgIlW!4c'JO:doXKo0M&+CnVDoR9P_G+SgN5Zmcg3ps>uu&%cY"/!eTX6tA<4+`mHFtUfCi%7Sh^).%5Fc'Lo=f\qA%IDS8;Rhq-#?#j"AEWq1T!Zi(3@_<U-`@C*Gf_rdPNM"@)[8UcjsG8Q+Oc/B)8YT7UXAaahGX#\*E'q+t:Pedi^J#%31Q')fdgAIk(L\AM]r03RU3@,!2PHB^p'ksk<AAD)/'rU[rFg0oHckKXLJc.\:Z_=77`&`VJA/q'3XC5D%&7la<Dk!g5.?n5<0<&%,1+4ne#L1Y4O0/KF9#3%E]ic5dDu[<]fc8?C%j3PDlYAP`Cm<C@9s<[AL+'EYcJ'i\J=OAQ)2//??d&+/s^]f&EH"?Xai9Mf(#I+%l(?CO.';J:\+Q.Ec1's/O(p1g9)?"]Jl)Dof12d""-6FTYX*er2q?859j$H\b]b:AX's4/[R3FJ-aHGhqTQC%O++fn.cgQq0j@[%%+:MR5j0N:d^l_V3ApAUHOr..#1+cs)%1K?_/p&A`4(^Nu^R,Jse;fck30M%Eo(8/N=9e`pn5kOj3rs^UY/Y-R.um?o;Dp!>5"Yh/%`4'J-pPM>`LRF1Ib)Nb9k=buVL2!G3MW1?k7$0"k/tG#/IhimB8nBrYf8\)h"27,c,seI`h38%ij72TfrAKbX1Z'i(Id$NC:p1,[%&f6S?_HI[<AnLQEK=*pj*C'GS&KH+T46-7r!)S1&i"=\5cg#%T2!bOB>2;/[!")qp"IFGRMp93>4HCBHD!C0W"+#$P3hl3*Eh4j8%F7-<.V4k<o&=I,4des5o?,\2'^g:):@8Sjs3WBp<IBP"+jq4Wi\Z3>`,!UC2s,rOBeP<o&Zuc?P^=\&^XsIO[Do*_7`Qf$U=;3l]%n;,Yco,_<^OnrL*]hR6k)^"U,UN3WmaQmAI;_!E%*[LB8O&uM1HP7L+#'T_f5%4t5i_=sA)Gts-M8^FW27"U#A]/R_JQ\+r@hXB;%QGGJNhZY8'HY3C`Sk!*.)//h*g&m8!ccGnE^]/$Jr4i9]':p8K2:Pt]-]2I$c9jb$]b6'C#gm<qSKc"iT#d@J[Bk+K^LbV)o=3J$%VDK5YI1Ig]qT2-1LPiO2kA^+4rnD0<+a!L\[s[^L9p=0tJU<umR4[](0bV9<qm?G,6-jj=9f#4ZRk<p[o:2m''XT1+^eF.'!13au%lE:4(A!9dB_eb.L4Boe)&9WCtcaL0aLY9sg!%&JKmCid$m.<S,>:"lj/W*Q5(g.$NbmQRLg-Pp4/V&/U`9s!A1iOQsZ\8V)@5M2%%i%cPmlTDKsnGJrLD84L!b1UsLb09Q90T(="KYj00AkB>6Am'd5+-a)P6rqkP8*XFK%'=nE"*VU;ppDYmcN%C<ZR+YS9MYb>liGSa%!$PNXH4h&h@Cdk!41H:fgHs.C#2;V[NRr0N\D:*!kR*\G/_eYfMI';k%R^'3.F&^Ab\U&UL7gfe05B/M*._0&'2rJOHE4's0r6#D%RU4+=node0W`iIW9%b-G%5H<[ANQbmW^-Y!.n6k!!iFBgROVD\j=$[em9#8"Dihb4C.*[W!:-Ud]P`o(l:!F3Jc![2b(UWtm2Zhl%N32N0^fKKhR-iOh!/fG>equCj8746"]0cWi.0-;XlNKc<UF9_9&AM_P:]QPfbn^XGl8$qr4c6%*/R(:VdUtN(\2Jan,]M5aL'"Nl%(8Yh;$8+gt>EL3^QI/o^\n69r:pim$74Ht(b8iB--/5.fP<_71)SMPFs%i&6l4&fY(R.?r4q$%EBblD=Vl#Lo$.<.X39&PB8SP&Y%/n5pVWnq>.>Cq4Hp(Un+^Pb><8\e)q6D#Z9CLqMU92NWOE^a-EJ4<eaM'49E?>OoX](oO&8ae';4.@RT<5t5<3YArkWkFnhBjc*q%:8!R5Uc6S8;:)m)ESs(a>toI7JZe&[e?PQY1.*):3@*>]&I^"?*/J"`*/5$@8;RVO[QQ8O%?-hM',h]p8K97`;u/jp?q=lX@OiY+%Vb+N*QoT@91bcI[`e)u^at'D=k<+tUn`j.M3K-U^##r+Z(>gF@K3&e%F(RK_N=SIk))>Eh!MRA&JHijZ"[W;A8,]d$4i;h$1r+p>%;B^UU[YZ3:Fr]32d?$U#S$#W&e839Z$k;EbTepFJO[2P,1g<R&%2!uaL5#sJ/Q<WV+K,jo".62>mQX\?Pu\eQ:a1+9#T-N?:rIP"%.=d!Y?4ss"(*Z:0i#O#g3KOEqQai'DlmQ=)FbWjl`-/!\f+&CgE:OJN#Y7ok`-0;^;,G2S.SR5YLu@@,k>4H:U.#Yu@D*%`fM8`2%$;/rG\R*F/#*/9O-Sur!CdAB^.EZTq$/;HN]J?/]6-%0%"rLHH:r.<q+`=`MJ@n<^63<%P.ME^3"M'2<fkm(aMAA`SoaOVL;aN[:%+=6VT1r0k3@%dmo97mS[1F3&QLk$ms0Eg/V9L1rX,[3\N+<=rb!]!UR1/0mG9GE"N'L;Le$@oQ0!T49EqO\:EeGj?HU]+oD*VDY[%W$;>=C^1;T.^MDB34)6WaDA@X!/!0:+AUmX`SaX)('D1@M'lB\O.#12pPB-blMW&c#()tVjB(00\0('d*'r,Lm`/jPDVZ3A#%)7"%BaU67;#rYjWWa"HpT,-D?m?NAdMsqKOtBQT!L<5W'cP^BT@,\,<ouU84V42mF+@a5$o->5[fDXjX53mp`\d_sDX4[o21T&hTRb8s%17(-BJ=N4.pAc/HkrfULB5Mr(&8BXe!<LJ]K*KD37E1%N&E_lW'Hkf%CFOdWl<4K:JA+ANiY^7<<W[fkF9mD=<Npju>qu.P/d*Z=%Pj8;rV@<*H9)TUjJ$LWk5kd(2hU=SV>R"!4<F0$P?(r%D8)@<YQ.L"1.)8^Ps&@Fb88CMiDPI/rUfOB/K,bR=rBCE"JobmkS2N.-%)J0TdS:d#C7o(eSEYu!Y$Kp>HWa1="crSqmGpDE.JNsK`Bg][pQj!r'VFt4K&#;%HO?cE+Jo>Vn/?UU=5QJ2!kMR&W]l&Y!V\GH>%/J3HfL'X71%sS=r44SVg&4,>%Yb?WfWP$).3!l$@6B(C5/hc7VOH\UR#)KahE",Q>nEPQ-R(-2U)4WafZ`KK+Qf3_81H;H+L(4>_%1]/d,TXkgPT#%Bs838b[c^tk_UAkrI=>0MX&UsC"VZ=(;*9KBuIokkP][Ct6X.,)8TkBIB(7p(Ui]<%37aE3<"'^=`89&8oc9'gX%U5t%=khm#N7JQ.C'eL>0K6l'OTL=e*Qmb8XTO)OP]^]05kIdF+%.WH.,":6[9]r*bE%CB$8?c]9Sdp1$SFIP(K0!8E:mKW4M^t;e%f-#M(Sjdb\3^b7$j;MR':1P-.NDGjFK.-mO1dE_/fg5e003a&5'_Tu>)GHg@%LihXda1!6e9l?JZ37)'0>08?R>FE%?l'um6NmUa%2*(uS'"p=od.:>c6&a3(_,IND>"X2M%:h#$BV9@<2*(u3)JVM>NA$D08*B"Ba.R0h%T\PM2P>WDZlSuIR9FB7BCG)Co$Z_?e7;u*%:Go;m$a\*"4Fj[lT`Cr/1q3b%C=jY1CCB1Vi#58lfETr8U;pGVT0Id#"!4V]Y.Vgk=kI=rXr;\?4cSkhS2VC9n^8!]5b12W1_Z.a%dKpN8*lmqc,J4\m_$!69@*K^i<JfTO-U^Tu;n*#F_7IStr_A"2#1m6Y,;^OaB#Ec:_)9lC=s1*ebf5JDY/.9Z\VNL+;o6oPPVAV8%82W1:P5=)Qls)l-F)*,2kBZ"sAr@*rK3Q]#YV8@K#XBhuE!piD!OdpS:Ep9S_6/kacf=Q]<-Y7U/_Cfpf.I2&2=812BXqm!'e9iG%##p@b0]`php]XTb9+TP&:-nFkIR3id?2"KKDSG!A5eHi@:B8sVa>ANVYd#aRK9j1[)@M:GqV@.s&s2o<TUhU%pCtuaVs=?r0iR^6%LKgusW-#NQ)s^Ps.'L;<8t>.D!#q.FK*P"s.jM=:-eRMJm(j+`N?N0[0#9Ge`ns][,NcGP,M4gsH3@RAVFk\G0#<d,g4KrQ[\dTO%-\)n7gYigQ0\Xe;ScG2pbT/m`VAE%s&-0P?bW[j&F"KHVd$3&bT4$,of!5us'3'9\4+)X>Q%o-#s-(@Ii=WGN:?O""s&IXJ8#[T:%!Bq![?n6'fJc8^WZjr.i/J8(fT-8`RaPcOn>)[->#],ZnE?-4an-JmERC4Jo.^)U&9@-`0QaWdmhZ2$s1f1#lGQ\0Yk`OeAVTOS9%-NMp#9UK/d=)Pi9]Rdd-Mk:q*!4-*Je):b;H3%-t_g?duE]`'-[MOXfU9_\F^$V]aFamCb(ihgbL,lKU+fJ5^%YnHZ*5t"NhqS8B%VUtd3>UFgRhREp7Z>^%L"asTO`I%N[;$VSY'j&F^nh[GdHa:O2BVCS<p[gV_OMDn95R2,P(;2AC5``K3Ajc%)*EWImkSN'YPfjPd%@*uQa7gQ9N3'Y5&=B(]p#@W'/YR=?-G=foh&P$cJPf!82:ul(-5sX3oWQPAb_4mq7"!58m"Z`:gmOgh<%!Vo5Nbq5l%?siF!Zo0E%H3Xd]QmkMIJ3u#1I(WpVItMA(!Jb(A9Ko1ISXD1,$oeBJ!gA&gm+7(m4Q$f&4Ju`/%^WFM8V!seOZR*h,Np[Zg7AS-+:A8m6*G5L%NRAr$VCYTS"H-r]UHo$BYBNqjfgR^mBFk2Wnc>)MLX="O*?(l$+-6DaX*0UU@DF6m;GM%`"I.RIQXGr6!+f3^Q/Y=/"O2Z6-qIFO%2s1[cj:m['V![8[?\V0u`>9%j^-"Rr5egPbe47"ObuAr<Mp]4Y3Y)e%Y)_m=\-1(-Fkn:RgmotK]XZe0FMA]m(O,+m805@AoZW7Z%r4Daq!5,fk$oB2lf>97eeI10@8.N!tE1>+lQ4&3#]&[[eE!Mg<rIE,@X+H?V]Ra\4kX<A\<K>E3Dr=6@4cAc3E?3'q6K`-057dsG%<LmOu5[\S$;#3ZMV\-2]qb8qu2S-ZojYi25j`+9T3]@1<PtqmQ`t\bi!0D9`EZ5r!:gi`O&:eeHc%37]3qa(^XDSq)a;t#:\TkRP%#d/5ihYE@c7Hsm^&2$8TYmjHAi+UG!OMZ7LB--"E1`Q&LKBg"-:0L0_"P;&;ci>Z6Jgk1>#a_3PplfWpi5kdQ_Bim(VA/eQK;1g5%)(n4]@?!'9aPa"M_aNXD"h$ngEju7sKO!Q9)m`9hLk^l^UWE9LF@WZ'(c,EKB#?NQ#0G8/BTsAe_'MdTQP"Qr+Qr_4T:jlA"ITuK%d-G=FLg]^p2Ch0<4TDJo6"a5EKa(MHGueUOlRNl1+?Yb)3P?bQX8iLXd*[rFaC%$.aYFelcr=Qe.<#M8<M$r))M$[coB<sPY;oNG%'YrY02EMVG,eFq-F0iicFET&tQ#J8il92lp?"Sip`.9$Ri.rL94![X%.^28A7;WhN_6mE7F987Ogg`Gann,>Y]0-oZY!X3sUhC.<%lj/1YhnVj8;7gjcOD)<-TJsYMR9o@cYdHZbi=[sd7ShM>0b_;Z4G%0<oa.5j[SCmVGQc9GeVp';XgjB%$[gE(O`s%VMsITVRReRY%44d8U'!RVQ:f#RG2&#cu!&JKr-eTs2NpAYUOKZ!ukF03GCn=qXn-PNiCI(%QI4_*qM9+W..N(GOE85hbcOBnK^<bqr!7E^1KDi#W%W+R<Pk@;@Zaj.i^o+/u]6NBJJZ6=`a0Eki2>D7dnJH3%k5cm_d@4,d:%R$t)_+V#1G3@&hi^2MnV`F'.!6Qg`#6O,S0`Y-qfC&gU%BBrN:?7;Jq+YYP`ckCFD"<])k]F]VE+BAj02*k/@8#/IhXjdegdGm9(9NH]I1bk`=WS-d)=+LQDIp3'pOOJ4bBL#hG<?M@FF0+0:%CBB164!nIWAOKf<Ld:r7<,PuGBhf$UQ`VR^W_bu-DPBH#PtTh2+TcY*(G`%8<Cu*U&ZD/7WXqH.=ot?hZN2Z*+G(fE7"YbuKinj/%i1BmW$5!Q`Z5Q+RaNA6/6/hfe+X;%EF_$+1KM#Af,#FDWKk0O%lk6!5>78:OC<]Kb'VL,]OMp8ZSd:VpY?)DI0cNLlIR,pWk<0D.%nYoRa"l0AL`X!/-QFgJ^(N^=>0n9VV^kf0"a.V0:^Z()Xl0-_+0;&"gn3*so%@W9Y4@96%ED=;-kdEf^6ORj8Kko%PWYI\D"QZ0T%4gbDH,M-Jr(j[@sge;A_J3MRr'kS_dY=)+dqpTB>Mlb:@;KDX9&CfV_QaY8Vd@^^iFG\SWODVSioj8(N31T&gYd/7SN91QY,_ui$%.uX'C(O0nWBae>>]Ap2Vb?hdMQRNVfpb"7*bJ@bqSbr">5`3<n(!hrE3"S>5p%e4R*q[2gl_+.(dt?YF)X3pl;d1;b^VHp$b#a#a%bshZ15.p+ZeCR7;c^MA4"/qck3Ik&leJs+Q#sgCNZ<*5T-l\H6o)RE3ErZEe/t)ns^$VOc!!@-U-pVbm]4_h5-0HnL"2\9HMl$IU%7B33b]NKI/'S)%p?9;g#m)F8"'G,%%H\p_W6!;i?1B:JA]4qNm,c:k'`>Z2FG+8RG?`2iX+cG1K)Se@e/HP>Z+M"B62%\U\>@l_]%Lo'nO2IL<96<qi;Y5SXkEYJ=]$Qcqd$'50WD2YF'4-fs%-/%"Q`FkP43s.-&]N$kO"'ama2I(n.5(@(bQ@UDa-#=:*#0lk=e.#7/%k#QE<0t>1_n3q(sL3LUkB5m01f+u&%$W0%U%AqQF)nnV)!^HPr?rAENNf1kQbUKtmT5b`?9N.uX%+#HZrROQrSluRMXq4ZeE9;$t%#Ic*@HU7dc:2G.[;oPRrT`KnPCj61Z*tU$ZK3O&R2W20YCU/J?0GSBW$PM\"a\-u4.25ZnJAF6mBhL][D/BS=cJTf"o$m+;&Ib@f%i#g_u%N@/0]-7ZB*L%`]"+D9GK=6&o]No2YE.,FY*],SO&-`!>X!([8BNN7b57dkA2"o>"&5/mKZn#\E*c2;DiS2/cC__KXn.'=V%-Z4/6[n=,HOSQ@0a>U\`>9mVJ<j_WQ3XsBN/c>IZd"&uBp6B,14@A6UGn$G5S:0K8LeYnjY^=PpJ)D:$8t@sG&g4[X^c/b:jTj)I%Xk].>+Ftam&Y+JX3<odG@r#n/2C-)7`<"@ulTKZr4@<59*alje&YmNEQ"MNC#7!N=SbPfWSfr-AU:ftVM:Y^Z6"I*=BY3bniD!^6%Y\m]9:)&,/W&3"!eF#-]>=g6E*o9"'S6@>V*p<$9i>\l`a!e1YT"r=kdQ<8Me;5*JmT0gI&Y4O_kWSPI1+UgiO*,n.%3@P8)/"%V%QoeSj8)I_;HH&(P/c;VI4Kn5`G.oZSM`]r[N5d[7*_ni"-NR6/ElJmM_rQf:d(iMX#'.25-D(D/i),n4ZFGq?NXjis8'-\Wh2^gR%)=S.X`JiMf?5n^?GMjQ*4RP?4jW40X%bu\,B4ppTY6i8VEST0*Z\4"u$4S9Ied>s7&^TXU5Bn$SA3]@eJDtqegk1C-ci[DJi=Y+$%F3pion_udkYo\1%&%mO<2M3*aTn/[n@A*_lUX+Z!dTD6Rd*@XQIg>`+jdPU*;-Gcp3qpEOkbKet?N4@bXU^kR7P95XJ0qU41.VK'%_(2/+!Q+$"psFY:d#R99D6O!,(b]2<#N!:t!<.V6%p'"t#N!:tR`5Th_5l3oj'B;%&5MH)4*ZH"3`.*H%lZF3qZLk@I,G!,GkKcT%n.&c9G+>MIAgadI4LI-sA1^eKVp2^Y8#7$9_(13=NS7uf-sUm8%uQ'9MuIAZiX6si,u*gE0mFRrF:7qpVgCl4Dr.Ohqit$)i>*+=%aDB9&H<4GJ"g:IEY+iEYhM\im8c[)=MU'g(d#N1<7<iqrHJoV2ZCE^EhY/(H5_PSM]pX\>C9QqdWWC&;E!i$cU"6mF4\4S\[U57e%'cO0e^>C4[fc&j<jIs7a%VHSXdCUE=+rV(QS:Vdq,'9=7O"?lUd(OB*HAkE(76cEcl\Lo8VkD_!U?YMT*o!uFh0j,o8@AljRto.B%n.pR!,8&f/COo'6%>9S^9R*$_/n6ga=O>K5.mCQ%oBU8Q6d:,%i_[DK'&4A42BdXJG+[-3ZL_m+^?8S[p79P1X/27:1iW4>\e?"/%.J]O]JFZb0KE`-sEYgPT7uRoJmGF%6GRGE\MI4_\'H]M)O#9:'XcPe"R9oV5:dm^c;,#%ugb*G>!`_\"D\O$D)dEG'S:Vec#AW0,%&Qf=qU@"qQE_1Gl.qkdc5.OOfbQIl'9MYbULGq]6nAeU!XQqLTog0,,NcW:/fa,8!T:c??&n;febWN]2dP_LKkCJ^3H'YYH[g,bC%Rcn(o(KYlrH3-XFXtBe\)9?;2:"-iXJ?/CdYjN>#\RBft?b*6.g!G4$O$-imht>u&it^]&'E.1)`lU[4.sDbOMg$XOjY`+t[kV!h%^WN2'D,Vjo<h:a@!)B)3:JY?,;s-UQl%U"sZ#fC(Z'TIqgj=DK,FpmYO5C;tCaD-Wn_g7Yd[BF?),JsmmsEIuD6N[QPNb+8AX[HA%*VXlpE?9=oS3ObW9:om]qKfo=#ih:3Isus)c#s>DZpD-9dJ]%0OCik<hah_N,ohLX*5;4$Vgud=n7I"[BIF.)VPesaS5?OT"Z2rQ%bk;at:_DPX:B56hp=DY3%BC=%H2k@QAe0*Yfq(7LoX`qSoJ\FMh(NBMfj=\_cp)iS6NBct_@?a2k0Z=GdiX(?(C(YYeVaM:?j<7V%630SA_#X]Z!>PhR^_lYAb#uHkMF1;jJ@g*5K`\D:L(anb*6/?hn8tk/`hhdP1gThiTX#)?HO<S$%'r)'oTJ\;,g^>@hig<<190$!%#("h[Y0]F0K4$iIVK36pI,P\04If.#PC[]`d2a`Jd$qUVKa`9/pP)2b3JW7=4W3lE\a5DDmi(g[AC(phhFi(r*HP>-fi*GJ/IYnX%7*lgle\.3Fs#SOOpS3dqG1D91BqR7WfkaFdQ;<$.HU7h*N+TCZ%9TXGV(FO>e5!?("r:NBAd]&!p!80n(h[Kid(i\/*b\r>Q[,6T%N=AW9(E,gicjL:&2Sk(M%O_#Z"`V@q[SQr_b[q4d>Uf;3!>gbFZ\8H_[BS6a"gIblp[ENFJ\efd%>UTh0ui!^i/8><NL4Hr'SuIa%aA(EQ^sJa[eW`#.TVK\H#Pc0F9JP#F^d&rc2suAYJ-D?bR%=@ASij_Dr.1Fe3b`pJ(sHPMgJbmQ;Oj/H!!X3=]nSVqF'.<DeSMGh%#<*6,]*C@$Tr6V=s+eUb<t"]AV^pV?:B6#c,V'uuOKj_IBH_oB+@rh%!E]Qqk3\`?//EU&ZVLRREW3ZF&AXZJW"&h^b0"Oo!:IYI%((/D"77gC4*6,RfFsqliEjLH$(=sk?6NKi;lAu"V*8T6`Y74U8gMA#7<qA"LLgY:=YXN>a,]\cM5Qi$IR;jic'5Th#X_mfXl0OaD%)_*h7/M03N+?LWSAO6N'%GD`q[D7nY-:GY?O4ci'="QJ,![]Lf/Q?]\pP'#W][UbkJh+5[W8M\q/Vl[\<l=$G$VV6Z1=O^fA:Cl<%Sd&e()m@W(jB8G7Sd$Of4jE[W0QG*HVC-pt-/0FQYb9pAV0t5i?VqDbB=91==k3"',[`pSPFm79R,"$rm:fsk,&aofJ_<"T_^FZ@%_oAm))R'M*2o4)Z&t!cC(b<9!oA@JRSrlO/H,u0j"S%Q_AJ4X_PE70^eD_WU^oZ2/7%RA.KG3pPJ;(VR5eM[['7$n"AmU=F3-cO4%-br?;LHKp<)O#FZ':X6fPA(L.,$RTZj7b_OWeWdaIkhO[-6tEuaKq!IS<,+O'dr(alR;:beXthEZeL1$Q9'[dQAU>_QJ.!ZQ7@SU%Q?n6PQHFnKen>U*R=dsgA;r2"O>R5r6e5?S%U!:F3+NNt6pp)FO_Dh'8.l?!o1br&F'_Hqj==PZ@\*ST.2ju)_aHj-&6_'S,=j2-%aIJ#!&=N-4![8]f3K%:TGZsX!\+$=&H30`iH,tBr,TcLl>aRY7SQX)U0OUQk`C&cL0`dF4mS#n,-/9u$aF"dO+S$^?4TgiBBSh$:%(ASaXH-f%G$)X='7##L]6lm5/*%DdCVG-8HXEbEjR;8RN7)fih&Ws]@_'C6!N&;sSKNr.6OaI'7;GTOq(D=9@]1qJqQBd;_ga%IS%4^g\iM;0l;\-!'J;CdUF=;iP0E[<Y*+\r`*3>B8"i<2R2\ig(VMnlfYHGZpB',3TY$(r["<JZF3h1pO%g8,(2XPJhkaP-<CLofEp%Lrc.4A.as7f+JY*+9#_9:UY^,JB6I'$&G[RTRb,;0a``<SY_.`g4>-;XIZAIaP,%!Lod/NLr_^g;%SktP84au)f>\=\LeU.=hAnJ%OL`IL%U$LGiK/E+(P`(+aN(!)05<8A-YuT*OQFk$%U#A6iK3.E&J&$9'_.:HE=i^aSf.'[jhVN?=e6Z8OaCPR",JMSOatNPg+%Zp%W;pX(jHHJ,!dp]OFV9hu!>?&JSh^n?j\Z['3E;Xr&QoT)&Wp:,[t9Fk&qZG1';<*17$[pP8E@4/,EZ3I$^6"53%#o4jkpgc3>G=@%M1,MM5*<qYX,;_g&l9K7A3+E.7$]K-5\.HR`C#r(=?L,>O9J%LUKKimq4e*]QJYk2A:p<V?lU(]+qB1Fns9`?S-o1Z"@&U*!(<-B%?9i&3o*%OJgL!3V*=iF3g_cbX*ce9M7ins2,m6WuiIug'4Q6n_R0OnP+mZd/3+SS\#`#MQ(ZCHu9HtNtrPC'L"f,WMnrV>j&:)@]%(o\eU$2$mda^QY$H,r%Z.LCS+1,EUb3X?r==iY)a+fA8HP3=:C'3N??OH)$UFI5Q8EZN$p-Me&3"ji@[+X1pIl*.E<r!C`bi$%FI%P!!9GD\@i,;p^]s-\)5ML7F9'8OH6CYG<>nROQ:QT9+.))KIn0,n2jT%?lO:NfZh":.NR)+mVOb0]YRS>=n;tNY9^#dlBC%aQ^@-%3951a?5!0h4E05?dlBR2aQYgZ3952L?PE?joNoC1'LtD.Ef)fS$%@JW66($'?Q]h]@1L4!VeCmTkU.XQ!f*l8$IY"NJjC5oMU\R2%IY&Gk391eK5oanP&0VND"d0FP>a.Q]'Dqua.E!C-!1')3-U]QhLR\ETa?r^R1ZT^W!1TG8-cFsFLn"Ni#XhF=4Tlt,!$Do:;kQr]%p_,B@?_pOe*<CtdK9JPgc9Y,]d8+4\!"h4[6rh*"'K?7=EXo=R$%>cph(,%BM.NW]T.m@I-Mg<s<NfMq6GtA,-S+$=eK@o&=\[rj%gacLJ3HhM;I%hH:Y`NoW>YX:C=N:DqS-&"+aX:G+j]@Bs`Tbo@4os_)O\Z8E%^2Nq#<(9;IA47n,ifq^=;1Rb`-%;_:=4ubn<8MS%?Kh;D+qjf!d?13u'jXrK5>`+A:rkY#ZR5GRU"0O!&kb6XOAgsK-2N:GU`^hYE7:8k-Q"#c'[3h_!$UMB=-/Mb/8S&9'0^k)"`nKs%-20e^\3M3aW%OIj.#+dYhO:Yr<Cl,I!6#1E;GRur$kdRj2m*I6_I"9h_&U0oM*4_'1J#SI*4dH_$+QA$Kq3gr)lY1kge7!jK!dm2%c9^8<EDHiF%^07M&oZj&.$tu&j;`9u').'h=;9Oc60p1C:FbnUT`N-N2e#Ps3tE$GNj3L/HU>;XigsOX!>]\_m;Kq7-j'GtjI@[G%')*YPA0<%n["Cj5M6[cp6I&^B/R_Et:k4XK<^]U9'7t0b1nZB-J<3\b7SDMMb_"aqkM2)`\0m(P"UI-OM?&="F%QF!cFG;SEDM65%IL8W6/1kj;n@f,63G6>gJku/FCuh09cNYNQS<),3pk0*6_SRb:V^:g=^G``V.:&kaI'POLq+2]?+1258M,t-_a>oTd-12(o5kkJ'%AlL#K6lArU@8B-c%[USKa(bp-_SI6f_49E5')%!slu3<oI'H0/aiq-R:k8,_=ot=XYJ).\VR*Z552f;j:k5k3J3qOaFH,@FOg2qM%!PS226D&3BDb,CMIP%6hfKTTJ:sNHAkS"H>!sp@\YpK%af)7o;if,>V$%H5)T5^l:BL'Di/WigAdl9agbfiQIM)%',6V`K0/Wigg%VGO]\jc-]:52kjTT`O8Kp-_(f%C\S)M*RQO-cgf),bHJ\(-(B>:>6HWKRh\V%4F<I-h7Qb"#T)/mFr<MA;H<e,#IuP:ZN2%k!;@0%aiHW-:B37@jnP(ng^-.nM5*c4aW[$2'VKR5T!0T<2l"+b(2c'.:WUas&:iU>4^h,I)9a6(jc9('4lOjK#U&Z<'D2LdgQ)8/Pi%N#%<sCd#a>m0?1ut0(h\5Vbm=Yi?.6kQpkXbh$^]%%)r]NPC^o@if@&=2$"?iH#_B5.Z"?f%H.&R22&P2`j^CUZ6,>Wjh%>S=<.eJBV%+jr:hJsk!4'CphOmViFYi'Yi/'9&.E#:>[,:W/I8C;+qAEiq4h6kEfN0.q*;!==D+1\,))(((URUM&XZUFd`V8k74GPJYL0!F/^u%6p.0_2AAE.8C,3fR\Kh9,688LL[>oK"?b`e2BblU.h2]D9`gpEpE&tA*\.guq"+gIY=?[QPK(c]Sj&9tKfkd1$$h+d]]fCFf/Fjk%.W#UsJD/,d'4Hn]"$ha#GXBAUblA;u#+e*[<tbRJR>H0?,q36CH/+BI4MboF,iT+:T1(O9et40!:PJkkS-#p$)Mr_p`>dqZ0Z>m2%*.X@pE6*mc1_T?^?8LN$1\bZ0jpC:[<HA-?T2fq4F>4F"KIH)^QN6l%,j#EDVbM(1o[$.Q'?k?e+_SI=8C/$YEl0Xt53n?(-^_Ao%6dGJ1Of0XP22jpd_(d6\aI,(I'(t;mY<:2:A?^4hcq()&,+t'TS$48>,b0ICZ8N?j,dnZq+t%!W8DKCXR.A$bLksm*4i-E0,jkt<%!4Q>[cOl#(#^&NZ-^*:Vg_5^KWO3jq13$+2dtVKhOnM9(SrfKPhd@Z&NPmt'AJi.t6inVL=hqh8\0ooS&<!(RK-PA3YSAB!3UmMJ%igrtG907_MoJ1Un'G,YEM75GWpk/_R^;7a+*!q#0hZr&s<l$)6OV9Wn,k=O>?H>Q1&5$u*`Mt1!3?]tEigp_CI'bC,h)]OO88X**%:qTLhOV=%E:h7s8a[Amcc]P.R=:^UPS=lQ#;,>gin.(=A8gJFDQ'-uoOJX7":T0j8[fD!O$%#"oA.]<:,Y`;T&t0Ql_2N>-i"L*n%aZZ'gk_*;Rl(d=2*.F-4U%GH1!52^\6r$_9KKUIh[`U<m88c;9!,>-X?pa:ELn)i)F:BRM03s2:op`05>J/qsf@Uhi304q#%+@(9%fpmnF6=+[&%J%=JogJT8E"-DMEpt[o9:;Bf`*?'a'9[eXo`SZ+H3P&IRF%-cKViB9OeWT_A.c$c^>["P-1kaG"sR]_Fb63HIm)j3%::t%&:WV">B/"D9#sCl<g]Tb``uD1tbkk/^'.dn>6r*Mr1/A#jLM&<Ia:n,tb]7q41Y[;7M[fqPOiWBE4qmMjhCTq6KjH,=3>'u%%6r#"O,*<Q/I4"(_r-LgU-\=ICaGD`L-?:<YcU9p!,Sl.>[#HFH3J$Z+78CYrR@kq[N6amT3<CKsI>%HdMO]4r`$-Sus%MJe17R5B%9SEVj78=!ka@/jX$"bBR:s3efVEtOK,!,m9L5@c#i)M!;q9k$X'DI/3$K%M62%YY8C,uo`XO7V8;,8mZ__[\F8<A[ul:m@sXKiNr%;,>%p6R&g.>S)^==[\W>jA[gC-0>L_^P&3Fh`Tt!W+..?8\/8Ns3C@smUpqZnrQj?A0pZcjAjV%$<JA\3L)3?%f+Q-ZP)sWH@[d2%<%eD/jBPai0]Z2^"YA_>V.Ct@$'D-aOf"j+MqA]nL&hZBQ&o.*H:$[AC8@\`1lKis%0rPfF+p*KW$aPK?_j9l@Lc5U?<KeN@o?)V%@f_:R/+kGk:\<oQ$TV;f=c%HVkl`Qu>Y/T@Hc"5?Y`Np3U6W59m)PeBTbs8WfFskJY(SsSC_%/!Y-#'e4])Y8OH=OcVNnA5=F5RO%S81>@@S[[c#SM0\-++BZ"KNiAOM*R&U+Jd+3(C-6F0-ssOE4,IY`Nqn/?k4WNNJJU-dX7LV3R!&%e>=6;AT_;W<1^EfFsFc=XZuZ%`>5^+W][^l-qtH!<l1GISg!j(CMHD:dP*O(n4@l#="9I^<:SFf.^:R+8lNR7Q+/1]H`WI/!cWZ5k<a0]+m4GtTHWL8F2/rGJN>nX%_'drT!Jd31h(;Z"@o^01nd-P'^d:d2p4,J)Fne3gp;g8s5/AW##D%PubQ!-HSBD$:Kq-<m!em/f%K_?Sb7ar2SBD`NKq-=,!em/E%,4:+JM)PN5aLT55:rp0],>cI\@cL5EP@u=oOE:4fOH=OO8<ApS3D#<oF4n[+a<t%ck5X>o*Oa%+,[g]P"nNhubCU0>/?)Wal1/Q5%-/c[2NcW)5Ri1QQT>B@nj39U`pSVcVqn=rE0ncca,R!I+:QIuFdBm*BVmaL8b#j6^DGQ#]N,?U"Q,Thh:K0Lk'QPh4#n&b[j+N,V%bB?q7-UpNA2:;\gA7-RiVs7d,UIL\EMF'YTPt*@h'0ZI&#W^Kk"b`DgS\d[178]&hiqTR!.NmeO@hfPqWl,5M3>ZM6FAGlg'bGC<%!"0&m(Q&BLS.!I@6I(9tCP#>9@fQcp(UAaJS."1?6I(:)CP#?Z0-oU`BGV;%0$"D,\Lhl"42NBC]S:1C.Kg.d3>W).Kq&MYK0i?+%LMLp+E&;#j0GcMLKUccu_a2SEO_[ij#TQVgQd!i?*9:.\)5i1GEliV5\0gkO_K//ZA<je2KA9L/iO]a5E\8gN#<<TmY&mGr$O6ns%(UJjKS;U^k6-dHSCN<3q\7_Uf<Z_<.c:,8E+m7k@27Y+0-I9a5Nr$R7[hX)="2Q,C_W"sbErkj#fFsh[(Sj<Jo,"3QD?[jB:A*"M%@S_6kNsWX%D&j+,0$4Y/3>ZV+'75mYj=LU70mGt)WFe74jA]8'%!&@45:?%*6UN9C\XYf"jBVC"%!#QK3\X%s"H$ne#I`0^"ek>Q%O.*tAK%q-R7bZ+D4WtK-fTXtP5`j_=>G/KW+Le2WOD&,^YV"PI>9rkEK.eXoD$_nPfhddb;IO7J0d#&6'G#SP!&%#-C-VifD!6HZ%ckQg'A<0T$:$`26?Etpl:Jl(mgJ[@"rC%&efhd\Kd'n0nlj;>1JfN.F3ZR4h@N7)gL`Fe&f::?S8N(T76.JIEOTeq*#7%fAH^B!t%=YT0bP1UFo]Hbj4AnDmc@-4s#%'mqCNM"=an3/ZCjJDtAV3(mP!B)4>U1?j\$)M&t&hKc]K0aCP!VTJHa<&7L0,Wb^,S[tYmYQJS%&SqNp(?$B_%)5AaOIP0)ppS#1BIt5Ij<d432`D^e&)i9D%WVXu-l5fF_>"QMEq:c,1tse$kO-/#LP+qJN",h22^F"p6M,s#H-?LO%Eap$q!^^c[LQLLI!IUbn3ere[[KnkL18)nAUUr)YI%jq*ns09Q]8CQhRmYW/h3J&<&Ha$6k*hsX"US!Z:CIH<OXSkn"iih6j9lT.%'MQ7a!OO0f%WZ&a->ps7ZA#+OJcsH]4s]2Y`IQ>%O9&P:!=?=5XF/'3OTHjs[6kGfKF&$sRYEZ7O?Ee9ZpP>e65LQGa)LSML[6a#%9S5_+(hqeI8RRB8NZ9`eRlupBijfX@ZGuq^pW.oB\H38o@o-/[/SJ(+N["]SV@Ph#j&J'!A=G9GV1rfN3M[h-Bn,gl)8K070kA$4%0QBH(!@lD0`/ot>6IS90jI'IXd$!2m$eatYa>8k:?TB%%Kl$TcTnVhfH-;<MQ'[Z@OT!HkC`Y-<j(0&VA4s3X/7afmd)DfRC#56p%ZKYsR0k@?Z0P&YY)_km<9n<D)=[A,-6NBJ3h&%>jC^KS8L2=GC,_k)lHc3r)L?pW\b)l`]IqXW]Rso+/+WKUoBd%g/HN4he`tgLi%'U\]]KnSe9.(>QV1em=u6M;81GF0'9HSQUO1NibQ32DXQcKoP+*Pb@bS=mp@*Z+/CC=&=]1u:M@L$YLeh+cN&.9<\Y6ma\n&-@T6%(>A8aZOi2469P0n91[.eZ*;RH#m*H=T6&T"^BYqFr<<S=h&D8qTTJbb=EO=`H=#%i?PkSHI#P)(+a_EMj72<#EmaET3=cSP1U6n/%$:?_6GefE#(QH:nr@9$6H.26KbZ6Xg!>;EZOSu4>1WI<S>TGh8%s;*TfAS),g?\Ntfu0DReLVUTS,jcF;F@lB"r/&^a05Y46h]!b%_X;$-!XiM3hc74hd#\]p;hZA6n(J(82Qk^KL29H\"bpi\-l.R(Tn3i*!Fc[C(:#5j(`9RY)L[Gcq[XS<EG3EOakF^uTM=uj_'/\O%-$C:gAH/("ln/oY_Xs0SA=LLr(QAG(Ou,./*s?u5+kspl*]4.0IZ><L,[EDcJ?tfpOF>W1N!^$I9Z_oY5p$3fdm?FqnWO+8aFIem%6UNc7=d4[-_`$Oj,6\5>!^ejpTYuq?[&CIl-kOlX0k;ASNbfLlJ@RI=aMnsVZB-[.g6`OiO0$9(^d>Jl#mq$mGaD;BZAC3RS=kkq%?qA@^VB/53'Nr&0OR5_8k+r(P0dpR^/uZ![Ud26-@3PLONVX"aZcIX:XIp#Jq]Z7Lg%!FNrH\hV#TBuX=[%ic(du/,6agO16US;5%kJfLoQkNgF3RDE+3HCeEXoa>o]tS0qOKI\sKS=6af>anb?Qm=>L5'N8dL7&"FZP:E6[%O0`*5VB,lS`"ZJcR^/7ddneZt;8&]31m%_N5S]]#9]@:ci+,HseU9aEXj@=icLL;pGb',)qF&cU*8`+jWQn`?EQR>L!WI2d%%Sa/MWtf$BpIABY'%%Tu"fifL4:=`VT2\g2::%Q%U\GA7#'W%@L"F,n>3X&QmJC-^rH$O=,AF_N6/4c@dA$F!V3^12aO^5rto86+XqT6:T,?66:hrdm>*u`+U<8+aC;S\I^l+aLIY#%-tJml6m3A<Bgj1dojjeYM[g7HjH:BlK%M2k8KeU:GKpMpP_1OJ6$nJ)Z3X`6a?@X^:'oniCk@aKH9r1Kc5qS!3PUk&j:3!b#t"'I%:NV[u/OL()W!59'Kp.@FOP?LuGR$LTA^Q&4K^<nA(:FS`IuuCE)8VIaBLp4YegM.2&9>U0T,coIlTBn>62(h")2F#TPp^O4$SV,5%+;YLbkTH4lI>g0P?U=r()A$rJ_eG9q$g5Z>m!dY?qaZ_A0E7UBjS(aZ[-e`;$eqeM]^651MZ9ASs!dpCLRJ1U]\`J5N]s0-B`jU%%pXArH#3nR&kOf0iB'?clgKLB^;8at<`UqT>Qep`MCL<llI10l]`q187UmCC.ErQ2iBWQ0^oWr#`;Hp;i/\+!/cW[?p3NUohk=g@`%pSjJD1Ug>U5(-gGCaW]TIB'.?bUp5h\p0YjouYihT;a.64DT4Vc`>C)kO0LRgulXdjH!ZTJR%Vai8?6^WKug*[oAtG*ZN4L(-Y?R%qc$5]R9Q];0ckM[I?&[T-MOL*l8,nC.3B(cjZ\Y7RcQ``;LR\nh>W3&Hb5":s#NquRHDrscjdmspC$\D)Y[P7pZ5h#rqCiUs0NmB%s4I#3^@7RUP<Y#8CqECrs0]>@I=6Mt383IrD*u)Sj(mDTlhds[XD@42ITJJZX4OSU,F%*%O2fh%,o0__rkbRX^AH4pokJO(TqA6b%[#_*219MeX3kq[Co2fGhV=3mIf&"8^HES9r?+o7AOCGH$kOtiF\K%)$5INN5C]/hC.G?N=li*ZM5=;hrTZ;XXAgkEJYM1JK=(?*2%hd?-qro'GR5O81gO2'Q=s17@:POD;fj%hUPDYJY6rc\'UI!5,Dq!7YJ(O*?dchRCH]3WUf2nLMfM10eYr<)aN4CDOX!W*cWYcmnR%IG+S5Y$O9%52H2)h<V[s[l9)kkI$AO=-),KlIPRN@t2>Zh9F^QUSgnk?bcU%_nU*X%c6jJqXU[ghld"Xrlpl1>amPL&Y&Cil0dj5%RD&Ibk0<M8kMtfrDg#2`s#dqWrcgK:H[e0FhL7Tbn$kU;giuo@T@a+LIsX5*>W;#Zs7kL+:EEYGK'$-9hu3'Cmf*Ym"2t~>%AI9_PrivateDataEnd