%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2d Representation.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Chris
%%CreationDate: 12-04-27
%%BoundingBox: 0 0 388 249
%%HiResBoundingBox: 0 0 387.4692 248.7700
%%CropBox: 0 0 387.4692 248.7700
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 9522 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFA8FD38FFA8FFA8FD42FF7DA852FD37FF7D27A87DA8FD41FF27%527DA8FD36FFA8277D52FD42FF7D7D52FD37FFA87D7D7DA8FD5CFFA8FFA8%FFA8A8FD7AFFA8527D527D7DFD6EFFA8A8A8FD07FF7D7DA8FFA8FFA8FD66%FF7DFFA8FFFFFFA8FF7D7D7DA87DA8FFFFFFA8277D7D5252FD07FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FD19FFFD04A87DA87D7D7DA87DA87DA87DFD04A8%FFA8FD11FFA8FD15FFA8A8FD05FFA87DFD04FF7DFFFFA827FD04FF527DFD%14FFA8A8FD17FFA8FFA8A87DA87DFD05A87DA8A8FFA8FD15FFA8FD05FF7D%A8FD0FFFA8FFFFFFA87DFD06FF7DFF27A8FD05FF52A8FD12FFA87DFD18FF%A8A8A87DA87D7D7DA87DA87DA87DFD04A8FFA8FD11FFA8FD05FF7D5252A8%FFFFA87D7DFD0DFF7DA8FD07FF27A8FD06FFA852FD12FF7DFD19FFFD06A8%7DA8A8A87DA87D7DA8FFA8FFA8FD13FFA8FFFFFFA8A87DA87DFFFFFF527D%FD09FFA8FFFFA87DFD07FFA827A8FD07FF527DFD10FF7DA8FD18FFFD04A8%7DA87D7D7DA87DA87DA87DFD04A8FFA8FD11FFA8FD05FFFD047DFFFFA852%27FD0CFF7DFD08FF5253A8FD08FF27FD10FF7DFD1AFFA8FFFD04A87DFD06%A87DA8FFA8FD15FFA8FD05FFA8A8FD04FF2727A8FD0AFF7DA8FD07FFA852%FF7DFD08FF7D7DFD0EFFA87DFD19FFFD04A87DA87D7D7DA87DA87DA87DFD%04A8FFA8FD11FFA8FD0BFF7D5252FD0BFF7DA8FD07FF52A8FFA87DFD07FF%A852FD0EFF7DFD1FFFA8FFA8FFA8FFFFFF7DA87DA87D7D7DA8A8FF7DA8A8%FD19FF527DFD0AFFA87DFD07FFA852FFFFFF7DA8FD07FF52A8FD0CFF7DA8%FD27FFA87D7D7DA8527D7DA87D7D7DA8A8FD12FF7D7DFFFFFFA82752FD0A%FF7DFD08FF7D7DFFFFFFA8A8FD07FFA852FD0CFF7EFD28FFA8A87DA8A87D%52A8A8A87DA8A8FD12FFA85252A8FFFFFF527DFD09FFA87DFD08FF27FD05%FF7DFD08FF52A8FD0AFFA87DFD28FFA87D7DA8A8527D7DA87D7DA8A8A8FD%11FF7D7D7DA8A8FFA87D52FD09FFA8A8FD07FF7D7DFD05FFA8A8FD07FF7D%7DFD0AFF7DFD0DFF7DFD1BFFA8A87DA8A87D52A8A8A87DA8A8FD12FF7D52%7D7DFFFFFF5227A8FFFFFFA852A8FFFFA8FD08FF52A8FD05FFA87DFD08FF%27FD09FFA87DFD04FFA8FD08FF27F8527DFD17FFA8A87D7D7DA8527D7DA8%7D7D7DA8A8FD11FFA8A87DFFFFFFA82727FD04FF7D527DFD0AFFA852FD07%FF7DFD08FF7D7DFD08FFA8A8FD09FFFD04A827F8F8F827527DFD15FFA8A8%7DA87D7D52A8A8A87DA8A8FD19FF7DA8FD09FFA8FD07FF527DFD04FFA8FF%FFA87DFFFFFFA8FFFFFFA852FFFFA8FD05FF7DFD05FFA8FFFFFF52FD0CF8%2752A8FFFFA8FFA8FD0DFFA8A8A8FF7DA87DA87D7DFD05A8FFA8A8A8FFA8%FFA8FFA8FD0CFFA87DFD10FFA852FD09FF7DFD08FF52A8FD06FFA8A8FD09%FFA8527D5252FD05F827527D7DFFFFFFA8A8A8FFA8FD12FFA8A8A87DFF7D%7D7DA87DA8A8A87D7DA8A8A8FD0DFF277DFD09FFA8FD06FF7D52FD09FF7D%A8FD07FFA852FD06FF7DA8FD0EFF27F82752A8A8FD06FFA8A8FFA8FD11FF%A8FFA8A87DA8A87D7DA87DA87DA87DA87DA8A8FFA8FD05FF7D2727A8FFFF%FF7D52FD10FF52FD0BFF7DFD08FF52A8FD05FF7DFD0FFF527DFD0AFFA8FF%A8FFA8FD12FFA8A8A87DFF7D7DFD0AA8FD06FFA8A87D7D7DFFFFFF527DA8%FD08FFA8FD05FF7D52FD0BFF7DA8FD07FF527DFD04FF7DA8FD1BFFA8A8FF%A8FD11FFA8FFA8A87DA8A87D7DA87DA87DA87DA87DA8A8FFA8FD05FF7D52%52A8FFFFA82727FD0FFF52A8FD0BFFA8A8FD08FF27FD04FF7EFD1CFFA8A8%A8FFA8FD11FFFD04A87DFF7D7D7DA8A8A87DA8A87DA8A8FD07FFA8527DA8%FFFFFF527DFD09FFA8FD04FFA827FD0DFF7DFD08FF527DFFFFA87DFD07FF%A8FD14FFA8A8FFA8FD11FFA8FFA8A87D7DA87D7DA87DA87DA87DA87DA8A8%FFA8FD0BFFA85227FD0EFF52A8FD0DFFA87DFD07FFA852FFFF7DFD08FF7D%A8FD13FFA8A8A8FFA8FFA8FD11FFA8A87DFF7DFD08A87D7DA8A8A8FD0CFF%2752FD0DFFA852FD0FFF7DA8FD07FF52A8A8A8FD07FFA827FD15FFFD057D%527DFD04A8FD17FFA8A8FD057DA8FD0AFFA85227FD0DFF7D7DFD0FFFA8A8%FD07FFA827A8FD08FF52A8FD14FFA8A87DA87DA87DFD04A8FD19FFA87D7D%A87DA8A8FD04FFA85252A8FFFFA8F827FD09FFA8FFFFA827FD11FF7DFD08%FF5253FD07FF7D52FD15FFA8FD077DA87DFFA8FD17FFA8A852FD047DA8FD%04FF7D52277DFFFF7D2752FD0CFF27A8FD12FF7DFD07FF7D52FD07FF52A8%FD15FFA8A87DA87DA87DFD04A8FD19FFA87D7DA87DA8A8FD04FF7D52527D%FD0EFFA8FF5252FD13FF7D7DFD05FF7DFF7D52FD05FF5252FD16FFA8FD07%7DA87DFD19FFA8A8FD057DA8FD04FF7D7D52A8FD0BFFA87DFFFF7D52FD15%FF7DA8FFFFFF7DA8FFFF527DFFFFFF7D52FD17FFA8A87DA87DA852FD04A8%FD19FFA87D7DA87DA8A8FD05FFA8FD0CFFA8FF7DFF7D52A8FFFFFFA8FFFF%FFA8FFFFFFA8FD07FFA8FFFF7D7DA87DA8FD04FFFD0552FFFFFFA8FD15FF%FD077DFD04A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%A8FD057DA8A8FD26FFA8FD09FFA8FD07FFA8A8A8FD1BFFA8FFFFFFA8FD1F%FFA8FD2AFF7DFD04527D7DA87D7D52FD35FFA85252FFA8FFA8FFA8A87DFD%36FF7D52F852522752A85252A8FD35FF5252522752277DA852527DFD34FF%A8A87D7D7DA87DA87D7D52FD36FF7D527D5252F87D7D5227A8FD1DFFA8FD%3AFFA87DFD23FFA8A8A8FD1CFF7D7D7DFD38FFA82752A8FD41FF527D7DFD%38FF525252FD42FF7D527DFD17FFFD07A8FD19FFA8A8527DA8FD5CFF7DA8%7D7D52A8FD7BFFA8A8A8FD23FFA8FFA8FFA8FD7BFFA85252527DFD45FFA8%FD09FFA8FD05FFA8FFA8A8FFFFA8FFA8FD1DFFA87D527D7DFD4EFFA87DA8%FD07FF7DFD6CFFA8FD07FFA8FF7D7D52FD05FFA87DFD06FFA8FD19FFA8FD%15FF7D7DA8FD3AFF7DFFA8A852277DFD0DFFA8A8FD16FF7D7D7DFD13FFFD%047DA8FD37FFA8A8527DA87D5227A8FD04FFA8FD07FF7D52A8FD05FFA8FD%10FF7D527DFD04FFA8FD0DFF7DFD04527DA8FD17FFA8FD1EFFA8FFA8F827%7D7D7DA8FD0BFF27F87DFD17FF52277DFD11FFA87D7DFFFD047DFD35FFA8%FFFFFF5227A8FD0DFFA82727FD07FFA8FD10FFA852FD12FF7DA8A852527D%FF7DA8FD0FFFA87DA8FD21FFA8FD05FFA87DA8FD0BFFA87DA8FFA85252FD%15FF52527DFD11FF7DFFA87D7DA8FFA87DFFFFFFA8A87D7D7DFD06FF5227%52277DFD1DFFA8FFA8A8FD06FFA87DA8FD09FFA852A8FFFF7D52527DFFA8%FD12FFA852A8FD08FFA8A852A8A8FFFFFF7DA8FD07FF7DA8FF7D52272727%5227A8FFFFFF52527D277D527DFD28FF7DA8FD08FF7DA8FFFFFF7DFF7DA8%A8FD13FF7D277DFD07FF7DA87D5252A8A8FFFF7DFD08FF7DA87D52A8A852%A87DA827A8FF7D7DA87D2752A852A8FD1DFFA8FD09FFA87DA8FD05FFA87D%A8FD04FFA852527DFFA8FD12FFA87DA8FD05FFA87DFFA8A87D7D7DFFA8A8%7DFD09FF2752FFFFFD047DFFFF277D52FFA87D7D7DA8FF52FD1CFFA8FD0B%FFA87DA8FD04FF7DA8FD07FFA8FFFFFFA8FD11FF527D7DFD05FFA8FFFFFF%7D5252A8FFFF7DA8FD08FFA827FFFFFFA8527DA8FFFFFFF8A8FFFFA8A8A8%FFFF7D7DFD1CFFA8FD0BFFA87DA8FFA87DA8FD0DFFA8FD10FF7D277DFD04%FFA8FD04FFA8527DA8FFFF7D7DFD07FFA85252A8FFFFFFA8A8FFFFFFA827%52FD07FF7D7DFD1BFFA8FD0EFF7DA87DA8FD1FFF7D527DFD05FF52FD09FF%7DFF7DFD06FF7D7DFF7DFD08FFA87D527DFD05FFA8A8A8FD16FF7D7D52A8%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8277DFFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD10FFA87DFD06FF7D7DFD07FFA87DFFA87DFD04FFA827FFA8%7DFD08FF52FFA852FD04FFA8A8FD17FFA85252FFFFFFA8FFA8A8FD0BFF7D%7D7DA8FD0BFFA8FD13FFA87D52A8FD04FFA87DFD07FFA8A8FFFFA8A8FFFF%FF52A8FFFF7DFD07FFA87DFFFF527DFFFFFFA8A8FD18FFA8FFFFFFA8FFA8%A852FD0AFF7D7DFFA87DA8FD0AFFA87DFD12FF7D27527DFD05FF52FD07FF%7DFFFFFFA8A8FFFF7D52FFFFFFA87DFD06FF7D7DFFFFFF27FFFFFF7DFD2B%FF7DA8FFFFFFA87DFD0AFFA8FD13FFA87DA8FD06FF7D7DFD06FF7DFD04FF%A8FFFF52A8FFFFFFA8A8FD06FF52FD04FF7D7DFFA8FD20FFA8FFFFFF7DA8%FD05FF7D7DFD05FFA87DFD1DFF52F87DFD06FF7D7DFD05FFA87DFD05FFA8%A852FD05FF7DFD05FFA87DFD04FFA852A8A8FD23FF525252FD04FF7D7DFD%07FFA87DFD1CFF27277DFD07FF52FD05FFA8A8FD06FF52A8FD05FF7DFD05%FFA87DFD05FF7D7DA8FD20FFA8FF7DA852A87DFFFF7D7DFD05FFA8FFFFFF%A87DFD08FFA8FFA8FD10FFA852A8FD04FFA8FFFF52A8FD04FF7DA8FD05FF%A87DFD06FF7DFD05FF52A8FD06FF52FD05FFA8FD1CFFA8FF527D7DA8FF7D%7DFD0BFFA87DFD1AFF7D7DA8FD07FF7DA8FD04FF7DFD06FF7D52FD06FFA8%A8FD04FF7DA8FD05FFA852A8FD22FFA8A87DA852527DFD0DFFA85227FFFF%FFA8FFFFFFA8FD0FFFA85252A8FD07FFA87DFD04FF7DA8FD05FF52A8A8FD%05FF7DA8FD04FF52FD06FFA8527DFD26FF27F8A8FD0AFFA87D7DFF27F8A8%FD17FFA8A8A8FD07FFA87DFD04FF7DFD05FFA852FFA8FD05FFA87DFFFFFF%A87DFD06FFA8FF52FD1EFFA8FD04FFA8A85227A8FD0AFFA87D7D27A8FF52%52A8FD21FF52FFFFFFA87DA8FD04FFA852FF7DFD05FFA87DFFFFFFA852FD%05FFA8A8A852FD24FFA87DFD0CFFA8A87D7DA8FFFF7DA8FD21FF7DFD04FF%7DFD05FF7D7DFFA8FD05FFA87DFFFFFF7D7DFD06FFA8FF52FD1EFFA8FD07%FFA8FD07FFA8FFFFFFA87D5252A8FFA8FD1EFFA852FFFFFF52FFFFFFA87D%FD05FFA87DFFA8FD05FFA87DFFFFFFA87DFD05FFA8A8FF52FD27FFA8FD05%FFA8A8FD04FFA8A8A8FFA8FD1FFFA87D527DFD065227FD055227527D7D7D%A87DA87D7D527D7D7D527D7DA87DA87D7D7DA82752527D7DFD24FFA8FFA8%FF7DA87DFFFFFFA8FFA8FFA8FD09FFA8FD17FFA8A87D7D7DA87DA87DA87D%7D527D7DA87DFD05A87DFD09A87DFD07A87DA87DA8A8FD26FFA8FFFFFFA8%FFFFFFA8FD23FFA8A87D5252FD07FF7D527DFD08FF52A8FD07FFA85252A8%FD06FFA8A87D5252FD1AFFA8FFFFFFA8FFFFFFA8FD07FFA8FD07FFA8FFFF%FFA8FFFFFFA8FD15FFA8A8FD047DA8FD05FFA87D527DFD08FF52FD09FF52%7DA8FD07FF7D7D52A8FDD6FF527DA8FF7D7DA8A8A8FFA8A87DFF7D7DFD04%A87D7DA8FFA8FFA8A87DA8A8FFA8FFA8FFA8A87DFD2CFF7DA8FD2AFFA827%52522727525227525252277D7DFD0427527D52275227277DA85227275227%52275227525252A8FD2BFF277DFD2BFF52FF2727527DF8527D5227527D7D%27525227277D7DFD0452A87D522727275252522727275227FD2CFFA852A8%FD35FFA8FD07FFA8FD07FFA8FFFFFF52A8FD05FFA8FD2DFFA8FD60FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2012-04-27T15:25:09-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2012-04-27T15:25:09-04:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:MetadataDate>2012-04-27T15:25:09-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>164</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6h5T85+fNZ1/Rl17TpdH&#xA;uRqt9bfVBFcW0c+lDTmm9aSGYuGeC79GIyKxSpPA8WqVXrOKuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KsP/NSbzFD5Zt59Aa4W9h1PTZJWtoZrlhbJeRNcF4LcrLLH6Qb1I1NWWo74qgfy217zJq+sazJr&#xA;EUluRa2Dy2jiRUiu2a5VxHFKWeAS2sdrOYiaoZPi+KuKs+xV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVCXmqWtneWFpNyEupSvBbEKSvqJC85DN0X93ExHyxVECStaKSASK7djTxxVA6xr9h&#xA;pMUb3fMyTNwtreJfUmlf+WONasx/V3xVBQ+cLX61DbX9jeaW9yQls94kaxyOeiCSN5EDHsrEE4qm&#xA;t9qNpYWU99fSLbWdsjS3FxKyoiIgqzMxNAAMVefar+aNpqWk/WrPQ/MK6H6sMy+YobENB6UMqTGV&#xA;YDMl40TKn2xBShruMVRGhaHr2pW1tqmmeb3vdJlTlaXMdZ1njeoqx9YAMlSFoeoq38oVZpo9nPp+&#xA;lWllNLJdy20SxvcuSWkKinNubyNU/wCtiqM5t/Ifw/rirubfyH8P64q7m38h/D+uKu5nupA6V27/&#xA;AE4quxV2KuxV2KuxVZNMkKB36FkQU8XYIPxbFUon836NA0YkaSsknorRCfj9BLn/AJNyDFVCDz35&#xA;fnkkjjeTlH9qqEftvH/xKM4qr/4v0b+aT/gDiq+w806TfQRTW7OUmaJE5KQazAlP+I4qjYNStpxG&#xA;YyaSsEWopu0XrD/hMVRWKuxV2KuxVRtLyG6jMkRJUceop9tFkH/CuMVVsVdirsVdiqHutPsrqa2m&#xA;uIVlls5DNau3WOQqULL4Hg7L8icVaku7ezsp7u5cR29uJZZZD0VEJJJ+QGKpN5ZsJ7uV/MmpxkX9&#xA;6tLOF/8Aj1tDvHGPB2HxSHx27YqnWo6dZajZTWV7Es1rOvGSNuhH8COoPbFXlllbS+dfNcnlTV7y&#xA;LUPLfk+TleQhizaldq3+jpdLQBktFoZVrRpaV6UxV62AAKDYDoMVecvEvkDzrDJABF5O823IhngG&#xA;0djrEv8AdyIB9mK9pwYdBLxP7RxV6NirsVdirsVYxbNLr2utf8yNH0iYw2SAnjPdL8E0x8VjqY09&#xA;+RxVk+KuxV2KuxV2KoXU/wDeZP8AjPb/APJ9MVeaav8A3tp/zHD/ALo9tiqVaR/vZd/T/wBRVziq&#xA;a4qi/J3/ABytO/4z6f8A8QfFWVaT/d2X/GeL/unDFWQYq7FXYq7FUq8uf7xt/wA8f+oWHFWH/nS+&#xA;pPoMlnb6hPpcFzY6isF3BcfU1bUxAP0fBNdckEMcjs5qzqrMqqxo3FlU3/L65WQapDY3kuoaHbyx&#xA;Lp93LK1yPUMQNxFDcOWaaKN+jcmoxZAaLxVVJI/zBvIvzbk8qPqkctlPOY4bR9PUOkiWEdw8CXiX&#xA;qtQcll5PZn7ZQN8JKKvScVdirF9bA1XVLHy6o5W5dr/VR2MEMh9KM+PqzAf7FTirKMVY5+YPmeby&#xA;55Wur60QTarMUs9HtT/u6+umEVtHQbkeowLf5IJxVJIPKcfkzyto9zaM1zd6Dyl1W6/3Zdpctz1C&#xA;R/5i0jGbfuMVZ5HIkkayRsGRwGRhuCCKgjFUr82eW7HzN5c1DQr4lbe/haL1V+3G/wBqOVP8uOQK&#xA;6+4xVLPy28x32t+WUGq8V1/SppdL12NegvbRuDuP8mZeMqf5LjFWU4q7FUm816jdWmmC3sWpqeoy&#xA;LZ2B/lklrWT5RIGf6MVRmn6ba6Zplrp9stILVUjjrufhp8RPiepPjiqNxV2KuxV2KuxVSuYPXjCc&#xA;uNJI5K0r/dur0+njTFWNXnkX6w8LfXuPpTienpVrSzjtOP2x/vrlX3p74qhLP8t/q800n6R5erXb&#xA;0aUrLJJ/vw/79p9GKu1XymbCwluxd+oY+PwenSvJgvXkfHFWO6BfS2UP1Tisn1Ge2o+45+hEG6b0&#xA;5er+GKqnlb8wJ71SDZqn1OSKQUcnl/o5t6dNvs8sVZNaeeZZ72S2NoqhPqnxcya/WrpbY/s/shuW&#xA;Ksos5zcWkE5HEzRrIV605KDTFVXFXYqhdOsfqUJj5+pXhvSn2Ikj8T19OuKqet61omjadLf63e29&#xA;hpyfDLcXciRRfFsFLOQKt0A74qu0jV9I1fT4r/SLyC/sJa+lc20iyxNQ0IDISNjsfDFXjumaDaSf&#xA;n7eXwhvLq5sdQZ59TmhUhZZdJXjCtxb6NwWCOC4WNYpNSTccmVmI5qvZ7++t7CxuL65LC2tY3mmK&#xA;I8rBI1LMVjjDOxoOigk9sVQHlnzZ5e8z2MmoaDeC/sY5TB9ajVxEzqAzem7qqyAcqFkqK1WtQQFV&#xA;Ly5pdxbz6nqN4B9c1C6c0Brwt4SY4EqP8mrH3Y4qneKsCuj/AIl/NaC0+3pXkmAXdwP2W1a/QpAp&#xA;rsTb2vN/YyLirPJESRGjdQyOCrKRUEHYgjFWP+Tne1gu9AmYmXRZfRhLGpa0kHO2b6E+D5qcVZDi&#xA;rArmnlr814LkfBpfneD6rOf2V1bT4y8LGuwNxaBk9zEuKs9xV2Kscs66r5vurw/FZ6In1O28DdTA&#xA;PcP/ALBOCfS2KshkrxH+stfvGKrsVY5+YnnKLyZ5N1LzPLatex6asbvbK4jZw8qRmjENSnOvTFWJ&#xA;+Sv+ckPyn81rHHFq66TfvStjqlLZqnsshJhavYK9fbFXpsckcsayRsHjcVV1IIIPcEYquxV2KuxV&#xA;2KpV5p/44N1/sP8Ak4uKvNLL/em//wCM6/8AJiLFWP8AkX/j+/55f8b4qyvS/wDjsXH/AG6v+6om&#xA;KvS9J/45Vl/xgi/4gMVRWKuxV2KsM/MbSfMtwtnqGgDleWkV1AjrHHPLbPdKii9ghmlto5JYUR0C&#xA;mRfhkYjlTgyq38r/AC3qGi6ZOt1ZJpsTJa29vZIApK2dulv9YkRZrsI8oQDj60jcFXk3KoCrz/69&#xA;FN/zkt9WtrOwSS2n4Xl7JNoX1xwdI5hIrd7SHWP92J+8S4kXiGH2aqir3C6tbW7tpbW7hS4tZ0aO&#xA;eCVQ8bo4oyurAhlINCDiq21sLC0MxtLaK3Nw/q3BiRU9STiqc34gcm4Iq1PYAYq3CilWNT9t6/Ef&#xA;5j74qhNf1fTtC0S/1nUJDHY6dBJc3D8jXhEpYgVO5NKAdziqQfldoN7p3lVLzVlKa7rs0msawvJq&#xA;rcXhDiH/AJ4RcIR7JirLvTXxP/BH+uKsd1xBpnmDTNZWot7kjTNQNT9mZq2zk1/Zm+H/AGeKsi9N&#xA;fE/8Ef64qxj8yPLN1rvlK7g008Nas2j1DRJST8F9ZuJrfqejOnBv8knFUx8pa/Y+ZfLWm69Z8lg1&#xA;GBJhGWPKNiKPE3+VG4KN7jFVfXtRi0nR7rUGDOYEJii5NV5G+GNBv1dyFxVT8t6O2l6Nb2szF7og&#xA;y3ktT8dxKxkmbY93Y4qmMiKApqa8lpVj4/PFWIfmv5B1fzv5dt9J0rzFceWbiC8S6e/tVd3dEikj&#xA;MJEc1uaEyhvtfs9MVfPn5rf84/ecfLX5faxrl9+Y+o61aWUcby6XPFOscwaZEAYteTLsW5boemKv&#xA;IPJX5E/mj5xWOfSdEljsJKFdQvP9Ftyp/aRpKGQf8Yw2Kvob8t/+cW/O3lvhLc/mBeaXvWWx0NpF&#xA;iJ67vMVRt/5oMVe829le6ToU8cmp3WpzwwuyXl4Lf1aqhpX0IoEO4/lxVC22q37+hylrz9Hl8K78&#xA;/qnLt/xc/wB/yxVkGKuxVSurWC7ga3uF5xPTktSK0II3BB6jFUsTyj5eRpGW0o0rc3PqS7kKFr9r&#xA;wUYqxe88raDo8jDTrX0BLdvFJ8cj1SPTZbhR8bN0lHL8OmKpEJZINM12/iPG7tpbdIZNjxEMRuox&#xA;Q/CaTKG3Ht02xVM9L8068LMILr4YpJYoxwj2SOVkQfZ7KoGKor/FOvf8tX/CR/8ANOKph5V1/Vr7&#xA;6p9an9T1bu+if4EWqQ/3Y+FR9nFWUadLJNp9tLIeUkkSO7bCpZQSdsVSvzV5usvLltHJLaXmpXU/&#xA;M2+nabAbm6kWIcpHSIFfhQEVNe4AqxAKrXk/zjpXmvSY9S09JoVdIpGtrlAkypPGs0LEKzqRJG6s&#xA;CrHw+0CAqxKLzH5i/wCVvy6TNrKHRvVEdvp8ZKRg/UFm9CQtpUivccuU3BdSRvTo3CgIZV6VirsV&#xA;U4PsH/Xf/iRxVgvn/wD52HzLoPkWP4raaQa15hApT9H2MgMMLDwubvgv+qr4qz7FXYqg9Z0uDVdK&#xA;utOmNI7mNk5jqrH7Lj3VqEYqhfK2qTajo8bXVF1C2ZrXUE/luITxf6G+0PYjFU2xVgPlD/nW/Peu&#xA;eUHqlhqhfzD5f/lCzOF1G3XsPTuWEoUdpfbFU71M/pXzRZaWvxWmlgajf+BlNVtIyR/lcpKf5IxV&#xA;keKoLUtX02wksoby4SCXULhbWyRzQyzFWk4L4nhGx+jFUbiqye3guIjFPGssRIJjdQykqQwNDtsR&#xA;XFV+KuxVC6t/xyr3/jBL/wAQOKsfs/8Aj2/54f8AYjirKsVdirsVdirFfMf96v8AzHTf90ebFWEy&#xA;/wDKPeZP+M8f/UE2Ku0z/eZ/+M9x/wAn3xVF4qmvkj/jw/5jtSxVm2k/8cqy/wCMEX/EBiqQefPJ&#xA;195is0Gm6kNMvkimtJJZLeG8ils7vh9Zt5ILhZIiJPSTdlalOhBIxVd5C8my+WNKW2ubz69dCG2t&#xA;RKFKKtvZwiGCMBmckhQWdyfiZiaAUUKvNCNMh/5yVEUVzeTXs8wuJ9O+tz/VISdJaMXZtJdMW3DF&#xA;IfSDxXxffw5IFXuWKuxVA3+qafpGk3mqajOtvYWSTXF1O/RI4yzMdvADFWL/AJZaZfzQaj5x1iFo&#xA;NZ80yJci2k+3a2ES8bG1PgyRku/+W7YqzbFXYq7FWNXp/QfmiO/Pw6ZrfC2vT+zHeIKQSn2lX92f&#xA;cLirJcVYV+aemzfomz8y6e6Ra35ZuVvrBpCVWZH/AHVxaMQCaXMTlB/lcT2xVH/l5Pbah5ci8wRT&#xA;pdS68fr888ZqoLgKsIruPRVRHQ9CDirJsVeeaC3+MPPt15p+3oPloyaT5eb9me8dguoXieKrxFvG&#xA;wrWknjir0PFXYq7FXYqhNXAOk3oIqDBKCD/qHFXkJjQNeUUbXlvTb/Jt/wCmKqFl/wApRf8A/GNf&#xA;+IRYq9Q8pf7zD/jAn/J+4xVkGKuxVa0MTfaRW3ruAdyONf8AgTTFVP6nZ8WX0I+L7uvBaE0pvtvt&#xA;irhZ2YFBBGBudkXqdz2xVIfNtrbC2NIUH7h/2R/v+DFXkjRRLo+r8UUU1BiKAClZY64q9U8iAAXo&#xA;AoB6QAH+zxVT/MXztN5YsleBreFvq9zez3d2C8UUFr6aNSMPB6kkktxEiqZUXcsW+GhVQ/5Tefrz&#xA;zl5bhv7+O2S9aC2uXNk5eApdR8wtGLMjxurxupJ3WvegVYJpPkv8x7j8/wB/M2qaW1v5XgnuZLWa&#xA;P6sI5Ha2+qpPIg1CaZWaGGJaiMhqAmKM1KqvcsVSTULrzImraWkNun6PkvJI75oyZT9V+rSlJGLL&#xA;F6Z9cRii89icVYrc6L5i86a4sWv2LaV5K0q6aZNLlKyXGq3EMhMUtwIi6JaxuA6RliZCAWAFBir0&#xA;P1F8D/wJ/pirvUXwP/An+mKu9RfA/wDAn+mKu9RfA/8AAn+mKobUbKy1GxnsbyIy21whSVCrdD3B&#xA;psR1B7HFUitNV1zRU+o6nZXWqQRClrqlpH6ryIPsrPFVWWQDYsAVbrtiq63tdR1zUYL/AFa2ey06&#xA;yf1dP0x/ikeUfZnuOPJRw/YQE0O5PTFUiuNN17yRrN3qflzT5dZ8sarM1zqmg2/Fbm0un3kubFZC&#xA;iSJMfilhLA8viTqVxVT1bWvOXnRf0JoWm6j5Y0mf4NW8xahELe5EBHxxWFuS0nquPh9V1CpuRVqY&#xA;qzjSdJ0zSNKs9J0u2FtYWMccNrAqkKkcdABU+3Unc4qj8VdirsVdiqG1ON5NOuo0BZ3hkVVHUkqQ&#xA;BirzI+XNd5XX+gzfHdQunw9VUQ1P0cTiqha+WfMCeYby4awmEMiAJJx2J4xj/jU4q9B8tW9xbQBZ&#xA;4njPootCp6iaZiPucYqnXqL4H/gT/TFXeovgf+BP9MVd6i+B/wCBP9MVd6i+B/4E/wBMVd6i+B/4&#xA;E/0xVJfMtvcXMBWCJ5D6LrQKepmhYD7kOKvNH8qeZDpeqRDTpvUmvWliXjuyeoh5D6Bir0TyfY3l&#xA;r9b+swtFz9PhyFK05V/XiqZa1oGn6xHCLn1Yp7VzLaXdvI8M8LlSpKSIQd1NGU1Vu4OKqXlryton&#xA;lrT/AKhpFv6FuSGerM7MVRY1qWJ2VEVVUbKoAUACmKptiqkLu1N01mJozdpGsz24YeoI2JVXKV5c&#xA;SykA+xxVVxV2KuxV2KuxV455p/JDVL3X7jVdAls9Hlu/M1prFzd2jy2V22npYJbXkInto1kWSaVp&#xA;n2eh5klqscVXaB+W/wCb+m33l9p/NIubGyvFudYjnvb+4eWM2dlHMsZkHxg3EFzxjlPBVl5ABwOK&#xA;q7yv5H/Mez85aNqd87DS4JZPr6vqEkzcxBdJLMtqAkCR3c8qS8ayPWjMU48MVev4q7FXYq7FXYq7&#xA;FUJp+saTqXr/AKOvbe9+rSNBc/V5Ul9OVDRo34E8WUjdTviqLxV2KuxV2KuxV2KvJPO/lX8yo/Nt&#xA;/rXlGe/Km3VrKFtSdrX6y2n6qktLO5ma2A+smwoGi4g7gfbxVC20f/ORlpr2m27OdR0Q6lEdQvZm&#xA;0uOZbJb6eNwUijTlG9jHFKeAEgkkHE0VkxVFW9z+av8AjKyLpqJ0Zr+5jlDJbraqV1O4ALU5XDRN&#xA;pZHpsQkQZU+3LJ8Cr1vFXYq7FXYq7FXYq7FXnXknyf5u03zXFfa5J9aa2sLy3n1b67Nc/XZLq4tn&#xA;jb6vMF+qektq/wC5iBjXn8LElqKvRcVdirsVdirsVQOt6vb6Ppc+pXCs0FsFaQJQtxLBSRWnSuKp&#xA;Bc/mb5etp3t5o7hLhJFheErHyErhiIz8ezVQr7npXfFWSaZfxajp1rfxKUiuokmRWKlgrgMAShde&#xA;/YnFUTirsVdirsVdiqSec9L1vVPL09lot39Tv3eFhJ6slvzijmR5ofXhDSw+tGrR+ogLJXkNxirE&#xA;vyh8h695Tm1ZdUWNUmVEhaKZrhZWN9f3rSmSQLKxCahHCzSKGJjJ6UOKvSMVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVWKoIJJNanufE++Kt+mvif8Agj/XFUpu/MekW2t2uhgzT6pd&#xA;hnWCBJZBHGgBaSaQfuolHIU5sC1fhBxVNODH/J+bMf4jFUu1a+g0i1kvZY2aMyQrL6I+ItNIsAdu&#xA;TpXjVa71oNq4qmHGQdRzHszA/cT/ABxVtDGxoCwYdVJYH7q4qu9NfE/8Ef64q0VCstCdzQ1JPY+O&#xA;Kr8VdirsVdiqS+arXzBc2louhz/V7pLuJ5ZGICeiKh+akHmu9eIpXxxVjnkrR/zOsr4S+aNUiurE&#xA;27RmCORZGEr3CtF8Qt7ckxxc1Z+XxVX4aryKrO/TXxP/AAR/rirvTXxP/BH+uKu9NfE/8Ef64q70&#xA;18T/AMEf64q7018T/wAEf64q7018T/wR/rirvTXxP/BH+uKu9NfE/wDBH+uKu9NfE/8ABH+uKu9N&#xA;fE/8Ef64q0opIwBNKDqSfHxxVfirsVdirsVdirsVWx/ZPzb9ZxVj3mW88xXWmXw8tokk9oCf3jNH&#xA;9ZkiP7y0ikFPTLAFDNvwY7AkHiq8V1L8x9A/MXSBZeXbGWB7ezubeXTtQtbhre01CSWENLM0EF4j&#xA;SiH1vQlZG4ybuoLCqr0r8iNP1yw/L6zttWtp7NkWBbe1uS5kRUs7dJzxkCsoe7SZwp/m2+GmKs4v&#xA;9M03UontNRtIb21bgzQXEayxlkYspKuGFVYVGKovFXmnnH859IsfNFr5I0Kym1jzneyiG3tWSS3t&#xA;4K1LzyzuoqkaqzN6XKoFKjFXolu06KkNyyvNxH75V4K5A+KiktxPtU4qqv8AaT5/wOKrsVdirsVS&#xA;Hz3quo6T5Q1XUNNhuLjUYIGNnBZwvcTvMfhRY40iuDUsacjGyr9pgVBxVj35PeY9X8xaRe6pdyau&#xA;9i8saaeddt7W3nkX0UkeaIWttZo0LNJxQlWrxrUV4qqzuevpinXkn/EhiqpirsVWTTRQQyTTOI4Y&#xA;lLySMaKqqKkknsBirxPzV5p836us+q2luTp0S272OmNfXOnvLHeyNHaiNbZDLPdzlOaozrGgK/aJ&#xA;biqzPyD5m1T1o9H1oyO8/wBZ/RlzMwkkL2MzW93aSSKqCV4ZIyUk4j1E+IgEHFWeYq7FXYq7FXYq&#xA;tFfVb5L+s4quxV2KuxV2KuxV2KoHUJZhbpbwN6dxdyGGOQUqgPJncVruqKxXbrTFUXBBDbwRwQqE&#xA;iiUJGg6BVFAMVYwfJFto8s+p+VIo7PVZZ5rq7hYkQXpnkaaSKegbj8bsY5AKxk7AqWVlU70XWrTV&#xA;rQzQh4pYnMN3aTALNbzKAWilUE0YVBBBIYEMpKkEqo0f3jfIfrOKpH5j8xz2c8OkaRCt75ivVLWt&#xA;qxIihiB4tdXTLukKH/ZO3wrv0VY7q/lbTfLGnyebTwvvNlrHJG/mC9GytfyQxS3EqqQEgt0QMI1I&#xA;CRhlB3JKqW+UNe83L5w1HQta1oaxENUurC0U28MEsUMFhbX8V0DCqAqpuvRk5VqzJSm4Kr01JDIk&#xA;bEUbkQw8GAII+8Yqq4q7FXYqkXnqGKTyhqxlubq0jgt3uWuLF50uF+rj1vg+qyW8zV4UKpIvIbV3&#xA;xVh35B3lreeV7t7C/a6063ufqkMFJzHC8Ma81iln1HWg6UZQPSn9MU2XcsVXpc32B/rJ/wASGKsf&#xA;1zzpbafbXE9tA13FbMsc068vSErsI0hTgsjyys7BQkak1NMVSHyj+a0mvzXML6Pc21xZswubOWOS&#xA;G7RUKhmEEqrzC+onIK3IBlJWjLVVMfN19b65aaVoNjN6kPmGcpdSISCLG3HqXYr1UsAsRr/Piqr5&#xA;t/LTy55nninvVMckSojAQ2lxG6xcvS5Q3kF1CGj9VwjqgdQzANQ4qp+ZfLMOn+UY/wBCxN9c0CT9&#xA;J2HJmeSSaNmlnEkjEs7XIeQOxNWLVOKoXUvzIlvrqLR/JFmmua3NBFczySuYrGwhuEEkMl7Modgz&#xA;q3JIUBdhvsN8Ved2H5g/nPPqjyC80/8ARyW9jfiaWxKwNaanLLDazeklwZ0iLQEsxkLqpDFPtKqr&#xA;1Dyp57fUNTl8u+YLE6H5st4/WbT2cSw3MAPH6zZT0UTRV6igdDsyjuqw3zp5g8weZ2dNIuZ7HyzH&#xA;etptvcWplEuoXMMUs10wMLxTGCJbd4o0idTNLtyC4qxD8svMvnbT7ObWIFuJLSz+syap5Yl+uFlt&#xA;rS7e3maEX7PKs8ShXHAhH+OMorpuq+hNOv7PUbWG/spluLO7hjmtp03V45AWVh7EHFUVirsVdirs&#xA;VdiqBv8AXdD065tbXUNRtrO6viVsoLiaOKSZgVBESuQXILqPh8Rirca89U5dPq8LAf5Xryf8a+h+&#xA;OKo3FXYqkmtaLdm7Gs6MUi1mJAkkbkrDeQqSRBOQDSlSY5ACYye6llZVK7jz4lyEsNCtzceZ7gGM&#xA;6VcfAbJkNJJb/iW9OOPkKUJ9Wo9MsG5YqnHlzy5Bo0EzvM17ql6wl1PU5QBLcSgUGw2SNB8Mca/C&#xA;i7DuSqmskccsbRyKHjcFXRgCrKRQgg9QcVS3R/K3lvRXeTSdMtrGR0WJngjVG9NN1jqBXgtdl6DF&#xA;Uavw3Dr4sH+hkK/rQ4qr4q7FXYqxz8yJ7i38g+YLq3vp9NmtLCe5S8tmjSVPQQykK8scypzCcS3A&#xA;kA1FDQ4qkn5O67qes6NqtzqN+upyxalJBHeRanp+qxPHHDFxaKTTraxjiRq19N4hJvyb7QxVkXnb&#xA;U7PS/K1/qF99Y+o2yq921pT1lhEi+o68iNlWpbvStN8Vb1nQEv8AQIrLSZ0sZLd4LnTbhUEsSSQO&#xA;ssZZKjmjUo29SDsa74qx38vPy81Py7dNealeJNIBdiKGIJx9S+lhluZWMUNnEOZtY+KRwKFPIkuz&#xA;E4q4Sej531jW7W2RrHSFisbzgCWLTotxdSrQ05IvochTeh74qzuORJI1kjYPG4DIwNQQRUEHFWK/&#xA;mF5o1HSbOz0rQkSfzTr8ps9Gik3jjIXlPdzD/fNtH8beJ4r+1iqC/KTRbXy9omoeW4wpudJv5orm&#xA;4ChJLj1VWaKeUD9poZFX6KdsVXWn5WWFvqIlGo3D6aqWsKaeQg/0awme4tLV5acjBDLMxVQAxFFd&#xA;2T4cVQf51aXFqWg6ba2hMPmi41GC38t38RKTW1xIazSh1+IRi2SQyjoyinhiqv8Al4ND1/yDD5fu&#xA;9NWyl0Urpeq6OGIa1u7Mr8SSIVf4iFmilU1IIatcVZLY6PoXl23u7yIOnNQ93eXU811OyRg8Vaa4&#xA;eWUqtTxXlQVNBviqUfl1o9/pFjd2jw/V9JaZp9HtmcM8UFxI83pMoVeAjL0VeRoNu2KsuxV2KuxV&#xA;2KuIqCPHbFWHeUfyr8s+WXuHt2m1A3CW0f8AuQ9Gf0/qjmWP0T6amJRJRxEhEaMoMaJvVVPZ47k6&#xA;hxt5Io5JkqDLGZRwgkb1AFDxUJ9ZaGp+WKrfLNnqdvpXpasRLdi4uWV2ZZG9B7iRrcMwVRVYWRTt&#xA;1GKpp6Uf8g+4YqkPmPXms54dI0i3jvfMV6pa1tW2ihiB4tdXTLukKH/ZO3wrv0VSy38jT6Sz6rpd&#xA;ybrzO9JNTuro8Y9R61hmVQwiRRtAUH7ntyBcOqyLRdVsNWtDNDGYpYnMN3aTKFmt5lALRSqK0YVB&#xA;BBIYEMpKkEqo/wBKP+QfcMVQ2pxTfo27+pqRd+jJ9XMYj5+pxPDj6v7uvLpz+Hx2xVT04zPHHJcR&#xA;+lc8YlnjPGof0ubAlCy7F6bGmKo/FXYq7FUo843dxZ+Utau7a+TS7m3sbmWHUpU9RLd0iZlmZOMn&#xA;IRkciOLV8D0xViX5XSefrya41HXNXuLvTmM0I0++tHtpoXVbcwtG8mmaJJKGrPzYw8fsKtSrkqs7&#xA;1O0t7ywmtLhBJb3I9KaNtwyOeLKfmDirGfyrubn/AAmmkXjmS+8u3E2i3Lk1LfU24wuT/wAWW5jf&#xA;6cVZeSACSaAdTirF/wAu0E3lr9JuPj1q5udRcEdVuZWMQ37CEIMVRukMNMvZtGkNLcKbnTWbYeiT&#xA;+8iqf99Mf+BIxVjX5dofMmtan+YdwOUF9y07ywp/Y0q3ehmX3vJ1aX/UCYqnNuBY/mNdxg0j1rTY&#xA;7gA95rGUxOR847iP7sVZPirCkH6Z/Nh2PxWnlPTwig9Pr2qHkxHvHawr/wAjMVQfmtR5S876f5xi&#xA;/d6TrTQ6N5oHRFZmK6det2Hpyv6Dsf2XH8uKsmvh+ldZTTutjYcbi+8HlO8MR9h9tv8AY4qnIr6r&#xA;fJf1nFV2KuxV2KuxV2KuxVBXqyLEl1EpaS2dnKKKl4ySJFHc/CeQHdgMVeK+cpYrn8xbSTWLnULe&#xA;G1uLmZriG7eBGsZLJlsl0uGK5V7iUz8Wb07SRjIaeoqpwZVn9h54vZtC0vTrQQ6l52uIFhvbRW/c&#xA;211ABFeS3TJ/dxQzhloN3b4U33CrIfLnlyDRoJneZr3VL1hLqepygCW4lAoNhskaD4Y41+FF2Hcl&#xA;VNR/eN8h+s4qk2taLdm7Gs6MUi1mJAkkbkrDeQqSRBOQDSlSY5ACYye6llZVfpXmzRdRmgtFm+r6&#xA;nMJuWmT0S5je29P10dASOUfrxnYkMrBlJUg4qms0qxRNI1SF6AdSTsAPcnYYqpwxtHHGHp6hYtJT&#xA;pyYEmle2+2Kq+KuxV2KsS/Ne0t7/AMgavpcyXMv6UjXT4Y7N1SYzXciwRU53Fijrzcc0aZQ61U1B&#xA;oVUk/IXy3aaF5LlSz0saXaX90b2CNU4LKkkMSrKAdT1v7QSn98vT7A+0yr0Sc0jB/wApP+JDFWIa&#xA;MG0780vMNj/ujWbGz1aLwE0JeyuNvEokGKpz52v20/yfrV4n97DZTmKnX1DGQn/DEYqjtG09dO0e&#xA;x09Nks7eK3Ue0SBB+rFWGfnLNbt5ettLDTJqGtTS6fZva0EyJLaTNcuvstujk+9MVZtplvY22m2l&#xA;tp8axWEEMcdpEmyrCihY1X2CgUxVIvNI+r+Y/KuoU2F5NYyHvwu7WRh/yUgTFWTYqw78rx9a0nVN&#xA;ebdte1W9vEbqfQjk+qW2/h6FshHzxVOPOemaXqnlLWNO1VS2nXVpNFcgfa4sh3X/ACgd198VSr8r&#xA;tQF75ZkMvqfpK2vbuz1Uz/3pubaZomZ/9ZFVh7EYqywf3rfJf1nFV2KuxV2KuxV2KuxVbH9k/Nv1&#xA;nFUi8wHX9N0m8bQIop7iVSLRJyRHbzSGnqvxBZoVrzZVHLag2PwqsX/KL8ndO8hxXN6mtXus6nqv&#xA;73ULmSUraySOeTSJAh47sxIZix3O+KvR8VWj+8b5D9ZxV5B518zeYhqrSWvmC/0c22pvazLBYrc6&#xA;bZWUEaSNPqTC3mkX1w3KNmkRKN4IzYqs1n8q9S1DXNE/NTR9SuNN83QQw3E+j6jNJLZOs0f76yXk&#xA;GlgDeoyfCGAPRMVes2wmufTubiMwAANFbNQspI3MlCRyHQAdP1Kol/tJ8/4HFV2KuxV2KoTVdH0n&#xA;WLGTT9WsrfUbCXiZbS7iSeFirBl5RyBlNGAI264qpaJ5d8v6DavaaHplppVrI5lkt7KCO3jaQgKX&#xA;KRKqluKgV9sVbvtY0q3vrTTJ7uKLUL1q2lqzASSiM8n4L1NFBPyB8DirHtapB+aflicbG703VrR+&#xA;m9Hs51/5NtiqL/Mffyjcx/7+ns4KePrXkMdD7fFv7YqyXFWEauiXv5weXraUB4tO0XVL1Vp0mnnt&#xA;LZSf+ebSgfTirIfKhP6AtYya+h6kAr1pDI0YH0BMVQHnwUs9IlH2o9Z02n/PS6SI/hIcVT3UrsWe&#xA;nXV2aUtoZJTUEj4FLdB8sVY/+VtobT8tvK8JBDjS7R5AaV5yQq79P8pjiqZeZRzs7a3P2Lm8to5B&#xA;4r6ocj6eOKse8mL9V/MDz7YoOMElzp+oqg+yHurJYpD82a0qcVZqP7xvkP1nFV2KuxV2KuxV2Kux&#xA;VYjoAQWANW2J9zirfqx/zj7xiqFe1hVzJbTfV5GPJwpBjYk1PJDtv3Io3viqHu01OVrcpd+isEqy&#xA;Sm2aIGdB1idJ4pqKe/B1bwYYqoeX7eXStLt7B4/U+rp6avEsUMYUMxULH60nEKpA+1irr7QNJ1K+&#xA;hv77TNNlv7YD6tezxJczRgHkAjMqMlDvs2KplHBbpIJXk9aYVpJIQSK7fCBRV/2I374qr+rH/OPv&#xA;GKtF1Zk4kHfsfY4qvxV2KuxV2KuxV5v+Z36Aa90+7nW6g1GJriCG/t7iaxniMVnPcq1uHieKct6b&#xA;Q1FePq7bmmKsS8laCvnTUeV3q3mWxuNMghube5OqJKyPdwgyKjfVY6Di/EOhIejeGKsyu/yct7mB&#xA;ornzf5nmiqr8Hv1kHKNg6MFMLDkrKGXbqMVee+ZornR9XNhb6/5zvI/q63AnbUxAwq/Dg8LWTPG0&#xA;hqsAanqPt8K/Fir0K0/Jq3ttT/Sn+LvMk1/6BtRcTXsLuIWcOUBNv0LKDiqbL5DW1tiIte1orGGf&#xA;hHcoCzGrMQqxqOTNU/PFUj8qaBF5x8rWup3uoazbpcSM62kt4JVBt5j6Uis0MZ6xhxVQQfliqezf&#xA;l3DPDJBNr+tSQyqUkja8qrKwoVIKbgjFWI+cZz5Nn03S7OfVrm3mgf0it+kEVulutAXVLeVkgQUD&#xA;ycfhqKBugVZTpvlQatpNhqEurazbvcRRXSQTXCGSF5EDcSDHs6cqHFUJc/lRa/XrvVYvMuuW17cx&#xA;xpdTRXkUPqLAG9P1GEH7PM79sVYf5U/MptJkt7eGLU9dGqJpshmvb8XXoPdxPJLEjLbxj90R6Y5U&#xA;9ST4BxIair2zFXYq7FXYq7FXYq7FXYq7FXYqkNl5y0+884aj5Ujt7hb/AEuCO6uZmEXoGKcL6RUi&#xA;QueZLrThsY2rQFC6qfYq7FXYq7FXYq7FXYq7FXYq7FWE+d/NXm7TPNflnR/L9jBeQ6kt1c6s0w+K&#xA;O1s5rRJWRzNAEpHdO1QkpLBRwoSyqvL7T/nKbVNUntY9P8vQwFI3vdThea6uJltodPn1AxIptrVB&#xA;LOlvSFw7r3ZcVTK1/wCcmbm4t7i/Xyyn6Jtreed7367MSRbxWbM4i+pep6JfU4vjpy9MM/Co4FVG&#xA;+X/+chLnWJ725XR4YLCx8u32vSaeLky6kZLT6syRyx+miwJKtwxjb4/UXi44/ZKqSQf85N6zBMzX&#xA;2jWFxZLYy3815bXU4ghjj1qfSg4kSC5eeLiIXZkjU8Q7hWqqBVG6n/zkZrEnlhdc0jSNPhDCQNZ3&#xA;t873kLDSrm/iNxaxwp6aytan0f3v75enCtVVTLSP+chZNQ8zWmjjQEWCeWNLi6S9MjW6z3lvYpHJ&#xA;ELdQLqOa8T14C49Nd+TVpiqD82/85FXXl7WILWTS7eS19a++ssZZPVMNrLqNtH6aRpK1Fk0wPcyc&#xA;T6avx4MfixVDwf8AOUaXEdzJbeXBN6FtDcRxreP6spluLGDkkRtfU9F/0jWGQryfgwKKcVWWf/OV&#xA;lhdxEwaJGzfVJbtZnvXgtXEbsh4T3FrB8C8OLllVubKiJJWuKvWfIXmh/NHlmDWHjjjaWa6hpCXM&#xA;bC2uZLcOvqKjjkIuXFlBU7HcYqyHFXYq7FXYq7FXYq7FXYq7FXYqwrXP+Vc/4z0T1vqf+K/0lJ9X&#xA;+rfVvrv1j9HN6n1iv77h9U9Pl3p6X7NMVZrirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;qFsP0Zxn/R/ocfXk+s/V+FPrHL97z4f7s5farvXriqT2f+F/8cX3p/Wf8S/VU9X6x9c9H6rVK/VP&#xA;W/0Xjy4er9X/AGqc/ixVkWKoXTP0Z9TX9Geh9S5Pw+rcPS5c29SnD4a+py5e9e+KorFXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>iText 5.0.5 (c) 1T3XT BVBA</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>595.000000</stDim:w>
            <stDim:h>842.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:01801174072068119500AD35E42F86F4</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:01801174072068119500AD35E42F86F4</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:01801174072068119500AD35E42F86F4</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068119500AD35E42F86F4</stEvt:instanceID>
                  <stEvt:when>2012-04-27T15:25:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -248.77 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 248.77 li
387.469 248.77 li
387.469 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.53502 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
216.224 135.58 mo
344.633 135.58 li
344.633 221.18 li
216.224 221.18 li
216.224 135.58 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.193668 .150057 .155337 3.0518e-05 cmyk
@
216.224 135.58 mo
216.224 221.18 li
@
308.503 229.339 mo
308.503 228.78 li
308.503 228.78 309.144 229 309.593 229 cv
309.593 229 310.213 229 310.574 228.47 cv
310.574 228.47 310.923 227.939 310.923 226.99 cv
310.923 226.99 310.414 227.62 309.763 227.62 cv
309.763 227.62 309.124 227.62 308.684 227.149 cv
308.684 227.149 308.244 226.68 308.244 226.009 cv
308.244 226.009 308.244 225.24 308.713 224.729 cv
308.713 224.729 309.184 224.22 309.904 224.22 cv
309.904 224.22 310.713 224.22 311.194 224.879 cv
311.194 224.879 311.664 225.54 311.664 226.68 cv
311.664 226.68 311.664 227.979 311.083 228.74 cv
311.083 228.74 310.513 229.5 309.534 229.5 cv
309.534 229.5 309.133 229.5 308.503 229.339 cv
cp
308.914 225.879 mo
308.914 225.879 308.914 226.459 309.173 226.799 cv
309.173 226.799 309.434 227.129 309.883 227.129 cv
309.883 227.129 310.314 227.129 310.614 226.85 cv
310.614 226.85 310.914 226.56 310.914 226.149 cv
310.914 226.149 310.914 225.509 310.624 225.109 cv
310.624 225.109 310.333 224.72 309.854 224.72 cv
309.854 224.72 309.423 224.72 309.164 225.03 cv
309.164 225.03 308.914 225.339 308.914 225.879 cv
cp
314.173 229.5 mo
314.173 229.5 313.394 229.5 312.914 228.77 cv
312.914 228.77 312.434 228.04 312.434 226.859 cv
312.434 226.859 312.434 225.669 312.923 224.95 cv
312.923 224.95 313.404 224.22 314.194 224.22 cv
314.194 224.22 314.984 224.22 315.473 224.95 cv
315.473 224.95 315.954 225.669 315.954 226.85 cv
315.954 226.85 315.954 228.06 315.473 228.78 cv
315.473 228.78 314.984 229.5 314.173 229.5 cv
cp
314.184 229 mo
314.184 229 315.244 229 315.244 226.839 cv
315.244 226.839 315.244 224.729 314.194 224.729 cv
314.194 224.729 313.154 224.729 313.154 226.859 cv
313.154 226.859 313.154 229 314.184 229 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
241.874 227.62 mo
241.874 227.109 li
244.894 227.109 li
244.894 227.62 li
241.874 227.62 li
cp
246.444 229.339 mo
246.444 228.78 li
246.444 228.78 247.083 229 247.534 229 cv
247.534 229 248.154 229 248.503 228.47 cv
248.503 228.47 248.864 227.939 248.864 226.99 cv
248.864 226.99 248.354 227.62 247.704 227.62 cv
247.704 227.62 247.063 227.62 246.624 227.149 cv
246.624 227.149 246.184 226.68 246.184 226.009 cv
246.184 226.009 246.184 225.24 246.654 224.729 cv
246.654 224.729 247.124 224.22 247.833 224.22 cv
247.833 224.22 248.654 224.22 249.124 224.879 cv
249.124 224.879 249.604 225.54 249.604 226.68 cv
249.604 226.68 249.604 227.979 249.023 228.74 cv
249.023 228.74 248.444 229.5 247.463 229.5 cv
247.463 229.5 247.074 229.5 246.444 229.339 cv
cp
246.854 225.879 mo
246.854 225.879 246.854 226.459 247.114 226.799 cv
247.114 226.799 247.374 227.129 247.824 227.129 cv
247.824 227.129 248.244 227.129 248.543 226.85 cv
248.543 226.85 248.854 226.56 248.854 226.149 cv
248.854 226.149 248.854 225.509 248.554 225.109 cv
248.554 225.109 248.264 224.72 247.793 224.72 cv
247.793 224.72 247.354 224.72 247.104 225.03 cv
247.104 225.03 246.854 225.339 246.854 225.879 cv
cp
252.114 229.5 mo
252.114 229.5 251.333 229.5 250.854 228.77 cv
250.854 228.77 250.374 228.04 250.374 226.859 cv
250.374 226.859 250.374 225.669 250.864 224.95 cv
250.864 224.95 251.344 224.22 252.134 224.22 cv
252.134 224.22 252.924 224.22 253.414 224.95 cv
253.414 224.95 253.894 225.669 253.894 226.85 cv
253.894 226.85 253.894 228.06 253.414 228.78 cv
253.414 228.78 252.924 229.5 252.114 229.5 cv
cp
252.124 229 mo
252.124 229 253.184 229 253.184 226.839 cv
253.184 226.839 253.184 224.729 252.134 224.729 cv
252.134 224.729 251.083 224.729 251.083 226.859 cv
251.083 226.859 251.083 229 252.124 229 cv
cp
f
338.723 229.379 mo
338.723 228.87 li
339.723 228.87 li
339.723 224.91 li
338.723 225.16 li
338.723 224.64 li
340.404 224.22 li
340.404 228.87 li
341.404 228.87 li
341.404 229.379 li
338.723 229.379 li
cp
343.553 226.64 mo
343.553 226.64 342.824 226.129 342.824 225.5 cv
342.824 225.5 342.824 224.93 343.234 224.58 cv
343.234 224.58 343.654 224.22 344.324 224.22 cv
344.324 224.22 344.944 224.22 345.333 224.52 cv
345.333 224.52 345.723 224.82 345.723 225.31 cv
345.723 225.31 345.723 226.04 344.784 226.64 cv
344.784 226.64 345.923 227.2 345.923 228.07 cv
345.923 228.07 345.923 228.709 345.444 229.1 cv
345.444 229.1 344.963 229.5 344.213 229.5 cv
344.213 229.5 343.473 229.5 343.013 229.129 cv
343.013 229.129 342.553 228.75 342.553 228.14 cv
342.553 228.14 342.553 227.24 343.553 226.64 cv
cp
344.404 226.43 mo
344.404 226.43 345.114 225.97 345.114 225.399 cv
345.114 225.399 345.114 225.1 344.874 224.91 cv
344.874 224.91 344.644 224.729 344.263 224.729 cv
344.263 224.729 343.894 224.729 343.654 224.91 cv
343.654 224.91 343.423 225.089 343.423 225.379 cv
343.423 225.379 343.423 225.66 343.633 225.879 cv
343.633 225.879 343.843 226.1 344.404 226.43 cv
cp
343.923 226.91 mo
343.923 226.91 343.513 227.22 343.374 227.45 cv
343.374 227.45 343.223 227.689 343.223 228.03 cv
343.223 228.03 343.223 228.47 343.503 228.729 cv
343.503 228.729 343.784 229 344.244 229 cv
344.244 229 344.673 229 344.954 228.77 cv
344.954 228.77 345.234 228.54 345.234 228.18 cv
345.234 228.18 345.234 227.89 345.064 227.689 cv
345.064 227.689 344.883 227.479 344.394 227.189 cv
343.923 226.91 li
cp
348.414 229.5 mo
348.414 229.5 347.644 229.5 347.164 228.77 cv
347.164 228.77 346.673 228.04 346.673 226.859 cv
346.673 226.859 346.673 225.669 347.164 224.95 cv
347.164 224.95 347.644 224.22 348.434 224.22 cv
348.434 224.22 349.234 224.22 349.713 224.95 cv
349.713 224.95 350.194 225.669 350.194 226.85 cv
350.194 226.85 350.194 228.06 349.713 228.78 cv
349.713 228.78 349.234 229.5 348.414 229.5 cv
cp
348.423 229 mo
348.423 229 349.484 229 349.484 226.839 cv
349.484 226.839 349.484 224.729 348.434 224.729 cv
348.434 224.729 347.394 224.729 347.394 226.859 cv
347.394 226.859 347.394 229 348.423 229 cv
cp
f
279.934 229.5 mo
279.934 229.5 279.154 229.5 278.673 228.77 cv
278.673 228.77 278.194 228.04 278.194 226.859 cv
278.194 226.859 278.194 225.669 278.684 224.95 cv
278.684 224.95 279.164 224.22 279.954 224.22 cv
279.954 224.22 280.744 224.22 281.234 224.95 cv
281.234 224.95 281.713 225.669 281.713 226.85 cv
281.713 226.85 281.713 228.06 281.234 228.78 cv
281.234 228.78 280.744 229.5 279.934 229.5 cv
cp
279.944 229 mo
279.944 229 281.003 229 281.003 226.839 cv
281.003 226.839 281.003 224.729 279.954 224.729 cv
279.954 224.729 278.914 224.729 278.914 226.859 cv
278.914 226.859 278.914 229 279.944 229 cv
cp
f
208.174 227.62 mo
208.174 227.109 li
211.184 227.109 li
211.184 227.62 li
208.174 227.62 li
cp
212.994 229.379 mo
212.994 228.87 li
213.994 228.87 li
213.994 224.91 li
212.994 225.16 li
212.994 224.64 li
214.674 224.22 li
214.674 228.87 li
215.674 228.87 li
215.674 229.379 li
212.994 229.379 li
cp
217.824 226.64 mo
217.824 226.64 217.094 226.129 217.094 225.5 cv
217.094 225.5 217.094 224.93 217.503 224.58 cv
217.503 224.58 217.924 224.22 218.594 224.22 cv
218.594 224.22 219.224 224.22 219.604 224.52 cv
219.604 224.52 219.994 224.82 219.994 225.31 cv
219.994 225.31 219.994 226.04 219.054 226.64 cv
219.054 226.64 220.194 227.2 220.194 228.07 cv
220.194 228.07 220.194 228.709 219.713 229.1 cv
219.713 229.1 219.233 229.5 218.483 229.5 cv
218.483 229.5 217.744 229.5 217.284 229.129 cv
217.284 229.129 216.824 228.75 216.824 228.14 cv
216.824 228.14 216.824 227.24 217.824 226.64 cv
cp
218.684 226.43 mo
218.684 226.43 219.384 225.97 219.384 225.399 cv
219.384 225.399 219.384 225.1 219.144 224.91 cv
219.144 224.91 218.914 224.729 218.534 224.729 cv
218.534 224.729 218.164 224.729 217.924 224.91 cv
217.924 224.91 217.694 225.089 217.694 225.379 cv
217.694 225.379 217.694 225.66 217.904 225.879 cv
217.904 225.879 218.114 226.1 218.684 226.43 cv
cp
218.194 226.91 mo
218.194 226.91 217.784 227.22 217.644 227.45 cv
217.644 227.45 217.494 227.689 217.494 228.03 cv
217.494 228.03 217.494 228.47 217.773 228.729 cv
217.773 228.729 218.054 229 218.514 229 cv
218.514 229 218.944 229 219.224 228.77 cv
219.224 228.77 219.503 228.54 219.503 228.18 cv
219.503 228.18 219.503 227.89 219.333 227.689 cv
219.333 227.689 219.154 227.479 218.664 227.189 cv
218.194 226.91 li
cp
222.684 229.5 mo
222.684 229.5 221.914 229.5 221.434 228.77 cv
221.434 228.77 220.944 228.04 220.944 226.859 cv
220.944 226.859 220.944 225.669 221.434 224.95 cv
221.434 224.95 221.914 224.22 222.704 224.22 cv
222.704 224.22 223.503 224.22 223.983 224.95 cv
223.983 224.95 224.463 225.669 224.463 226.85 cv
224.463 226.85 224.463 228.06 223.983 228.78 cv
223.983 228.78 223.503 229.5 222.684 229.5 cv
cp
222.694 229 mo
222.694 229 223.753 229 223.753 226.839 cv
223.753 226.839 223.753 224.729 222.704 224.729 cv
222.704 224.729 221.664 224.729 221.664 226.859 cv
221.664 226.859 221.664 229 222.694 229 cv
cp
f
216.224 221.18 mo
344.633 221.18 li
.193668 .150057 .155337 3.0518e-05 cmyk
@
216.224 204.06 mo
217.833 204.06 li
@
344.633 204.06 mo
343.024 204.06 li
@
216.224 186.939 mo
217.833 186.939 li
@
344.633 186.939 mo
343.024 186.939 li
@
216.224 169.82 mo
217.833 169.82 li
@
344.633 169.82 mo
343.024 169.82 li
@
216.224 152.7 mo
217.833 152.7 li
@
344.633 152.7 mo
343.024 152.7 li
@
216.224 135.58 mo
217.833 135.58 li
@
344.633 135.58 mo
343.024 135.58 li
@
201.644 140.93 mo
201.644 140.43 li
202.644 140.43 li
202.644 136.459 li
201.644 136.709 li
201.644 136.2 li
203.324 135.78 li
203.324 140.43 li
204.324 140.43 li
204.324 140.93 li
201.644 140.93 li
cp
207.054 141.06 mo
207.054 141.06 206.284 141.06 205.804 140.32 cv
205.804 140.32 205.313 139.589 205.313 138.41 cv
205.313 138.41 205.313 137.229 205.804 136.5 cv
205.804 136.5 206.284 135.78 207.074 135.78 cv
207.074 135.78 207.874 135.78 208.354 136.5 cv
208.354 136.5 208.833 137.229 208.833 138.399 cv
208.833 138.399 208.833 139.609 208.354 140.339 cv
208.354 140.339 207.874 141.06 207.054 141.06 cv
cp
207.063 140.549 mo
207.063 140.549 208.124 140.549 208.124 138.39 cv
208.124 138.39 208.124 136.28 207.074 136.28 cv
207.074 136.28 206.034 136.28 206.034 138.41 cv
206.034 138.41 206.034 140.549 207.063 140.549 cv
cp
211.333 141.06 mo
211.333 141.06 210.563 141.06 210.083 140.32 cv
210.083 140.32 209.594 139.589 209.594 138.41 cv
209.594 138.41 209.594 137.229 210.083 136.5 cv
210.083 136.5 210.563 135.78 211.354 135.78 cv
211.354 135.78 212.154 135.78 212.634 136.5 cv
212.634 136.5 213.114 137.229 213.114 138.399 cv
213.114 138.399 213.114 139.609 212.634 140.339 cv
212.634 140.339 212.154 141.06 211.333 141.06 cv
cp
211.344 140.549 mo
211.344 140.549 212.404 140.549 212.404 138.39 cv
212.404 138.39 212.404 136.28 211.354 136.28 cv
211.354 136.28 210.313 136.28 210.313 138.41 cv
210.313 138.41 210.313 140.549 211.344 140.549 cv
cp
.75021 .679683 .670222 .90164 cmyk
f
213.054 221.31 mo
213.054 221.31 212.284 221.31 211.804 220.58 cv
211.804 220.58 211.313 219.85 211.313 218.669 cv
211.313 218.669 211.313 217.479 211.804 216.759 cv
211.804 216.759 212.284 216.03 213.074 216.03 cv
213.074 216.03 213.874 216.03 214.354 216.759 cv
214.354 216.759 214.833 217.479 214.833 218.66 cv
214.833 218.66 214.833 219.87 214.354 220.589 cv
214.354 220.589 213.874 221.31 213.054 221.31 cv
cp
213.063 220.81 mo
213.063 220.81 214.124 220.81 214.124 218.649 cv
214.124 218.649 214.124 216.53 213.074 216.53 cv
213.074 216.53 212.034 216.53 212.034 218.669 cv
212.034 218.669 212.034 220.81 213.063 220.81 cv
cp
f
216.764 106.29 mo
345.164 106.29 li
.193668 .150057 .155337 3.0518e-05 cmyk
@
gsave
36.4634 124.879 mo
143.463 124.879 li
143.463 231.879 li
36.4634 231.879 li
36.4634 124.879 li
cp
clp
gsave
-13.2964 -25.4604 mo
-13.2964 774.54 li
536.704 774.54 li
536.704 -25.4604 li
-13.2964 -25.4604 li
cp
clp
gsave
36.4634 124.879 mo
36.4634 231.879 li
143.463 231.879 li
143.463 124.879 li
36.4634 124.879 li
cp
clp
81.8037 133.07 mo
81.8037 129.379 li
82.4736 129.379 li
82.4736 133.07 li
81.8037 133.07 li
cp
81.8037 128.709 mo
81.8037 128.049 li
82.4736 128.049 li
82.4736 128.709 li
81.8037 128.709 li
cp
83.9438 133.07 mo
83.9438 129.379 li
84.6138 129.379 li
84.6138 130.08 li
84.6138 130.08 85.1436 129.299 85.9136 129.299 cv
85.9136 129.299 86.3936 129.299 86.6738 129.609 cv
86.6738 129.609 86.9634 129.91 86.9634 130.419 cv
86.9634 133.07 li
86.2935 133.07 li
86.2935 130.64 li
86.2935 130.64 86.2935 130.229 86.1738 130.049 cv
86.1738 130.049 86.0537 129.879 85.7734 129.879 cv
85.7734 129.879 85.1538 129.879 84.6138 130.68 cv
84.6138 133.07 li
83.9438 133.07 li
cp
88.2236 134.41 mo
88.2236 129.379 li
88.8936 129.379 li
88.8936 130.08 li
88.8936 130.08 89.3037 129.299 90.1235 129.299 cv
90.1235 129.299 90.7935 129.299 91.1738 129.79 cv
91.1738 129.79 91.5537 130.27 91.5537 131.12 cv
91.5537 131.12 91.5537 132.03 91.1235 132.589 cv
91.1235 132.589 90.6938 133.16 89.9834 133.16 cv
89.9834 133.16 89.3237 133.16 88.8936 132.649 cv
88.8936 134.41 li
88.2236 134.41 li
cp
88.8936 132.189 mo
88.8936 132.189 89.4136 132.649 89.8735 132.649 cv
89.8735 132.649 90.8438 132.649 90.8438 131.18 cv
90.8438 131.18 90.8438 129.89 89.9834 129.89 cv
89.9834 129.89 89.4238 129.89 88.8936 130.49 cv
88.8936 132.189 li
cp
94.8135 133.07 mo
94.8135 132.379 li
94.8135 132.379 94.2734 133.16 93.5137 133.16 cv
93.5137 133.16 93.0337 133.16 92.7437 132.85 cv
92.7437 132.85 92.4634 132.549 92.4634 132.03 cv
92.4634 129.379 li
93.1338 129.379 li
93.1338 131.82 li
93.1338 131.82 93.1338 132.229 93.2534 132.399 cv
93.2534 132.399 93.3735 132.58 93.6538 132.58 cv
93.6538 132.58 94.2637 132.58 94.8135 131.77 cv
94.8135 129.379 li
95.4834 129.379 li
95.4834 133.07 li
94.8135 133.07 li
cp
97.8936 133.16 mo
97.8936 133.16 97.3838 133.16 97.0938 132.859 cv
97.0938 132.859 96.8135 132.57 96.8135 132.049 cv
96.8135 129.89 li
96.3535 129.89 li
96.3535 129.379 li
96.8135 129.379 li
96.8135 128.709 li
97.4834 128.649 li
97.4834 129.379 li
98.4438 129.379 li
98.4438 129.89 li
97.4834 129.89 li
97.4834 131.93 li
97.4834 131.93 97.4834 132.649 98.1035 132.649 cv
98.1035 132.649 98.2334 132.649 98.4238 132.609 cv
98.4238 133.07 li
98.4238 133.07 98.1235 133.16 97.8936 133.16 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
38.6035 135.049 mo
140.793 135.049 li
140.793 229.209 li
38.6035 229.209 li
38.6035 135.049 li
cp
.193668 .150057 .155337 3.0518e-05 cmyk
@
89.9634 138.259 mo
89.9634 226.53 li
@
41.8135 182.129 mo
138.114 182.129 li
@
93.6836 146.45 mo
93.6836 145.939 li
94.6938 145.939 li
94.6938 141.979 li
93.6836 142.229 li
93.6836 141.709 li
95.3638 141.299 li
95.3638 145.939 li
96.3638 145.939 li
96.3638 146.45 li
93.6836 146.45 li
cp
.75021 .679683 .670222 .90164 cmyk
f
131.884 190.32 mo
131.884 189.82 li
132.884 189.82 li
132.884 185.85 li
131.884 186.1 li
131.884 185.58 li
133.554 185.169 li
133.554 189.82 li
134.563 189.82 li
134.563 190.32 li
131.884 190.32 li
cp
f
80.1436 221.77 mo
80.1436 221.27 li
83.1538 221.27 li
83.1538 221.77 li
80.1436 221.77 li
cp
84.9634 223.53 mo
84.9634 223.03 li
85.9736 223.03 li
85.9736 219.06 li
84.9634 219.32 li
84.9634 218.799 li
86.6436 218.379 li
86.6436 223.03 li
87.6436 223.03 li
87.6436 223.53 li
84.9634 223.53 li
cp
f
44.3135 187.56 mo
44.3135 187.06 li
47.3335 187.06 li
47.3335 187.56 li
44.3135 187.56 li
cp
49.1338 189.32 mo
49.1338 188.82 li
50.1436 188.82 li
50.1436 184.85 li
49.1338 185.1 li
49.1338 184.58 li
50.8135 184.169 li
50.8135 188.82 li
51.8237 188.82 li
51.8237 189.32 li
49.1338 189.32 li
cp
f
grestore
grestore
grestore
82.3335 18.0396 mo
82.3335 14.3496 li
83.0034 14.3496 li
83.0034 18.0396 li
82.3335 18.0396 li
cp
82.3335 13.6895 mo
82.3335 13.0195 li
83.0034 13.0195 li
83.0034 13.6895 li
82.3335 13.6895 li
cp
84.4834 18.0396 mo
84.4834 14.3496 li
85.1436 14.3496 li
85.1436 15.0493 li
85.1436 15.0493 85.6738 14.2695 86.4438 14.2695 cv
86.4438 14.2695 86.9238 14.2695 87.2134 14.5796 cv
87.2134 14.5796 87.4937 14.8794 87.4937 15.3896 cv
87.4937 18.0396 li
86.8237 18.0396 li
86.8237 15.6094 li
86.8237 15.6094 86.8237 15.1997 86.7036 15.0298 cv
86.7036 15.0298 86.5835 14.8496 86.3037 14.8496 cv
86.3037 14.8496 85.6938 14.8496 85.1436 15.6597 cv
85.1436 18.0396 li
84.4834 18.0396 li
cp
88.7637 19.3794 mo
88.7637 14.3496 li
89.4238 14.3496 li
89.4238 15.0493 li
89.4238 15.0493 89.8438 14.2695 90.6636 14.2695 cv
90.6636 14.2695 91.3237 14.2695 91.7036 14.7593 cv
91.7036 14.7593 92.0938 15.2397 92.0938 16.0894 cv
92.0938 16.0894 92.0938 16.9995 91.6538 17.5698 cv
91.6538 17.5698 91.2236 18.1294 90.5137 18.1294 cv
90.5137 18.1294 89.8638 18.1294 89.4238 17.6294 cv
89.4238 19.3794 li
88.7637 19.3794 li
cp
89.4238 17.1597 mo
89.4238 17.1597 89.9438 17.6294 90.4136 17.6294 cv
90.4136 17.6294 91.3735 17.6294 91.3735 16.1494 cv
91.3735 16.1494 91.3735 14.8594 90.5234 14.8594 cv
90.5234 14.8594 89.9634 14.8594 89.4238 15.4697 cv
89.4238 17.1597 li
cp
95.3438 18.0396 mo
95.3438 17.3496 li
95.3438 17.3496 94.8135 18.1294 94.0537 18.1294 cv
94.0537 18.1294 93.5737 18.1294 93.2837 17.8198 cv
93.2837 17.8198 92.9937 17.5195 92.9937 16.9995 cv
92.9937 14.3496 li
93.6636 14.3496 li
93.6636 16.7896 li
93.6636 16.7896 93.6636 17.1997 93.7837 17.3794 cv
93.7837 17.3794 93.9038 17.5493 94.1938 17.5493 cv
94.1938 17.5493 94.8037 17.5493 95.3438 16.7495 cv
95.3438 14.3496 li
96.0137 14.3496 li
96.0137 18.0396 li
95.3438 18.0396 li
cp
98.4238 18.1294 mo
98.4238 18.1294 97.9136 18.1294 97.6338 17.8394 cv
97.6338 17.8394 97.3438 17.5396 97.3438 17.0195 cv
97.3438 14.8594 li
96.8838 14.8594 li
96.8838 14.3496 li
97.3438 14.3496 li
97.3438 13.6895 li
98.0137 13.6196 li
98.0137 14.3496 li
98.9834 14.3496 li
98.9834 14.8594 li
98.0137 14.8594 li
98.0137 16.8994 li
98.0137 16.8994 98.0137 17.6294 98.6436 17.6294 cv
98.6436 17.6294 98.7734 17.6294 98.9634 17.5796 cv
98.9634 18.0396 li
98.9634 18.0396 98.6538 18.1294 98.4238 18.1294 cv
cp
.653773 .579889 .56878 .366613 cmyk
f
26.2935 20.5493 mo
154.704 20.5493 li
154.704 106.149 li
26.2935 106.149 li
26.2935 20.5493 li
cp
.193668 .150057 .155337 3.0518e-05 cmyk
@
26.2935 20.5493 mo
26.2935 106.149 li
@
26.2935 63.3496 mo
154.704 63.3496 li
@
26.2935 97.5894 mo
27.9038 97.5894 li
@
154.704 97.5894 mo
153.094 97.5894 li
@
26.2935 89.0298 mo
27.9038 89.0298 li
@
154.704 89.0298 mo
153.094 89.0298 li
@
26.2935 80.4697 mo
27.9038 80.4697 li
@
154.704 80.4697 mo
153.094 80.4697 li
@
26.2935 71.9097 mo
27.9038 71.9097 li
@
154.704 71.9097 mo
153.094 71.9097 li
@
26.2935 63.3496 mo
27.9038 63.3496 li
@
154.704 63.3496 mo
153.094 63.3496 li
@
26.2935 54.7896 mo
27.9038 54.7896 li
@
154.704 54.7896 mo
153.094 54.7896 li
@
26.2935 46.2295 mo
27.9038 46.2295 li
@
154.704 46.2295 mo
153.094 46.2295 li
@
26.2935 37.6694 mo
27.9038 37.6694 li
@
154.704 37.6694 mo
153.094 37.6694 li
@
26.2935 29.1094 mo
27.9038 29.1094 li
@
154.704 29.1094 mo
153.094 29.1094 li
@
18.9937 25.8994 mo
18.9937 25.3994 li
19.9937 25.3994 li
19.9937 21.4297 li
18.9937 21.6797 li
18.9937 21.1694 li
20.6636 20.7495 li
20.6636 25.3994 li
21.6738 25.3994 li
21.6738 25.8994 li
18.9937 25.8994 li
cp
.75021 .679683 .670222 .90164 cmyk
f
14.3037 104.399 mo
14.3037 103.89 li
17.3237 103.89 li
17.3237 104.399 li
14.3037 104.399 li
cp
19.1338 106.149 mo
19.1338 105.649 li
20.1338 105.649 li
20.1338 101.689 li
19.1338 101.939 li
19.1338 101.419 li
20.8135 101 li
20.8135 105.649 li
21.8135 105.649 li
21.8135 106.149 li
19.1338 106.149 li
cp
f
2 lw
216.224 221.18 mo
216.864 221.18 li
217.503 221.18 li
218.144 221.18 li
218.784 221.18 li
219.424 221.18 li
220.063 221.18 li
220.704 221.18 li
221.344 221.18 li
221.983 221.18 li
222.624 221.18 li
223.264 221.18 li
223.904 221.18 li
224.534 221.18 li
225.174 221.18 li
225.813 221.18 li
226.454 221.18 li
227.094 221.18 li
227.733 221.18 li
228.374 221.18 li
229.014 221.18 li
229.654 221.18 li
230.293 221.18 li
230.934 221.18 li
231.574 221.18 li
232.213 221.18 li
232.854 221.18 li
233.494 221.18 li
234.134 221.18 li
234.764 221.18 li
235.404 221.18 li
236.043 221.18 li
236.684 221.18 li
237.324 221.18 li
237.963 221.18 li
238.604 221.18 li
239.244 221.18 li
239.884 221.18 li
240.523 221.18 li
241.164 221.18 li
241.804 221.18 li
242.444 221.18 li
243.083 221.18 li
243.724 221.18 li
244.354 221.18 li
244.994 221.18 li
245.634 221.18 li
246.273 221.18 li
246.914 221.18 li
247.554 221.18 li
248.194 221.18 li
248.833 221.18 li
249.474 221.18 li
250.114 221.18 li
250.753 221.18 li
251.394 221.18 li
252.034 221.18 li
252.674 221.18 li
253.313 221.18 li
253.944 221.18 li
254.583 221.18 li
255.224 221.18 li
255.864 221.18 li
256.503 221.18 li
257.144 221.18 li
257.784 221.18 li
258.424 221.18 li
259.063 221.18 li
259.704 221.18 li
260.344 221.18 li
260.983 210.97 li
261.624 207.77 li
262.264 205.459 li
262.904 203.49 li
263.543 201.7 li
264.174 200.04 li
264.814 198.47 li
265.454 196.959 li
266.093 195.52 li
266.734 194.12 li
267.374 192.759 li
268.013 191.439 li
268.654 190.149 li
269.293 188.899 li
269.934 187.669 li
270.574 186.479 li
271.213 185.31 li
271.854 184.169 li
272.494 183.06 li
273.133 181.97 li
273.763 180.919 li
274.404 179.879 li
275.043 178.879 li
275.684 177.899 li
276.324 176.95 li
276.963 176.03 li
277.604 175.14 li
278.244 174.27 li
278.883 173.43 li
279.524 172.62 li
280.164 171.83 li
280.803 171.08 li
281.444 170.35 li
282.083 169.66 li
282.723 168.99 li
283.354 168.35 li
283.994 167.74 li
284.633 167.169 li
285.274 166.62 li
285.914 166.1 li
286.553 165.609 li
287.194 165.16 li
287.833 164.729 li
288.473 164.339 li
289.114 163.97 li
289.753 163.64 li
290.394 163.339 li
291.034 163.07 li
291.673 162.83 li
292.314 162.62 li
292.954 162.45 li
293.583 162.299 li
294.223 162.189 li
294.864 162.109 li
295.503 162.07 li
296.144 162.049 li
296.784 162.07 li
297.423 162.109 li
298.064 162.189 li
298.704 162.299 li
299.343 162.45 li
299.984 162.62 li
300.624 162.83 li
301.263 163.07 li
301.904 163.339 li
302.543 163.64 li
303.173 163.97 li
303.814 164.339 li
304.454 164.729 li
305.093 165.16 li
305.734 165.609 li
306.374 166.1 li
307.013 166.62 li
307.654 167.169 li
308.293 167.74 li
308.934 168.35 li
309.574 168.99 li
310.213 169.66 li
310.854 170.35 li
311.494 171.08 li
312.133 171.83 li
312.763 172.62 li
313.404 173.43 li
314.043 174.27 li
314.684 175.14 li
315.324 176.03 li
315.963 176.95 li
316.604 177.899 li
317.244 178.879 li
317.883 179.879 li
318.524 180.919 li
319.164 181.97 li
319.803 183.06 li
320.444 184.169 li
321.083 185.31 li
321.723 186.479 li
322.364 187.669 li
322.994 188.899 li
323.633 190.149 li
324.274 191.439 li
324.914 192.759 li
325.553 194.12 li
326.194 195.52 li
326.833 196.959 li
327.473 198.47 li
328.114 200.04 li
328.753 201.7 li
329.394 203.49 li
330.034 205.459 li
330.673 207.77 li
331.314 210.97 li
331.954 221.18 li
332.583 221.18 li
333.223 221.18 li
333.864 221.18 li
334.503 221.18 li
335.144 221.18 li
335.784 221.18 li
336.423 221.18 li
337.064 221.18 li
337.704 221.18 li
338.343 221.18 li
338.984 221.18 li
339.624 221.18 li
340.263 221.18 li
340.904 221.18 li
341.543 221.18 li
342.173 221.18 li
342.814 221.18 li
343.454 221.18 li
0 0 0 1 cmyk
@
216.224 178.1 mo
216.864 179.669 li
217.503 181.32 li
218.144 183.03 li
218.784 184.83 li
219.424 186.7 li
220.063 188.66 li
220.704 190.72 li
221.344 192.89 li
221.983 195.18 li
222.624 197.629 li
223.264 200.299 li
223.904 203.29 li
224.534 206.93 li
225.174 213.899 li
225.813 221.18 li
226.454 221.18 li
227.094 221.18 li
227.733 221.18 li
228.374 221.18 li
229.014 221.18 li
229.654 221.18 li
230.293 221.18 li
230.934 221.18 li
231.574 221.18 li
232.213 221.18 li
232.854 221.18 li
233.494 221.18 li
234.134 221.18 li
234.764 221.18 li
235.404 221.18 li
236.043 221.18 li
236.684 221.18 li
237.324 221.18 li
237.963 221.18 li
238.604 221.18 li
239.244 221.18 li
239.884 221.18 li
240.523 221.18 li
241.164 221.18 li
241.804 221.18 li
242.444 221.18 li
243.083 221.18 li
243.724 221.18 li
244.354 221.18 li
244.994 221.18 li
245.634 221.18 li
246.273 221.18 li
246.914 221.18 li
247.554 221.18 li
248.194 221.18 li
248.833 221.18 li
249.474 221.18 li
250.114 221.18 li
250.753 221.18 li
251.394 221.18 li
252.034 221.18 li
252.674 221.18 li
253.313 221.18 li
253.944 221.18 li
254.583 221.18 li
255.224 221.18 li
255.864 221.18 li
256.503 221.18 li
257.144 221.18 li
257.784 221.18 li
258.424 221.18 li
259.063 221.18 li
259.704 221.18 li
260.344 221.18 li
260.983 221.18 li
261.624 221.18 li
262.264 221.18 li
262.904 221.18 li
263.543 221.18 li
264.174 221.18 li
264.814 221.18 li
265.454 221.18 li
266.093 221.18 li
266.734 221.18 li
267.374 221.18 li
268.013 221.18 li
268.654 221.18 li
269.293 221.18 li
269.934 221.18 li
270.574 221.18 li
271.213 221.18 li
271.854 221.18 li
272.494 221.18 li
273.133 221.18 li
273.763 221.18 li
274.404 221.18 li
275.043 221.18 li
275.684 221.18 li
276.324 221.18 li
276.963 221.18 li
277.604 221.18 li
278.244 221.18 li
278.883 221.18 li
279.524 221.18 li
280.164 221.18 li
280.803 221.18 li
281.444 221.18 li
282.083 221.18 li
282.723 221.18 li
283.354 221.18 li
283.994 221.18 li
284.633 221.18 li
285.274 221.18 li
285.914 221.18 li
286.553 221.18 li
287.194 221.18 li
287.833 221.18 li
288.473 221.18 li
289.114 221.18 li
289.753 221.18 li
290.394 221.18 li
291.034 221.18 li
291.673 221.18 li
292.314 221.18 li
292.954 221.18 li
293.583 221.18 li
294.223 221.18 li
294.864 221.18 li
295.503 221.18 li
296.144 221.18 li
296.784 221.18 li
297.423 221.18 li
298.064 221.18 li
298.704 221.18 li
299.343 221.18 li
299.984 221.18 li
300.624 221.18 li
301.263 221.18 li
301.904 221.18 li
302.543 221.18 li
303.173 213.899 li
303.814 206.93 li
304.454 203.29 li
305.093 200.299 li
305.734 197.629 li
306.374 195.18 li
307.013 192.89 li
307.654 190.72 li
308.293 188.66 li
308.934 186.7 li
309.574 184.83 li
310.213 183.03 li
310.854 181.32 li
311.494 179.669 li
312.133 178.1 li
312.763 176.6 li
313.404 175.16 li
314.043 173.79 li
314.684 172.479 li
315.324 171.24 li
315.963 170.06 li
316.604 168.939 li
317.244 167.89 li
317.883 166.899 li
318.524 165.97 li
319.164 165.1 li
319.803 164.29 li
320.444 163.54 li
321.083 162.85 li
321.723 162.22 li
322.364 161.66 li
322.994 161.149 li
323.633 160.7 li
324.274 160.31 li
324.914 159.99 li
325.553 159.72 li
326.194 159.509 li
326.833 159.359 li
327.473 159.27 li
328.114 159.24 li
328.753 159.27 li
329.394 159.359 li
330.034 159.509 li
330.673 159.72 li
331.314 159.99 li
331.954 160.31 li
332.583 160.7 li
333.223 161.149 li
333.864 161.66 li
334.503 162.22 li
335.144 162.85 li
335.784 163.54 li
336.423 164.29 li
337.064 165.1 li
337.704 165.97 li
338.343 166.899 li
338.984 167.89 li
339.624 168.939 li
340.263 170.06 li
340.904 171.24 li
341.543 172.479 li
342.173 173.79 li
342.814 175.16 li
343.454 176.6 li
0 0 0 .889999 cmyk
@
216.224 221.18 mo
216.864 221.18 li
217.503 221.18 li
218.144 221.18 li
218.784 221.18 li
219.424 221.18 li
220.063 221.18 li
220.704 221.18 li
221.344 221.18 li
221.983 221.18 li
222.624 221.18 li
223.264 221.18 li
223.904 221.18 li
224.534 221.18 li
225.174 221.18 li
225.813 221.18 li
226.454 221.18 li
227.094 221.18 li
227.733 221.18 li
228.374 221.18 li
229.014 221.18 li
229.654 221.18 li
230.293 221.18 li
230.934 221.18 li
231.574 221.18 li
232.213 221.18 li
232.854 221.18 li
233.494 221.18 li
234.134 221.18 li
234.764 221.18 li
235.404 221.18 li
236.043 221.18 li
236.684 221.18 li
237.324 221.18 li
237.963 221.18 li
238.604 221.18 li
239.244 221.18 li
239.884 221.18 li
240.523 208.66 li
241.164 203.27 li
241.804 199.22 li
242.444 195.689 li
243.083 192.47 li
243.724 189.47 li
244.354 186.64 li
244.994 183.97 li
245.634 181.419 li
246.273 179 li
246.914 176.68 li
247.554 174.47 li
248.194 172.359 li
248.833 170.35 li
249.474 168.43 li
250.114 166.609 li
250.753 164.87 li
251.394 163.22 li
252.034 161.66 li
252.674 160.18 li
253.313 158.79 li
253.944 157.479 li
254.583 156.259 li
255.224 155.12 li
255.864 154.049 li
256.503 153.07 li
257.144 152.169 li
257.784 151.35 li
258.424 150.609 li
259.063 149.95 li
259.704 149.359 li
260.344 148.859 li
260.983 148.43 li
261.624 148.08 li
262.264 147.81 li
262.904 147.62 li
263.543 147.5 li
264.174 147.459 li
264.814 147.5 li
265.454 147.62 li
266.093 147.81 li
266.734 148.08 li
267.374 148.43 li
268.013 148.859 li
268.654 149.359 li
269.293 149.95 li
269.934 150.609 li
270.574 151.35 li
271.213 152.169 li
271.854 153.07 li
272.494 154.049 li
273.133 155.12 li
273.763 156.259 li
274.404 157.479 li
275.043 158.79 li
275.684 160.18 li
276.324 161.66 li
276.963 163.22 li
277.604 164.87 li
278.244 166.609 li
278.883 168.43 li
279.524 170.35 li
280.164 172.359 li
280.803 174.47 li
281.444 176.68 li
282.083 179 li
282.723 181.419 li
283.354 183.97 li
283.994 186.64 li
284.633 189.47 li
285.274 192.47 li
285.914 195.689 li
286.553 199.22 li
287.194 203.27 li
287.833 208.66 li
288.473 221.18 li
289.114 221.18 li
289.753 221.18 li
290.394 221.18 li
291.034 221.18 li
291.673 221.18 li
292.314 221.18 li
292.954 221.18 li
293.583 221.18 li
294.223 221.18 li
294.864 221.18 li
295.503 221.18 li
296.144 221.18 li
296.784 221.18 li
297.423 221.18 li
298.064 221.18 li
298.704 221.18 li
299.343 221.18 li
299.984 221.18 li
300.624 221.18 li
301.263 221.18 li
301.904 221.18 li
302.543 221.18 li
303.173 221.18 li
303.814 221.18 li
304.454 221.18 li
305.093 221.18 li
305.734 221.18 li
306.374 221.18 li
307.013 221.18 li
307.654 221.18 li
308.293 221.18 li
308.934 221.18 li
309.574 221.18 li
310.213 221.18 li
310.854 221.18 li
311.494 221.18 li
312.133 221.18 li
312.763 221.18 li
313.404 221.18 li
314.043 221.18 li
314.684 221.18 li
315.324 221.18 li
315.963 221.18 li
316.604 221.18 li
317.244 221.18 li
317.883 221.18 li
318.524 221.18 li
319.164 221.18 li
319.803 221.18 li
320.444 221.18 li
321.083 221.18 li
321.723 221.18 li
322.364 221.18 li
322.994 221.18 li
323.633 221.18 li
324.274 221.18 li
324.914 221.18 li
325.553 221.18 li
326.194 221.18 li
326.833 221.18 li
327.473 221.18 li
328.114 221.18 li
328.753 221.18 li
329.394 221.18 li
330.034 221.18 li
330.673 221.18 li
331.314 221.18 li
331.954 221.18 li
332.583 221.18 li
333.223 221.18 li
333.864 221.18 li
334.503 221.18 li
335.144 221.18 li
335.784 221.18 li
336.423 221.18 li
337.064 221.18 li
337.704 221.18 li
338.343 221.18 li
338.984 221.18 li
339.624 221.18 li
340.263 221.18 li
340.904 221.18 li
341.543 221.18 li
342.173 221.18 li
342.814 221.18 li
343.454 221.18 li
0 0 0 .699997 cmyk
@
216.224 172.99 mo
216.864 172.28 li
217.503 171.6 li
218.144 170.95 li
218.784 170.32 li
219.424 169.72 li
220.063 169.149 li
220.704 168.609 li
221.344 168.089 li
221.983 167.609 li
222.624 167.149 li
223.264 166.72 li
223.904 166.32 li
224.534 165.95 li
225.174 165.6 li
225.813 165.29 li
226.454 165.009 li
227.094 164.75 li
227.733 164.53 li
228.374 164.33 li
229.014 164.169 li
229.654 164.03 li
230.293 163.93 li
230.934 163.85 li
231.574 163.81 li
232.213 163.79 li
232.854 163.81 li
233.494 163.85 li
234.134 163.93 li
234.764 164.03 li
235.404 164.169 li
236.043 164.33 li
236.684 164.53 li
237.324 164.75 li
237.963 165.009 li
238.604 165.29 li
239.244 165.6 li
239.884 165.95 li
240.523 166.32 li
241.164 166.72 li
241.804 167.149 li
242.444 167.609 li
243.083 168.089 li
243.724 168.609 li
244.354 169.149 li
244.994 169.72 li
245.634 170.32 li
246.273 170.95 li
246.914 171.6 li
247.554 172.28 li
248.194 172.99 li
248.833 173.729 li
249.474 174.49 li
250.114 175.28 li
250.753 176.089 li
251.394 176.93 li
252.034 177.79 li
252.674 178.68 li
253.313 179.6 li
253.944 180.54 li
254.583 181.5 li
255.224 182.49 li
255.864 183.509 li
256.503 184.549 li
257.144 185.609 li
257.784 186.7 li
258.424 187.81 li
259.063 188.95 li
259.704 190.12 li
260.344 191.32 li
260.983 192.54 li
261.624 193.799 li
262.264 195.1 li
262.904 196.43 li
263.543 197.81 li
264.174 199.24 li
264.814 200.74 li
265.454 202.32 li
266.093 204.03 li
266.734 205.919 li
267.374 208.14 li
268.013 211.27 li
268.654 221.18 li
269.293 221.18 li
269.934 221.18 li
270.574 221.18 li
271.213 221.18 li
271.854 221.18 li
272.494 221.18 li
273.133 221.18 li
273.763 221.18 li
274.404 221.18 li
275.043 221.18 li
275.684 221.18 li
276.324 221.18 li
276.963 221.18 li
277.604 221.18 li
278.244 221.18 li
278.883 221.18 li
279.524 221.18 li
280.164 221.18 li
280.803 221.18 li
281.444 221.18 li
282.083 221.18 li
282.723 221.18 li
283.354 221.18 li
283.994 221.18 li
284.633 221.18 li
285.274 221.18 li
285.914 221.18 li
286.553 221.18 li
287.194 221.18 li
287.833 221.18 li
288.473 221.18 li
289.114 221.18 li
289.753 221.18 li
290.394 221.18 li
291.034 221.18 li
291.673 221.18 li
292.314 221.18 li
292.954 221.18 li
293.583 221.18 li
294.223 221.18 li
294.864 221.18 li
295.503 221.18 li
296.144 221.18 li
296.784 221.18 li
297.423 221.18 li
298.064 221.18 li
298.704 221.18 li
299.343 221.18 li
299.984 221.18 li
300.624 221.18 li
301.263 221.18 li
301.904 221.18 li
302.543 221.18 li
303.173 221.18 li
303.814 221.18 li
304.454 221.18 li
305.093 221.18 li
305.734 221.18 li
306.374 221.18 li
307.013 221.18 li
307.654 221.18 li
308.293 221.18 li
308.934 221.18 li
309.574 221.18 li
310.213 221.18 li
310.854 221.18 li
311.494 221.18 li
312.133 221.18 li
312.763 221.18 li
313.404 221.18 li
314.043 221.18 li
314.684 221.18 li
315.324 221.18 li
315.963 221.18 li
316.604 221.18 li
317.244 221.18 li
317.883 221.18 li
318.524 221.18 li
319.164 221.18 li
319.803 221.18 li
320.444 221.18 li
321.083 221.18 li
321.723 221.18 li
322.364 221.18 li
322.994 221.18 li
323.633 221.18 li
324.274 211.27 li
324.914 208.14 li
325.553 205.919 li
326.194 204.03 li
326.833 202.32 li
327.473 200.74 li
328.114 199.24 li
328.753 197.81 li
329.394 196.43 li
330.034 195.1 li
330.673 193.799 li
331.314 192.54 li
331.954 191.32 li
332.583 190.12 li
333.223 188.95 li
333.864 187.81 li
334.503 186.7 li
335.144 185.609 li
335.784 184.549 li
336.423 183.509 li
337.064 182.49 li
337.704 181.5 li
338.343 180.54 li
338.984 179.6 li
339.624 178.68 li
340.263 177.79 li
340.904 176.93 li
341.543 176.089 li
342.173 175.28 li
342.814 174.49 li
343.454 173.729 li
0 0 0 .410004 cmyk
@
217.083 63.8223 mo
217.19 63.8223 li
217.19 85.2222 li
217.083 85.2222 li
217.083 63.8223 li
cp
0 0 0 1 cmyk
f
217.824 84.9409 mo
217.93 84.9409 li
217.93 106.341 li
217.824 106.341 li
217.824 84.9409 li
cp
f
219.213 63.8223 mo
219.32 63.8223 li
219.32 85.2222 li
219.213 85.2222 li
219.213 63.8223 li
cp
f
219.324 84.9409 mo
219.43 84.9409 li
219.43 106.341 li
219.324 106.341 li
219.324 84.9409 li
cp
f
220.704 84.9409 mo
220.81 84.9409 li
220.81 106.341 li
220.704 106.341 li
220.704 84.9409 li
cp
f
221.563 63.8223 mo
221.67 63.8223 li
221.67 85.2222 li
221.563 85.2222 li
221.563 63.8223 li
cp
f
222.094 84.9409 mo
222.2 84.9409 li
222.2 106.341 li
222.094 106.341 li
222.094 84.9409 li
cp
f
223.374 84.9409 mo
223.48 84.9409 li
223.48 106.341 li
223.374 106.341 li
223.374 84.9409 li
cp
f
224.224 63.8223 mo
224.33 63.8223 li
224.33 85.2222 li
224.224 85.2222 li
224.224 63.8223 li
cp
f
224.654 84.9409 mo
224.76 84.9409 li
224.76 106.341 li
224.654 106.341 li
224.654 84.9409 li
cp
f
225.934 84.9409 mo
226.04 84.9409 li
226.04 106.341 li
225.934 106.341 li
225.934 84.9409 li
cp
f
227.104 84.9409 mo
227.21 84.9409 li
227.21 106.341 li
227.104 106.341 li
227.104 84.9409 li
cp
f
227.534 63.8223 mo
227.64 63.8223 li
227.64 85.2222 li
227.534 85.2222 li
227.534 63.8223 li
cp
f
227.644 20.6895 mo
227.75 20.6895 li
227.75 42.0894 li
227.644 42.0894 li
227.644 20.6895 li
cp
f
228.384 84.9409 mo
228.49 84.9409 li
228.49 106.341 li
228.384 106.341 li
228.384 84.9409 li
cp
f
229.563 84.9409 mo
229.67 84.9409 li
229.67 106.341 li
229.563 106.341 li
229.563 84.9409 li
cp
f
230.844 84.9409 mo
230.95 84.9409 li
230.95 106.341 li
230.844 106.341 li
230.844 84.9409 li
cp
f
231.264 20.6895 mo
231.37 20.6895 li
231.37 42.0894 li
231.264 42.0894 li
231.264 20.6895 li
cp
f
232.124 84.9409 mo
232.23 84.9409 li
232.23 106.341 li
232.124 106.341 li
232.124 84.9409 li
cp
f
233.404 84.9409 mo
233.51 84.9409 li
233.51 106.341 li
233.404 106.341 li
233.404 84.9409 li
cp
f
234.144 20.6895 mo
234.25 20.6895 li
234.25 42.0894 li
234.144 42.0894 li
234.144 20.6895 li
cp
f
234.684 84.9409 mo
234.79 84.9409 li
234.79 106.341 li
234.684 106.341 li
234.684 84.9409 li
cp
f
236.063 84.9409 mo
236.17 84.9409 li
236.17 106.341 li
236.063 106.341 li
236.063 84.9409 li
cp
f
236.494 20.6895 mo
236.6 20.6895 li
236.6 42.0894 li
236.494 42.0894 li
236.494 20.6895 li
cp
f
237.454 84.9409 mo
237.56 84.9409 li
237.56 106.341 li
237.454 106.341 li
237.454 84.9409 li
cp
f
238.733 20.6895 mo
238.84 20.6895 li
238.84 42.0894 li
238.733 42.0894 li
238.733 20.6895 li
cp
f
238.833 84.9409 mo
238.94 84.9409 li
238.94 106.341 li
238.833 106.341 li
238.833 84.9409 li
cp
f
240.434 84.9409 mo
240.54 84.9409 li
240.54 106.341 li
240.434 106.341 li
240.434 84.9409 li
cp
f
240.654 20.6895 mo
240.76 20.6895 li
240.76 42.0894 li
240.654 42.0894 li
240.654 20.6895 li
cp
f
242.144 84.9409 mo
242.25 84.9409 li
242.25 106.341 li
242.144 106.341 li
242.144 84.9409 li
cp
f
242.574 20.6895 mo
242.68 20.6895 li
242.68 42.0894 li
242.574 42.0894 li
242.574 20.6895 li
cp
f
244.174 84.9409 mo
244.28 84.9409 li
244.28 106.341 li
244.174 106.341 li
244.174 84.9409 li
cp
f
244.384 20.6895 mo
244.49 20.6895 li
244.49 42.0894 li
244.384 42.0894 li
244.384 20.6895 li
cp
f
246.094 20.6895 mo
246.2 20.6895 li
246.2 42.0894 li
246.094 42.0894 li
246.094 20.6895 li
cp
f
246.733 84.9409 mo
246.84 84.9409 li
246.84 106.341 li
246.733 106.341 li
246.733 84.9409 li
cp
f
247.793 20.6895 mo
247.9 20.6895 li
247.9 42.0894 li
247.793 42.0894 li
247.793 20.6895 li
cp
f
249.394 20.6895 mo
249.5 20.6895 li
249.5 42.0894 li
249.394 42.0894 li
249.394 20.6895 li
cp
f
250.994 20.6895 mo
251.1 20.6895 li
251.1 42.0894 li
250.994 42.0894 li
250.994 20.6895 li
cp
f
252.494 20.6895 mo
252.6 20.6895 li
252.6 42.0894 li
252.494 42.0894 li
252.494 20.6895 li
cp
f
254.083 20.6895 mo
254.19 20.6895 li
254.19 42.0894 li
254.083 42.0894 li
254.083 20.6895 li
cp
f
255.583 20.6895 mo
255.69 20.6895 li
255.69 42.0894 li
255.583 42.0894 li
255.583 20.6895 li
cp
f
257.184 20.6895 mo
257.291 20.6895 li
257.291 42.0894 li
257.184 42.0894 li
257.184 20.6895 li
cp
f
258.674 20.6895 mo
258.78 20.6895 li
258.78 42.0894 li
258.674 42.0894 li
258.674 20.6895 li
cp
f
260.273 20.6895 mo
260.38 20.6895 li
260.38 42.0894 li
260.273 42.0894 li
260.273 20.6895 li
cp
f
261.874 20.6895 mo
261.98 20.6895 li
261.98 42.0894 li
261.874 42.0894 li
261.874 20.6895 li
cp
f
263.364 20.6895 mo
263.47 20.6895 li
263.47 42.0894 li
263.364 42.0894 li
263.364 20.6895 li
cp
f
264.864 42.0894 mo
264.97 42.0894 li
264.97 63.4897 li
264.864 63.4897 li
264.864 42.0894 li
cp
f
265.074 20.6895 mo
265.18 20.6895 li
265.18 42.0894 li
265.074 42.0894 li
265.074 20.6895 li
cp
f
266.673 20.6895 mo
266.78 20.6895 li
266.78 42.0894 li
266.673 42.0894 li
266.673 20.6895 li
cp
f
267.843 42.0894 mo
267.951 42.0894 li
267.951 63.4897 li
267.843 63.4897 li
267.843 42.0894 li
cp
f
268.383 20.6895 mo
268.491 20.6895 li
268.491 42.0894 li
268.383 42.0894 li
268.383 20.6895 li
cp
f
270.083 42.0894 mo
270.19 42.0894 li
270.19 63.4897 li
270.083 63.4897 li
270.083 42.0894 li
cp
f
270.194 20.6895 mo
270.3 20.6895 li
270.3 42.0894 li
270.194 42.0894 li
270.194 20.6895 li
cp
f
272.114 20.6895 mo
272.22 20.6895 li
272.22 42.0894 li
272.114 42.0894 li
272.114 20.6895 li
cp
f
272.114 42.0894 mo
272.22 42.0894 li
272.22 63.4897 li
272.114 63.4897 li
272.114 42.0894 li
cp
f
273.923 42.0894 mo
274.03 42.0894 li
274.03 63.4897 li
273.923 63.4897 li
273.923 42.0894 li
cp
f
274.133 20.6895 mo
274.241 20.6895 li
274.241 42.0894 li
274.133 42.0894 li
274.133 20.6895 li
cp
f
275.633 42.0894 mo
275.741 42.0894 li
275.741 63.4897 li
275.633 63.4897 li
275.633 42.0894 li
cp
f
276.274 20.6895 mo
276.38 20.6895 li
276.38 42.0894 li
276.274 42.0894 li
276.274 20.6895 li
cp
f
277.234 42.0894 mo
277.34 42.0894 li
277.34 63.4897 li
277.234 63.4897 li
277.234 42.0894 li
cp
f
278.723 20.6895 mo
278.831 20.6895 li
278.831 42.0894 li
278.723 42.0894 li
278.723 20.6895 li
cp
f
278.833 42.0894 mo
278.94 42.0894 li
278.94 63.4897 li
278.833 63.4897 li
278.833 42.0894 li
cp
f
280.324 42.0894 mo
280.43 42.0894 li
280.43 63.4897 li
280.324 63.4897 li
280.324 42.0894 li
cp
f
281.713 20.6895 mo
281.82 20.6895 li
281.82 42.0894 li
281.713 42.0894 li
281.713 20.6895 li
cp
f
281.814 42.0894 mo
281.92 42.0894 li
281.92 63.4897 li
281.814 63.4897 li
281.814 42.0894 li
cp
f
282.883 63.8223 mo
282.991 63.8223 li
282.991 85.2222 li
282.883 85.2222 li
282.883 63.8223 li
cp
f
283.314 42.0894 mo
283.42 42.0894 li
283.42 63.4897 li
283.314 63.4897 li
283.314 42.0894 li
cp
f
284.803 42.0894 mo
284.911 42.0894 li
284.911 63.4897 li
284.803 63.4897 li
284.803 42.0894 li
cp
f
286.083 20.6895 mo
286.19 20.6895 li
286.19 42.0894 li
286.083 42.0894 li
286.083 20.6895 li
cp
f
286.293 42.0894 mo
286.4 42.0894 li
286.4 63.4897 li
286.293 63.4897 li
286.293 42.0894 li
cp
f
286.723 63.8223 mo
286.831 63.8223 li
286.831 85.2222 li
286.723 85.2222 li
286.723 63.8223 li
cp
f
287.793 42.0894 mo
287.9 42.0894 li
287.9 63.4897 li
287.793 63.4897 li
287.793 42.0894 li
cp
f
289.284 42.0894 mo
289.39 42.0894 li
289.39 63.4897 li
289.284 63.4897 li
289.284 42.0894 li
cp
f
289.604 63.8223 mo
289.71 63.8223 li
289.71 85.2222 li
289.604 85.2222 li
289.604 63.8223 li
cp
f
290.774 42.0894 mo
290.88 42.0894 li
290.88 63.4897 li
290.774 63.4897 li
290.774 42.0894 li
cp
f
292.053 63.8223 mo
292.161 63.8223 li
292.161 85.2222 li
292.053 85.2222 li
292.053 63.8223 li
cp
f
292.374 42.0894 mo
292.48 42.0894 li
292.48 63.4897 li
292.374 63.4897 li
292.374 42.0894 li
cp
f
294.083 42.0894 mo
294.19 42.0894 li
294.19 63.4897 li
294.083 63.4897 li
294.083 42.0894 li
cp
f
294.293 63.8223 mo
294.4 63.8223 li
294.4 85.2222 li
294.293 85.2222 li
294.293 63.8223 li
cp
f
295.894 42.0894 mo
296 42.0894 li
296 63.4897 li
295.894 63.4897 li
295.894 42.0894 li
cp
f
296.324 63.8223 mo
296.43 63.8223 li
296.43 85.2222 li
296.324 85.2222 li
296.324 63.8223 li
cp
f
297.814 42.0894 mo
297.92 42.0894 li
297.92 63.4897 li
297.814 63.4897 li
297.814 42.0894 li
cp
f
298.244 63.8223 mo
298.35 63.8223 li
298.35 85.2222 li
298.244 85.2222 li
298.244 63.8223 li
cp
f
300.053 42.0894 mo
300.161 42.0894 li
300.161 63.4897 li
300.053 63.4897 li
300.053 42.0894 li
cp
f
300.164 63.8223 mo
300.27 63.8223 li
300.27 85.2222 li
300.164 85.2222 li
300.164 63.8223 li
cp
f
301.864 63.8223 mo
301.97 63.8223 li
301.97 85.2222 li
301.864 85.2222 li
301.864 63.8223 li
cp
f
302.824 42.0894 mo
302.93 42.0894 li
302.93 63.4897 li
302.824 63.4897 li
302.824 42.0894 li
cp
f
303.574 63.8223 mo
303.68 63.8223 li
303.68 85.2222 li
303.574 85.2222 li
303.574 63.8223 li
cp
f
305.284 63.8223 mo
305.39 63.8223 li
305.39 85.2222 li
305.284 85.2222 li
305.284 63.8223 li
cp
f
306.883 63.8223 mo
306.991 63.8223 li
306.991 85.2222 li
306.883 85.2222 li
306.883 63.8223 li
cp
f
308.473 63.8223 mo
308.581 63.8223 li
308.581 85.2222 li
308.473 85.2222 li
308.473 63.8223 li
cp
f
310.074 63.8223 mo
310.18 63.8223 li
310.18 85.2222 li
310.074 85.2222 li
310.074 63.8223 li
cp
f
311.673 63.8223 mo
311.78 63.8223 li
311.78 85.2222 li
311.673 85.2222 li
311.673 63.8223 li
cp
f
313.274 63.8223 mo
313.38 63.8223 li
313.38 85.2222 li
313.274 85.2222 li
313.274 63.8223 li
cp
f
314.874 63.8223 mo
314.98 63.8223 li
314.98 85.2222 li
314.874 85.2222 li
314.874 63.8223 li
cp
f
316.473 63.8223 mo
316.581 63.8223 li
316.581 85.2222 li
316.473 85.2222 li
316.473 63.8223 li
cp
f
318.074 63.8223 mo
318.18 63.8223 li
318.18 85.2222 li
318.074 85.2222 li
318.074 63.8223 li
cp
f
319.784 63.8223 mo
319.89 63.8223 li
319.89 85.2222 li
319.784 85.2222 li
319.784 63.8223 li
cp
f
321.383 63.8223 mo
321.491 63.8223 li
321.491 85.2222 li
321.383 85.2222 li
321.383 63.8223 li
cp
f
321.494 84.9409 mo
321.6 84.9409 li
321.6 106.341 li
321.494 106.341 li
321.494 84.9409 li
cp
f
323.194 63.8223 mo
323.3 63.8223 li
323.3 85.2222 li
323.194 85.2222 li
323.194 63.8223 li
cp
f
324.154 84.9409 mo
324.26 84.9409 li
324.26 106.341 li
324.154 106.341 li
324.154 84.9409 li
cp
f
324.904 63.8223 mo
325.01 63.8223 li
325.01 85.2222 li
324.904 85.2222 li
324.904 63.8223 li
cp
f
326.184 84.9409 mo
326.291 84.9409 li
326.291 106.341 li
326.184 106.341 li
326.184 84.9409 li
cp
f
326.824 63.8223 mo
326.93 63.8223 li
326.93 85.2222 li
326.824 85.2222 li
326.824 63.8223 li
cp
f
327.883 84.9409 mo
327.991 84.9409 li
327.991 106.341 li
327.883 106.341 li
327.883 84.9409 li
cp
f
328.744 63.8223 mo
328.85 63.8223 li
328.85 85.2222 li
328.744 85.2222 li
328.744 63.8223 li
cp
f
329.484 84.9409 mo
329.59 84.9409 li
329.59 106.341 li
329.484 106.341 li
329.484 84.9409 li
cp
f
330.874 63.8223 mo
330.98 63.8223 li
330.98 85.2222 li
330.874 85.2222 li
330.874 63.8223 li
cp
f
330.984 84.9409 mo
331.09 84.9409 li
331.09 106.341 li
330.984 106.341 li
330.984 84.9409 li
cp
f
332.364 84.9409 mo
332.47 84.9409 li
332.47 106.341 li
332.364 106.341 li
332.364 84.9409 li
cp
f
333.223 63.8223 mo
333.331 63.8223 li
333.331 85.2222 li
333.223 85.2222 li
333.223 63.8223 li
cp
f
333.753 84.9409 mo
333.86 84.9409 li
333.86 106.341 li
333.753 106.341 li
333.753 84.9409 li
cp
f
335.034 84.9409 mo
335.14 84.9409 li
335.14 106.341 li
335.034 106.341 li
335.034 84.9409 li
cp
f
335.883 63.8223 mo
335.991 63.8223 li
335.991 85.2222 li
335.883 85.2222 li
335.883 63.8223 li
cp
f
336.314 84.9409 mo
336.42 84.9409 li
336.42 106.341 li
336.314 106.341 li
336.314 84.9409 li
cp
f
337.593 84.9409 mo
337.701 84.9409 li
337.701 106.341 li
337.593 106.341 li
337.593 84.9409 li
cp
f
338.874 84.9409 mo
338.98 84.9409 li
338.98 106.341 li
338.874 106.341 li
338.874 84.9409 li
cp
f
339.194 63.8223 mo
339.3 63.8223 li
339.3 85.2222 li
339.194 85.2222 li
339.194 63.8223 li
cp
f
339.303 20.6895 mo
339.411 20.6895 li
339.411 42.0894 li
339.303 42.0894 li
339.303 20.6895 li
cp
f
340.043 84.9409 mo
340.15 84.9409 li
340.15 106.341 li
340.043 106.341 li
340.043 84.9409 li
cp
f
341.324 84.9409 mo
341.43 84.9409 li
341.43 106.341 li
341.324 106.341 li
341.324 84.9409 li
cp
f
342.503 84.9409 mo
342.61 84.9409 li
342.61 106.341 li
342.503 106.341 li
342.503 84.9409 li
cp
f
342.923 20.6895 mo
343.03 20.6895 li
343.03 42.0894 li
342.923 42.0894 li
342.923 20.6895 li
cp
f
343.88 106.341 mo
343.774 106.341 li
343.774 84.9409 li
343.88 84.9409 li
f
.5 lw
42.5635 174.419 mo
42.6138 174.169 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
@
42.6138 174.169 mo
42.6636 173.91 li
42.7134 173.649 li
42.7734 173.39 li
42.8335 173.129 li
42.8936 172.87 li
42.9536 172.62 li
43.0234 172.359 li
43.0835 172.1 li
43.1538 171.85 li
43.2236 171.589 li
43.2935 171.339 li
43.3638 171.08 li
43.4336 170.83 li
43.5137 170.57 li
43.5835 170.32 li
43.6636 170.07 li
43.7437 169.81 li
43.8237 169.56 li
43.9136 169.31 li
43.9937 169.06 li
44.0835 168.81 li
44.1738 168.56 li
44.2637 168.31 li
44.3535 168.06 li
44.4438 167.81 li
44.5435 167.56 li
44.6436 167.31 li
44.7334 167.06 li
44.8335 166.82 li
44.9438 166.57 li
45.0435 166.32 li
45.1436 166.08 li
45.2534 165.83 li
45.3638 165.589 li
45.4736 165.35 li
45.5835 165.1 li
45.6938 164.859 li
.0178531 .0106203 .0106203 3.0518e-05 cmyk
@
45.6938 164.859 mo
45.8135 164.62 li
45.9238 164.379 li
46.0435 164.14 li
46.1636 163.899 li
46.2837 163.66 li
46.4038 163.419 li
46.5337 163.18 li
46.6538 162.95 li
46.7837 162.709 li
46.9136 162.47 li
47.0435 162.24 li
47.1738 162 li
47.3037 161.77 li
47.4438 161.54 li
47.5835 161.31 li
47.7134 161.08 li
47.8535 160.839 li
47.9937 160.609 li
48.1436 160.39 li
48.2837 160.16 li
48.4336 159.93 li
48.5737 159.7 li
48.7236 159.479 li
48.8735 159.25 li
49.0234 159.03 li
49.1738 158.799 li
49.3335 158.58 li
49.4834 158.359 li
49.6436 158.14 li
49.8037 157.919 li
49.9634 157.7 li
50.1235 157.479 li
50.2935 157.27 li
50.4536 157.049 li
50.6235 156.83 li
50.7837 156.62 li
50.9536 156.41 li
.0435492 .0310369 .0310369 3.0518e-05 cmyk
@
50.9536 156.41 mo
51.1235 156.189 li
51.2935 155.979 li
51.4736 155.77 li
51.6436 155.56 li
51.8237 155.35 li
51.9937 155.14 li
52.1738 154.939 li
52.3535 154.729 li
52.5337 154.52 li
52.7134 154.32 li
52.9038 154.12 li
53.0835 153.919 li
53.2734 153.709 li
53.4634 153.509 li
53.6538 153.31 li
53.8438 153.12 li
54.0337 152.919 li
54.2236 152.72 li
54.4238 152.53 li
54.6138 152.339 li
54.8135 152.14 li
55.0137 151.95 li
55.2134 151.759 li
55.4136 151.57 li
55.6138 151.379 li
55.8135 151.2 li
56.0234 151.009 li
56.2236 150.82 li
56.4336 150.64 li
56.6436 150.459 li
56.8535 150.28 li
57.0635 150.1 li
57.2734 149.919 li
57.4834 149.74 li
57.6938 149.56 li
57.9136 149.39 li
58.1338 149.209 li
58.3438 149.04 li
.0766613 .0555734 .0588388 3.0518e-05 cmyk
@
58.3438 149.04 mo
58.5635 148.87 li
58.7837 148.689 li
59.0034 148.52 li
59.2236 148.359 li
59.4536 148.189 li
59.6738 148.02 li
59.9038 147.859 li
60.1235 147.689 li
60.3535 147.53 li
60.5835 147.37 li
60.8135 147.209 li
61.0435 147.049 li
61.2734 146.89 li
61.5034 146.74 li
61.7334 146.58 li
61.9736 146.43 li
62.2036 146.28 li
62.4438 146.129 li
62.6836 145.979 li
62.9238 145.83 li
63.1636 145.68 li
63.4038 145.53 li
63.6436 145.39 li
63.8838 145.25 li
64.1235 145.1 li
64.3735 144.959 li
64.6138 144.82 li
64.8638 144.689 li
65.1138 144.549 li
65.3638 144.419 li
65.6035 144.28 li
65.8535 144.149 li
66.1035 144.02 li
66.3638 143.89 li
66.6138 143.759 li
66.8638 143.629 li
67.1138 143.509 li
.108003 .0798962 .0851759 3.0518e-05 cmyk
@
67.1138 143.509 mo
67.3735 143.379 li
67.6338 143.259 li
67.8838 143.14 li
68.1436 143.02 li
68.4038 142.899 li
68.6636 142.78 li
68.9136 142.669 li
69.1836 142.549 li
69.4438 142.439 li
69.7036 142.33 li
69.9634 142.22 li
70.2236 142.109 li
70.4937 142 li
70.7534 141.899 li
71.0234 141.79 li
71.2837 141.689 li
71.5537 141.589 li
71.8237 141.49 li
72.0938 141.39 li
72.3535 141.29 li
72.6235 141.2 li
72.8936 141.1 li
73.1636 141.009 li
73.4336 140.919 li
73.7134 140.83 li
73.9834 140.74 li
74.2534 140.66 li
74.5234 140.57 li
74.8037 140.49 li
75.0737 140.41 li
75.3535 140.32 li
75.6235 140.25 li
75.9038 140.169 li
76.1836 140.089 li
76.4536 140.02 li
76.7334 139.939 li
77.0137 139.87 li
77.2935 139.799 li
.140475 .107088 .111666 3.0518e-05 cmyk
@
77.2935 139.799 mo
77.5737 139.729 li
77.8535 139.669 li
78.1338 139.6 li
78.4136 139.54 li
78.6938 139.479 li
78.9736 139.41 li
79.2534 139.35 li
79.5337 139.299 li
79.8135 139.24 li
80.1035 139.189 li
80.3838 139.129 li
80.6636 139.08 li
80.9536 139.03 li
81.2334 138.979 li
81.5137 138.939 li
81.8037 138.89 li
82.0835 138.85 li
82.3735 138.799 li
82.6538 138.759 li
82.9438 138.72 li
83.2334 138.689 li
83.5137 138.649 li
83.8037 138.62 li
84.0835 138.58 li
84.3735 138.549 li
84.6636 138.52 li
84.9536 138.49 li
85.2334 138.47 li
85.5234 138.439 li
85.8135 138.419 li
86.1035 138.399 li
86.3838 138.379 li
86.6738 138.359 li
86.9634 138.339 li
87.2534 138.33 li
87.5435 138.31 li
87.8335 138.299 li
.174868 .132937 .138125 3.0518e-05 cmyk
@
87.8335 138.299 mo
88.1235 138.29 li
88.4038 138.28 li
88.6938 138.27 li
88.9834 138.259 li
89.2734 138.259 li
89.5635 138.259 li
89.8535 138.259 li
90.1436 138.259 li
90.4336 138.259 li
90.7134 138.259 li
91.0034 138.27 li
91.2935 138.27 li
91.5835 138.28 li
91.8735 138.29 li
92.1636 138.299 li
92.4536 138.31 li
92.7437 138.33 li
93.0234 138.339 li
93.3135 138.359 li
93.6035 138.379 li
93.8936 138.399 li
94.1836 138.419 li
94.4634 138.45 li
94.7534 138.47 li
95.0435 138.5 li
95.3335 138.53 li
95.6138 138.56 li
95.9038 138.589 li
96.1938 138.62 li
96.4736 138.66 li
96.7637 138.7 li
97.0537 138.729 li
97.3335 138.77 li
97.6235 138.81 li
97.9038 138.859 li
98.1938 138.899 li
98.4736 138.95 li
98.7534 138.99 li
.212253 .165286 .17023 3.0518e-05 cmyk
@
98.7534 138.99 mo
99.0435 139.04 li
99.3237 139.089 li
99.6138 139.149 li
99.8936 139.2 li
100.174 139.25 li
100.454 139.31 li
100.733 139.37 li
101.023 139.43 li
101.304 139.49 li
101.583 139.549 li
101.864 139.62 li
102.144 139.68 li
102.424 139.75 li
102.704 139.82 li
102.974 139.89 li
103.253 139.959 li
103.534 140.03 li
103.813 140.109 li
104.083 140.189 li
104.364 140.259 li
104.634 140.339 li
104.914 140.419 li
105.184 140.509 li
105.463 140.589 li
105.733 140.68 li
106.003 140.759 li
106.284 140.85 li
106.554 140.939 li
106.824 141.03 li
107.094 141.129 li
107.364 141.22 li
107.634 141.32 li
107.904 141.41 li
108.164 141.509 li
108.434 141.609 li
108.704 141.709 li
108.963 141.82 li
.247196 .19559 .200748 3.0518e-05 cmyk
@
108.963 141.82 mo
109.233 141.919 li
109.494 142.03 li
109.764 142.14 li
110.023 142.24 li
110.284 142.35 li
110.543 142.47 li
110.804 142.58 li
111.063 142.689 li
111.324 142.81 li
111.583 142.93 li
111.844 143.049 li
112.104 143.169 li
112.354 143.29 li
112.614 143.41 li
112.864 143.54 li
113.124 143.66 li
113.374 143.79 li
113.624 143.919 li
113.874 144.049 li
114.124 144.18 li
114.374 144.31 li
114.624 144.45 li
114.874 144.58 li
115.114 144.72 li
115.364 144.859 li
115.614 145 li
115.854 145.14 li
116.094 145.28 li
116.344 145.419 li
116.583 145.57 li
116.824 145.709 li
117.063 145.859 li
117.293 146.009 li
117.534 146.16 li
117.773 146.31 li
118.003 146.459 li
118.244 146.62 li
118.474 146.77 li
.283635 .223056 .228244 3.0518e-05 cmyk
@
118.474 146.77 mo
118.704 146.93 li
118.934 147.089 li
119.164 147.25 li
119.394 147.41 li
119.624 147.57 li
119.854 147.729 li
120.083 147.899 li
120.304 148.06 li
120.523 148.229 li
120.753 148.399 li
120.974 148.56 li
121.194 148.729 li
121.414 148.91 li
121.634 149.08 li
121.844 149.25 li
122.063 149.43 li
122.273 149.6 li
122.494 149.78 li
122.704 149.959 li
122.914 150.14 li
123.124 150.32 li
123.333 150.5 li
123.543 150.68 li
123.744 150.87 li
123.954 151.049 li
124.154 151.24 li
124.364 151.43 li
124.563 151.62 li
124.764 151.81 li
124.963 152 li
125.154 152.189 li
125.354 152.379 li
125.554 152.57 li
125.744 152.77 li
125.934 152.97 li
126.124 153.16 li
126.313 153.359 li
.320256 .254887 .260075 3.0518e-05 cmyk
@
126.313 153.359 mo
126.503 153.56 li
126.694 153.759 li
126.884 153.959 li
127.063 154.16 li
127.253 154.37 li
127.434 154.57 li
127.614 154.78 li
127.793 154.979 li
127.974 155.189 li
128.144 155.399 li
128.324 155.609 li
128.494 155.82 li
128.664 156.03 li
128.844 156.24 li
129.014 156.459 li
129.174 156.669 li
129.344 156.879 li
129.514 157.1 li
129.674 157.32 li
129.833 157.53 li
129.994 157.75 li
130.154 157.97 li
130.313 158.189 li
130.474 158.41 li
130.624 158.629 li
130.784 158.859 li
130.934 159.08 li
131.083 159.31 li
131.233 159.53 li
131.384 159.759 li
131.534 159.979 li
131.674 160.209 li
131.824 160.439 li
131.963 160.669 li
132.104 160.899 li
132.244 161.129 li
132.374 161.359 li
132.514 161.589 li
.358618 .288426 .293584 3.0518e-05 cmyk
@
132.514 161.589 mo
132.644 161.83 li
132.784 162.06 li
132.914 162.29 li
133.043 162.53 li
133.174 162.77 li
133.293 163 li
133.424 163.24 li
133.543 163.479 li
133.664 163.72 li
133.793 163.95 li
133.904 164.189 li
134.023 164.439 li
134.144 164.68 li
134.253 164.919 li
134.364 165.16 li
134.474 165.399 li
134.583 165.649 li
134.694 165.89 li
134.804 166.14 li
134.904 166.379 li
135.014 166.629 li
135.114 166.87 li
135.213 167.12 li
135.304 167.37 li
135.404 167.62 li
135.503 167.87 li
135.594 168.12 li
135.684 168.359 li
135.773 168.609 li
135.864 168.87 li
135.944 169.12 li
136.034 169.37 li
136.114 169.62 li
136.194 169.87 li
136.273 170.129 li
136.354 170.379 li
136.434 170.629 li
.398016 .323583 .328191 .0037232 cmyk
@
136.434 170.629 mo
136.503 170.89 li
136.583 171.14 li
136.654 171.399 li
136.724 171.649 li
136.793 171.91 li
136.854 172.16 li
136.924 172.419 li
136.983 172.68 li
137.043 172.939 li
137.104 173.189 li
137.164 173.45 li
137.224 173.709 li
137.273 173.97 li
137.324 174.229 li
137.374 174.49 li
137.424 174.74 li
137.474 175 li
137.523 175.259 li
137.563 175.52 li
137.604 175.78 li
137.654 176.04 li
137.684 176.31 li
137.724 176.57 li
137.764 176.83 li
137.793 177.089 li
137.824 177.35 li
137.854 177.609 li
137.884 177.87 li
137.914 178.14 li
137.944 178.399 li
137.963 178.66 li
137.983 178.919 li
138.003 179.189 li
138.023 179.45 li
138.043 179.709 li
138.054 179.97 li
138.074 180.24 li
138.083 180.5 li
.43061 .351507 .356756 .0107729 cmyk
@
138.083 180.5 mo
138.094 180.759 li
138.104 181.03 li
138.104 181.29 li
138.114 181.549 li
138.114 181.82 li
138.114 182.08 li
138.114 182.339 li
138.114 182.609 li
138.104 182.87 li
138.104 183.129 li
138.094 183.399 li
138.083 183.66 li
138.074 183.919 li
138.063 184.18 li
138.043 184.45 li
138.034 184.709 li
138.014 184.97 li
137.994 185.24 li
137.974 185.5 li
137.954 185.759 li
137.924 186.02 li
137.894 186.28 li
137.874 186.549 li
137.844 186.81 li
137.804 187.07 li
137.773 187.33 li
137.744 187.589 li
137.704 187.85 li
137.664 188.12 li
137.624 188.379 li
137.583 188.64 li
137.534 188.899 li
137.494 189.16 li
137.444 189.419 li
137.394 189.68 li
137.344 189.93 li
137.293 190.189 li
.4589 .379034 .383612 .0242618 cmyk
@
137.293 190.189 mo
137.244 190.45 li
137.184 190.709 li
137.124 190.97 li
137.063 191.229 li
137.003 191.479 li
136.944 191.74 li
136.884 192 li
136.813 192.25 li
136.744 192.509 li
136.674 192.759 li
136.604 193.02 li
136.534 193.27 li
136.463 193.53 li
136.384 193.78 li
136.304 194.04 li
136.224 194.29 li
136.144 194.54 li
136.063 194.79 li
135.983 195.049 li
135.894 195.299 li
135.804 195.549 li
135.713 195.799 li
135.624 196.049 li
135.534 196.299 li
135.444 196.549 li
135.344 196.799 li
135.244 197.04 li
135.144 197.29 li
135.043 197.54 li
134.944 197.78 li
134.844 198.03 li
134.733 198.27 li
134.624 198.52 li
134.514 198.759 li
134.404 199.009 li
134.293 199.25 li
134.184 199.49 li
134.063 199.729 li
.490547 .407019 .408484 .0473335 cmyk
@
134.063 199.729 mo
133.954 199.97 li
133.833 200.209 li
133.713 200.45 li
133.594 200.689 li
133.463 200.93 li
133.344 201.169 li
133.213 201.399 li
133.094 201.64 li
132.963 201.879 li
132.833 202.109 li
132.694 202.339 li
132.563 202.58 li
132.424 202.81 li
132.293 203.04 li
132.154 203.27 li
132.014 203.5 li
131.874 203.729 li
131.724 203.959 li
131.583 204.189 li
131.434 204.419 li
131.293 204.64 li
131.144 204.87 li
130.994 205.089 li
130.833 205.32 li
130.684 205.54 li
130.534 205.759 li
130.374 205.979 li
130.213 206.2 li
130.054 206.419 li
129.894 206.64 li
129.733 206.859 li
129.574 207.08 li
129.404 207.29 li
129.233 207.509 li
129.074 207.72 li
128.904 207.939 li
128.733 208.149 li
.516472 .431495 .431495 .0754711 cmyk
@
128.733 208.149 mo
128.563 208.359 li
128.384 208.57 li
128.213 208.78 li
128.034 208.99 li
127.854 209.2 li
127.674 209.399 li
127.494 209.609 li
127.313 209.81 li
127.134 210.02 li
126.944 210.22 li
126.764 210.419 li
126.574 210.62 li
126.384 210.82 li
126.194 211.02 li
126.003 211.22 li
125.813 211.41 li
125.624 211.609 li
125.424 211.799 li
125.233 212 li
125.034 212.189 li
124.833 212.379 li
124.634 212.57 li
124.434 212.759 li
124.233 212.95 li
124.023 213.129 li
123.824 213.32 li
123.614 213.5 li
123.414 213.689 li
123.204 213.87 li
122.994 214.049 li
122.784 214.229 li
122.563 214.41 li
122.354 214.589 li
122.144 214.759 li
121.924 214.939 li
121.713 215.109 li
121.494 215.29 li
.542718 .457679 .454627 .107088 cmyk
@
121.494 215.29 mo
121.273 215.459 li
121.054 215.629 li
120.833 215.799 li
120.614 215.97 li
120.384 216.129 li
120.164 216.299 li
119.934 216.459 li
119.704 216.629 li
119.483 216.79 li
119.253 216.95 li
119.023 217.109 li
118.793 217.27 li
118.563 217.419 li
118.324 217.58 li
118.094 217.729 li
117.854 217.89 li
117.624 218.04 li
117.384 218.189 li
117.144 218.339 li
116.904 218.49 li
116.664 218.629 li
116.424 218.78 li
116.184 218.919 li
115.944 219.07 li
115.694 219.209 li
115.454 219.35 li
115.204 219.49 li
114.963 219.62 li
114.713 219.759 li
114.463 219.89 li
114.213 220.03 li
113.963 220.16 li
113.713 220.29 li
113.463 220.419 li
113.213 220.549 li
112.954 220.669 li
112.704 220.799 li
112.454 220.919 li
.568017 .483009 .477821 .146273 cmyk
@
112.454 220.919 mo
112.194 221.04 li
111.934 221.16 li
111.684 221.28 li
111.424 221.399 li
111.164 221.52 li
110.904 221.629 li
110.644 221.75 li
110.384 221.859 li
110.114 221.97 li
109.854 222.08 li
109.594 222.189 li
109.324 222.29 li
109.063 222.399 li
108.793 222.5 li
108.534 222.609 li
108.264 222.709 li
107.994 222.81 li
107.724 222.899 li
107.463 223 li
107.194 223.1 li
106.924 223.189 li
106.654 223.28 li
106.374 223.37 li
106.104 223.459 li
105.833 223.549 li
105.563 223.629 li
105.284 223.72 li
105.014 223.799 li
104.733 223.879 li
104.463 223.959 li
104.184 224.04 li
103.914 224.12 li
103.634 224.189 li
103.354 224.27 li
103.083 224.339 li
102.804 224.41 li
102.523 224.479 li
.591119 .50695 .50222 .190311 cmyk
@
102.523 224.479 mo
102.244 224.549 li
101.963 224.609 li
101.684 224.68 li
101.404 224.74 li
101.124 224.799 li
100.844 224.859 li
100.563 224.919 li
100.273 224.979 li
99.9937 225.04 li
99.7134 225.089 li
99.4336 225.14 li
99.1436 225.189 li
98.8638 225.24 li
98.5737 225.29 li
98.2935 225.339 li
98.0034 225.379 li
97.7236 225.43 li
97.4336 225.47 li
97.1538 225.509 li
96.8638 225.549 li
96.5835 225.58 li
96.2935 225.62 li
96.0034 225.649 li
95.7236 225.68 li
95.4336 225.709 li
95.1436 225.74 li
94.8638 225.77 li
94.5737 225.799 li
94.2837 225.82 li
93.9937 225.839 li
93.7134 225.87 li
93.4238 225.89 li
93.1338 225.899 li
92.8438 225.919 li
92.5537 225.939 li
92.2637 225.95 li
91.9834 225.959 li
91.6938 225.97 li
.613397 .529625 .523186 .2374 cmyk
@
91.6938 225.97 mo
91.4038 225.979 li
91.1138 225.99 li
90.8237 225.99 li
90.5337 226 li
90.2437 226 li
89.9536 226 li
89.6636 226 li
89.3838 226 li
89.0938 225.99 li
88.8037 225.99 li
88.5137 225.979 li
88.2236 225.97 li
87.9336 225.959 li
87.6436 225.95 li
87.3535 225.93 li
87.0737 225.919 li
86.7837 225.899 li
86.4937 225.89 li
86.2036 225.87 li
85.9136 225.839 li
85.6338 225.82 li
85.3438 225.799 li
85.0537 225.77 li
84.7637 225.74 li
84.4834 225.709 li
84.1938 225.68 li
83.9038 225.649 li
83.6235 225.62 li
83.3335 225.58 li
83.0435 225.54 li
82.7637 225.509 li
82.4736 225.47 li
82.1938 225.419 li
81.9038 225.379 li
81.6235 225.339 li
81.3335 225.29 li
81.0537 225.24 li
.631617 .551904 .543175 .289769 cmyk
@
81.0537 225.24 mo
80.7734 225.189 li
80.4834 225.14 li
80.2036 225.089 li
79.9238 225.03 li
79.6338 224.979 li
79.3535 224.919 li
79.0737 224.859 li
78.7935 224.799 li
78.5137 224.74 li
78.2334 224.68 li
77.9536 224.609 li
77.6738 224.549 li
77.3936 224.479 li
77.1138 224.41 li
76.8335 224.339 li
76.5537 224.259 li
76.2837 224.189 li
76.0034 224.12 li
75.7236 224.04 li
75.4536 223.959 li
75.1738 223.879 li
74.9038 223.799 li
74.6235 223.709 li
74.3535 223.629 li
74.0835 223.54 li
73.8135 223.459 li
73.5337 223.37 li
73.2637 223.28 li
72.9937 223.189 li
72.7236 223.089 li
72.4536 223 li
72.1836 222.899 li
71.9136 222.799 li
71.6538 222.7 li
71.3838 222.6 li
71.1138 222.5 li
70.8535 222.399 li
70.5835 222.29 li
.648371 .571221 .563867 .345068 cmyk
@
70.5835 222.29 mo
70.3237 222.18 li
70.0635 222.08 li
69.7935 221.97 li
69.5337 221.859 li
69.2734 221.74 li
69.0137 221.629 li
68.7534 221.509 li
68.4937 221.399 li
68.2334 221.28 li
67.9834 221.16 li
67.7236 221.04 li
67.4634 220.919 li
67.2134 220.79 li
66.9536 220.669 li
66.7036 220.54 li
66.4536 220.41 li
66.2036 220.28 li
65.9438 220.149 li
65.7036 220.02 li
65.4536 219.89 li
65.2036 219.75 li
64.9536 219.62 li
64.7036 219.479 li
64.4634 219.339 li
64.2134 219.2 li
63.9736 219.06 li
63.7334 218.919 li
63.4937 218.77 li
63.2437 218.629 li
63.0034 218.479 li
62.7734 218.33 li
62.5337 218.18 li
62.2935 218.03 li
62.0635 217.879 li
61.8237 217.729 li
61.5938 217.57 li
61.3535 217.419 li
.662654 .592065 .578393 .40354 cmyk
@
61.3535 217.419 mo
61.1235 217.259 li
60.8936 217.1 li
60.6636 216.939 li
60.4336 216.78 li
60.2036 216.62 li
59.9834 216.459 li
59.7534 216.29 li
59.5337 216.129 li
59.3037 215.959 li
59.0835 215.79 li
58.8638 215.62 li
58.6436 215.45 li
58.4238 215.28 li
58.2036 215.109 li
57.9937 214.93 li
57.7734 214.759 li
57.5635 214.58 li
57.3438 214.399 li
57.1338 214.22 li
56.9238 214.04 li
56.7134 213.859 li
56.5034 213.68 li
56.3037 213.5 li
56.0938 213.31 li
55.8936 213.129 li
55.6836 212.939 li
55.4834 212.75 li
55.2837 212.56 li
55.0835 212.37 li
54.8838 212.18 li
54.6836 211.99 li
54.4937 211.799 li
54.2935 211.6 li
54.1035 211.41 li
53.9136 211.209 li
53.7236 211.009 li
53.5337 210.81 li
53.3438 210.609 li
.675593 .606348 .595972 .467292 cmyk
@
53.3438 210.609 mo
53.1538 210.41 li
52.9736 210.209 li
52.7837 210.009 li
52.6035 209.81 li
52.4238 209.6 li
52.2437 209.39 li
52.0635 209.189 li
51.8838 208.979 li
51.7036 208.77 li
51.5337 208.56 li
51.3638 208.35 li
51.1836 208.14 li
51.0137 207.93 li
50.8438 207.709 li
50.6836 207.5 li
50.5137 207.28 li
50.3535 207.07 li
50.1836 206.85 li
50.0234 206.629 li
49.8638 206.419 li
49.7036 206.2 li
49.5435 205.97 li
49.3936 205.75 li
49.2334 205.53 li
49.0835 205.31 li
48.9336 205.08 li
48.7837 204.859 li
48.6338 204.629 li
48.4834 204.41 li
48.3335 204.18 li
48.1938 203.95 li
48.0537 203.72 li
47.9038 203.49 li
47.7637 203.259 li
47.6338 203.03 li
47.4937 202.799 li
47.3535 202.57 li
.688991 .623255 .613916 .53872 cmyk
@
47.3535 202.57 mo
47.2236 202.339 li
47.0938 202.1 li
46.9634 201.87 li
46.8335 201.629 li
46.7036 201.399 li
46.5737 201.16 li
46.4536 200.919 li
46.3335 200.68 li
46.2036 200.439 li
46.0835 200.2 li
45.9736 199.959 li
45.8535 199.72 li
45.7334 199.479 li
45.6235 199.24 li
45.5137 199 li
45.4038 198.75 li
45.2935 198.509 li
45.1836 198.27 li
45.0835 198.02 li
44.9736 197.77 li
44.8735 197.53 li
44.7734 197.28 li
44.6738 197.03 li
44.5737 196.79 li
44.4834 196.54 li
44.3838 196.29 li
44.2935 196.04 li
44.2036 195.79 li
44.1138 195.54 li
44.0234 195.29 li
43.9438 195.04 li
43.8535 194.79 li
43.7734 194.53 li
43.6938 194.28 li
43.6138 194.03 li
43.5337 193.77 li
43.4634 193.52 li
43.3838 193.27 li
.698085 .636164 .626184 .610101 cmyk
@
43.3838 193.27 mo
43.3135 193.009 li
43.2437 192.759 li
43.1738 192.5 li
43.1035 192.24 li
43.0435 191.99 li
42.9736 191.729 li
42.9136 191.47 li
42.8535 191.22 li
42.7935 190.959 li
42.7437 190.7 li
42.6836 190.439 li
42.6338 190.18 li
42.5737 189.93 li
42.5234 189.669 li
42.4736 189.41 li
42.4336 189.149 li
42.3838 188.89 li
42.3438 188.629 li
42.3037 188.37 li
42.2637 188.109 li
42.2236 187.839 li
42.1836 187.58 li
42.1538 187.32 li
42.1138 187.06 li
42.0835 186.799 li
42.0537 186.54 li
42.0234 186.28 li
42.0034 186.009 li
41.9736 185.75 li
41.9536 185.49 li
41.9336 185.229 li
41.9136 184.959 li
41.8936 184.7 li
41.8735 184.439 li
41.8638 184.18 li
41.8535 183.91 li
41.8438 183.649 li
.708309 .647578 .63769 .677394 cmyk
@
41.8438 183.649 mo
41.8335 183.39 li
41.8237 183.12 li
41.8135 182.859 li
41.8135 182.6 li
41.8135 182.33 li
41.8135 182.07 li
41.8135 181.81 li
41.8135 181.54 li
41.8237 181.28 li
41.8237 181.02 li
41.8335 180.75 li
41.8438 180.49 li
41.8535 180.229 li
41.8735 179.97 li
41.8838 179.7 li
41.9038 179.439 li
41.9238 179.18 li
41.9438 178.91 li
41.9634 178.649 li
41.9834 178.39 li
42.0137 178.129 li
42.0337 177.859 li
42.0635 177.6 li
42.0938 177.339 li
42.1338 177.08 li
42.1636 176.82 li
42.2036 176.56 li
42.2334 176.299 li
42.2734 176.04 li
42.3135 175.77 li
42.3638 175.509 li
42.4038 175.25 li
42.4536 174.99 li
42.5034 174.729 li
42.5537 174.479 li
42.6035 174.22 li
42.6538 173.959 li
42.7036 173.7 li
.718868 .658686 .646998 .739681 cmyk
@
42.7036 173.7 mo
42.7637 173.439 li
42.8237 173.18 li
42.8838 172.93 li
42.9438 172.669 li
43.0034 172.41 li
43.0737 172.16 li
43.1338 171.899 li
43.2036 171.64 li
43.2734 171.39 li
43.3438 171.129 li
43.4238 170.879 li
43.4937 170.62 li
43.5737 170.37 li
43.6538 170.12 li
43.7334 169.859 li
43.8135 169.609 li
43.8936 169.359 li
43.9834 169.109 li
44.0635 168.859 li
44.1538 168.609 li
44.2437 168.359 li
44.3335 168.109 li
44.4336 167.859 li
44.5234 167.609 li
44.6235 167.359 li
44.7134 167.109 li
44.8135 166.87 li
44.9238 166.62 li
45.0234 166.37 li
45.1235 166.129 li
45.2334 165.879 li
45.3438 165.64 li
45.4536 165.39 li
45.5635 165.149 li
45.6738 164.91 li
45.7837 164.669 li
45.9038 164.43 li
.72726 .667658 .65304 .791501 cmyk
@
45.9038 164.43 mo
46.0234 164.189 li
46.1436 163.95 li
46.2637 163.709 li
46.3838 163.47 li
46.5034 163.229 li
46.6338 162.99 li
46.7637 162.759 li
46.8838 162.52 li
47.0137 162.29 li
47.1436 162.049 li
47.2837 161.82 li
47.4136 161.58 li
47.5537 161.35 li
47.6938 161.12 li
47.8237 160.89 li
47.9736 160.66 li
48.1138 160.43 li
48.2534 160.2 li
48.4038 159.97 li
48.5435 159.75 li
48.6938 159.52 li
48.8438 159.299 li
48.9937 159.07 li
49.1436 158.85 li
49.3037 158.629 li
49.4536 158.399 li
49.6138 158.18 li
49.7734 157.959 li
49.9336 157.74 li
50.0938 157.53 li
50.2534 157.31 li
50.4238 157.089 li
50.5835 156.879 li
50.7534 156.66 li
50.9238 156.45 li
51.0938 156.229 li
51.2637 156.02 li
51.4336 155.81 li
.734615 .672541 .658747 .831296 cmyk
@
51.4336 155.81 mo
51.6138 155.6 li
51.7837 155.39 li
51.9634 155.18 li
52.1436 154.979 li
52.3237 154.77 li
52.5034 154.56 li
52.6836 154.359 li
52.8638 154.16 li
53.0537 153.95 li
53.2334 153.75 li
53.4238 153.549 li
53.6138 153.35 li
53.8037 153.16 li
53.9937 152.959 li
54.1836 152.759 li
54.3838 152.57 li
54.5737 152.37 li
54.7734 152.18 li
54.9736 151.99 li
55.1738 151.799 li
55.3735 151.609 li
55.5737 151.419 li
55.7734 151.229 li
55.9834 151.049 li
56.1836 150.859 li
56.3936 150.68 li
56.6035 150.49 li
56.8037 150.31 li
57.0137 150.129 li
57.2334 149.95 li
57.4438 149.77 li
57.6538 149.6 li
57.8735 149.419 li
58.0835 149.25 li
58.3037 149.07 li
58.5234 148.899 li
58.7437 148.729 li
.742702 .676081 .66482 .86743 cmyk
@
58.7437 148.729 mo
58.9634 148.56 li
59.1836 148.39 li
59.4038 148.22 li
59.6338 148.06 li
59.8535 147.89 li
60.0835 147.729 li
60.3037 147.56 li
60.5337 147.399 li
60.7637 147.24 li
60.9937 147.08 li
61.2236 146.919 li
61.4634 146.77 li
61.6938 146.609 li
61.9238 146.459 li
62.1636 146.31 li
62.3936 146.16 li
62.6338 146.009 li
62.8735 145.859 li
63.1138 145.709 li
63.3535 145.56 li
63.5938 145.419 li
63.8335 145.27 li
64.0835 145.129 li
64.3237 144.99 li
64.5737 144.85 li
64.8135 144.709 li
65.0635 144.58 li
65.3135 144.439 li
65.5537 144.31 li
65.8037 144.18 li
66.0537 144.04 li
66.3135 143.91 li
66.5635 143.79 li
66.8135 143.66 li
67.0635 143.53 li
67.3237 143.41 li
67.5737 143.28 li
.75021 .679683 .670222 .90164 cmyk
@
68.3857 142.281 mo
67.5371 142.44 66.9541 142.484 66.2427 142.553 cv
67.4058 144.792 li
67.5645 144.582 68.2422 143.797 68.8608 143.196 cv
69.5225 142.55 70.1504 142.018 70.5815 141.72 cv
70.0898 141.902 69.2939 142.11 68.3857 142.281 cv
cp
f
2 lw
26.2935 105.49 mo
26.4038 105.439 li
26.5034 105.399 li
26.6138 105.35 li
26.7236 105.299 li
26.8237 105.25 li
26.9336 105.189 li
27.0435 105.14 li
27.1436 105.08 li
27.2534 105.02 li
27.3638 104.959 li
27.4634 104.899 li
27.5737 104.839 li
27.6836 104.78 li
27.7837 104.709 li
27.8936 104.64 li
28.0034 104.58 li
28.1035 104.509 li
28.2134 104.43 li
28.3237 104.359 li
28.4238 104.29 li
28.5337 104.209 li
28.6436 104.129 li
28.7437 104.06 li
28.8535 103.979 li
28.9634 103.89 li
29.0635 103.81 li
29.1738 103.729 li
29.2837 103.64 li
29.3838 103.549 li
29.4937 103.459 li
29.6035 103.37 li
29.7036 103.28 li
29.8135 103.189 li
29.9238 103.089 li
30.0234 103 li
30.1338 102.899 li
30.2437 102.799 li
30.3438 102.7 li
30.4536 102.6 li
30.5635 102.5 li
30.6636 102.39 li
30.7734 102.29 li
30.8838 102.18 li
30.9834 102.07 li
31.0938 101.959 li
31.2036 101.85 li
31.3037 101.729 li
31.4136 101.62 li
31.5234 101.5 li
31.6235 101.39 li
31.7334 101.27 li
31.8438 101.149 li
31.9438 101.03 li
32.0537 100.899 li
32.1636 100.78 li
32.2637 100.66 li
32.3735 100.53 li
32.4834 100.399 li
32.5835 100.27 li
32.6938 100.14 li
32.8037 100.009 li
32.9038 99.8794 li
33.0137 99.7397 li
33.1235 99.6094 li
33.2236 99.4697 li
33.3335 99.3296 li
33.4438 99.1895 li
33.5435 99.0493 li
33.6538 98.9097 li
33.7637 98.7593 li
33.8638 98.6196 li
33.9736 98.4697 li
34.0835 98.3198 li
34.1836 98.1797 li
34.2935 98.0298 li
34.4038 97.8696 li
34.5034 97.7197 li
34.6138 97.5698 li
34.7236 97.4097 li
34.8237 97.2593 li
34.9336 97.0996 li
35.0435 96.9395 li
35.1436 96.7798 li
35.2534 96.6196 li
35.3638 96.4595 li
35.4634 96.2993 li
35.5737 96.1294 li
35.6836 95.9697 li
35.7837 95.7993 li
35.8936 95.6294 li
36.0034 95.4595 li
36.1035 95.2896 li
36.2134 95.1196 li
36.3237 94.9497 li
36.4238 94.7695 li
36.5337 94.5996 li
36.6436 94.4194 li
36.7437 94.2397 li
36.8535 94.0698 li
36.9634 93.8896 li
37.0635 93.7095 li
37.1738 93.5195 li
37.2837 93.3394 li
37.3838 93.1597 li
37.4937 92.9697 li
37.6035 92.7896 li
37.7036 92.5996 li
37.8135 92.4097 li
37.9238 92.2197 li
38.0234 92.0298 li
38.1338 91.8394 li
38.2437 91.6494 li
38.3438 91.4595 li
38.4536 91.2593 li
38.5635 91.0698 li
38.6636 90.8696 li
38.7734 90.6694 li
38.8838 90.4795 li
38.9834 90.2798 li
39.0938 90.0796 li
39.2036 89.8794 li
39.3037 89.6694 li
39.4136 89.4697 li
39.5234 89.2695 li
39.6235 89.0596 li
39.7334 88.8594 li
39.8438 88.6494 li
39.9438 88.4395 li
40.0537 88.2295 li
40.1636 88.0195 li
40.2637 87.8096 li
40.3735 87.5996 li
40.4834 87.3896 li
40.5835 87.1797 li
40.6938 86.9595 li
40.8037 86.7495 li
40.9038 86.5298 li
41.0137 86.3198 li
41.1235 86.0996 li
41.2236 85.8794 li
41.3335 85.6597 li
41.4438 85.4395 li
41.5435 85.2197 li
41.6538 84.9995 li
41.7637 84.7798 li
41.8638 84.5596 li
41.9736 84.3296 li
42.0835 84.1094 li
42.1836 83.8794 li
42.2935 83.6597 li
42.4038 83.4297 li
42.5034 83.2095 li
42.6138 82.9795 li
42.7236 82.7495 li
42.8237 82.5195 li
42.9336 82.2896 li
43.0435 82.0596 li
43.1436 81.8296 li
43.2534 81.5996 li
43.3535 81.3594 li
43.4634 81.1294 li
43.5737 80.8994 li
43.6738 80.6597 li
43.7837 80.4297 li
43.8936 80.1895 li
43.9937 79.9497 li
44.1035 79.7197 li
44.2134 79.4795 li
44.3135 79.2397 li
44.4238 78.9995 li
44.5337 78.7593 li
44.6338 78.5195 li
44.7437 78.2798 li
44.8535 78.0396 li
44.9536 77.7993 li
45.0635 77.5596 li
45.1738 77.3198 li
45.2734 77.0698 li
45.3838 76.8296 li
45.4937 76.5894 li
45.5938 76.3394 li
45.7036 76.0996 li
45.8135 75.8496 li
45.9136 75.5996 li
46.0234 75.3594 li
46.1338 75.1094 li
46.2334 74.8594 li
46.3438 74.6196 li
46.4536 74.3696 li
46.5537 74.1196 li
46.6636 73.8696 li
46.7734 73.6196 li
46.8735 73.3696 li
46.9834 73.1196 li
47.0938 72.8696 li
47.1938 72.6196 li
47.3037 72.3696 li
47.4136 72.1196 li
47.5137 71.8696 li
47.6235 71.6196 li
47.7334 71.3696 li
47.8335 71.1094 li
47.9438 70.8594 li
48.0537 70.6094 li
48.1538 70.3496 li
48.2637 70.0996 li
48.3735 69.8496 li
48.4736 69.5894 li
48.5835 69.3394 li
48.6938 69.0796 li
48.7935 68.8296 li
48.9038 68.5698 li
49.0137 68.3198 li
49.1138 68.0596 li
49.2236 67.8096 li
49.3335 67.5493 li
49.4336 67.2993 li
49.5435 67.0396 li
49.6538 66.7896 li
49.7534 66.5298 li
49.8638 66.2695 li
49.9736 66.0195 li
50.0737 65.7593 li
50.1836 65.5093 li
50.2935 65.2495 li
50.3936 64.9897 li
50.5034 64.7397 li
50.6138 64.4795 li
50.7134 64.2197 li
50.8237 63.9697 li
50.9336 63.7095 li
51.0337 63.4497 li
51.1436 63.1895 li
51.2534 62.9395 li
51.3535 62.6797 li
51.4634 62.4194 li
51.5737 62.1694 li
51.6738 61.9097 li
51.7837 61.6494 li
51.8936 61.3994 li
51.9937 61.1396 li
52.1035 60.8794 li
52.2134 60.6294 li
52.3135 60.3696 li
52.4238 60.1196 li
52.5337 59.8594 li
52.6338 59.5996 li
52.7437 59.3496 li
52.8535 59.0894 li
52.9536 58.8394 li
53.0635 58.5796 li
53.1738 58.3296 li
53.2734 58.0698 li
53.3838 57.8198 li
53.4937 57.5596 li
53.5938 57.3096 li
53.7036 57.0493 li
53.8135 56.7993 li
53.9136 56.5493 li
54.0234 56.2896 li
54.1338 56.0396 li
54.2334 55.7896 li
54.3438 55.5298 li
54.4536 55.2798 li
54.5537 55.0298 li
54.6636 54.7798 li
54.7734 54.5298 li
54.8735 54.2798 li
54.9834 54.0298 li
55.0938 53.7695 li
55.1938 53.5195 li
55.3037 53.2695 li
55.4136 53.0298 li
55.5137 52.7798 li
55.6235 52.5298 li
55.7334 52.2798 li
55.8335 52.0298 li
55.9438 51.7798 li
56.0537 51.5396 li
56.1538 51.2896 li
56.2637 51.0396 li
56.3735 50.7993 li
56.4736 50.5493 li
56.5835 50.3096 li
56.6938 50.0596 li
56.7935 49.8198 li
56.9038 49.5796 li
57.0137 49.3296 li
57.1138 49.0894 li
57.2236 48.8496 li
57.3335 48.6094 li
57.4336 48.3696 li
57.5435 48.1294 li
57.6538 47.8896 li
57.7534 47.6494 li
57.8638 47.4097 li
57.9736 47.1694 li
58.0737 46.9297 li
58.1836 46.6997 li
58.2935 46.4595 li
58.3936 46.2295 li
58.5034 45.9897 li
58.6138 45.7593 li
58.7134 45.5195 li
58.8237 45.2896 li
58.9336 45.0596 li
59.0337 44.8198 li
59.1436 44.5894 li
59.2534 44.3594 li
59.3535 44.1294 li
59.4634 43.8994 li
59.5737 43.6797 li
59.6738 43.4497 li
59.7837 43.2197 li
59.8936 42.9897 li
59.9937 42.7695 li
60.1035 42.5396 li
60.2134 42.3198 li
60.3135 42.0996 li
60.4238 41.8696 li
60.5337 41.6494 li
60.6338 41.4297 li
60.7437 41.2095 li
60.8535 40.9897 li
60.9536 40.7695 li
61.0635 40.5596 li
61.1636 40.3394 li
61.2734 40.1196 li
61.3838 39.9097 li
61.4834 39.6895 li
61.5938 39.4795 li
61.7036 39.2695 li
61.8037 39.0493 li
61.9136 38.8394 li
62.0234 38.6294 li
62.1235 38.4194 li
62.2334 38.2197 li
62.3438 38.0093 li
62.4438 37.7993 li
62.5537 37.5996 li
62.6636 37.3896 li
62.7637 37.1895 li
62.8735 36.9897 li
62.9834 36.7798 li
63.0835 36.5796 li
63.1938 36.3794 li
63.3037 36.1797 li
63.4038 35.9897 li
63.5137 35.7896 li
63.6235 35.5894 li
63.7236 35.3994 li
63.8335 35.1997 li
63.9438 35.0093 li
64.0435 34.8198 li
64.1538 34.6294 li
64.2637 34.4395 li
64.3638 34.2495 li
64.4736 34.0596 li
64.5835 33.8794 li
64.6836 33.6895 li
64.7935 33.5093 li
64.9038 33.3198 li
65.0034 33.1396 li
65.1138 32.9595 li
65.2236 32.7798 li
65.3237 32.5996 li
65.4336 32.4194 li
65.5435 32.2397 li
65.6436 32.0698 li
65.7534 31.8896 li
65.8638 31.7197 li
65.9634 31.5493 li
66.0737 31.3794 li
66.1836 31.2095 li
66.2837 31.0396 li
66.3936 30.8696 li
66.5034 30.6997 li
66.6035 30.5396 li
66.7134 30.3696 li
66.8237 30.2095 li
66.9238 30.0493 li
67.0337 29.8896 li
67.1436 29.7295 li
67.2437 29.5698 li
67.3535 29.4097 li
67.4634 29.2593 li
67.5635 29.0996 li
67.6738 28.9497 li
67.7837 28.7993 li
67.8838 28.6494 li
67.9937 28.4995 li
68.1035 28.3496 li
68.2036 28.1997 li
68.3135 28.0493 li
68.4238 27.9097 li
68.5234 27.7695 li
68.6338 27.6196 li
68.7437 27.4795 li
68.8438 27.3394 li
68.9536 27.2095 li
69.0635 27.0698 li
69.1636 26.9297 li
69.2734 26.7993 li
69.3838 26.6694 li
69.4834 26.5298 li
69.5938 26.3994 li
69.7036 26.2798 li
69.8037 26.1494 li
69.9136 26.0195 li
70.0234 25.8994 li
70.1235 25.7695 li
70.2334 25.6494 li
70.3438 25.5298 li
70.4438 25.4097 li
70.5537 25.2896 li
70.6636 25.1797 li
70.7637 25.0596 li
70.8735 24.9497 li
70.9834 24.8296 li
71.0835 24.7197 li
71.1938 24.6094 li
71.3037 24.4995 li
71.4038 24.3994 li
71.5137 24.2896 li
71.6235 24.1895 li
71.7236 24.0796 li
71.8335 23.9795 li
71.9438 23.8794 li
72.0435 23.7798 li
72.1538 23.6895 li
72.2637 23.5894 li
72.3638 23.4995 li
72.4736 23.3994 li
72.5835 23.3096 li
72.6836 23.2197 li
72.7935 23.1294 li
72.9038 23.0493 li
73.0034 22.9595 li
73.1138 22.8794 li
73.2236 22.7896 li
73.3237 22.7095 li
73.4336 22.6294 li
73.5435 22.5493 li
73.6436 22.4795 li
73.7534 22.3994 li
73.8638 22.3296 li
73.9634 22.2593 li
74.0737 22.1797 li
74.1836 22.1094 li
74.2837 22.0493 li
74.3936 21.9795 li
74.5034 21.9194 li
74.6035 21.8496 li
74.7134 21.7896 li
74.8237 21.7295 li
74.9238 21.6694 li
75.0337 21.6094 li
75.1436 21.5596 li
75.2437 21.4995 li
75.3535 21.4497 li
75.4634 21.3994 li
75.5635 21.3496 li
75.6738 21.2993 li
75.7837 21.2495 li
75.8838 21.2095 li
75.9937 21.1597 li
76.1035 21.1196 li
76.2036 21.0796 li
76.3135 21.0396 li
76.4238 20.9995 li
76.5234 20.9697 li
76.6338 20.9297 li
76.7437 20.8994 li
76.8438 20.8696 li
76.9536 20.8296 li
77.0635 20.8096 li
77.1636 20.7798 li
77.2734 20.7495 li
77.3838 20.7295 li
77.4834 20.7095 li
77.5938 20.6895 li
77.7036 20.6694 li
77.8037 20.6494 li
77.9136 20.6294 li
78.0234 20.6196 li
78.1235 20.5996 li
78.2334 20.5894 li
78.3438 20.5796 li
78.4438 20.5698 li
78.5537 20.5698 li
78.6636 20.5596 li
78.7637 20.5596 li
78.8735 20.5493 li
78.9834 20.5493 li
79.0835 20.5493 li
79.1938 20.5493 li
79.2935 20.5596 li
79.4038 20.5596 li
79.5137 20.5698 li
79.6138 20.5796 li
79.7236 20.5894 li
79.8335 20.5996 li
79.9336 20.6094 li
80.0435 20.6294 li
80.1538 20.6396 li
80.2534 20.6597 li
80.3638 20.6797 li
80.4736 20.6997 li
80.5737 20.7197 li
80.6836 20.7397 li
80.7935 20.7695 li
80.8936 20.7993 li
81.0034 20.8198 li
81.1138 20.8496 li
81.2134 20.8896 li
81.3237 20.9194 li
81.4336 20.9497 li
81.5337 20.9897 li
81.6436 21.0298 li
81.7534 21.0596 li
81.8535 21.0996 li
81.9634 21.1494 li
82.0737 21.1895 li
82.1738 21.2295 li
82.2837 21.2798 li
82.3936 21.3296 li
82.4937 21.3794 li
82.6035 21.4297 li
82.7134 21.4795 li
82.8135 21.5396 li
82.9238 21.5894 li
83.0337 21.6494 li
83.1338 21.7095 li
83.2437 21.7695 li
83.3535 21.8296 li
83.4536 21.8896 li
83.5635 21.9595 li
83.6738 22.0195 li
83.7734 22.0894 li
83.8838 22.1597 li
83.9937 22.2295 li
84.0938 22.2993 li
84.2036 22.3696 li
84.3135 22.4497 li
84.4136 22.5298 li
84.5234 22.5996 li
84.6338 22.6797 li
84.7334 22.7593 li
84.8438 22.8496 li
84.9536 22.9297 li
85.0537 23.0093 li
85.1636 23.0996 li
85.2734 23.1895 li
85.3735 23.2798 li
85.4834 23.3696 li
85.5938 23.4595 li
85.6938 23.5596 li
85.8037 23.6494 li
85.9136 23.7495 li
86.0137 23.8496 li
86.1235 23.9497 li
86.2334 24.0493 li
86.3335 24.1494 li
86.4438 24.2495 li
86.5537 24.3594 li
86.6538 24.4595 li
86.7637 24.5698 li
86.8735 24.6797 li
86.9736 24.7896 li
87.0835 24.8994 li
87.1938 25.0195 li
87.2935 25.1294 li
87.4038 25.2495 li
87.5137 25.3696 li
87.6138 25.4897 li
87.7236 25.6094 li
87.8335 25.7295 li
87.9336 25.8496 li
88.0435 25.9795 li
88.1538 26.0996 li
88.2534 26.2295 li
88.3638 26.3594 li
88.4736 26.4897 li
88.5737 26.6196 li
88.6836 26.7495 li
88.7935 26.8794 li
88.8936 27.0195 li
89.0034 27.1597 li
89.1138 27.2896 li
89.2134 27.4297 li
89.3237 27.5698 li
89.4336 27.7095 li
89.5337 27.8594 li
89.6436 27.9995 li
89.7534 28.1494 li
89.8535 28.2896 li
89.9634 28.4395 li
90.0737 28.5894 li
90.1738 28.7397 li
90.2837 28.8896 li
90.3936 29.0493 li
90.4937 29.1997 li
90.6035 29.3594 li
90.7134 29.5093 li
90.8135 29.6694 li
90.9238 29.8296 li
91.0337 29.9897 li
91.1338 30.1494 li
91.2437 30.3096 li
91.3535 30.4795 li
91.4536 30.6396 li
91.5635 30.8096 li
91.6738 30.9795 li
91.7734 31.1396 li
91.8838 31.3096 li
91.9937 31.4795 li
92.0938 31.6597 li
92.2036 31.8296 li
92.3135 31.9995 li
92.4136 32.1797 li
92.5234 32.3594 li
92.6338 32.5298 li
92.7334 32.7095 li
92.8438 32.8896 li
92.9536 33.0698 li
93.0537 33.2593 li
93.1636 33.4395 li
93.2734 33.6196 li
93.3735 33.8096 li
93.4834 33.9897 li
93.5938 34.1797 li
93.6938 34.3696 li
93.8037 34.5596 li
93.9136 34.7495 li
94.0137 34.9395 li
94.1235 35.1294 li
94.2334 35.3296 li
94.3335 35.5195 li
94.4438 35.7197 li
94.5537 35.9097 li
94.6538 36.1094 li
94.7637 36.3096 li
94.8735 36.5093 li
94.9736 36.7095 li
95.0835 36.9097 li
95.1938 37.1094 li
95.2935 37.3198 li
95.4038 37.5195 li
95.5137 37.7295 li
95.6138 37.9297 li
95.7236 38.1396 li
95.8335 38.3496 li
95.9336 38.5596 li
96.0435 38.7695 li
96.1538 38.9795 li
96.2534 39.1895 li
96.3638 39.3994 li
96.4736 39.6196 li
96.5737 39.8296 li
96.6836 40.0396 li
96.7935 40.2593 li
96.8936 40.4795 li
97.0034 40.6895 li
97.1035 40.9097 li
97.2134 41.1294 li
97.3237 41.3496 li
97.4238 41.5698 li
97.5337 41.7896 li
97.6436 42.0195 li
97.7437 42.2397 li
97.8535 42.4595 li
97.9634 42.6895 li
98.0635 42.9097 li
98.1738 43.1396 li
98.2837 43.3696 li
98.3838 43.5894 li
98.4937 43.8198 li
98.6035 44.0493 li
98.7036 44.2798 li
98.8135 44.5093 li
98.9238 44.7397 li
99.0234 44.9697 li
99.1338 45.1997 li
99.2437 45.4395 li
99.3438 45.6694 li
99.4536 45.8994 li
99.5635 46.1396 li
99.6636 46.3696 li
99.7734 46.6094 li
99.8838 46.8496 li
99.9834 47.0796 li
100.094 47.3198 li
100.204 47.5596 li
100.304 47.7993 li
100.414 48.0396 li
100.523 48.2798 li
100.624 48.5195 li
100.733 48.7593 li
100.844 48.9995 li
100.944 49.2495 li
101.054 49.4897 li
101.164 49.7295 li
101.264 49.9795 li
101.374 50.2197 li
101.483 50.4595 li
101.583 50.7095 li
101.694 50.9497 li
101.804 51.1997 li
101.904 51.4497 li
102.014 51.6895 li
102.124 51.9395 li
102.224 52.1895 li
102.333 52.4395 li
102.444 52.6895 li
102.543 52.9297 li
102.654 53.1797 li
102.764 53.4297 li
102.864 53.6797 li
102.974 53.9297 li
103.083 54.1797 li
103.184 54.4395 li
103.293 54.6895 li
103.404 54.9395 li
103.503 55.1895 li
103.614 55.4395 li
103.724 55.6997 li
103.824 55.9497 li
103.934 56.1997 li
104.043 56.4497 li
104.144 56.7095 li
104.253 56.9595 li
104.364 57.2197 li
104.463 57.4697 li
104.574 57.7197 li
104.684 57.9795 li
104.784 58.2295 li
104.894 58.4897 li
105.003 58.7397 li
105.104 58.9995 li
105.213 59.2593 li
105.324 59.5093 li
105.424 59.7695 li
105.534 60.0195 li
105.644 60.2798 li
105.744 60.5396 li
105.854 60.7896 li
105.963 61.0493 li
106.063 61.2993 li
106.174 61.5596 li
106.284 61.8198 li
106.384 62.0698 li
106.494 62.3296 li
106.604 62.5894 li
106.704 62.8394 li
106.813 63.0996 li
106.924 63.3594 li
107.023 63.6094 li
107.134 63.8696 li
107.244 64.1294 li
107.344 64.3896 li
107.454 64.6396 li
107.563 64.8994 li
107.664 65.1597 li
107.773 65.4097 li
107.884 65.6694 li
107.983 65.9194 li
108.094 66.1797 li
108.204 66.4395 li
108.304 66.6895 li
108.414 66.9497 li
108.523 67.1997 li
108.624 67.4595 li
108.733 67.7197 li
108.844 67.9697 li
108.944 68.2295 li
109.054 68.4795 li
109.164 68.7397 li
109.264 68.9897 li
109.374 69.2495 li
109.483 69.4995 li
109.583 69.7495 li
109.694 70.0093 li
109.804 70.2593 li
109.904 70.5093 li
110.014 70.7695 li
110.124 71.0195 li
110.224 71.2695 li
110.333 71.5298 li
110.444 71.7798 li
110.543 72.0298 li
110.654 72.2798 li
110.764 72.5298 li
110.864 72.7798 li
110.974 73.0298 li
111.083 73.2798 li
111.184 73.5298 li
111.293 73.7798 li
111.404 74.0298 li
111.503 74.2798 li
111.614 74.5298 li
111.724 74.7695 li
111.824 75.0195 li
111.934 75.2695 li
112.043 75.5093 li
112.144 75.7593 li
112.253 76.0093 li
112.364 76.2495 li
112.463 76.4995 li
112.574 76.7397 li
112.684 76.9795 li
112.784 77.2295 li
112.894 77.4697 li
113.003 77.7095 li
113.104 77.9497 li
113.213 78.1895 li
113.324 78.4395 li
113.424 78.6797 li
113.534 78.9194 li
113.644 79.1494 li
113.744 79.3896 li
113.854 79.6294 li
113.963 79.8696 li
114.063 80.0996 li
114.174 80.3394 li
114.284 80.5796 li
114.384 80.8096 li
114.494 81.0396 li
114.604 81.2798 li
114.704 81.5093 li
114.813 81.7397 li
114.924 81.9697 li
115.023 82.2095 li
115.134 82.4395 li
115.233 82.6694 li
115.344 82.8896 li
115.454 83.1196 li
115.554 83.3496 li
115.664 83.5796 li
115.773 83.7993 li
115.874 84.0298 li
115.983 84.2495 li
116.094 84.4795 li
116.194 84.6997 li
116.304 84.9194 li
116.414 85.1396 li
116.514 85.3594 li
116.624 85.5796 li
116.733 85.7993 li
116.833 86.0195 li
116.944 86.2397 li
117.054 86.4497 li
117.154 86.6694 li
117.264 86.8896 li
117.374 87.0996 li
117.474 87.3096 li
117.583 87.5195 li
117.694 87.7397 li
117.793 87.9497 li
117.904 88.1597 li
118.014 88.3696 li
118.114 88.5698 li
118.224 88.7798 li
118.333 88.9897 li
118.434 89.1895 li
118.543 89.3994 li
118.654 89.5996 li
118.753 89.7993 li
118.864 89.9995 li
118.974 90.1997 li
119.074 90.3994 li
119.184 90.5996 li
119.293 90.7993 li
119.394 90.9995 li
119.503 91.1895 li
119.614 91.3896 li
119.713 91.5796 li
119.824 91.7695 li
119.934 91.9595 li
120.034 92.1494 li
120.144 92.3394 li
120.253 92.5298 li
120.354 92.7197 li
120.463 92.9097 li
120.574 93.0894 li
120.674 93.2695 li
120.784 93.4595 li
120.894 93.6396 li
120.994 93.8198 li
121.104 93.9995 li
121.213 94.1797 li
121.313 94.3594 li
121.424 94.5298 li
121.534 94.7095 li
121.634 94.8794 li
121.744 95.0596 li
121.854 95.2295 li
121.954 95.3994 li
122.063 95.5698 li
122.174 95.7397 li
122.273 95.8994 li
122.384 96.0698 li
122.494 96.2397 li
122.594 96.3994 li
122.704 96.5596 li
122.813 96.7197 li
122.914 96.8794 li
123.023 97.0396 li
123.134 97.1997 li
123.233 97.3594 li
123.344 97.5093 li
123.454 97.6694 li
123.554 97.8198 li
123.664 97.9697 li
123.773 98.1196 li
123.874 98.2695 li
123.983 98.4194 li
124.094 98.5698 li
124.194 98.7095 li
124.304 98.8496 li
124.414 98.9995 li
124.514 99.1396 li
124.624 99.2798 li
124.733 99.4194 li
124.833 99.5596 li
124.944 99.6895 li
125.054 99.8296 li
125.154 99.9595 li
125.264 100.089 li
125.374 100.22 li
125.474 100.35 li
125.583 100.479 li
125.694 100.609 li
125.793 100.74 li
125.904 100.859 li
126.014 100.979 li
126.114 101.1 li
126.224 101.22 li
126.333 101.339 li
126.434 101.459 li
126.543 101.58 li
126.654 101.689 li
126.753 101.81 li
126.864 101.919 li
126.974 102.03 li
127.074 102.14 li
127.184 102.25 li
127.293 102.35 li
127.394 102.459 li
127.503 102.56 li
127.614 102.66 li
127.713 102.759 li
127.824 102.859 li
127.934 102.959 li
128.034 103.06 li
128.144 103.149 li
128.253 103.25 li
128.354 103.339 li
128.463 103.43 li
128.574 103.52 li
128.674 103.609 li
128.784 103.689 li
128.894 103.78 li
128.994 103.859 li
129.104 103.95 li
129.213 104.03 li
129.313 104.109 li
129.424 104.18 li
129.534 104.259 li
129.634 104.33 li
129.744 104.41 li
129.854 104.479 li
129.954 104.549 li
130.063 104.62 li
130.174 104.689 li
130.273 104.75 li
130.384 104.82 li
130.494 104.879 li
130.594 104.939 li
130.704 105 li
130.813 105.06 li
130.914 105.12 li
131.023 105.169 li
131.134 105.229 li
131.233 105.28 li
131.344 105.33 li
131.454 105.379 li
131.554 105.43 li
131.664 105.47 li
131.773 105.52 li
131.874 105.56 li
131.983 105.6 li
132.094 105.64 li
132.194 105.68 li
132.304 105.72 li
132.414 105.759 li
132.514 105.79 li
132.624 105.82 li
132.733 105.85 li
132.833 105.879 li
132.944 105.91 li
133.054 105.939 li
133.154 105.959 li
133.264 105.99 li
133.364 106.009 li
133.474 106.03 li
133.583 106.049 li
133.684 106.07 li
133.793 106.08 li
133.904 106.1 li
134.003 106.109 li
134.114 106.12 li
134.224 106.129 li
134.324 106.14 li
134.434 106.14 li
134.543 106.149 li
134.644 106.149 li
134.753 106.149 li
134.864 106.149 li
134.963 106.149 li
135.074 106.149 li
135.184 106.149 li
135.284 106.14 li
135.394 106.129 li
135.503 106.129 li
135.604 106.109 li
135.713 106.1 li
135.824 106.089 li
135.924 106.07 li
136.034 106.06 li
136.144 106.04 li
136.244 106.02 li
136.354 106 li
136.463 105.979 li
136.563 105.95 li
136.674 105.93 li
136.784 105.899 li
136.884 105.87 li
136.994 105.839 li
137.104 105.81 li
137.204 105.78 li
137.313 105.74 li
137.424 105.7 li
137.523 105.669 li
137.634 105.629 li
137.744 105.589 li
137.844 105.54 li
137.954 105.5 li
138.063 105.45 li
138.164 105.41 li
138.273 105.359 li
138.384 105.31 li
138.483 105.259 li
138.594 105.2 li
138.704 105.149 li
138.804 105.089 li
138.914 105.03 li
139.023 104.979 li
139.124 104.91 li
139.233 104.85 li
139.344 104.79 li
139.444 104.72 li
139.554 104.66 li
139.664 104.589 li
139.764 104.52 li
139.874 104.45 li
139.983 104.379 li
140.083 104.299 li
140.194 104.229 li
140.304 104.149 li
140.404 104.07 li
140.514 103.99 li
140.624 103.91 li
140.724 103.83 li
140.833 103.74 li
140.944 103.66 li
141.043 103.57 li
141.154 103.479 li
141.264 103.39 li
141.364 103.299 li
141.474 103.209 li
141.583 103.109 li
141.684 103.02 li
141.793 102.919 li
141.904 102.82 li
142.003 102.72 li
142.114 102.62 li
142.224 102.52 li
142.324 102.41 li
142.434 102.31 li
142.543 102.2 li
142.644 102.089 li
142.753 101.979 li
142.864 101.87 li
142.963 101.759 li
143.074 101.64 li
143.184 101.53 li
143.284 101.41 li
143.394 101.29 li
143.503 101.169 li
143.604 101.049 li
143.713 100.93 li
143.824 100.81 li
143.924 100.68 li
144.034 100.549 li
144.144 100.43 li
144.244 100.299 li
144.354 100.169 li
144.463 100.04 li
144.563 99.8994 li
144.674 99.7695 li
144.784 99.6294 li
144.884 99.4995 li
144.994 99.3594 li
145.104 99.2197 li
145.204 99.0796 li
145.313 98.9395 li
145.424 98.7896 li
145.523 98.6494 li
145.634 98.4995 li
145.744 98.3496 li
145.844 98.2095 li
145.954 98.0596 li
146.063 97.8994 li
146.164 97.7495 li
146.273 97.5996 li
146.384 97.4395 li
146.483 97.2896 li
146.594 97.1294 li
146.704 96.9697 li
146.804 96.8096 li
146.914 96.6494 li
147.023 96.4897 li
147.124 96.3296 li
147.233 96.1597 li
147.344 95.9995 li
147.444 95.8296 li
147.554 95.6597 li
147.664 95.4897 li
147.764 95.3198 li
147.874 95.1494 li
147.983 94.9795 li
148.083 94.8096 li
148.194 94.6294 li
148.304 94.4595 li
148.404 94.2798 li
148.514 94.0996 li
148.624 93.9194 li
148.724 93.7397 li
148.833 93.5596 li
148.944 93.3794 li
149.043 93.1895 li
149.154 93.0093 li
149.264 92.8198 li
149.364 92.6396 li
149.474 92.4497 li
149.583 92.2593 li
149.684 92.0698 li
149.793 91.8794 li
149.904 91.6895 li
150.003 91.4897 li
150.114 91.2993 li
150.224 91.1094 li
150.324 90.9097 li
150.434 90.7095 li
150.543 90.5093 li
150.644 90.3198 li
150.753 90.1196 li
150.864 89.9194 li
150.963 89.7095 li
151.074 89.5093 li
151.174 89.3096 li
151.284 89.0996 li
151.394 88.8994 li
151.494 88.6895 li
151.604 88.4795 li
151.713 88.2695 li
151.813 88.0596 li
151.924 87.8496 li
152.034 87.6396 li
152.134 87.4297 li
152.244 87.2197 li
152.354 87.0093 li
152.454 86.7896 li
152.563 86.5796 li
152.674 86.3594 li
152.773 86.1396 li
152.884 85.9194 li
152.994 85.7095 li
153.094 85.4897 li
153.204 85.2695 li
153.313 85.0493 li
153.414 84.8198 li
153.523 84.5996 li
153.634 84.3794 li
153.733 84.1494 li
153.844 83.9297 li
153.954 83.6997 li
154.054 83.4795 li
@
26.2935 55.8394 mo
26.4038 55.5894 li
26.5034 55.3296 li
26.6138 55.0796 li
26.7236 54.8296 li
26.8237 54.5796 li
26.9336 54.3296 li
27.0435 54.0796 li
27.1436 53.8198 li
27.2534 53.5698 li
27.3638 53.3198 li
27.4634 53.0796 li
27.5737 52.8296 li
27.6836 52.5796 li
27.7837 52.3296 li
27.8936 52.0796 li
28.0034 51.8296 li
28.1035 51.5894 li
28.2134 51.3394 li
28.3237 51.0894 li
28.4238 50.8496 li
28.5337 50.5996 li
28.6436 50.3594 li
28.7437 50.1094 li
28.8535 49.8696 li
28.9634 49.6294 li
29.0635 49.3794 li
29.1738 49.1396 li
29.2837 48.8994 li
29.3838 48.6597 li
29.4937 48.4194 li
29.6035 48.1797 li
29.7036 47.9395 li
29.8135 47.6997 li
29.9238 47.4595 li
30.0234 47.2197 li
30.1338 46.9795 li
30.2437 46.7397 li
30.3438 46.5093 li
30.4536 46.2695 li
30.5635 46.0396 li
30.6636 45.7993 li
30.7734 45.5698 li
30.8838 45.3394 li
30.9834 45.0996 li
31.0938 44.8696 li
31.2036 44.6396 li
31.3037 44.4097 li
31.4136 44.1797 li
31.5234 43.9497 li
31.6235 43.7197 li
31.7334 43.4897 li
31.8438 43.2695 li
31.9438 43.0396 li
32.0537 42.8096 li
32.1636 42.5894 li
32.2637 42.3696 li
32.3735 42.1396 li
32.4834 41.9194 li
32.5835 41.6997 li
32.6938 41.4795 li
32.8037 41.2593 li
32.9038 41.0396 li
33.0137 40.8198 li
33.1235 40.5996 li
33.2236 40.3794 li
33.3335 40.1694 li
33.4438 39.9497 li
33.5435 39.7397 li
33.6538 39.5195 li
33.7637 39.3096 li
33.8638 39.0996 li
33.9736 38.8896 li
34.0835 38.6797 li
34.1836 38.4697 li
34.2935 38.2593 li
34.4038 38.0493 li
34.5034 37.8394 li
34.6138 37.6396 li
34.7236 37.4297 li
34.8237 37.2295 li
34.9336 37.0298 li
35.0435 36.8198 li
35.1436 36.6196 li
35.2534 36.4194 li
35.3638 36.2197 li
35.4634 36.0298 li
35.5737 35.8296 li
35.6836 35.6294 li
35.7837 35.4395 li
35.8936 35.2397 li
36.0034 35.0493 li
36.1035 34.8594 li
36.2134 34.6694 li
36.3237 34.4795 li
36.4238 34.2896 li
36.5337 34.0996 li
36.6436 33.9097 li
36.7437 33.7295 li
36.8535 33.5396 li
36.9634 33.3594 li
37.0635 33.1797 li
37.1738 32.9897 li
37.2837 32.8096 li
37.3838 32.6294 li
37.4937 32.4595 li
37.6035 32.2798 li
37.7036 32.0996 li
37.8135 31.9297 li
37.9238 31.7495 li
38.0234 31.5796 li
38.1338 31.4097 li
38.2437 31.2397 li
38.3438 31.0698 li
38.4536 30.8994 li
38.5635 30.7397 li
38.6636 30.5698 li
38.7734 30.4097 li
38.8838 30.2397 li
38.9834 30.0796 li
39.0938 29.9194 li
39.2036 29.7593 li
39.3037 29.5996 li
39.4136 29.4395 li
39.5234 29.2896 li
39.6235 29.1294 li
39.7334 28.9795 li
39.8438 28.8296 li
39.9438 28.6797 li
40.0537 28.5298 li
40.1636 28.3794 li
40.2637 28.2295 li
40.3735 28.0796 li
40.4834 27.9395 li
40.5835 27.7896 li
40.6938 27.6494 li
40.8037 27.5093 li
40.9038 27.3696 li
41.0137 27.2295 li
41.1235 27.0996 li
41.2236 26.9595 li
41.3335 26.8296 li
41.4438 26.6895 li
41.5435 26.5596 li
41.6538 26.4297 li
41.7637 26.2993 li
41.8638 26.1694 li
41.9736 26.0493 li
42.0835 25.9194 li
42.1836 25.7993 li
42.2935 25.6694 li
42.4038 25.5493 li
42.5034 25.4297 li
42.6138 25.3198 li
42.7236 25.1997 li
42.8237 25.0796 li
42.9336 24.9697 li
43.0435 24.8594 li
43.1436 24.7397 li
43.2534 24.6294 li
43.3535 24.5298 li
43.4634 24.4194 li
43.5737 24.3096 li
43.6738 24.2095 li
43.7837 24.0996 li
43.8936 23.9995 li
43.9937 23.8994 li
44.1035 23.7993 li
44.2134 23.7095 li
44.3135 23.6094 li
44.4238 23.5195 li
44.5337 23.4194 li
44.6338 23.3296 li
44.7437 23.2397 li
44.8535 23.1494 li
44.9536 23.0596 li
45.0635 22.9795 li
45.1738 22.8896 li
45.2734 22.8096 li
45.3838 22.7295 li
45.4937 22.6494 li
45.5938 22.5698 li
45.7036 22.4897 li
45.8135 22.4194 li
45.9136 22.3394 li
46.0234 22.2695 li
46.1338 22.1997 li
46.2334 22.1294 li
46.3438 22.0596 li
46.4536 21.9897 li
46.5537 21.9297 li
46.6636 21.8594 li
46.7734 21.7993 li
46.8735 21.7397 li
46.9834 21.6797 li
47.0938 21.6196 li
47.1938 21.5698 li
47.3037 21.5093 li
47.4136 21.4595 li
47.5137 21.4097 li
47.6235 21.3594 li
47.7334 21.3096 li
47.8335 21.2593 li
47.9438 21.2197 li
48.0537 21.1694 li
48.1538 21.1294 li
48.2637 21.0894 li
48.3735 21.0493 li
48.4736 21.0093 li
48.5835 20.9697 li
48.6938 20.9395 li
48.7935 20.8994 li
48.9038 20.8696 li
49.0137 20.8394 li
49.1138 20.8096 li
49.2236 20.7798 li
49.3335 20.7593 li
49.4336 20.7295 li
49.5435 20.7095 li
49.6538 20.6895 li
49.7534 20.6694 li
49.8638 20.6494 li
49.9736 20.6294 li
50.0737 20.6196 li
50.1836 20.6094 li
50.2935 20.5894 li
50.3936 20.5796 li
50.5034 20.5698 li
50.6138 20.5698 li
50.7134 20.5596 li
50.8237 20.5596 li
50.9336 20.5493 li
51.0337 20.5493 li
51.1436 20.5493 li
51.2534 20.5493 li
51.3535 20.5596 li
51.4634 20.5596 li
51.5737 20.5698 li
51.6738 20.5796 li
51.7837 20.5894 li
51.8936 20.5996 li
51.9937 20.6094 li
52.1035 20.6196 li
52.2134 20.6396 li
52.3135 20.6597 li
52.4238 20.6694 li
52.5337 20.6895 li
52.6338 20.7197 li
52.7437 20.7397 li
52.8535 20.7593 li
52.9536 20.7896 li
53.0635 20.8198 li
53.1738 20.8496 li
53.2734 20.8794 li
53.3838 20.9097 li
53.4937 20.9497 li
53.5938 20.9795 li
53.7036 21.0195 li
53.8135 21.0596 li
53.9136 21.0996 li
54.0234 21.1396 li
54.1338 21.1797 li
54.2334 21.2295 li
54.3438 21.2695 li
54.4536 21.3198 li
54.5537 21.3696 li
54.6636 21.4194 li
54.7734 21.4697 li
54.8735 21.5298 li
54.9834 21.5796 li
55.0938 21.6396 li
55.1938 21.6997 li
55.3037 21.7593 li
55.4136 21.8198 li
55.5137 21.8794 li
55.6235 21.9395 li
55.7334 22.0093 li
55.8335 22.0796 li
55.9438 22.1396 li
56.0537 22.2197 li
56.1538 22.2896 li
56.2637 22.3594 li
56.3735 22.4297 li
56.4736 22.5093 li
56.5835 22.5894 li
56.6938 22.6694 li
56.7935 22.7495 li
56.9038 22.8296 li
57.0137 22.9097 li
57.1138 22.9995 li
57.2236 23.0796 li
57.3335 23.1694 li
57.4336 23.2593 li
57.5435 23.3496 li
57.6538 23.4395 li
57.7534 23.5396 li
57.8638 23.6294 li
57.9736 23.7295 li
58.0737 23.8296 li
58.1836 23.9297 li
58.2935 24.0298 li
58.3936 24.1294 li
58.5034 24.2295 li
58.6138 24.3394 li
58.7134 24.4395 li
58.8237 24.5493 li
58.9336 24.6597 li
59.0337 24.7695 li
59.1436 24.8794 li
59.2534 24.9995 li
59.3535 25.1094 li
59.4634 25.2295 li
59.5737 25.3394 li
59.6738 25.4595 li
59.7837 25.5796 li
59.8936 25.6997 li
59.9937 25.8296 li
60.1035 25.9497 li
60.2134 26.0796 li
60.3135 26.1997 li
60.4238 26.3296 li
60.5337 26.4595 li
60.6338 26.5894 li
60.7437 26.7197 li
60.8535 26.8594 li
60.9536 26.9897 li
61.0635 27.1294 li
61.1636 27.2695 li
61.2734 27.3994 li
61.3838 27.5396 li
61.4834 27.6895 li
61.5938 27.8296 li
61.7036 27.9697 li
61.8037 28.1196 li
61.9136 28.2593 li
62.0234 28.4097 li
62.1235 28.5596 li
62.2334 28.7095 li
62.3438 28.8594 li
62.4438 29.0093 li
62.5537 29.1694 li
62.6636 29.3198 li
62.7637 29.4795 li
62.8735 29.6396 li
62.9834 29.7993 li
63.0835 29.9595 li
63.1938 30.1196 li
63.3037 30.2798 li
63.4038 30.4395 li
63.5137 30.6094 li
63.6235 30.7695 li
63.7236 30.9395 li
63.8335 31.1094 li
63.9438 31.2798 li
64.0435 31.4497 li
64.1538 31.6196 li
64.2637 31.7896 li
64.3638 31.9697 li
64.4736 32.1396 li
64.5835 32.3198 li
64.6836 32.4995 li
64.7935 32.6797 li
64.9038 32.8594 li
65.0034 33.0396 li
65.1138 33.2197 li
65.2236 33.3994 li
65.3237 33.5894 li
65.4336 33.7695 li
65.5435 33.9595 li
65.6436 34.1396 li
65.7534 34.3296 li
65.8638 34.5195 li
65.9634 34.7095 li
66.0737 34.8994 li
66.1836 35.0996 li
66.2837 35.2896 li
66.3936 35.4795 li
66.5034 35.6797 li
66.6035 35.8696 li
66.7134 36.0698 li
66.8237 36.2695 li
66.9238 36.4697 li
67.0337 36.6694 li
67.1436 36.8696 li
67.2437 37.0698 li
67.3535 37.2798 li
67.4634 37.4795 li
67.5635 37.6895 li
67.6738 37.8896 li
67.7837 38.0996 li
67.8838 38.3096 li
67.9937 38.5195 li
68.1035 38.7295 li
68.2036 38.9395 li
68.3135 39.1494 li
68.4238 39.3594 li
68.5234 39.5698 li
68.6338 39.7896 li
68.7437 39.9995 li
68.8438 40.2197 li
68.9536 40.4297 li
69.0635 40.6494 li
69.1636 40.8696 li
69.2734 41.0894 li
69.3838 41.3096 li
69.4834 41.5298 li
69.5938 41.7495 li
69.7036 41.9697 li
69.8037 42.1895 li
69.9136 42.4194 li
70.0234 42.6396 li
70.1235 42.8696 li
70.2334 43.0894 li
70.3438 43.3198 li
70.4438 43.5493 li
70.5537 43.7695 li
70.6636 43.9995 li
70.7637 44.2295 li
70.8735 44.4595 li
70.9834 44.6895 li
71.0835 44.9297 li
71.1938 45.1597 li
71.3037 45.3896 li
71.4038 45.6196 li
71.5137 45.8594 li
71.6235 46.0894 li
71.7236 46.3296 li
71.8335 46.5596 li
71.9438 46.7993 li
72.0435 47.0396 li
72.1538 47.2695 li
72.2637 47.5093 li
72.3638 47.7495 li
72.4736 47.9897 li
72.5835 48.2295 li
72.6836 48.4697 li
72.7935 48.7095 li
72.9038 48.9497 li
73.0034 49.1997 li
73.1138 49.4395 li
73.2236 49.6797 li
73.3237 49.9297 li
73.4336 50.1694 li
73.5435 50.4097 li
73.6436 50.6597 li
73.7534 50.9097 li
73.8638 51.1494 li
73.9634 51.3994 li
74.0737 51.6396 li
74.1836 51.8896 li
74.2837 52.1396 li
74.3936 52.3896 li
74.5034 52.6396 li
74.6035 52.8794 li
74.7134 53.1294 li
74.8237 53.3794 li
74.9238 53.6294 li
75.0337 53.8794 li
75.1436 54.1294 li
75.2437 54.3896 li
75.3535 54.6396 li
75.4634 54.8896 li
75.5635 55.1396 li
75.6738 55.3896 li
75.7837 55.6396 li
75.8838 55.8994 li
75.9937 56.1494 li
76.1035 56.3994 li
76.2036 56.6597 li
76.3135 56.9097 li
76.4238 57.1597 li
76.5234 57.4194 li
76.6338 57.6694 li
76.7437 57.9297 li
76.8438 58.1797 li
76.9536 58.4395 li
77.0635 58.6895 li
77.1636 58.9497 li
77.2734 59.1997 li
77.3838 59.4595 li
77.4834 59.7197 li
77.5938 59.9697 li
77.7036 60.2295 li
77.8037 60.4795 li
77.9136 60.7397 li
78.0234 60.9995 li
78.1235 61.2495 li
78.2334 61.5093 li
78.3438 61.7695 li
78.4438 62.0195 li
78.5537 62.2798 li
78.6636 62.5396 li
78.7637 62.7896 li
78.8735 63.0493 li
78.9834 63.3096 li
79.0835 63.5596 li
79.1938 63.8198 li
79.2935 64.0796 li
79.4038 64.3296 li
79.5137 64.5894 li
79.6138 64.8496 li
79.7236 65.0996 li
79.8335 65.3594 li
79.9336 65.6196 li
80.0435 65.8696 li
80.1538 66.1294 li
80.2534 66.3896 li
80.3638 66.6396 li
80.4736 66.8994 li
80.5737 67.1494 li
80.6836 67.4097 li
80.7935 67.6597 li
80.8936 67.9194 li
81.0034 68.1797 li
81.1138 68.4297 li
81.2134 68.6895 li
81.3237 68.9395 li
81.4336 69.1895 li
81.5337 69.4497 li
81.6436 69.6997 li
81.7534 69.9595 li
81.8535 70.2095 li
81.9634 70.4595 li
82.0737 70.7197 li
82.1738 70.9697 li
82.2837 71.2197 li
82.3936 71.4697 li
82.4937 71.7295 li
82.6035 71.9795 li
82.7134 72.2295 li
82.8135 72.4795 li
82.9238 72.7295 li
83.0337 72.9795 li
83.1338 73.2295 li
83.2437 73.4795 li
83.3535 73.7295 li
83.4536 73.9795 li
83.5635 74.2295 li
83.6738 74.4795 li
83.7734 74.7197 li
83.8838 74.9697 li
83.9937 75.2197 li
84.0938 75.4697 li
84.2036 75.7095 li
84.3135 75.9595 li
84.4136 76.1997 li
84.5234 76.4497 li
84.6338 76.6895 li
84.7334 76.9395 li
84.8438 77.1797 li
84.9536 77.4194 li
85.0537 77.6597 li
85.1636 77.9097 li
85.2734 78.1494 li
85.3735 78.3896 li
85.4834 78.6294 li
85.5938 78.8696 li
85.6938 79.1094 li
85.8037 79.3394 li
85.9136 79.5796 li
86.0137 79.8198 li
86.1235 80.0596 li
86.2334 80.2896 li
86.3335 80.5298 li
86.4438 80.7593 li
86.5537 80.9995 li
86.6538 81.2295 li
86.7637 81.4595 li
86.8735 81.6997 li
86.9736 81.9297 li
87.0835 82.1597 li
87.1938 82.3896 li
87.2935 82.6196 li
87.4038 82.8496 li
87.5137 83.0796 li
87.6138 83.2993 li
87.7236 83.5298 li
87.8335 83.7593 li
87.9336 83.9795 li
88.0435 84.2095 li
88.1538 84.4297 li
88.2534 84.6494 li
88.3638 84.8794 li
88.4736 85.0996 li
88.5737 85.3198 li
88.6836 85.5396 li
88.7935 85.7593 li
88.8936 85.9795 li
89.0034 86.1895 li
89.1138 86.4097 li
89.2134 86.6294 li
89.3237 86.8394 li
89.4336 87.0596 li
89.5337 87.2695 li
89.6436 87.4795 li
89.7534 87.6895 li
89.8535 87.8994 li
89.9634 88.1094 li
90.0737 88.3198 li
90.1738 88.5298 li
90.2837 88.7397 li
90.3936 88.9497 li
90.4937 89.1494 li
90.6035 89.3594 li
90.7134 89.5596 li
90.8135 89.7593 li
90.9238 89.9595 li
91.0337 90.1597 li
91.1338 90.3594 li
91.2437 90.5596 li
91.3535 90.7593 li
91.4536 90.9595 li
91.5635 91.1494 li
91.6738 91.3496 li
91.7734 91.5396 li
91.8838 91.7295 li
91.9937 91.9297 li
92.0938 92.1196 li
92.2036 92.3096 li
92.3135 92.4897 li
92.4136 92.6797 li
92.5234 92.8696 li
92.6338 93.0493 li
92.7334 93.2397 li
92.8438 93.4194 li
92.9536 93.5996 li
93.0537 93.7798 li
93.1636 93.9595 li
93.2734 94.1396 li
93.3735 94.3198 li
93.4834 94.4995 li
93.5938 94.6694 li
93.6938 94.8496 li
93.8037 95.0195 li
93.9136 95.1895 li
94.0137 95.3594 li
94.1235 95.5298 li
94.2334 95.6997 li
94.3335 95.8696 li
94.4438 96.0396 li
94.5537 96.1997 li
94.6538 96.3696 li
94.7637 96.5298 li
94.8735 96.6895 li
94.9736 96.8496 li
95.0835 97.0093 li
95.1938 97.1694 li
95.2935 97.3296 li
95.4038 97.4795 li
95.5137 97.6396 li
95.6138 97.7896 li
95.7236 97.9395 li
95.8335 98.0894 li
95.9336 98.2397 li
96.0435 98.3896 li
96.1538 98.5396 li
96.2534 98.6797 li
96.3638 98.8296 li
96.4736 98.9697 li
96.5737 99.1094 li
96.6836 99.2495 li
96.7935 99.3896 li
96.8936 99.5298 li
97.0034 99.6597 li
97.1035 99.7993 li
97.2134 99.9297 li
97.3237 100.07 li
97.4238 100.2 li
97.5337 100.33 li
97.6436 100.459 li
97.7437 100.58 li
97.8535 100.709 li
97.9634 100.839 li
98.0635 100.959 li
98.1738 101.08 li
98.2837 101.2 li
98.3838 101.32 li
98.4937 101.439 li
98.6035 101.549 li
98.7036 101.669 li
98.8135 101.78 li
98.9238 101.899 li
99.0234 102.009 li
99.1338 102.12 li
99.2437 102.22 li
99.3438 102.33 li
99.4536 102.439 li
99.5635 102.54 li
99.6636 102.64 li
99.7734 102.74 li
99.8838 102.839 li
99.9834 102.939 li
100.094 103.04 li
100.204 103.129 li
100.304 103.229 li
100.414 103.32 li
100.523 103.41 li
100.624 103.5 li
100.733 103.589 li
100.844 103.68 li
100.944 103.759 li
101.054 103.85 li
101.164 103.93 li
101.264 104.009 li
101.374 104.089 li
101.483 104.169 li
101.583 104.24 li
101.694 104.32 li
101.804 104.39 li
101.904 104.47 li
102.014 104.54 li
102.124 104.609 li
102.224 104.669 li
102.333 104.74 li
102.444 104.799 li
102.543 104.87 li
102.654 104.93 li
102.764 104.99 li
102.864 105.049 li
102.974 105.109 li
103.083 105.16 li
103.184 105.22 li
103.293 105.27 li
103.404 105.32 li
103.503 105.37 li
103.614 105.419 li
103.724 105.459 li
103.824 105.509 li
103.934 105.549 li
104.043 105.6 li
104.144 105.64 li
104.253 105.669 li
104.364 105.709 li
104.463 105.75 li
104.574 105.78 li
104.684 105.82 li
104.784 105.85 li
104.894 105.879 li
105.003 105.91 li
105.104 105.93 li
105.213 105.959 li
105.324 105.979 li
105.424 106 li
105.534 106.03 li
105.644 106.04 li
105.744 106.06 li
105.854 106.08 li
105.963 106.089 li
106.063 106.109 li
106.174 106.12 li
106.284 106.129 li
106.384 106.14 li
106.494 106.14 li
106.604 106.149 li
106.704 106.149 li
106.813 106.149 li
106.924 106.149 li
107.023 106.149 li
107.134 106.149 li
107.244 106.149 li
107.344 106.14 li
107.454 106.14 li
107.563 106.129 li
107.664 106.12 li
107.773 106.109 li
107.884 106.089 li
107.983 106.08 li
108.094 106.06 li
108.204 106.04 li
108.304 106.02 li
108.414 106 li
108.523 105.979 li
108.624 105.959 li
108.733 105.93 li
108.844 105.899 li
108.944 105.879 li
109.054 105.85 li
109.164 105.81 li
109.264 105.78 li
109.374 105.75 li
109.483 105.709 li
109.583 105.669 li
109.694 105.629 li
109.804 105.589 li
109.904 105.549 li
110.014 105.509 li
110.124 105.459 li
110.224 105.419 li
110.333 105.37 li
110.444 105.32 li
110.543 105.27 li
110.654 105.209 li
110.764 105.16 li
110.864 105.1 li
110.974 105.049 li
111.083 104.99 li
111.184 104.93 li
111.293 104.87 li
111.404 104.799 li
111.503 104.74 li
111.614 104.669 li
111.724 104.6 li
111.824 104.53 li
111.934 104.459 li
112.043 104.39 li
112.144 104.32 li
112.253 104.24 li
112.364 104.169 li
112.463 104.089 li
112.574 104.009 li
112.684 103.93 li
112.784 103.839 li
112.894 103.759 li
113.003 103.669 li
113.104 103.589 li
113.213 103.5 li
113.324 103.41 li
113.424 103.32 li
113.534 103.229 li
113.644 103.129 li
113.744 103.04 li
113.854 102.939 li
113.963 102.839 li
114.063 102.74 li
114.174 102.64 li
114.284 102.54 li
114.384 102.43 li
114.494 102.33 li
114.604 102.22 li
114.704 102.109 li
114.813 102 li
114.924 101.89 li
115.023 101.78 li
115.134 101.669 li
115.233 101.549 li
115.344 101.43 li
115.454 101.32 li
115.554 101.2 li
115.664 101.08 li
115.773 100.95 li
115.874 100.83 li
115.983 100.709 li
116.094 100.58 li
116.194 100.45 li
116.304 100.32 li
116.414 100.189 li
116.514 100.06 li
116.624 99.9297 li
116.733 99.7993 li
116.833 99.6597 li
116.944 99.5195 li
117.054 99.3896 li
117.154 99.2495 li
117.264 99.1094 li
117.374 98.9595 li
117.474 98.8198 li
117.583 98.6797 li
117.694 98.5298 li
117.793 98.3794 li
117.904 98.2397 li
118.014 98.0894 li
118.114 97.9395 li
118.224 97.7798 li
118.333 97.6294 li
118.434 97.4795 li
118.543 97.3198 li
118.654 97.1597 li
118.753 97.0093 li
118.864 96.8496 li
118.974 96.6895 li
119.074 96.5195 li
119.184 96.3594 li
119.293 96.1997 li
119.394 96.0298 li
119.503 95.8594 li
119.614 95.6997 li
119.713 95.5298 li
119.824 95.3594 li
119.934 95.1895 li
120.034 95.0195 li
120.144 94.8394 li
120.253 94.6694 li
120.354 94.4897 li
120.463 94.3198 li
120.574 94.1396 li
120.674 93.9595 li
120.784 93.7798 li
120.894 93.5996 li
120.994 93.4097 li
121.104 93.2295 li
121.213 93.0493 li
121.313 92.8594 li
121.424 92.6694 li
121.534 92.4897 li
121.634 92.2993 li
121.744 92.1094 li
121.854 91.9194 li
121.954 91.7295 li
122.063 91.5298 li
122.174 91.3394 li
122.273 91.1396 li
122.384 90.9497 li
122.494 90.7495 li
122.594 90.5493 li
122.704 90.3594 li
122.813 90.1597 li
122.914 89.9595 li
123.023 89.7495 li
123.134 89.5493 li
123.233 89.3496 li
123.344 89.1396 li
123.454 88.9395 li
123.554 88.7295 li
123.664 88.5195 li
123.773 88.3198 li
123.874 88.1094 li
123.983 87.8994 li
124.094 87.6895 li
124.194 87.4697 li
124.304 87.2593 li
124.414 87.0493 li
124.514 86.8296 li
124.624 86.6196 li
124.733 86.3994 li
124.833 86.1895 li
124.944 85.9697 li
125.054 85.7495 li
125.154 85.5298 li
125.264 85.3096 li
125.374 85.0894 li
125.474 84.8696 li
125.583 84.6494 li
125.694 84.4194 li
125.793 84.1997 li
125.904 83.9697 li
126.014 83.7495 li
126.114 83.5195 li
126.224 83.2993 li
126.333 83.0698 li
126.434 82.8394 li
126.543 82.6094 li
126.654 82.3794 li
126.753 82.1494 li
126.864 81.9194 li
126.974 81.6895 li
127.074 81.4595 li
127.184 81.2197 li
127.293 80.9897 li
127.394 80.7495 li
127.503 80.5195 li
127.614 80.2798 li
127.713 80.0493 li
127.824 79.8096 li
127.934 79.5698 li
128.034 79.3394 li
128.144 79.0996 li
128.253 78.8594 li
128.354 78.6196 li
128.463 78.3794 li
128.574 78.1396 li
128.674 77.8994 li
128.784 77.6494 li
128.894 77.4097 li
128.994 77.1694 li
129.104 76.9297 li
129.213 76.6797 li
129.313 76.4395 li
129.424 76.1895 li
129.534 75.9497 li
129.634 75.6997 li
129.744 75.4595 li
129.854 75.2095 li
129.954 74.9595 li
130.063 74.7197 li
130.174 74.4697 li
130.273 74.2197 li
130.384 73.9697 li
130.494 73.7197 li
130.594 73.4697 li
130.704 73.2197 li
130.813 72.9697 li
130.914 72.7197 li
131.023 72.4697 li
131.134 72.2197 li
131.233 71.9697 li
131.344 71.7197 li
131.454 71.4697 li
131.554 71.2095 li
131.664 70.9595 li
131.773 70.7095 li
131.874 70.4497 li
131.983 70.1997 li
132.094 69.9497 li
132.194 69.6895 li
132.304 69.4395 li
132.414 69.1895 li
132.514 68.9297 li
132.624 68.6797 li
132.733 68.4194 li
132.833 68.1694 li
132.944 67.9097 li
133.054 67.6597 li
133.154 67.3994 li
133.264 67.1396 li
133.364 66.8896 li
133.474 66.6294 li
133.583 66.3794 li
133.684 66.1196 li
133.793 65.8594 li
133.904 65.6094 li
134.003 65.3496 li
134.114 65.0894 li
134.224 64.8394 li
134.324 64.5796 li
134.434 64.3198 li
134.543 64.0698 li
134.644 63.8096 li
134.753 63.5493 li
134.864 63.2993 li
134.963 63.0396 li
135.074 62.7798 li
135.184 62.5298 li
135.284 62.2695 li
135.394 62.0093 li
135.503 61.7593 li
135.604 61.4995 li
135.713 61.2397 li
135.824 60.9897 li
135.924 60.7295 li
136.034 60.4697 li
136.144 60.2197 li
136.244 59.9595 li
136.354 59.7095 li
136.463 59.4497 li
136.563 59.1895 li
136.674 58.9395 li
136.784 58.6797 li
136.884 58.4297 li
136.994 58.1694 li
137.104 57.9194 li
137.204 57.6597 li
137.313 57.4097 li
137.424 57.1597 li
137.523 56.8994 li
137.634 56.6494 li
137.744 56.3896 li
137.844 56.1396 li
137.954 55.8896 li
138.063 55.6396 li
138.164 55.3794 li
138.273 55.1294 li
138.384 54.8794 li
138.483 54.6294 li
138.594 54.3794 li
138.704 54.1196 li
138.804 53.8696 li
138.914 53.6196 li
139.023 53.3696 li
139.124 53.1196 li
139.233 52.8794 li
139.344 52.6294 li
139.444 52.3794 li
139.554 52.1294 li
139.664 51.8794 li
139.764 51.6396 li
139.874 51.3896 li
139.983 51.1396 li
140.083 50.8994 li
140.194 50.6494 li
140.304 50.4097 li
140.404 50.1597 li
140.514 49.9194 li
140.624 49.6694 li
140.724 49.4297 li
140.833 49.1895 li
140.944 48.9497 li
141.043 48.6997 li
141.154 48.4595 li
141.264 48.2197 li
141.364 47.9795 li
141.474 47.7397 li
141.583 47.4995 li
141.684 47.2695 li
141.793 47.0298 li
141.904 46.7896 li
142.003 46.5596 li
142.114 46.3198 li
142.224 46.0796 li
142.324 45.8496 li
142.434 45.6196 li
142.543 45.3794 li
142.644 45.1494 li
142.753 44.9194 li
142.864 44.6895 li
142.963 44.4497 li
143.074 44.2197 li
143.184 43.9995 li
143.284 43.7695 li
143.394 43.5396 li
143.503 43.3096 li
143.604 43.0796 li
143.713 42.8594 li
143.824 42.6294 li
143.924 42.4097 li
144.034 42.1895 li
144.144 41.9595 li
144.244 41.7397 li
144.354 41.5195 li
144.463 41.2993 li
144.563 41.0796 li
144.674 40.8594 li
144.784 40.6396 li
144.884 40.4297 li
144.994 40.2095 li
145.104 39.9897 li
145.204 39.7798 li
145.313 39.5596 li
145.424 39.3496 li
145.523 39.1396 li
145.634 38.9297 li
145.744 38.7197 li
145.844 38.5093 li
145.954 38.2993 li
146.063 38.0894 li
146.164 37.8794 li
146.273 37.6797 li
146.384 37.4697 li
146.483 37.2695 li
146.594 37.0698 li
146.704 36.8594 li
146.804 36.6597 li
146.914 36.4595 li
147.023 36.2593 li
147.124 36.0698 li
147.233 35.8696 li
147.344 35.6694 li
147.444 35.4795 li
147.554 35.2798 li
147.664 35.0894 li
147.764 34.8994 li
147.874 34.6997 li
147.983 34.5093 li
148.083 34.3296 li
148.194 34.1396 li
148.304 33.9497 li
148.404 33.7593 li
148.514 33.5796 li
148.624 33.3896 li
148.724 33.2095 li
148.833 33.0298 li
148.944 32.8496 li
149.043 32.6694 li
149.154 32.4897 li
149.264 32.3096 li
149.364 32.1396 li
149.474 31.9595 li
149.583 31.7896 li
149.684 31.6196 li
149.793 31.4395 li
149.904 31.2695 li
150.003 31.0996 li
150.114 30.9395 li
150.224 30.7695 li
150.324 30.5996 li
150.434 30.4395 li
150.543 30.2695 li
150.644 30.1094 li
150.753 29.9497 li
150.864 29.7896 li
150.963 29.6294 li
151.074 29.4697 li
151.174 29.3198 li
151.284 29.1597 li
151.394 29.0093 li
151.494 28.8594 li
151.604 28.7095 li
151.713 28.5493 li
151.813 28.4097 li
151.924 28.2593 li
152.034 28.1094 li
152.134 27.9697 li
152.244 27.8198 li
152.354 27.6797 li
152.454 27.5396 li
152.563 27.3994 li
152.674 27.2593 li
152.773 27.1196 li
152.884 26.9897 li
152.994 26.8496 li
153.094 26.7197 li
153.204 26.5894 li
153.313 26.4595 li
153.414 26.3296 li
153.523 26.1997 li
153.634 26.0698 li
153.733 25.9497 li
153.844 25.8198 li
153.954 25.6997 li
154.054 25.5796 li
.583215 .494575 .46363 .148043 cmyk
@
1 lw
0 lc
4 ml
89.6343 182.129 mo
115.538 156.226 li
.75021 .679683 .670222 .90164 cmyk
@
114.816 156.947 mo
110.72 155.949 li
110.749 155.804 li
116.553 153.3 li
118.319 152.171 120.085 151.042 121.851 149.913 cv
120.722 151.679 119.592 153.445 118.464 155.21 cv
115.959 161.015 li
115.83 161.058 li
114.816 156.947 li
cp
f
89.6343 182.129 mo
63.731 156.226 li
@
64.4521 156.947 mo
63.4536 161.044 li
63.3091 161.015 li
60.8047 155.21 li
59.6758 153.445 58.5464 151.679 57.4175 149.913 cv
59.1836 151.042 60.9497 152.171 62.7153 153.3 cv
68.52 155.804 li
68.563 155.934 li
64.4521 156.947 li
cp
f
89.6343 182.129 mo
63.731 208.033 li
@
64.4521 207.312 mo
68.5488 208.31 li
68.52 208.455 li
62.7153 210.959 li
60.9497 212.088 59.1836 213.217 57.4175 214.346 cv
58.5469 212.58 59.6763 210.814 60.8047 209.048 cv
63.3091 203.244 li
63.439 203.201 li
64.4521 207.312 li
cp
f
89.6343 182.129 mo
115.538 208.033 li
@
114.816 207.312 mo
115.815 203.215 li
115.959 203.244 li
118.463 209.048 li
119.592 210.814 120.722 212.58 121.851 214.346 cv
120.085 213.217 118.319 212.087 116.553 210.959 cv
110.749 208.455 li
110.706 208.325 li
114.816 207.312 li
cp
f
5 lw
165.096 64.0542 mo
185.398 64.0542 li
@
194.255 60.2124 mo
188.055 58.3413 184.025 56.6167 179.051 54.6167 cv
179.051 73.5356 li
180.832 72.6895 188.055 69.811 194.255 67.9434 cv
200.891 65.9365 206.907 64.5669 210.809 64.0762 cv
206.907 63.5854 200.891 62.2158 194.255 60.2124 cv
cp
f
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 49 /one putdup 50 /two putdup 70 /F putdup 72 /H putdup 84 /T putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 103 /g putdup 105 /i putdup 109 /m putdup 110 /n putdup 114 /r putdup 115 /s putdup 116 /t putdup 120 /x putdup 122 /z putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings23 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D598E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-/F <1C60D8A8C9B7544E530E823999841DA2F8EC66E9CFE2CD6B50437205F942FF37E122B69D17C7AA691A603207160811AFB791> |-/H <1C60D8A8C9B6415B1C8023DCDB0FF1D084A484AF3579A723AF8D5247ABB5D292AC378AF267DE95E8DC7174E8DD00326C723C8D6F70CCD88C857300A53452> |-/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC346364003E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF69F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B95C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC56BF6AA691E1A081F9D254D> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/x <1C60D8A8C9B74CDDCE74E258E27BD7DEC2AC84271E6C98FD20D770EC885A525E4B13092058B38B98D913CBB4CB890C6B5723895529FEAE9BA916EC36A86A9F59939408772A8E004C80432C1BF5EAC4792ACA2BAD6B237FD805243D3976056A1B26> |-/z <1C60D8A8C9B76F05D40D9AF06C62C52F8E7A83C69F6CDC031056F31E455ADB43C89D34E1A28A8E500535BCBC2826CEC41780F6E88D88BBC16CBA809407E19164AA6CDC22FB> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QMYYJZ+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QMYYJZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two 19{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s /t 3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]QMYYJZ+MyriadPro-Regular nfQMYYJZ+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf0 10.0439 mo(a\))[5.78418 0 ]xsh177.696 10.0439 mo(b\))[6.79199 0 ]xsh0 128.407 mo(c\))[5.37598 0 ]xsh177.696 128.407 mo(d\))[6.76807 0 ]xshQMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf74.6953 117.299 mo(Time \(s\))[4.8501 2.33984 8.33984 5.01025 2.11963 2.83984 3.95996 0 ]xsh268.917 117.748 mo(Time \(s\))[4.8501 2.33984 8.33984 5.01025 2.11963 2.83984 3.95996 0 ]xsh87.0781 242.94 mo(x)shQMYYJZ+MyriadPro-Regular*1 [5.83 0 0 -5.83 0 0 ]msf91.708 246.27 mo(1)shQMYYJZ+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf31.4102 187.398 mo(x)shQMYYJZ+MyriadPro-Regular*1 [2.61747e-10 -5.83 -5.83 -2.61748e-10 0 0 ]msf34.7402 182.768 mo(2)shQMYYJZ+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf199.147 208.872 mo(Firing rate \(Hz\))[-4.61035 -2.33984 -3.31006 -2.33984 -5.5498 -5.58984 -2.12012 -3.21973 -4.78027 -3.25 -5.00977 -2.12012 -2.83984 -6.62988 -4.27979 0 ]yshQMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf360.37 33.9014 mo(1)sh1 lw
368.051 30.9663 mo
368.051 33.7275 365.813 35.9663 363.051 35.9663 cv
360.29 35.9663 358.051 33.7275 358.051 30.9663 cv
358.051 28.2051 360.29 25.9663 363.051 25.9663 cv
365.813 25.9663 368.051 28.2051 368.051 30.9663 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf360.603 55.145 mo(2)sh368.051 52.2104 mo
368.051 54.9717 365.813 57.2104 363.051 57.2104 cv
360.29 57.2104 358.051 54.9717 358.051 52.2104 cv
358.051 49.4492 360.29 47.2104 363.051 47.2104 cv
365.813 47.2104 368.051 49.4492 368.051 52.2104 cv
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYJZ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09FB3F0AFA0642E6C0751425F2912B774695F4573A7ED10CC8657328CADE6CD5BA97A6C5BF6C1485B23CC65AC596605B697818C329637772F63BFEC9BF78A141357498BBAC8062C44F8B28D5A5EFBE38074FF4A38C9291B6291D33E32B9904245459FFD3AE6CFBA6472FEF21B7BFBB29FDDBA248755ED07D6E4AD20219> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYJZ+MyriadPro-Regular /Encoding getdup 51 /three putpop%ADOEndSubsetFont
/QMYYJZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two /three 18{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s /t 3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]QMYYJZ+MyriadPro-Regular nfQMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf360.253 76.5659 mo(3)sh368.051 73.6309 mo
368.051 76.3921 365.813 78.6309 363.051 78.6309 cv
360.29 78.6309 358.051 76.3921 358.051 73.6309 cv
358.051 70.8696 360.29 68.6309 363.051 68.6309 cv
365.813 68.6309 368.051 70.8696 368.051 73.6309 cv
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYJZ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/four <1C60D8A8C9B7BA8F425ECEAC1D5FB15843FC3AEF325D7DA4AC5B492181366F1B4D605798E0A37299E20A2C781E96943F501C8D283CF9274FA8718C41BB1F2F8D3022028ECD22D73F736D12B17047DF40EDD60B6519E74C55A33C> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYJZ+MyriadPro-Regular /Encoding getdup 52 /four putpop%ADOEndSubsetFont
/QMYYJZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two /three /four 17{/.notdef}rp /F /.notdef /H 11{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d /e /.notdef /g /.notdef /i 3{/.notdef}rp /m /n 3{/.notdef}rp /r /s /t 3{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]QMYYJZ+MyriadPro-Regular nfQMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf360.487 97.8408 mo(4)sh368.051 94.9048 mo
368.051 97.666 365.813 99.9048 363.051 99.9048 cv
360.29 99.9048 358.051 97.666 358.051 94.9048 cv
358.051 92.1436 360.29 89.9048 363.051 89.9048 cv
365.813 89.9048 368.051 92.1436 368.051 94.9048 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf121.428 168.922 mo(1)sh129.109 165.987 mo
129.109 168.748 126.871 170.987 124.109 170.987 cv
121.348 170.987 119.109 168.748 119.109 165.987 cv
119.109 163.226 121.348 160.987 124.109 160.987 cv
126.871 160.987 129.109 163.226 129.109 165.987 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf102.125 216.807 mo(2)sh109.574 213.871 mo
109.574 216.632 107.335 218.871 104.574 218.871 cv
101.812 218.871 99.5737 216.632 99.5737 213.871 cv
99.5737 211.11 101.812 208.871 104.574 208.871 cv
107.335 208.871 109.574 211.11 109.574 213.871 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf53.5107 203.017 mo(3)sh61.3086 200.082 mo
61.3086 202.843 59.0703 205.082 56.3086 205.082 cv
53.5469 205.082 51.3086 202.843 51.3086 200.082 cv
51.3086 197.32 53.5469 195.082 56.3086 195.082 cv
59.0703 195.082 61.3086 197.32 61.3086 200.082 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf69.1182 153.726 mo(4)sh76.6826 150.791 mo
76.6826 153.552 74.4443 155.791 71.6826 155.791 cv
68.9209 155.791 66.6826 153.552 66.6826 150.791 cv
66.6826 148.03 68.9209 145.791 71.6826 145.791 cv
74.4443 145.791 76.6826 148.03 76.6826 150.791 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf293.536 172.113 mo(1)sh301.217 169.178 mo
301.217 171.939 298.979 174.178 296.217 174.178 cv
293.456 174.178 291.217 171.939 291.217 169.178 cv
291.217 166.417 293.456 164.178 296.217 164.178 cv
298.979 164.178 301.217 166.417 301.217 169.178 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf261.476 159.162 mo(2)sh268.924 156.226 mo
268.924 158.987 266.686 161.226 263.924 161.226 cv
261.162 161.226 258.924 158.987 258.924 156.226 cv
258.924 153.465 261.162 151.226 263.924 151.226 cv
266.686 151.226 268.924 153.465 268.924 156.226 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf229.333 173.922 mo(3)sh237.13 170.987 mo
237.13 173.748 234.892 175.987 232.13 175.987 cv
229.369 175.987 227.13 173.748 227.13 170.987 cv
227.13 168.226 229.369 165.987 232.13 165.987 cv
234.892 165.987 237.13 168.226 237.13 170.987 cv
cp
@
QMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf325.712 169.922 mo(4)sh333.277 166.987 mo
333.277 169.748 331.039 171.987 328.277 171.987 cv
325.515 171.987 323.277 169.748 323.277 166.987 cv
323.277 164.226 325.515 161.987 328.277 161.987 cv
331.039 161.987 333.277 164.226 333.277 166.987 cv
cp
@
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQMYYJZ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD833E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED19B0A38B3CB0F4F897304E6BAD66C826BEE7E4169B0E7C80E2CF9471E5F92DE30A72B04AC0EEA14B3B5B59AE75C5D253EAF073DA7CF16B6D745CDF6FBBE2E5B43C2B5E88E6AFB64C1CBC51F> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-systemdict /gcheck known {setglobal} if end {end} ifendQMYYJZ+MyriadPro-Regular /Encoding getdup 78 /N putdup 80 /P putdup 102 /f putdup 111 /o putdup 117 /u putpop%ADOEndSubsetFont
/QMYYJZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /two /three /four 17{/.notdef}rp /F /.notdef /H 5{/.notdef}rp /N /.notdef /P 3{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x /.notdef /z 133{/.notdef}rp]QMYYJZ+MyriadPro-Regular nfQMYYJZ+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf223.703 242.053 mo(Preferred direction \(degrees\))[5.16016 3.17041 5.00977 2.79004 5.00977 3.30957 3.16992 5.00977 5.64063 2.12012 5.63965 2.33984 3.16992 5.00977 4.61035 3.30957 2.33984 5.49023 5.5498 2.12012 2.83984 5.63965 5.00977 5.53027 3.16992 5.00977 5.00977 3.95996 0 ]xshQMYYJZ+MyriadPro-Regular*1 [4.48965e-10 -10 -10 -4.48966e-10 0 0 ]msf16.876 62.4722 mo(x)sh384.969 95.8271 mo(Neuron number)[-6.58008 -5.00977 -5.50977 -3.16992 -5.49023 -5.5498 -2.12012 -5.5498 -5.50977 -8.33984 -5.69043 -5.00977 0 ]ysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QMYYJZ+MyriadPro-Regular*1 uf/QMYYJZ+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Chris) ()%%Title: (2d Representation.eps)%%CreationDate: 12-04-27 3:36 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6pO;\SdNJJD!;?K%0c;5l(n3(\_$1jKUB#j"d1X[IoDZ#HrcM$fTgUkecL.9:IY0q$<HVAEmOkp%?!=>mKCO=g>5XS,`a[4]%1uXB`BkJo\E4F`snJrujRY7H(A/r#cVihqMQi^V-8ao,1S;:a>i3CG!^RfH:<L[@f3C,&HV@-_O3m3$*\au71JNKt)R@?qfIlg;%%[QdVO_CXh"d.I/F5@t/Yq9U-@>#/:-dA4*T/uN2s@,/,6RJ:=4;iY#M1NqlUWA"K/da?ChH9<5'XCj\V#@g?&i8rT=lJT>UH3QD:%^Z3M(oDWhpi7ai^gu*2WD@>r'l4\U7E2s_H$KqL"3`j%EDCC:0FTSio-pU?RS4mLWkns7`7AE`L,t$(1L>H"Yj0>iJg!t=%J+nej%i>9ZTb>/+G$N-4j1eu)dpg0;V/Z7rm6W4TAUr%A^Ui0]m0Qbeg"0Nsac9s\o^8*M%Hs<0_m]SA>GLfp[fE!@_XiR\,j8T.%T]:$L%_OpVKh0R66p[^,83U0?De*VH9i22;9iq(BY*Jp<l!9?r2TZcmND?\[-0jV\*B:Wag!R+3#rPS/W#VGZ$>&s6&iW8^-6taB)GWP+`%a-,Ba9uWXME0@)]:-+Mp3\saX),2;c8T6,IOmpi\'-i&N+[CVcY^j=pVR+7&8)nkQPQmq@-La.Lq!gV@Aq21e5L=AdBuU)iniuP$%+Mhg3c,FZ&^+3R6E%!2`h8'B.hgcI)lkn/(RKiBM9S;bt!*@Apm"ts&QiR%^kPfIeri@7:;;be4#!\;CpmK7>cZ5FYNQ'i5=:F&G%`SfQS%,YV5pb[FLR=q]*8bag(KWUD/fIE;"(]lLWJSd.[fHuf5]EA2N<gaA4"i%lLfW&22Xib5MA@W-;Pfp9?_n`kmP>&ik)$\r1%)#Og11%$^_&&sFo_C*J(=No`YT<K%M'E!Nci0_SVnNAiUp^,]j&]%7&DF+[-/0#?$KYQH$i$X22l%C4t&]%7&DYP#SKk#]o0f:\7%fF!WHI_muO"0[j_JN_%1``0lUJtMg04EB5(giqO4N#hV^bRnQ?s1q`TI..e9_D@!<NUPgDK7@;[3'K+8Qn%l63'R*DJ&0Okq1kTP%kO8iVKWX2-i$Y*bbU&XZ(dGr0GQ@H-n.1pCgcnJTfF$)ecioIMpE'#JpC$$#ONDn/(??QR"%Pj@'93PdNCSus_XYH<fF%4/*$;$a%IMRCL2K3aJ2rSQs4.(%*"6OL<_h;(s\&"YG:;OS.jFYT)VE=2dVE2_TkluK0AqZ*PpDp[dfJ.LG4MHmViLXQ$`8$=7*7G*Z@*h-^%^Tt6,B,ke5Xg2IL3m#$q\XW*%b^]+rR>6TobHjm@/C+Fb&YUIt>,DMg/*S_'MrEYCBpqBgi*WQ#C%5OeMXSW9nNU^.i'7#jro\5J%')7@^(]R.)n8J+Urg-C?hruu6SJM5?Mti>1(]Q"Nn8J+Uro\6%.eno!(]UO:nSe4Vr^TQ[YWdh`#=%akinrf5rX6^^NL/Z3pq<&,%.^:i,Mn[6,%$R\*dtoK_Sq>jpWF?cP!V^8^M5K4[pie7qT8BFC("aEhM8-qUiD]51fJ6;N(uW%Be*pP@#erZ-nGcIAW?eP>*kY.B%0XRRKDpW+3X8%S)H\PqED=LWY-O:O^Kh@L$(q9Dg)*\QjW'\HX$me%65JAL/?(l!&Dh<q$9&S+6G.<%3&,8('*E-sfkr<BQVoY5>%(_ZU*)(UH%@Agoike!kPkc#iI#NlB%9gmCX;::%k_f91dRZ1'*2N/C!&!*4(-Fd!jr.4)^i_AF#`-;kp9[P,5)NRM1Y+/?MVAt`J%,P2Mp%H+Bc):D"@D$j4.oE!F-VF\J[LrkTm2e%$&b[(AGZY0QdGXPLL@S4R8gGBm1_$U)V`?'n!"@ir9/r`jgRj-1s+Ui?)73tY_%DAfKGpSp'FQJ;hS^ukDaA4F[bR=;XtTe5UkC/l!=a%5eJc'=4sA&iTqs2#Y+4iFZn("KVpi(D<GY_uK#:IeEr"7$.+-BZIWT0Q^J%r@Mn`:#[Z,IZ1<7n0fOnIR:^pF/gc[=:/T1,TKB0+YH>7EJn=i`Z@j<&OEqL&J8jbZi_mq1,9rM[i+956s`E_Y<b?">XThOoY.+B%TAJei<VWpPF,2%Y+p17$<9$S!7k[Jk9Tcj?*o'>Fd[;;-;9p`3/bOoHXlPlr=qk0I6<1,=Feg97;+?]]fF.Hrj:]rYOa=<VfUto-%im<WD)G/82itH9dgf'VQ'#bJmmh52>OoNjkC's7cp(b^GWT4HA#5Oj$M&7EsU0aK<b%*DT0e(QT5E5%_C7QKS;+ceC5GI4_W^:ri%oT%.oA@%CEOsPe6-b3$I*Kt%h.8d[6q$#59eRqI7Tr1mQXk%l7$]=1%l<)I1j1[cNaa-e,gZT!>emL9$9o@k0arY&aQ8JltCQti+%H?r]e+:t+W)*b!eW6)Lg5Ep)SdmSIjV"'`r^*&jqNjU*;-;pS.!Qi2-FHtW#[AF\Z]qIBA$mBF%jU;^TX0b7pDd:Hj1)4=_\k*(b%YMh3&c%`c&*-k!!1<J6<`#VcJK;&U($F%35$HcI$U)C+)SA&G)Pgi%V"SP(nfFgb^MPN?(4k[,s,Ed>6+Z$"cOX0?APhbb]ON,25%+F]52:U9pL+t]hgaAC2s64$2(kTphaKVXV&4t5LI.7])*'?B-bILCT3Bb:Qm0<s2T1rR:ri=gM]cQcj]6M:,X()/pV.NTDWMfA)q%H])N@e<ct"P)P@P&qWV2>B(8lakTEVLZsFKPL?q'A;3sg9<#sd.49II)l"X"(Lo*R!ngTdXf/b(LmA`P'cI1-8GkF+dpcXI4_hAV%[/):VK*:FYPgD4]m#,P@9BpuSV!"!knU'7fcO*+7$,XGL&!m"30k-VK$Z(#T?:Rf.n+_2cL$=Sn1);5LQ.ksJE@-OGK(+ZL7G\c)%+5iH5_jFnlAYN6t9J1Vt..S]^13biSH:O]IfuntHPPLd5@2sjA*Z'R".`o2q0dVh#4cBQ]N[I6@6_9j%9MqW.6]7CuoJ\Bl0!](U%Z$oj#DhNQHmo&3N3^]i8-`!7t,uu:Z!3?K`k:9Fc.8pl%1"Ir9P:7ehjOoYXf9@O.OphBHPemYO/LsH=PI2>(>F"E7Ni$>?(X#&8%F3&`k^142fq@,Co(&:q>Tjg5:$;4.`8\Q8e-'=Rjf8/6ka?5"+VNl3NpIpTM0m@&p'-7_X]VK7P9r@K.d*0>_69?NSY+jhhEFtIW%2UP,b)\ZO&&K%c_G[,p^PSP#.#L=ap&*##(0N=RA+q^7<Cg*rfM3JS;O.VSTOK8`PY7-!#&^]RTUVlk`NZ]60W<l,NUmqfi.n[6O%ZC'%a[OSjE,c\\"Ol^*j792e"e1n8k_L=15A?eOs)VK#-D1_*T&a<=c2\<Ib/]dQQ?@qsZ-n4q`UcF7G7P(^t,:--C&.(KJ`U(Mh%D_J95,5*dgp1.^9KmO'8Ki(7jU9tSS+9XLF.!.^@N$0s$g`eBs8`i=!7[6b?RQ`1t"=1`oCb9Wj;u]&Tc_[&'PhK%rp6=q4'(;<P%\-;I)6[T54Mb6rIp4^_K*".pT,6"mD4l[1#PY?)f(]0's3Kj6<oR4ZLUpUo!Z;a7ZEJZn*gPU+sM>O+e99C)jp'+.o_ed\\_3-&-%LJ"qLp=I7V75Y7)Ss)#UTfneu%53TB;t_"rmtQuq0%nU)3YOn</G;#%G\(ZZ:f0rPRuk14`88i[+<H9e+)"#?'#$-H?]ph@D7;VC%U8]gn.:XRp?TC=:@EG,2VJ_N;:6MM@.BGn,[$?-a\l*i8.?@]YN6$F61_2s$8O\*1,`TJcpKt3h,knLdGpE^@[J_8^N^ej0Qi0Pi%1Lcs1nBVu+-Bi"1"/!d^R'D=MIr__\4.*tCLf/+g'ljad@"f,o`?pX7m7h8+/4h6>q*gI,OaJ&R2n#,PecL+H9$(&tGRY1AD6VnA%CKpQq.VkcaCbq?".S;3;<6:t_A!<a8@q7%1&uht0C`-gaOGlgm4sJm)UoYT/d[":rd1g:DYHAHE9,OL3i1>k[K*73RYWkDN(2TE.%2*%Os]a"67Z2`4]XHA@A<9e2&B;,p?blc/hA)DiBA]46qpa!*eWXK]#'h(g77jbg*A@uKS/rj/]oI2m(7.[5N.;;M3;>lbBDSoIC%jgni)mB%i7J8'VAn$3uXQEu`"R7!]_a@rV>Nc@0k`'9E-M1YH^R7ah;nTkdo!)U\>^J#hWr0K[hS3^Ul&d@=h`5@n56]aqd!t;q1%^;d:kQ*^r-o,>Fpj2:_cGjqLf"<SZcesp^!@L8eI;6NrLk<qm6;L#q2ebK45V8D-4M](=H-BMM6D143FN:9!p41`o"<pQUBeIftm%Ib0Jm-]I5`.Heo#,9rfYMhCo7,/qBcj1u`Z;WP[]8@d%U`mZ@UWNuKqMMp8k`mXr)Bp!"faM%3KMjppV>(l:(q>P[uS9"Wt=Leli%SjgHl"?;1.F@8+d.&V<SP9(`Sn716cXCsDUg<:.R7q@2*/o]R!U?t9^]>.]Tj/-VIF=fFo7+P8j!BV3>Ht34<aDm>+TQ`e+EVpN2%6K%]Zf3b>_SkcgrABFD(!mC$<G[e\<#JDRZ&s'Ii!bd3WJ$JphO%8*.aGOU8*8DAK_0qElL$+BEJ/^t8eOW?#ZGO(<]!S!1L"U^b%Q5bt$J%0c7[anc.CpYF:(]7[^!Dqf:#J\SeTtd29+/AoFY)Cq^f:2gG3EZ2BO)Y-kVsFh?"l)!'ZW$@Do[Iik!0b%JNR8Y<2)ea@%VVH,:s2(#YVUP&JNa,\lI4eF9P>N$^:&IqL/0L"t#G=^%DMJ-57Kt,-5fjNF'E+)tj,8Q[?Xq/"'%%tn5>0mg4H!jZ]&jg-Vas^]%I\U6US0Kd/K)pns!AI$0!7,*S)$J3l/8%+Hi1pjW+/%l`Ha+=dM`;nL"cHCrhi!jXW`&#[Qo(0)qPB?\0;V.)\5<VmC+8)'EOTnF%HedUe$0E;d)ShaRKQ0EM1nKL@gZK`po,MYfp5qUJOiA%$LjZDh,F2]_VX/U4jDZj:-BUJ"So]"SB\R:]lE`"BB3a#5")d+H]LYas%kPYS>S=OeODJY!Wfc'f-fk_GWHk>b:mClsr5W9<4cJi6Zj19`+SE#l0d\;[^ku928BZ9qQfdZ]YN/Zpe+=jKW$42CX5n/>Gj]FM&%n:uWkdngU,,$9iXl!QUn7_h9%BM3GXaY*ka5#;o&!-&/W*WVhX6s;Ba`&\o\-4p8^!=G*UcD2ZN&j5ZEfS`Ea;W4K'eet=E+t!I!%r#]f?igeCU"WL5<Dgus0b^,33B*A5L[ghAk-SUNE!R9A,_VkE!a3>7R8Un1HCN->o0@n=iq/G<^,0DmW5TCo;>.l#Nl$Q70GX;>[%=cZWhQlRi.VLTL;&"F<j":q9"jKJ7*'lLP>BCb*XC3BLl2dIsL@&5A=Y+1P(^U+4$T!EFQ,3ZT@\N'j@Z-<=gafslB2Lr*6DeEbk%e<M/m`';fAn25!+SNbhZbr\Sr>538a(Q56q<ddVm/m_"K@Jg'5*,Y>`]J[_4g;G6pcseKqX8b.1TX?KYE:Z:3HC4pp(HEu*^)d?H%q[t6'D]?\_RV47rA:@E]BgYVJT5pJe^dX][6%dYeC3T^q&Lea2[u8oP(A0XKhs?Ln0N[-?C>"^L-D93sWkM<N>UO.Q*EYV5q?++<%,LVq][g2kNB#3Ef$UB`n%6NU?6"n2<5bQ6T#jE!YSjLO"mE=BPG;sREI+=!oF$sgWFO8=S_cRcMV?l*,KFY5pP:[oA=CKud50bf.%SGhWGkf1!KM[olFPqd<>=T4@;$\lAth/Rl$5&paM'/pRR!5RGOXD<QpH$Ur$88/P.nHWI9!agCAX+^(_-VZV)SZhLHEr]B,h)Sl\%-f?l`UYn7U3h0L[@NXgTR1o8BH00'8+F!(3U("\;^d<4C?igL0B8c".,p%^cP>4CO8u)V"-kTMoK$k8u!WpID3`6%Ml1Eg?>kKaf%hAQe2W+.SN;;Vcd5j.Wp^V;cE=u=rXPi.B!C5N-)^dV-0X4Ka*nS3VD]&T&5JS5C`]]4Mij;!2p6q2D-/@62pqICa?GVq*[?*WFh%I+8F"+Cfetq*`$,SPXSYji7hnbRpiR_t?mS)7kBjePfAk=GlsYUAC3).Pd?Ic+3bUQMQ)-9;N:$<Dkn/.JgeOl<gQeFQW//9'ZFB%-"Yu!MZ$ULa]dsE>\2O9e[n.BFiLcL<)QYZZNZ!reUg.;2>i(+HX\#q19%,_1ZJV(4<P?fJga_2BeAB)2W0YHMF6s^mb.$0p/MZ;%g7J;aZ13^-G2L\"8_kNA[Y`1s!1\(M2F`NAm#h@A.=;M9.j15Z:V7)9BeC;((]-g2;1TPO4sT,Ii#2;__>Nfsdrk7o1#R.lSiOLa%bbfH#42e:&r4'4BE<>3:ckL-pp4!U/"2J!Fl@4km".l"B2Gm?7OLt!lok2D*]AD#InG*mD$YM^3J['g;BiWWsf]ej3L"?K\G&neB%\=(t_61sRD;!J$NMR,U9l(UE$#'MC^=pG#?j6DWO.skqK@fss&iDqmN&D#l?[Q`(1mn!i>PS1FE5A#IL[DVd*Zhf07TP+;1/aBS)%^R:kUnG6p/[@$o>2;,a)&$l<FSKhh>J;Dlia+(X)JA1pdFliW-.2@Sers)cgJ$TstdrGEfFBtE&"%K%oIWKI$N1JWJ/cWN\2j(<a%dbj*$lJ'U?`.n<K!EfoqO.E!Bq0*>oC,q<(CoNMGpGciL0esY:Dm9AP^W?pdpe?0[7^`'9It4([$Eg^;o6h+^=nCNgk^bbjGB[K8%Xk3[DHhQhsB$YoG&&^kg*UZf^7M!u<0GUH!:JQe6b^);rabpCa(P"Jr]A`prfA'cHSiPo!@DZ!srI!B*W!JLE,u$Itr!1r@lkEe[%ammY7cO&CL.E>pH=,CSj'/.Y)e<4J'NnVie>^s0>SNV/=cMLeudlaph_"k`)kMe.T?c"pb@/`E@3aOlE$g>S/j+NnH(W7u#%%^S&%=)\tX;a>&=RuLM)5HBd0)<[/gJk!V%[[s40R@6!A$^P/m(+_ZMI@Mp7#m@gM?b9M&3>O9DCo@FhjWslR@Jg<f0g>uYUuP>C23CIl%Y<MTGpe,3,OaA@$&;AceA1Sab\kD1ubg-5t"o(trga\^_`"IfWEmi7)`6V%BdS@Z^cH1I]T)`=]7sGQ:8^fEP9QnAUQlJ^HL`MbO%!SE$?:AB"h+oWD[%jJ]=V+(,%)NUbT3urI\D5;@0ng)$aUK%2*X]J.L.eB6"'p)KZ3u=26:`oX#TEjKXi#Y3sb?i8#[[[rKi%3VT%K;2F&dO)9P"jHG:%`U$-2kH%2J(.`)V_+A(I'dKUS?on2P3LQOG-\afHGOCD$d45PD(.f`_/^OHYRNZ7CSc6p$57ENP%:#IlsLqb%d,Ln.\6^b_$'S>(7'W2Sl)T!4_t#^Z9LQ>^Oe5&q$q:Ra>HK0XNKDRuVc0_rfOtN2$[?Ar!D]#@QT_!d-U-"^_6)_0^qhbppA.:h%8=TbMVA[cF8Y/cNqFk?U\-d8akeUPX:.X1ML<MX?$e[!ha)e'L(W)ONeA/LAN*=^;VVfUZ.G,`M/OSPr(6-M.d^Z)`J\k,96U`'#%XXgAeSPjUhehssk*/Y-Z"-%Gk7VA[l%">,]%2%Ar$6MSiWI;jV"LPMhmb"?:DJW""c*f4O>]u@?<Cn^rbVl_Fo51I\T<]f1Kc$jk%'2<]jMD["@;NYrdHA'g*4MVL?%hhO@&0:P5fO"7Tm6%]pbeWW1gifT]"5CV2>#]g":)!1K)_RJ)GRWJ6+,6UPp0+U7U:Eg*ioVh<%3Cf3(7*XKGW([kYX6'u%rHg7=$J`e(fsdiHY*p>L_K[nM2k9qSIG,@01,F`biF4d<E]2XV6>sN*YtO\c\.,VR$bb-i.1aYS*2qa0%1sRFRKe4T.h1J3LR'br[i<9`\S$bKl)@h<>qHi[k,I3(j.qB6VY]M3(@KeobZHMaHc$"RSpMDpZ9u8#H"9,;`q*>O!!Kq*Ec8/kN%<cIYdfU$P6U!*,5.1g3lL_XVW_lc?s@LUJ`75J8T.DVZ,ngf&<0:3:e2$>2b#!eUkqS>X28O_9FX&'Ee=tA,kd]b_m.7;p,)i^\#%gM!YO[>ib[?L+S8obc9^#FtH"r+R@o_tbcEQnJ3n@W!OZ9-F_W0HSdgR^.VY"r\/0eT9):@C%mrrj*%)>(qWW!kjmE4/r[q'/c*r%`9WOWDML"M`Xm\//#Xbcesdu8N2.'h_&.6C(++<frp5]6^6BQh<o4m86?$>1Y_k0o$d_@"r?AGmL1XDY85^>C<m#Oe06!M5"r]IJ%J".7&r"n_%WJ1N$bH?_ZO]JG<,88>$jF3;SYRq5]D+?7Z^?Jfak\XIj'7OJ/E^6,/'U^iW<bPPWJS!N[`-gN5bA%!;$%ns1rOH<*%;UB#5Sk9;.6gGkVD13gKOLDI#1-Es_H<nMt9Jn--D1m%mN%1^.\>CB*Ssi34!8Jt>6C;N&3B(F/,bLb["V0DE]Zl[q$C<&Eet72c%DSP-29:TCaT9`S@agrptk>VJiW6O,_Wm9k]`7Y8&(<aFKMh)cP-::94#&D[If0k5,j5pE%Q1]I[\"sX4CN_lhBe''<%;KINKn3!c%\^YsJmY%-l>Rptmlj>/e2fIlaeUI*Ms,'t_U!PVEU'&)J"13VfjHqJ?W3\-GdSQKa;.VakR]JV_QiZDgfNPhB8ST>WdE<_17]g2p%QLXn7FLjq*m"0HL*o$"c%ieid_L/e3TRI>tZ`\?)fC/eq("60YKrlF`LS0os%^pA4J9QKWlJ7YiGMEIIS%pk:/kG:\5G#^RO.=?o%22#;rffs'$<G[WW-MlP=&OoQX+C@B-(&0*i*-o"0e$4Lr`hPifE65tX-3uX_G!9=0JS@a[<oS5eVDU>2+S*tNChCMIWnU8>fLaW%%92)4SXcp:')ORcbf5KAa0XI%`hfHGqb]7/)$1A$-8P3(C0UUfa%)2rY/6]-Z!ics+]P$&fn?[t@Y+uS=j!$/)4dn(bI+3@b5,,]]%Ad0:%l'Na_c!`ungB&BcOs.hnG.H^0(2[56=<jq0^kq't3LY.gmVJ:f_?tMk%9=l+nhrCu'akcUaL^'Zr<DeS'>DKi"@u9B]Q";<%8Vk[,^U^mR@/kg$fst$q&>8E4Z3%Zi^4E#q8?7n^-X^'_&q$^1rE64m9AgmP(NUr/`rI5Le/6sH<ks\pLk8BP9R:djkj2P++G`5E%*2A2sei@=A^r94H^6im^0.I=pr\s3#jh-1CM_Z-.D%<EU`:hKq:e!YbSEotR<lfs]&JTc`oAer`';<d`Q?G$@`=7c#MOntNHNVsY%=BpjNH*%8]UJk-M]`iDo/`g$bA6EXs`Da6]<hVuW#HCh#gPo/1XEKt3lJ&PX-I5sNk)93t^R0"eH<EJCA+m!I]Q$kR5mYKjNSD=P%41Dfs2T_Pc`'4>F#.jj'"[?^iB)iC5.p4/:%A1;>8.?J$.%1)%K-uY^$LZqc6WqnJi_\Ak,S[;.g?3>>o[&S%\(ZaNosF6A,;Vip%N<:qXVR)q87r9C!h5Fk=&!Ipe`og_?`@=h+BZ8U-V\Y2=IaMY,pp=LGXJ3^eR8`JqGB3d;#GD+WiRm;hW5[ufO'?%fX4WN#fd5MG%1+)&e+Z"?GZ[Z,8%7N0KWHSMN/UG\XZDE.OG0mn-F+M0CAXs!BVVSDJKV5WO,SKOLIrX)U_&3?p/?1X>6qUr%#T#SabKG"%_EegO%S+1mloJM_W4SPAN:Vj*aBe*.4n?pqnFu4DK0s72$;]`8Ri?W\UY9o=:L&9TCFZc:5^3Qjhr48M0WmU.>RuYOM.8$Q:<(91=Ui?#>%p(qbcV,.^Ad>5\G3,?*MdcbFG)V&bqKj:/6PfMr'rCT'9)/Z$]%\<^8</#=);_POYjla;kIgH::ZUIdm_d.Zq/s=7jV@l+=/H&7*%Nt-AF86tn1JXrSl_plTklW^Vu%R1dT<OU)b(NL2O]oWuGZToi#?8LHl@-DPS@PM5?aXY4&a&HbVQp,):V=.F[47tq@aROCVl-mo7%68%_P`,Iu.L%<:J@fa<7r`1WVQ`a47rGtm'KT>6*%o;P"m;Q]e]RbO>T=FQ[^Z1r!\Y;0/)CXDE^B0+pkFO,DC]DAkea`B:^X#[5%[rJ'%Cjom<1_jFtr:o>'48u`.Pc!l]-c?8Hf#;7aoG@5Y=#dhgL5.=P4hMSgo=eiQ357Y8Uh4Q.j&@KP$tD`?In9kl=^$F0Y?VAE%J8?YFQ[4TfKC$)f@DVlifB;!eO=O%(m26t]F44DC?fm@jX2.Ir!:t7,RQS;TPntNngr&&-)snZ\,Hqu*2]0n1dXM\'j>Hb#]U_DN%?'H\MA4U7ULI%,uhiFrk&N4jU\,n<G`0,d44qJFX`8RS>8!e5f4`J6u`,E3,C'-CJ#HM2K=S+V"$!?qY$=$h8K@*;?F=tFU4O9Q-%IVq?r9M-<0n62ZAL]oUb>tH&]QTIHZcgP6d/rm(\>c#Rj+uO=qoC:m7nu#j]<dk+8@ANEtAQd>N.G;>Jc*Z;&pVg1De?03Aj57`B%HZnIhQf??I:JB!!jPZm28I$;/nY]iSWVel-QH)53aOtOp*\lcMT*>G2pe%CN"q);U](8"!'O+:]K;nVM%87^-B[$?]p/fH,D'8ko%ro*ra,h$SgXLgMCG-=s4c(Si"X.TQ_LaV%J5]qV<[)snS]D=:%O.p!lI"c%d$8KI#\ZZuO!SlWE#"jftLN]iMPZ:I0R0_"sq/9]$%W!(,7Usi>M<rBV)&]`r6bHikA4)BS.<3H*2oppKkE(AF=8?VD:*901fqT@^;]1Fm,$o9Z:!WdOP5Rl2A%NpNBJ5FKc_9e3jjjA9P%8=fGBmu"*2kbE;2g@a]_$MI?!)@H0nH;fupE/h0@?0kl.!^OY.A1FG<o0fdkW264om5[$,6;rkAd9?HoPB0cA`n-fR0pT[M1iQ=h%$9?o4\A5'>6`+$YUe8a*lN&H)0O9/6,,CLFf@"%&=Ueu>l24sem!_0i!"b-?"CP@A/oIE-BdiXX]Gl<H^gli2V.?7pNO>Ud1A'([%TXThtX9GX8:N`DK!J8=<2oZP$k>+pjIoUgbn&OG$].^,;SJL\*YLE-i1mC?G9f<+SMgU"o7HI,TmrHY5C:%'9gL'CHXHFpGQ7.tT%:%d(;n+lFIChY_M!@N4qW=e>8f@d[+rX,0$$:CJkqo=O+]q2qR4'u'#nSY6!<QN_6@F4*$!GI&HBo.:AIhk-3DHso6)?W,,0$FZM%5C89#9.?Kqk?P`$Su5Hqp6`Ep]b[Q$G?+khK+c_-#=\RXlM3OE^-,bPCMZ:^N?4A3'**rr,qD13n;bZP_&r0kQYGJm`2<nC$jQl=%18%qP%Xe/Qi$Mpn-,q-O%lR>&6!._6/I4f.V'iDmK8S;#ga1T5"9nDu@_orM&7MJaV%13d!^i_L=Q%Y3&kQB[,&QI1g&QA2/?a?<%doWSN%Q(cCK9+WYP*?6cpS1!PR(H@[!7UPYF$lUJ'P5Dg/F&)?TA"-068K&`QDgiRL]ogh2LiC_FAe5'\!);NIR0J+0lQd%?n?Ju%"H<D2,7qi+Wh5A)i4Km\L'_(s\=1Q;afMd>/9Cu'd3BDJ/#!.iLLSK3YqAlcD^`UV&l><iG1>Ff&YB1mh&D'0io.UXW/s>j)!TKQ%Or&DPe?b$H#9i*hJ.d1&+poTC$jqNJ8J.sE4>64'[\U@m(I[gA4>`JHUktG1_.#ARn&0ro9#T[4MBPQG\:)I7q1](VLOht\GuM>(%raPVq0kUh7Xp[Aj@8pqp1;u8XQ(o\tFo@hA>lHF]@MIG;VMV\kSH.!41+>=,hiGq?O3^/#5P[I]VG,rD,Z\dBE(9)8"<LE""(F!-%5_D+$)23H`m/"+CI;cEN;ajp?ET+aoc'5upG;#4Nj0tg(;!F/ohT[RQ6Ka!i!=s?WR*fY"!>IV+DlDo50(d+6[!*`b^/kl!4tNc5%?oLtU#,<>1gdmcXUC-1fen*_GH:h9)N(b)9$[YOU'VV#EM#a4uN,:@LAhh6lf`lu)3-[!]Lg8iN'k+k-VZa[*`61?\M2fjbH:iMg%-T4:)dHcuU1^&Sg6Y9?bq_=3XPk6fVf>Tb[G>CX,kio+#gfTt>18t5b+q#)UPBa,,<b[e]*e;&X/):tIrM<`mq[0mOe5_K'l-N!>%M]fIC82e>MbF]J!P79nqODlE>Mt;8[@G:&`>PATBmQ`ffF35LX$7[_m09SoA,QP7#1c]kNhEO-FLA:e<*T^Iig;M5:n[cu]UdcGR%$a+6fUL#8\3/c[m_);aSPahtoQs-aN/Hil<UL1T^QZ#;#pTBGlWHS4[+P%fU&bJS#-HG6:2cgc:q"']nrd,Ij2[j631q=*H5bpQ%%9*191J\aij&j:H\2^E"5Z@ghpK%"h<MNO)K-<GU'92JO1a1MA=WQs*\.\lFU/<)Y?GS59rVu"Z=dVZVCNr#>[2e#;/cgKf[:$2Ps%g>p96:J@SSifm&0f"Eul>_].6TuHO?bbA'OE$$")__&,=;rIK?qfqi20olm9;>IOO(u:IV@A\FOJDFCplD=9e7+&ht_53TQf8jD'%X:^V5FQ:-pE=p0!eR3qm\uIQ8?SDu>eK]lgJqH(f:3R-<l#V9jOi@a=hT*:uGT/WeIKqoD@/McELsHgiGp@l;%oocWrtjh&9oa3n%05sQUIT=2M8T-Fg4@L"sk$b@P2^Tmmc)"Lh&Lb=8'O2'i@ptm\=bY3Qn/n[FAIV$H;8*+uXUA6K,/#_B<c1T.P:W8Jh#Q.&4h"M3%`\Tcnds0`Z),pgH9TUs#pB\_%H)acF+(Jdp>.?3%3"^\IB9254/GF;0M0,c,,Gf,LNWqa1F6%L(g_f(rIJUYRq;Hc+SKGBL^SMIE%A?iip^&qOtH/]$maBV'$1TL-m04VC#K/E9PMVU^Jh&HGk.J7r!m&4b[DOJYdWa,4leb]K`aVe&;6XR5CT\bQGDrqh6^W/2)"[r!f%j$GAJIp0CQNF,>8LSo+]f&%M`n%&N(aG[\(SgmIu!O$TFYX(:1<%_OIIctV'TdE#dk;mp[:NoT13m?dWl#UDAkZ+(K:P+i^YKr,s%)bKac-S]X;!)I-ccA!^;D]PWn?psI:C;?G].a8p&X6"!YU[W6.>"P*N@#@IWjJp=PLp*',L-qtF*Z&tp>0DaF,l<HS[+@O[@<V"J%]`p)pYfKe8l[HO@WS/X"%enZRiq:Qtd=XZ+dm%V^R[e@>^'VrWAT(%Nj(`Q'63GK"TSo?Do3Rogr#XMYLM3%a/ijbu/\1l#N_DY4%<%Hjj+7^?,&6CN0f.1g0J+(/u(Od+UTa6M_"7eW.*H&4aU,*$_+J4X(nsoNXk:4qm6?[t"8c1Pk<JI'J7<s9&OoUF]D\_FOQO>qt%K(B&3Y-mIH1Y9MM?#4)QNP\h4WV!jBT&mTg5*T2;SQmS?h?Q!)@HK(<IGn5))L?"EGY]..rK$.$ik+:W'N6fGj=[-uDfY#,Vt-/]%0"Er;`q1)n1FZA:`Dkt0\W*5HiN3)210,-!DsPG;\bJ?tb(\5KrT'K_/7p)iU4/<#s/5A5]k!O9AYnT"d)<spL$U$C.\rF/-d#)"%@];hFIPb,VMq['37uH+b23_?_H9DX@UhY$[?[cA-Su%:$!C^-+@%.'1E6$:=iF1AE.pu^0YL]!.h&o\<hY^%]c8k[`-BFO>=^698%`:^SVD1^H5!UHX-^LnJ\k!$KbWO]O%*;.mo;Z@;]9!H?8F1r=^4lF<BhpSTKOkA`]gEU+?-83_E3hsARcc+_U<U3+(__)IO4_crT%8Dp?6r`+"qY"!t,r`E0T$U1Z0YSgh+7m=Gko>HlKq3W]s@f-:uK+q"t@Maq_H28CWdDY+X;S-mh^r=A?E=TGWn01D2cPZ-4i"60[%Dbrqd<Ogfh$l.=o3<1>*4>FV&QVR$_O2*9Gr=iIX.0dZUr1oFd=<8u(Ogm^8gE<5`+sdA!Or*l_C,$<8gd4FqDdl"l:e*a;BNNe4%*APfa[@`fgbb;7:LKL-WWcQF83I#EX(WE(L*t+`h,AdS#$bRj%Pe@RFJ0jTS\njs<MXBrH(brahI&C"1LqE7&(!SPDJ>p8]CB'\t%<!r<[052D25_gtK)6*=7R%f:%dCT[S?bK\nVus-HHYJouS=i\F>f]UU`J'P+%J@\G2DiYJdR]WPM!MX5.SZha022F"o9dC2pSpA+%k>?Qp,/bb@;4Op3>a7:'M`"K(DUD]hK!!o2nWYA9WRjc>K!:bGqa\bP&BVG,VOG6"CRpIBqHXa<b%JWFkpZnmJ!.)jUuMJ\"-$Rq%UWE^B9RM`(a(h:/#lk$UKZr.U>QZ]sS,gc,=:_aU/`D.0jJIl3l%<c&Fc>DlMXYQ[VOI<I"sn43]OYR7#dbltd^f,'pC&:2S&k@a%RhHfGdYR^h7Zp#,-DuRIe#6GDf7XlDq@57:X3a5%^7P^E>kW7D`dHrJ@_VW.+YOJnjF!RuCWgiTh-5mR-35RNQWpm.I(]]+2I(=9%<qS*CQ&+E+Bjhi5NPh=bV)'.MDg*%q0EOr)=a(,%r0p)?0;8Q-"0M\%4@XldP.N>iJd!h],QD#*"YjYt^HVKFVF0;ekR]'ulikV\%S1DQ+K0f(err""2b*VGUn(5AfN3J<L\_Gb,V:!@)8W1RAa+-CoYc$$gg&!pO4&`Th.N86P""jO.!B,/3/Da)7O")I"4r"4Xdnur]%'a&9%>[$DA<3g8rIS"ZHf5l]dZn.hN7Z$2'0"??L-SKrI<=f?0J!h;*(V*Dk:QfH:3_@h2Jf%Io:BTd6e56D:*<7+*0;gj`71OS&%bEJ!KSD;<u#5rEtb50khBo)3.SmJ#N?sZk[3LbengjJbFbh)ag)t(0(T\(YL%sHuH,*\9c_7+jQfbd1FO'pu9]u>88,Y5L@"n<fu%6T.cGa$Kt'!B@8)CI#[J2c+;!C\]UFZ,^>J51Pp4Q^JP:RUG3_7od\E;YfVjR&D;W'WKm4;NVV]`%$%Qh26\%l0!ZEND_JO]S,cL%a'^Gh<[EOBM"5(s6k?I.S>fE$fP8ppEp;d*dNPXUdd7W#%c$@fqmcD%d;,QSj(><Z`OPd7oR.5a:?YiYq,d.$p%fnJQmVE:#b1@d%c5+rZd[)@fqg@GRr:2`G,B7QYqA.`^CW6J/q;e@jH;9Mnn]+a&1&L!li2G;1#l`n'K?^$@f[pR`WuS7]-UI9p"*s-B-g-chnaj#;%d3L\"X9UXrAcs<$>Q-5`6C#`.q,(YmWT`a(1#m,8dU6D80>W?Or2Ml(;UPt`(k3m4]l#\NCIT'$([*j.#:O"T1*eLjPZ*,fEf:p8%F"Z,qqt1URcL\1soAtC]6=G,>>e,TRgcY`9oAf2C<PM1=TC.&6/0#nGLk+#DD/i"(_!D.^cNb#o.<G1(m.%]iX[S)jB:sPka8i1I%"G$u(KkgX^%RAjB/l+7se^p#/kRkbSTP&D7QOeQ[]ANQ%m,S,WONQ/(]AkC)9n%>BhF?IjI&_ep-3%od+Fa,NX<Ah_*,&iTnquiV%]"gbo.i$,ioHI6[E#f5F^K3/b/K2skAn08K>Nm*<E>H`A=!cc:e0akK]5nb!ne]a1B]/e@q<dallK><H_uh3.=5[PNF89][19TR0%(u4s+L0]@Q[c7^$5?1r3l8hO+cC_cUIDT"Xh8Y/I!";`!15Y0u?PftF3gKtd2g[i9/ArY$?)mnGPoXb6^GtZsK?Kab66d^[V!GS3%0XH"\5?.Hf(TR&C4Em4bid%.#*lD7$&j*W5PXGF3J?P@t)D3(-37c<D!/bVMC'm(Q-?K9Oi$B+pGOR<ISdB+Coaq((9MVS'.?-$j%A?btn-0,'moK$qgF.K%VUNrh4_@[qsMl2'NI_a:`'Kl>!;'UMLhlkpToo[g'+,T@G7p$Sla2ne[Y;L!)UrdVOk13%kF*W%^G4YQ$%g[n_J.%9hP80)RcXl'LlLCB7k^:gW2\Z1]Irqo/=PlFo'kn,]OG3K-CQlE`D;G?hi@Xp:\lu%$)73eU8<:0JB?:KhGS4[I1Tn;I5%(OjdYnCnJC'Toge*Y!C)B<17s+U,O2X/b@T)0#.no]cXTokhuhpbdML>n-k1n\k\_IH254UkrgOBI+mg3>nT'q2\JKK)nlIT:C7k%0jUSAnNCK;ZjnLmG^Wo^O#;.B'g/Ho?4SL"rhA44DuTE8%k5J.WY[EgJ42W%-_1MA9HS!Hq42!OlZ]ob4^s(#pE]=Vd6e88hHFlH%@kcKpZ%j85=p?3o7<i7o5(Q9')s"\Dr:s=.FUaG0Q4CBIXNa`/=[`*+nnO7543bkL7Tt500WL8L'WC/025,fTi>.I=^Hu[UI%*N;%[7IM"r7DQp@IdPR)BaJ$;4T6c+Jb+>1^%]LhAQJK\C*h"q95HK,/&9&?^:8F6HpU%/Q31OVmJ(-O.+,TcDWZmlQUajdL/F<pU*P/%MNBmS3b*#'&'J(k!,:<anF?9Re4'5$n+lX<!hBbIIXW&6Ns5`9Mc9)HY"p/(9l'Cm<6=rYOhS$9[g4Fi0:QIB[0*=&7S"E^oCb,@%O0hpVnZPBTX?d1L.hHRj-^6G1E4YI`]V1c2.=8G%WJ)\FY9.-3&8>N>BNiGh^5qsR'1h6CoUONnouhi/+sNRgr#/4L8mU="&CRN?%_HU(d%J.I#l51]Sa[cFJ;*d%VY.*F:"-=:O%9<23aC(fhD`+I:YH,aO4;d>[.XS!9YO=Yo<^4>#=9.'rVCK6V6`K54%m\:=[7L+5%hBsMlhM0Q*Xl#K#V`BDeQG7>r&Q4DgO7i9J8G$6C&1P"Qi1%sTdF7CS&g30OBP5'3S)4J+Z(1gL;B"c[kPODrQ1"T.lcN(kDh41i%?-`]!$LM?:]3ki1TZ^V%WPH,l)Q)A\-WA4q%I\5>bu+Fd8PGQ/h)V*B^"3pd]@-&t=0"0+nWM=MqXW-9BK]C7%IUCE)OFOGK)XR1%p$QcX"+eDEi-t7gVJrg6(u/s:gY((D8G@#uk(P.J1`Fl;=Hbe.jta;h2gK_q^/clqmcM.mjkO?3F'#)<ZfHTuiQ!6sVsD1FEjGS>%J+pOqr1*Xn55i)PGJGF&#bTXt_>U:(=\OW>%IVMj(SM/%f"_+[hG2q4+oJDO`SUQs&pJ7XrV?=UoV'Q9p*k<:'ML5N']Yd&R+5&l%dsl[7]mkBX/rt,C\fYhq%pmj^?LKMmT7>]Ygp+_uf*h&&2t'70Q`]#j%,Tf:6@A<E-Fhnq(#?LfYH6@EcFL[9h$o6mqr^.miR,uo%:L>Z$\YU#1/Wl4-aOF"7OS5F6?gY-5R\fXC1M(+Uni+j-=0Q`>kR'M$J@P/kcujV@I;AV[%HGd?/(F=s^<k=SKcdod?VE_'3X(14%`Z2NacTNBjI9NCR#=V5%S:pSq1-Y1&J;8>J"lW3EXZ-'NW9:f6&qca=L!g*2*64`K^RF+hVg!/?;;-FEg:6Ur)!MY(&McaH0r8F(%!,;!@6qR"&fr'd0L%P2Y"DQ,G0Lf6Hn]qir)"]EpB[cY7hrOWn+K\Ag"FaDrNH\-^jLm/#.?G$7:QK(_!6a'fr^KAX+Y_ucV*<?&%o<U1",A'?CUf*0f`=<)C5r8mWLRo)Ueds;&`bSQ)E3.,*0glBIOaA>D#%aU_]24R]nl.EGF:e3c#X/#2:;kD'@&mT!R+'-j6-H%S%\][H(If29H/$oI"Z_T1fY4<LY"]#B:J^Qlp_;#R8Q(e5%M$QHs.nP,jFU)T-*>Ca/PTkO.nj>+6N!Jg9o$fi,lI#3,(AlA5Ps@jG%Mi4EUd+)`f!;]USS#a'Xa0C<5Y=WelfcJM4f*^mur@kHQ%"jYlhShq6XnVmb;>.K<7$aQeqt-43&Vhmu/jPc&X+]5e4s2Y[!Y)DI%/SP?Q^dTnW<tJ1opY($7r&f\!C[FXeOLuES9$hZPdj;O!(.973SiC)0TZF29)M;/9?YlmIM2jdfPVK_oq!rO%WAd"r><,%B_*1lk%Al,)6=T5"@D)HgZCQVt349TqGF+g3qB7=o2fq6#_B+Dqe'sUG_4W#ue_ek%^AR\M(cgR''cB@uqU6q+M(,UBtWGb4N,J$BU:>VK2%4i*ZV%PqR.<6oW)Y#RX8\+3FR5T7=>of1`mZggnhX7&AL!YNm/@'+Du3b>m#=ab(f9`'HaHOtY=.[."S[&_%L\tQ%1NMY'934.>[%=eiOXd*u))PPX\!Rae6;L5\/[EU;l%4=VY<WCGu27AJ:4UX-cQg.YTWa?[XBh^W'"L69DN`TIre%\KbLFlbGceD>Wd=epH9DM/m>%]e;iUqGq'oTRr@0-G[d_<u\sI5lmr`j^9`fd=kWhfV@T4%Cn9]3lK,k,;h6Db@!2`5K(+,kPB#BM]M%V-hNYQ'+-rl/VoSB3kW9M%?.4P@&c#`9c8GPeS=KO8kZRO:>'e:qkmoOOo'1I.g*on$-!a3m9?i]OVsen0?#*O7e=]%Wp+Q]*ai\6qn`$4=euB(`jD]#t^Q\;9%HgaO5p-Ikg/otL<nO5"@PW:M(Q#_@j\9%`.pT[S^$DQnASO#W0:/nNkCQGI@YF7a-Qd5U.nWKl/&Ph0ffYGC*c26UAgBD1(GF8%r%[3goa)=dXuK9X'\"&M[nC%nEj>,,q/0ep!\10V'WoGga6Y&u-Bea:%[\Z[F-&,W]EYg=?sLK7cCNTu8d[DT]:@-d[sF_rD<LK'<!%dJ%d_Ysk=E=*$<5Eg:jlZk4PQmAXS[liXU,IEN)beCl^jB`s'n>R7W50Tm4kdps6RBf^i/-/G_+B`U:9dJB.jdDSZD8Ol=1$p5u2%Y)+VkIE&aSamkOkPi>a2+o09T7IiNOC>2rqD25nLWH!brG\^N^%g)h5@G$]NQQ5Fq3jk^aOEaGBE^,lq;?1*PVq]5gL?$HiDm.DW%m]]:Tb"D@BCumHPT"Hi1(O[+6l,,1i&BJKQ\cLP%o3A1j9`B*)%I'X#)uSs)T#&RlY)"$O4^sWYM3Z_G=A,L5pc;br"<?\]qJ'jl%lF+tj?"jJt-pqI09)sG3M0X"JrV)9[8aI]1'*VE&Z&P"7Q0c7!:>S0/!^M"tVDk11f/H#t)eOANoZ$6Tie5FK_ekL!YWJMY[>c/s%_]h_i43@E?m1RF#/-sEH^J,3V-sm(TA!F/oF0\,NW\P#u<uPsNVUVbj6gI@FM=5E<E2LT7aPJ!,83>gliVj[t8Qg>U.bZHnC,6]*%a'r6j_X-XjjJAQXJNN@Hp==rciq:H"ZdH&U]fTh95Rqj1DeP*d:'tC^!*D)ODE#G"-OUraVTuuDL"&\2B87a>(AhTV;s3`VeGD2?%W1H'4Eb@"IC/+t*Gjk;3R!]EY`k8Q+C,]K'JOSqH$g'28Hn,=hmAlGo8<4M:Hh&YT2%u1O=Q?`BUCJQYk`*5%No97UJI'Df2J95?%akOVaddARDI2u_\'uI)3W+p_l=ldk5)cFOgLK\+Olc9usZZG+0p=3j(a*<TiaGG0,g*EN3rH,RBic@\dq/nOJrUq/S-pn&HirBul%QtTR%m<e=`^l0(XLon%pJcpWnp\0op+@PE5m48).H5^W*ftZENUZpkm&=i\VgAPI2?4i]'_kj[@`NAPQLj^7tRB;ci_TjRI#[4WX%W:-KP^89Hs%g[\=r0g>cFuMV;fQ6`X?l2Gh?]kZCWMa:'%/b9`('*)YaWfCs<3soom<:d.KmDnXNB>pB4",'k6,9(HZ%SlpjL4=_%HE.U3ZhG4@"@^oUgg#-6KOZPnL+^%)C'"IFA_,2O('_b5L"[G/mc33*R.Tb^fu!\34r@^2(beOB=^+5nbYIqHBF@h&"TYuTcD:q]%Lca;IMEPjLdaGO4O8J_H.O_#CgrkR<lM:1#:`O@G34>o^\Lf'FL-<,.mUH\`[Ld<_&'D=W`3QZBAZ+odE:cqP[SXDtb0<lU2@Mr[%!;,Tp0H=)T&kSpF`W?>P(*9:]:RC9U!6g`og@01bW.\/O_,T$d.5lD)SOon7%3qSpRrWDTH4!%@k/W.sUOe`?hG1!9P.m#e::;<P%)T*9?0h]iIB#ua!ChT2^Jk;&9Y]J&KhLF,EV)KTp%H.ANGj/pO*ZNegnl>sfI^Q%A0eZb5hEYI!gIuET0g#2AUQklQ9L;KTD8.q3%B&I-__\&*W[t#^]%TSW=+uVJnQ52@j0$,;q3?[!`^mi2`n1!8>ik7EF\Ur^'*EX32FG8/::V@)rL\ib_FQO<[)\k_%f$Kgdd,F22%ru*ri$9GM._/3rNbU_o,eUkEbd$[t^3S]ChTeimFdo6_C>XN.160E2/VM<C/Je%293'[qDGro"(FFY8jo*RNi(2f`_3qE\>d3#]t%Ti5l#2Qe`<l?V-]Hf0l6JI9.rFic&\gHO`$2K#/]]Jf&O'OK[g4)<TK(-=kMB6jTLg=ts?2dYN[H]30;D+1AI.\"\RAq$5g?i_3<%'_NB:$*`@Ej$OlhFlf.lnV+++`AZ+$M`K?o19Q#38;!=PBsV=[Ak0<]R^8o-Sq@BT<pf;-Y(18FXWUa>NAcE:<"H;nL\Hho()(OD%1fN"3g3$n.m&&VG\Qr[+fU%"B`h_6]J([:1-!;"qmBdTrXXsQ^9\+?OTrDT?!^TE.%+sud#u&#9$cK-SJ9o1hdDY*,Q&dhG(45[a%^;WAMoK#t?0\i$l`j!O+WtJ@9NmDSLUNLD!kcJDHr%W'RbW9_\fM%J;C3g%O]<,10d`.">H<"?dYC^1'f^$]8S_0g"chu;s[eJGa%C5+g/Q$][pUm5q6g;POkA^D_:='@6Z%m":7#@<i[>P"1AZ.];p731:@r*9EF>L`1Gf#/C]K;sZ-"P/t_L9os+&*(fsD1JUfb+9;o%Z\VenU6tIKaOYtX2;52I;^[#mr5M4(eV0[da*%k67WllU7T%YEo9L`rEa!<g"@-!IL6[g*)Lkj[pF:Z%,D^?l$2-8T]-b@c_)ij8%V<=W&I6bS'/D[6n)840KD*SbGWSELi[(.r$*:k#6\67"h2*$V^(c?,J8.<Ia's,Jbk.0!d?[3j/mDPS<)1<<I@C72&BiPn+.u$`5%I7U3\I%.L^7]8^;-.;oU*N`gV&Z%Dg48EBZ95_@U$csJHUsmJ%='X"nloYc9:>)J-FqmNl!i3]Y((45E`Yiqk;i_@1fs]&EQujdc%SJ<r]Yd9[YZ.badUF=E`9A4T6jQS0\PEC]mA<mucSXk^5So,P8^J!t:7RfjNj0K"1Alnk?ACP6$cje>#6ds/uaLaP#Q_A8gOjU-D%bl$n?6!--K)\o?ae`Ue5OYOrK6c)sm['s2.")*n*`Q@gs8JK_pL$%&mQhA(443mE&EJU(%r&no2A&(j4J[9<T_^'BOd.DM,W\(NI%1:2,[p7(,"p1;p][<9<kHq^kh_5LPaWig6O]o9Na<#^#Tl^?ATaYqGO;V6;J#V)u5IS#ffPO35;".5-4RVhBKRb)pW(,g7EbP-?)%U)jg5LTsC.mp-I5bPT>gYD:Ta"b#T\\@m'ag9-4;fV*VaH8q^apQe(FH8s_>Jf=%fgpJ1u],QVYruJNh:?T<c&D2R"iG?.QhuNFh%MKr':krWiIS5(VIYcIp_.D%4ZC$NYSEsAq`-W9Pn@:S3CcCW+:>nXckrr)iXohYtJg^.[$a)#Cmm1iq57h\"'di6CN6ZDb$Z,][!%j(A6QnCANFhD?CQh<uo;^8Vt7/EO\\2Y06TPn6Qcs6*O1*MamZ[;tX&ckBdt`fai)`sfqkqY%Qh3N:";#P:31(d9S`nhskYa%Qp/%7B[!B*b)($!ebO=GMQXd`p;mcDppJsAds<j?SQ'`2Dc_YNOLd^&I('P/9oFfPr9#K'c!^/LT!alq`S=U.KFY%MU],m"&u)E7u9T4%Up<MB6$"IJ.T-;;^%A1r?Hgu)74`e\)a8+CO_XnRd)qGPIpX91&<iHXDS+!r^/69D%;pu1enZuPp@;Br.@d(Q4(p&_oZ&M,oV`#*%6RePQ]H"?oDQg^Lm8CI]ilYP"iAC!GqW.Z&V/X"KKnG`/)<JnT`b3)9g//$BpEuFE5,gJ3D"gDDXZuN,YSX=UJhrQR2LkIoN<D!>%VLB-Q*^37n:qpOc]>Xqr20q8&Z*f6pZ?61Kq/,3VPZV`92f$!8P9Udp;'#6NAq4dhWH#N99O'f(5\=d+3_WO[R"nE[Z77`4r5\Wr%H+,Q&*U[qsEqNNpk,pb1I%\qO?[N$?i*3;m>'e?8di1*!H7k4-fI')O?:@'R6)WB&-EjMiJd"5L-'8nR*BuZqQ0Bf!$.q\Tr;(5/%m.OslFTtY(UJ36)d';:/8<_*`;!iJ%@Q02P]4K2'.6LYc&1K_@HXp*6j\o75Bo:a#M5UKT\c`E^2(^!%(;%Bb18dSVG&a-GL#!?Y%L(08C9I&.I5RPitF2r2K?Ui"PT4Z&[-V7gD[G0^X)<o.dI.#S\RPdEXB0tIE`e,F4TZ=(_HU^0!-hrB!jI:C_h:d?"Z.1I-VDR\E%]P(MI?iFlh#/icMZ)YsD'9)`IY'!.o.*85o:s3HtmObp'C->Zaeq?i47T?Xt_9$"tcai2?)Z(NNAc=1LNBL@_SLRk1-T0fE+[rR>%4%W39*')i!WpFkkgm2*QNL-7(>Re5_\1*@1Lo^:CR3!PbZ*3U]LWC?ncf!S;RsT90]4?3<J8M%8fLi,hQeLlja4ZfGL"6(kosVKd%4+PU+e%:#ch6)$jmAfFCiW(tHGGo7;]imJqpVZ>r9rF<ke<-(\X6K7kl1V''ggV/UE2WZ[eT;_8BPXXZ<)'7qb45ub>?B;<"nhR?%ni#$?HL!Bp>BulV3k\]Xc-"*.Wp00H/F)uH*MSut0@qgHYD9-T1O7<s!NYJWC?a5p7h8HkVe<BallWU':9R=E2]M3m9rBq"%ej#l%WJtXR^%p.5%CK7ph'OPn1PL%OVDIot%p;W9'ub@!VV;4WhkbM[C:[\"[Ttb]?A.E"GVu$5!*!0NctYU)!02\5e*4!#D!Z`1]:)Ku%Q;/C4mU&\d=$EKf)*()BSR*n=f"UKX9rCJieS/.kWM["!a`W,K3k\]XPOnSC%fl4X$BG6Rc1tfn$Q$]mJXB(tGFc'#lkM_;eeZoM%3:qK=H<i<!/p9:ZcIBJ17jlKDD,j7Z;+Xt>IVH^)Yf?g1Q!Bti=S8cQWQd'K;?aL(QeRCioX]^"G?ik#Vmf;H]o<_<)TIG*S6bAZ%<H>&`,+Z.)fp18:k\RR`ail38R.3Id>L]b=+*4?/c]pY[I/@FAN&AhENV-_la5!(^EnMt=Zh7(4oDQej6$IYck\:PT[Vp/DNFVDC%A/)5U5OQQGUM+\pSXir\ZIpsVV"SYpIDCS?Tih:XE3)"\Xkn-,C`KP%,+lQV<W$UF70sASleT1=BA'Ms(Ba0)[!,KaONujq!c.dO%M#6uY:e560pX`iS_U*N@LY\se8=8I(2N]j*;h%tG[WB;$dZL$l7.$D9U!nKMPgOdf/6<5JE1hf+2cSsZ]:h9@g^Vf=\Jr\#@rm!/%=84<r++8JhKchduY60!Y[tD#Va\tW"#gU-sLnJF'[o'!+p!,/mbdt%0j90XC@BK0Z@YNkO:=%1e[/IH86=Ap*<Z[j;cOYRqD=%a5%fIfNhrc!;q.;bULC>qWHDp>395n0u2%r&>*`!uH;hf%VfS",^eYS.G=XZT_)k/5'?OC9*](FHR#)R?Mn4S/%-:6[]p;S:In21i/?%4f?+V<ZA4jhK;fOEtYrELdr[4k(O4JY4+d8bJ-oqi;'d^9X-%$H_#+'f2q70EOV,KDOb[Tqmk83S8`-#NMA;t%T3%(#or0)4:C\a%I8\oflB7+O\D)=/]!(haW(XF;d,`b*gf^0A)ViPF=eBYGpT<RsPKH/u]>X(T`mLjc_HQZse"RW/@DB%44mM:/$u?'?Wli?a'\:"s%l;b<3qjo;HBA76ghE)n]S-'JV67?B>PBe]k%EJ7WE6>:?MK_B*Q8(O?<Ssr(d7a/4ka*ru,DK!@kHu#e^)=[f7caj,-t<&626iJ$%MHQ6"D,c2A$elEf@MlU>mCaB1+dGj3daWGtQp,dim(RgO#n&o`(,8Bn$?%CH5g]gH`OqIGLauB@G0?7h3JQX78E1OR/EO*i/[=OW%4rZP;B]$e;26NdRDo4Lkke=AE^S0Jf,0V5^ZFaRu.Af8'EQ82;"JqTXgr5'%fY:k*\6sWki;Ub[p&npsCfNW&CU@a'2b[qcT$;"T%Aa-$8b\'HW+"9#+aul;oh7,kVRnl1/gm&]<\Qa?YnqCO9ftAl%_YnMc'PY@"S=Lr\4RT2[HX_.iEt6t'Er)e;&*IoLij;dNKC3W`%D'^^3lJVeWrK^:m?K0`.cFF]_SZFHr19UQhNgN,N&1PS?9=K4<*H$67S$GX[MtG3ZR(H0aJQ,o$`XCIMTZCDP&%[Z`I5fI\CB'=,%L8AV^qMWoV_?1K>"O<R_'PG^*b4%6cl`!DNC0(-hMlLg%g=j;1[qgfl[)m_,N0&(+8BJD\l'pET6NU3:S(F)0dWAc;GbGo;/OHJA%aN$h.`=APZ@M*3qA+oTMSJejLpKA6cDbXFIj1[Eh-^r.h;TJ#IK$16n)eVC'k(sIlf$8*dA,sAM:32<Gl,)lf0f.S^>#DIR6u?I*%N(]=_m</e;5aZY.X0"'FKhYC)*GB6=CW17&Pr].c,EpXNBXaYfQo_pE=^EW5D65QB!7SZ-EqcRjWu[Yg5$2%e[*UMiY'YLFgMGQM%lB7SnFl^M"dI$DN6MY/u;F'8)nWr`TZ;7NOqm3gl<irOAMiG^AkFghI9`7R9Hg9mkC3TL%,R97a)g@CQ``;!a+/g+BUO%Gj*\at1%rUXM@eH<In&^7fBP4b.0[GEXEXPGsA4iC!,@1AmcH83UA"TgL:V.D#=VV*fSM_;A:Zg:Q<I*?ak9J<t@</bW<*GdMLbS]c9_lF)e%Niu@nle;,F=*c;W6nu#XA^Hni<#Z*Xeo+j@qBL`Wpn25.*4IFD9<YGC9X.kop7Zo\JNUPKf2u09DlRV)l-a2BMs$TdI*[?QDd:tl%NI=EGPQIlX]l#9sjulecV1<p;T;p2RF8c_3(c+:-20OI&?kF@V;HMJ=!4+fcG8lEBT'p0=OO6En/9XRA`=7B8PRDDULU+SZ;?^aC%##Mq,H\VYW)keX)X+h2lbHbV^21TZ>GHV(tcC[rCTON]A%TS&A2&mS$@QRTkC08G/_VEoOCG\EUS>_2l[VHVNC._07!&nYo%*>d#%M0b$rH&!k7j"@<P-(=L!gn0R'BtU@G&*;R27(/Wsj\qe;orgE@:G8bfpd=kY:LlQ*TmSghp)Jf^L55>nQ,N&b^t[gE5.rN&i=G$+%4WjK-L[s+]^N,B&q,CK#fVrK\c(J";HX!>_#,h;<in[H#>ebnjEZON&;#?gLV]M;8Y\AmK[^tYuR:h4qC92S>f2';LRT'0.I5dDa%>X.h]OC9EKjgfgE1F/RWBCp)?D9qm]`Q<J!lY!pf7$5%6lWcXnQ!=PRf+1r')5VC#qm,CqIca#P4MPpGF8a<Yp"S^6&=mn@bQjrY%6Zr9IrH+sZr2o*CSEjh%j36Fect_ju/O)!A5#QWRH_'J8DWoFscN2>a1I'E.b;W68T'L#1l5K#@hYLJA]j4S-WIB2da*3'&GPgS"%R6s9HIt2V=bSO4m41b/If?_*K<i7-aVfVh/(KAJTI[\_'G!=MrEuUY?<'RZaC$5%$nQ\;"A`h@lY$KBHdp8l6>R2;qm=2:2q1`[-%7I'=(qPibh2GWr"GgFp#kPCS[OIXD#n%!nEZ??a=q%2`cRBI*=E?=!YDt-Yra1$QSKDqj!gK/I[TBg.(6u9NjG.VhobWU5Vo=k78%IcdR)*Mt=2C4CuUI@,*Sbh&>l]*NRCf?a@o^HKm&gL?A$fm.sl^J%-YeaFXDnQEl[2W!;pH*6$_8+C:Mb^SaOD%p3Q:A'f#LA!a]%:LZ!5;uLm=9&&4I1$#Skch0)8F5D@3]RQ#ar=2^!C437W]t2gDch3KpfK:+$[r_MVgN034Y2AZdnC":bWq2@<X%HUJ4IMc*BC_@p%Xj6SqcsrdhY[PLo4P.o,UXM\-Bub;nN6:2?<YVlIo9Aq%PKLSbp"M+%h"=o:Q/^LWeSh)9K?A96bW3OK1WaETY+N77.'4c_H*3cb%6*+mbpH.!Qr)>m$Ir)$(rQLcSm)'h&>X,hab^SaOWFo+UWh4!Jm2"m]R2ZBh.Sea]qO&9-d8PWiQ/N2Dd#=H9);Bki*?UaE9#XO\%P6eVoMUX7^`AA9Ao8WM0Z:0`oM[/_#X#Hq+Z1lP..5.KaV#s"[R/e[e8h6+]g)WSc,0].sorVMnM!$f=CM$=4USbiu;5*4EO8.I#%aIPJR4^KLnM.AmH^5OVoXJa@?1]I=<aifh4Eoh?WRCgPfo1(Q_dWmsX\0plCe&-Se6On=Ge,9/<9a8j>@IeR4h;C>^bfsAjpRsr-%)oKtqm<EqaMd3G-5&3@Nk@Zg5qfts7ZtA^@fl.gR.BIc<a6V^[fSSp-_(?jKlK%idpX8Cm">YODn&=b;X9iIq4g4@&5218VheUiH%BW3iuSFtnGMP9SW'[qJ@W7pe$L8qY!^3P0t&+SuS$]j3PhXoaA?"0Yl`G[VQT"]K(;rU,TDcHBQouRT:X(*QC/P]@jM=Z>a9.tru%jb5-ARIfE`?TnN(T-NPKrSHcPCJ)W/htJM6:Z`&VjGiKqV@h/o.j!sO.t$>@F[*90dV%$l]A9GlH+l>+kOHd\FYY'SLOs5dX+jNs%diZ@@!Cf%X/jh7?r!k\((3&+2e'd7+nl/YIc^0!Yb,n!S6Hlp)jIs]H7nJJ`b2WJ\Z\ZW%O/:`h6=f2]">]LRUf<?)$fKb3<FL.0%]d_Nr?T3O0i]POt:@8>JpT*=8)JQSN*2m>O7]S!T[7;nJjpb:AmPX%,?XD12O)3,#/s"Zk%4>dpm8&0e<9.a+MLO+]5q9bNL7jMj%JNG&Bn7c8acPMdIrr+=)^_5IPlp8H!'hQ>lkU3$*@0(gh"6_+YCX_)m\55G049-QA7,MH$\_J"ml$I8D_iM[5E7T.$T\g2i7t]=h%9=j(`hC-!_dLE^-=E3Yu*_<cWar@,ITlbobg^'HUIZk^04u?0Kei[E<CB;r;iPs,X+5sqU/#7\o>@o=//L$X:`!lkXQ=b5%fo3e?%;%1)2iKdm/#&od_P(mo>\.'nRb6_Pl00C?=2N/UJP@Y$_Q9qd7Vu--&qC.$`^V%uC9VEZV9H\B3RDcnsD@kW`qN>!</DW"r6MXC)%<-6i6=+_CJ8)]DQ3)Qt,:mkFZU'PfrH5/;%J/H[dkA]kjO]"H?,KE,'E.>kT0CIjZ`ROe#Ml"PidW%;&,6'jA7Z4TA;^aOF+2;@[%MYbnV#oWSL:nFn)V1&n;_+2`*dE9WYNS2%oD^E>?e,(Qi"us0!If2OK*j,:k:[qY2P^jkh(rYT1!CD/?UDfE]k7iU;#gVW0:5&T-%H]ko+-*$1Rf@f'e;G=_<%oaXBl>S:;Be1o09+1-bU,MankuO`#8IOa])-C#P'[;B$8]5].>OJL&&XI^<CFX,.h9o:ZRT"N$Nk_%A%!!jDC+'oaF!S[)Ol%T1Po^E6Q7PG6R^^GV*$1Mh#)Xa*)D`U12d:&X1geI8oji89o4mKrtA/I]49!]$b$nCLrT$%N2+!,YX$sYlZ%_^]tWT7,6a_#XH*-8MCh!H6=NcZ]M,$_LV?A6(Cjg^$GVIKuFT"F[p2,;&)4)`f@Cl-Z#pK-)O;Tlhtc&,#MFUc8>qlEV\8i*+\:%-g)De@a,U[:)Ynr?+]j._>K<s:jiI8eMN.N*kM`:F)I$`@OKk#>(Gu-d-q1nr:]gYh?'inr/@fAn$92sJ%eP,IOVS-6TipWN]]:D%.N,(5O+:U6</LJ:9FS-j.M(UZG;9HiqSWa0.XIPZHd.Ti2>j8udBB%/(352(11Ln\TcVY]d\)2i;k9&%B*rjrKuc7$X?npCdeu6]%DnXORAqeo^QA\d1YNJbi+UKk^D?/fu8ITrF_pt?tM$E=)H:Kca6XDo425E`2W_isb@HpW9.$iI>/n;ljq^$CXgaiMJR`\Qgm-@*I%lDg_$>^7tdF8jtJd#mO)]+8`Lik-0[V.3Z>IsFqgHf(tFrVW93FZXrHY1b_&QYPk!N^''9,P\6+^N,=@/^2P%?=8#EE:`]<OL5IN%M>D+Z+*t)\EkO5Ol8knqk3(pSb/FBo<GQ^GqrA[=R(rDs6o,:I^g#ol,F#V7.ON!u[]Z8Gd4tA<`5IO??fqX^[o@?J$8dfL!KK\t%!7F[i14F\S5WE[cc9cdlCbXt%"32ioacFBLB;_]%(JN=[p$p%JP-9D"n<8p(5!Cm`RS3q$@>f4lm&:k_=hU!naTL=,f2^<Zb9qiV%\@[Pt$DB!98UcGScXNf_C)]of(.\a1Q$F:On/;Zhh%,KQlmI<S]ZjB[;Io<J2F:OVGAn&aX&);Km;N.6]E]o4qXJ,aL]QU=WQ7&$%\,c7#/dD),<rn]c(-IS"WEB\_@^s6]:PnM;1=p4.09Ct$D"PmcM]$&OQ0]6:bm2%/4LjB9I=/FIj5Y.`\dfgj`]Qoq[InoSNdg[>%$;.-Z=cX;uH,eD\O$3QD=gA7PS3mW"%)W`7QX^8_jPuC.FT/$<k%tt<Wn11H\5fkkP0T@L/X0_`S*hksC%*]TVh9)l.PnNND'I8t%]Ee!s*n]o4;BUHi8W$F:0%@>H%&?c+[jbo2TT_;RXUIf>TS[!+k'NU^g#TF"TF>:]+%5R=\jeKkpO(42D<]=*.W>HE5h05HhdJ59%nJp)P=mCJ=O*0\:i:Bqu<dY_afr+-b=#F%>qcui9qruMD7f_,^b;)n\6IgDa*2<!P\hReRdc9+;,.+/d5'_XZkYEs)Kn8J(R\3U4%!`6qJPbhI>91)hb"8B6U^jbA0O`Bd&[Y5b)!g3Z6eAsn_ScLbKUpBrd!KYnR[5@"gn7Gi-BH\$#=IH<.6C5-*/F!Uk>gRV;nd=qi%*_,-SV@/edgT62+.iJO)HNKbAS,d;j#BfP-r`i4HCNl[,,`B76V,DCu*4c3CB8qeZf)c&WA]scU[*Pr0gLHc;6,#T:IgOUG>DFAL%%*3n2$j8>2-19-eiFRW)*q3:,]WAuW.Lgd8&JP,#<NVYr8CQau^BOgKRKq7t]S63k!5nh44_\rH[ISE\EH_Gj:'PUXm=p0cdm3U*%bb&u8f"o`m'3]-DM,AQs6-R0^`)Ag<hPh"'Utg6&Q+TN,Tj.]'D4nnrEjljOBoK42[r,Ib!+1Vk0N9\05cf>"hf,Zb?K3m)ktCY@%5qI-&FoDe:oXbj^A_sKE+U.J,n`R=n5[qR.<d<$Bf]B.BU8*1N'Fp?.;l/V19(W,V:eJPTPSYbC&I#L;54KQglPHa!NWLo18t^^X%iJ&N-5S`N7-7$KqV<(+:^[UH";%=,6ra:2O]tbLSDuOmZ=<BuP+%S%BPMSJ>pV"I$kE2.oSDN/=NZQ"Ucg$j4H0'<sE\/J8r!#$m%oF0>4YNH1j[s)le"p2bg9n'L=>UbWg,_IMRG0.9p='Tu5-#$@$HnAXd=RM/(bD9J]JOr[o"]R.dqgt*MQjE5<9Ea"?M=qYoQj=G#%,J>/b9hBs0CJ,k&js>:=EBfCB&RpGuY?)tNRr>:u@9*q2+<kqWVhC/IiAN"aY*_Q2?h-'",1PMf7mH`+p])B9"X,t_Y#q\]&W%')%dn1hV>Lu>l+Dtc2rJlnU,q?Xp!Pgh+!CFV^Q6>f"TWEtY!+t/u##Tf\n7s;d>TV8)W'I"3f(U#9Os(,3*N:k!;0mNuD)Dahqt`Fb%2Kt3jTJ\E#0</+]F0[A/&moP&Q$?<YX5qH0Ut_s2b"VlsSWK]kP^L#?+-7P-pehF8mVI-5>\O0<N()8)/I7atNFsK.S]hB?^KV'G%Ei&CDc!?^ZCR6RAlC0C3R4h9*BkHq#g6/I;3^)`0QZI:BT?M]H"fYD3GATEg4D$nsT18Ql9j+)CO4e)CT?Lf"$j(^uX;?2oDl[<F%H#0Bea?4(;Fc:UiB>e;gqd@Sk]0)@f>7j8&peZV4Dl*96I<j7mOSEk:5%ldF_BRa2KO;idp,GBSOo735dSt5^GIPY,R>(Os,3%/_%jX,tc,5;FK9]BL'1K;%X)HGF(JnFMS>n4qoGa-&Q\Hs6n:gB`?U5gPDS+!+!$RKIm5_Q7Ab%r.__iQ-oQEA6>a]CNBOc0LD80X!4%^/O^9_AV0F2Y5Eumir$<1i?]9PC\Y-T;'YmQJ+8@5,;W2o;G(W[AX,#57&8fr/DoU-gIJ:?9CgR6Sep3W<Z:`5(IG*aaPi`Ks2H+%p[Jnc_(8le$g>COB8Hn,:seVa#YFg\H6-8#,E#o)ON(H!0pipKXr&m`h8C*[qG6D+n:A_Q8>"6:=Rb'b`#X&?!m\OP6_fR<mpoCQ%)3AD$ZT]m-I@#CJZ09g"<t!CFquVW=RFl54at$Mj-u\llPOa]Kn3m2+m[p9fZ/W8(.prSs#WiKA(d<uq+!8hUWYm\`h>qo<]+I#2%i_boi:WNmp/![/Maur=`"*JL[;a/?K^X1%aICP<[`?WG9.4no,G;73$E%tJA097ZQBWd_;oK'+q.$g*ekfAo/hGf"]4/G4HoaIuL%V6bf@r3Nn=6d9K?V<87g^hVc]A%K+$">YV</jr>cZ+>nZXE=2UULq5E,k4].L=J4$Lgp#W9R4/nho!5ieY!!fFR09>#)6?#a:cd:%N4PJ5kK,WGLf`BGV\,Qk\deaO6j<'"S>/#o_jnZo7,4;`M6<Pj>ps?9mlM0X?52\0;r3!n$>_arp]dVAs.@"!hQEX+qF.#Ami[5l%Q7P[7eQp9Wb<\+=_#^'c0j$hjJ+rk^T)I6!265>lOY-8dpY<SsCfpX7GNG8NF0ur]@ILrmq>dm\>N:j4?X@^+YC@U$Xk)&$q/g(.%s6$(3_tDcncM/cJ%UVK]OkVj8mA,6CIM:>upS+t*FrIdrW9:n;_i9T#cFN>#YHP4fZL5/)`7jb=>qPs!oih("$g\NEgeh6&F\p[*%#5-/(2TbO&n`<P^+(!cD"%`0a]rhmU[<:Wg&,./imW&]lFhG7]8VGBs8<[a6fB"qK<JOenpunFAM!3Y.H\]An=a=^0mHk-<3C)=I%CF/5/EP5YTSHZRLH`P?-3X<^7rKESGDP?`F4S%KUTMMJCCriI=pJ)t*\<<-,00KCiH$#YC<n?le\gtN[Y#4a+8/#`/'P`;P7$2]i%I(0'YqrE'EfDn\+(qH\pH$8?ZqB3#k8G?9`q9,gOQI^92]q8^$T=T*E<Efi8hZeRtW1j*LBW^-1YL!$BQ`o9:5J0'u)@YK#/"nB$%<YMQ6Ybdin)uQ7BSb<$)449,77R#CchhD!80-/[Li*<d:)/;?8c\2u0_(U8e@Y`Th^Kp7LZ.SLTb80ta^@<MmrR2Rp_ZU7[X7bjI%bC*g(KD'8@ZbUT_!OBB<rGk-l@Q4,Zp0R.l?L2e\IsAMrftR%]fYkO.=R7DZdsSF8H@@nT.fSR:mD_pLL[4E3SZa!o.aGb8F7.[6%-VgA7QCM7;4LfT(m!2C`/K+@d8,i0=YR;1b@]5(Lo9\(EbpLu]$WlVN^O26Y_<YR64Np#VgHW@'PoHX_Id$`aVdI.;lMT3&V`SPZ%IIm-8kQ$$A\p<Pc#M`V<9,;c:l\AZgE8kIC0/hjEN3GS%$`B<(h6u5#XE>j<0Z'?iZao8]JocE+g[!Lqq`RRf2HT!icmic^NKrLO%$0c\a^+L,epIjF\pk/n2P6?QqX&DE>b%D^JY)DT;H<h_m2sLa_ZGA_lA4aG?m]LFK3aZ%\n%id`j%Hhem_L\NQ@Q:hDSQ&OT'>C*%F/Su#LVMGPn_hBt4+?7,>pZBj8A*(C?bWX/i#hE<k?ki.`ks/^,KL1HlLsb?j42bk""WD]q)X<8GO#nAlm+Q/-8=Z@XT*Td)dENk%NF0?/H*r\&CLFAaDAs7pa:"o]X7Q+];ft!-W(5@dn$_*.IX-Q.i%F(Li9^@4of=dVS:[#K$N7?#`6dQK*olXGa3dbHa8!l#']i<=%cbD]L@F9HoJHbKPD>5Vg*BNoRpmo"6I_1%(cQBTFCZ9ughQWmX0m!K8[sos3F'bYZKE$)XLG(<[=HN39+WuXjKM.LFGB+FZgZ\j8%oiq(=>[eegA#)lY/]$`.mAF1YcE"iqGfTQ[b0=R3:U:XMJ'N6;Ki<pHp0Zuc'#/j-@kNUV<*&)f3#EW$s8"Ap>]!O$K7Z28js3%e%i$c%!*LoEfd=2@KM;e4N)uGo(,/BIZ5[c"='SVa;YR`WUo2!-trA5R,Fdu3sC'"d$/*nenqdo"mfm8.sD;T\g&U=P!7ljGaN"7eC%GEmRR>e.n_E!AElDYd"ec5,'=GO)K'3"*#&0S\n+^`2RceXNQrg(bF]C!DeO'[19U5=I8uh3,kf*sM9'4(\<f7iYp$Htn+\)9LlG%#8i/VbZIToi'2H4difu&<Cb^Y)[K?.Cup6QSU]EiPmBHe'RF`_drYnp<;k5XJ1;15\p<^k4cs*I6cds`[r_!HXKeZ.3>\$QMWif)%cUHc208!NCFcaMG.2;8b,[K:T*KJHqfRh$2/hM'S3^LOM8p"[W%kDKi-fD(2^MoINWU%rQ[\@sNd*5erpTFW#Gd>c3T?k(2O7/VO%g$%mK'.l3aj)CN#^Cf'Jog$36A\@NOQR?2@*g9OABEF5qrq>GTE0+/$oDEglR((oTp!CY+If$&;NRf5Er5BG]5?0oCaRRF8*\'+a%A`t<@fMpk9]`W':cWcJYW32<P/mNVT([mP$@-u[m)[d[15G&0VUT8N+r%_:BnD$U^O?@u>"sqVgfRC";s3"nJ-bEg:AB2Sk?)-UO%E)##3F64N**C;.kFQ7&"A$;FhH7&_k8)?jU-m"RBQW/$MZpd(+DJX1T\Zc*N3X%;*QVF)n(OJ]LkK5+F`?3F(R:^l>HM%r"0'K-L%:$<X?ktTWn9-CEFK@=^S*cN^4Gek26:WB/>4##%JM@F<;fkgZE'Yor_\M7Lhe[nW>o]rtlX=1=rhqctgA:<VB/jHi8qsHn^ET6to%Imuk!)Yb8G+sh8P!=_f3^?8^#pl$$1%]?V7iE">I!8Qjpm/aTgpL=e;@Lm-WO&M3=3\Ft;"`(8oX+,A@l_iX#S:ZR+>`%.u]'\D2%K@&PK:/qpMlWf^1&#514=>\<o;\.,kp9C*3NN(9Sg."jsWr(_dA*T>,_<QDt4*md4n4+bJ_g)11fj!Ct]C+9W?H?m>\4BI!LK$'+%f>5qZ(];`LB<O[7-"!-hX)^:3\O)%/D0PH]J+@9$XOQS2'hDtV`k=?\qYS9!oc86AE%Zb)lJeR5#i<)oreP34`1GjI"bMfj/_H*X%:-6VtU`27@D:6Pditj'b4[J6Z=?adA9cV78jp(P@d!N$Ah7hN.?8X_#_LWT4%nT?>0l#sm\`7%%rpIY(]9gea41TF6`644fD8!Qc%UWSCNLGhBom]0qu[#leadQWI142%h2\rI/6jM>BS,VEn&WFclmP/8mNg!5qFVH!$0r%ZZ<K=$$T^"==-OeQUFh7lp7qObIbq>\($%&pk-1:fLWQqCma]HN$'a'Z@2GY0tDQb=O--mchn;6_4ENim1.S;'-/_$JsD%o6'0KI5hWITNdY-n1_r$IR03ea!IipL?Q%'^m%Ue%?b7,TE-:a^d"i9#lKXBn]R-JbDF!7\r7Mh3_#&JT*\Gu=\eiu</+o-R55DUm5@6a:,>M`[DI-YbC&E4`Kk<5,R+gPhI98JRM7e">%'ucaO$I!\a.=t@AomB?AAbHa`2!04si.LG`lhbj!hb3<%H2geGT8ukTU>Bp_1(QdOJ!rF&NYicN^UuO,:Z#*[AhjnX!BAZ;ILnoO%;n'Q;CEQF&6hJXPCEPCl*?M'FQY35oqOsC&.$!<NlUPS<ci8rH9&D92A,>2*]^471^V1,_!M0NL+]RDMfVEuoVG`.j;SiS9Nch6>%7/LTQpVj_9roN!1)6kHAf;Kqj-/PUG5"Z[n\&g:%7ptVH".`^:)]H#0cfk3!WTMsfYT;o2P&<_dq=H/h!pS!<hYYL*"mhREcMOYR%/:"f&i&sVYk6III8jV':")Lii3NQr:fk$Nmgf1kT5A[F$VsF1C/@-isB#^i?a"cjl]Wh)&FFSI>_E8j`:A*QT!7!X'+i<Zldo20/%JF$6"\?!Z"^KS*^`/Sr[4l<eO(W.p#L,p7i^&i3EU:YaH>SZ2sHul&(6'';D1Wllm,j3#6HLbpJVqH&qe,+0l0el^eX*`sLTeB0u%I(Fh%K5QP7QiHr5(@Dh^eR`d$C(u_8hVano+7$9<G1P][,H/oFZYdGmrrSOL+*N0pD;Vp,fnje-s3nQgFp*A$q+oY=5(!K!/c/P[%m;W7pNX4Ma6!YJbc)[0r(Am@c<J[=fh:6RR?E`,H-G$LRWr)&?BarG>,H(t^?]-S<>e,<,Rs*`]SSP'f1-jVB->%40E%]3NlCZQJ%/N\R\gDK/dH@GT51ueBnJi\nNa(`IViWr_t0h5DoqNDXW(hhESA:m?kO$Ie^r:EdT5'X!p#L8rkk4HL%D"d<8o_57Z9DPH_cc^XK%[#>##\:8D+rl_VebRS"94m08'qD-XPruF)G?FaT8TMoL4+U?#48GR64*\3dBr:AJ/n-O:?_TP`eN>)'5e+3_',1sGQOibZ!+6]=X%GkQrrV&7>=lB?_[i9>II*iatt+$:*Aq-ed;.a`^VMR6!ncuEQtSu7W'aWh:AnC0>hhfXYb:%&+YT>*I4m[\;t48Ln:^G9@:L*)K5%a%QXabh=G:#<:q.rGpm;3)>0Ko?@bin"-L6eD[tF?b\daFKD'Vi2R"lg#jW=a8ZI8`T^H2+6:Z!gEY^M4EE2XkC*T,[IkmAI$E8N%H/R;@#X3UUdsq;3_^kQC"eUi:GZKiPU>YW?#7ou:n($nLB"Pp)If7d`.L5pb2.O7Wf[Jqg!DDFW?V[5o>NL&CI'/+\0otKNh9WKp%4'*o^H$l$d)gqMHoCj:oH_*E&^3R0Edg'Oc;Zr_R3dn@gT,=]:rUkVEn`F!Y4b)CeUNp=:h/e[ulWS/C'?L4Fjn['GIrePX\[R--%?H_2&%!riT_!__aW]k*c,L+boUNMS<e2HJ5bLpgSC=g4H*BWTBUMm_/SU!8d;tZ5t=c]5f_ZUq:b1<':O"Nca_^bIHrS^r98.Y0N%*=@fL[-u?3gAGo:lcjKA*d@<_WnZi`oG51OY((S0NoO-1NI?-U_+Hn!TM@9u\KC7RMp'?,euR7:c8ug-`.?1qp>38I"o/CTJG'BP%K(HRt<!UPprI)UgrH`m`OK-b5SZSsdep16+c:gaOp<,\^B@k]kkUo'8G]`<(IJDJQ00?juh9b\!#3b`>"c([`%t<h\5VnE"Mn@m]%Eu(j/YQ8pn%bKV:Hl[JdeA>M*ddgYB#kT8TppJ$&r8mIgc'\od:E'l//O*bL3iEMO%bcHS)epI7D?mHJOg\n@/'pLi"574BeL.o,%Jj\^Vo&hk28F9md"l3ArJEWSes,QMa;&26D#db*C#dTs@:^#L-!//aOs1I'&[\b4VqLBd:4p3"N6h6;=h.?^bMr<GOp?=YOj4K+j%+L$\E:^#L-!!IJMs-E)T#s]L+G];Kn#6c7>kWYXFZk!0CZ>(@U"PSV2Zl!6Gd3?q$"JCHR"TPh1DBD'"ci<i`"l/^ak!"Y-&qLPZ%UUVrhBHI9e7m7t^"PSV2Zns#ka,*(Y&:hQkqg]m;4p3!TGO=:D5Sqj%@@7D.%ftl9pDdKh!0Jkt,=J1<7o+THob?eY+9KB5C@dt.%Hfg._=RWd`1PG+%"PSV2KH<Md'7oj#!)[)g"T%iD\HqhY/b&=qIsUCs%V@YeD#b<$Y&D#,hPj#uV.V1Fh#F7o;jT/m!8"a]SD,@i%jQ5nN3#`]&Wu67K_$t:CrULOEd-kp\d*4quhG+mFf:t^R?>Q2pFSJbJ%:O[/iUQ9.j6+I$<fS0Rq!$s[i(mF8^NoY7rqWVbm)@0*%?$H@Y^:^uKZ&'1/?cj%2H?:a$RI9>@bY;OO927CR=FGjCn#,n%J$P22r(DnmRH:mUn_:qtLDq%Z^-oMK^K<^JW<E;$?a;2kedm)4%D,qP>jYiVr?]2C1o<*H1nBi]C"^Tq6T=k=;eqe\:f\*%grkabf@qXYR0>QcD"MK$A]fuS=j@O;N*Pm=*9+:efAOLCtaT9(cdBE!Y%XFrCiU*&_Qa)ecq+c9>TA-W0^+A):%o/pfTirtFUrI-Z0kgd4,&CY\!c\H_<DGN8:+Iig%AoH>6*Bo;b?(1.ks(_>hYHHd9a.?Qs%OT3^WGu0`35M?'-G3[gL+5Wuq*SlneI=#WN<;2U9A6+_<<&1.Cj?Zl@c%R3LVa=_U%gL/"nn%LIb+YLVlA.SE+<9H3j[&?AL@C0V%>^q4-$=l*ADTf/f'*!Et?TS2]<0`bBXLi$Ar74Y.DF39;X&@m)4'/FYGSr>9-Z\%)=3g,Jm"Yg7Rf!]WbA'0'M(a=+Z[V#*ZWA2T%H?ePf2oeNA%p+cj+?_].U\o8snon_b^"Y3$$G*GTqqY[-B@jllfW9[QkXq.0VJN=S5Zb8"W%5E+'m8OacEhotkAO]nYg=]0dcCE0%5:*sAr1MHFml)4ST&6M8s7pZ8WIOI6B6XL/5J4$PKKk'V.)%d-nWY!-picC2Q-,,X_SZs0VT)@eH24H\hD]AfWlN\E*M@'`NaPC]%[n[8/a7JW7'i"2t]h7;!n",)G3Hj\]Ft#^Rc4/Eui"tKBQTaKOqeuedH+8h"fs,u%B,i&C&W98eLb\#f(]G7_PZbcb:@_ss=.VNg%\!Z"N9hsD7N]1:Z5(hW#hbs3lB9\Hh4C!'e!DV:BHu=)-*9CNl^KTf!)X=BZ35u(@^!pFe!C(c#3<+D>iZ`iaGN,1?Ve^qA$MQpD%#O`!YoLrG(J$;'qF8B#9"0CS$(Ji5H/fnq\Wlt%k=o#tCXnIO](g`i$5MU;ULW@J7$sVJaf,KH%lYVU8(H9R19[2>D2B`EQ?*s0p%6[mUY/%`EAfARs0khSGSb'np\iJLpW.i6el\*^4(\;O`TAA%8nA!h2lg4Idm"1"I;Y)i=]fQEXQXkSn+]i"9dgck9(Z!,!+m]c@l%V[^hu<XWpM&!()OH?SS3'<coao%oX1Q`$I8]nap!]N#%$P'D0MP%pIZD:bs-pFO9s(&k'MTc@1[g@]ikjR"J\^3oUuV/%_[+(DhO%i4bD?qMi%M&%&*MT6r7-$pL/fS'UG!H@?58<c,&AjS?J@?K0<"&)bRA<e!8QS;uS(@t1@\o6"B259',/d';ae-S0kInX$jiic2WC%[m&[+iidiW1rul@D.PkKC?,/GQ_XAoj$Vi?'QnteIJ(Vm[;B2_Mdb9(%_n(>_2iJHpp`E`55kaN[Cq%-*I])[KAXh6O2&U$'6!C;%he,tf0%4Qqc>SHfXh4&Z^A@HPT5S&Nq/pgijlFS8q.n:3qt9&h=8mU?lC1lTcauib]m.<hlIU6\-W[_%Ispk@[2^g4HL]b5=0'8c%4\`LPNq"$#G'i";"@9c]_PJ?tp+KK3^O,h1V&tHtBBFfig3E9IkV)A,*._q>V[fibHrpkqr:Hlcl047uLQ9&4nb&T8YO5aYFF<l+%P;^NdOfXZQ:\XW<mQNaUr99L(dWaa@Eet+hbj"<R2h&Me*P&h1p!e2T=+5KUI=(e9miN%\$K@nu\G$CFete$`,qeQ2q@?ZaPKN"d%ToEt4?`oCgmf&oTa.IbarOWR>3XL,#gU5X?4?g.Gk3\R(a+(eo4Xb+RLid])":6D1m\<7n]*i/A*T$adDC2K;#N%=`iVjLddDpP.%lCQuUG?)+b4m+OYA`]rC72PP71.<-1MP08C!#IS&O^6em&'YiYG3,<`Ng^(@jjBhNj:<WhblJ-;#0S+6eQU0WBP>_[/">Z35J2Jn%:B%J-NoA[2_=Pk$]R>f8?m6qYD;ErJg/7IO%cG#mA[Zf93c<gnJDM:+;eu9%a$\)!l7)el3QJN'p9ip4l,<IAhC?!Y2X)n@DYWq]%!=4:Xs*>!4pSlfV?[a::`igE>>a*?TYMi.rZRj(J>FRP<^r]Z=f7(C-;nR/:_V>!6[RpOe>3&du(OEp4m,dC@mVXU,%nP9LQ?[=%%]COhC',T!Pqr6\cMa+$W^RtPgr3,#*BmSacqI<9cm+5S!J"r>;O1MuqgA-02ZXF><iYS3Dh5'Z5o(SL%kh!/e^83Wm%QWee_1`C'%!>N-2;EAq0J+;#PIi[a',aR_^H^g\>E-9_ek2Z_@cM=7-bHOjY4S.]O"9qV(Y?tU3_?)h.1DP_jj.[lR:>bjJ5;*L3"%"dk1R32+%"_r?(kiQ`T2-1<*XI]<%$(3e9-Sr-h.t+7H#.dGWQZ_!O<D]NYT)A\+ncLjIVk]o7"3U,oSSGu#+[BVJO"n7PjZ:S&5PU6+rUsTi%47n.Nb,uG5e0[.8>ArrEgSBb=-l^O\Qf"H8['8WL&"ph,e"-Mm68%j=PrH/dLA,Fobb`E?paFt.kFaIe[b@_9Z/n'b&>%bZl2QLE%=*7mF,N>\]BB@B\mGSshG=FZg1?4$"DZD>5k=YB?("%:l=@YZHI`%tt-R6I<4n$rGN$@N^B!#uaQZKuGl2Oqn7;TWI4=fFD`PZ=[%RnpML*A%fAfe$[*I<Oc>[bN)#gU^D+i/.B`B327']:OaYT7sCM&bkbO5-IDf3SGA;[bi9a7IqmP7pI(p9,j78Ub4*8Y<oUfMr/Cb%qSQZ97Q_Ju$%Og`)>X5<]<qL1+70VH)hs\\]mk>HY#sl1X5LRf+(dHV=j,J>pNN_Zg"-[>%lSl"aQ6F#E`m^tc$o,K3+dp'd@]H?%)$7HKNJCp'aP+Ug0-A@[eFqN\J?A]-Q^Fls2FDHWiZGp<HeHe>J)V$hQ2G>T\a=[qd_;pBg1h#mUMb,$!0<me'`%=-,tmKT7BFak%fLGtKA;1pLnrZB5"WUaT+)kQ[]-Glb5-YRA_.N*06+aD4kI*k&^RoC[*Ma,Y[PJnF;7R2RY]AfCMqD.da6rrRhVM?n(]8\j&I53f%)]O,<Z/6;$EL`<]+"j:'_n:fMI7u"pFGMc!fi<eH#?k)'5[.-/`'1:/[u[5!3s56V]Eg/Z`6[33qWkKT)]--\[as2[LOU=?hWFR8%m/$^pA,BG>+6qD-I]1Q7OUi4Ir.+*\CX]Ai:YYDDqd(DV`YOFK%b_@ZF]ONM=uZ@L[/nn3]G9Jan$]:Gl*%*hO)=[`9GkACr1*&Z%'7%>;iAWs7%C6`$+*:BUc"/D7iC*[lD#!r_2p6)PD'uV2p:DqiD.(,Z0@'Mb\nA`W>'80Ghm)g"e;.g.mrRgFYH0(bs3#CQd'S@5%/SSR@q!0;,*c.QI0qQ)Q)2YBrhc'LLQ^IaVNR^u9j:=EJ)uAs+@#HJG_E#2Q6LGB\r6+X"WDcSqhL0e>[Andp1H1%qTB[NL4'ga`%`?W_%:E0"sHg[a0@FP57p$!QXZFTqmpu-!QaWGE'YmJWkmsOh&d:64qID#ABs)?cmiV+!>M)SGDG]TPANN7%(-LiEcpY>A\8#Tso%a`icm9@&*3Y`eI^oJ)-c7]D8^dOR!174@?EJ.0,<EV1)2Ej78=5'!AH]5gT)8trfeC[m&fbVu$B#lXJ_,F:@3g>d6%LMm\VQ).&r%WeLPZ%]DAdbuT<__EUlV@*Qr#TDs'!fY*Jk`8[23e'7LKLR1NQWkS2rlU,,MHIPnj:YYGl@$Y/qj569$i\+S#%=A+:>2=/HJ`CN]%i8tSO+CBGAch"@7NujK&rUS[K-iD0&#5?sBkk8jIE'oHm2piKD*0ob</cXo1>q-e`]ma_&s3TE:r6pi_J!PgQS5ehK>l4('N?J,F%=#FjFb(!8qe[/>D"RNn!YNeg$s##5T1"B;:*S[L+lEC59B'&*r&MPCl\btbdCHu&`Ehjmd^O#YRGBb8n\a\nWRpUB2rNB:PY..L.%B;kjG^Je9X5-Oeol9bPnkP<7tI!=,CXmT.SjN6!K5MoamoA\SqhgU"IkPn^K!RUeKG4&YJ[!H2HhL/;Z4h5mG[Usb^hl_H4"09t9%g;53f_s7'os82i&np]Pi@J0'2Yj':I@pZ9%663.\5JfCsO.lPkX:="0qZ$Fh)YKbhqS-)/lLk#6kPDYAL;C(mc`.pb^KQ'X_m&tM%lFjghVm73<C)lhWM6"6=@nN60QR'XI6Ya<(@jn0_r7*!c?i@B/o&;T8YH5LBUOK2NjAtY_W\&nl`)L1en]0S$Y<U1fiZu3`<aWUJ%48D+Ae*:!bj-2I"4G;6=L!;;;&#Kb"pfX6;AfBq?r29M,Ch>W9<@jin5:H[&`6B`5bTLUUAhHY0Y,cKa[js\o[U,[d7Mrt!&(JV/%)9X]?!me:Cn<=QO>^q]7;VV\]k0[/2=Ph8YS*1kn;b&m8bY?$)LG3P)Y%"NFK$]VS4H0!9]U<48I9C.1GP1J^[&Hg!H)$Bm=%7%A%R+3H&mtV+%bi+Y/)N_TL@r:S87>?c/HhjsBmDNMogGhp1@cK:_]#8M1!cO'fd1'%S<cL12gm<l_X/d?=1.gkCi?c?3fc8#c+Y'79%$HP'4RQP)J`cZs*4>hdr/b?u#6/QAB#CVACo)lG2+.p!kgh&&/',XMmF192/*o:@OdkmG/i\tp2;4acS=Ll.#d^6pY%ZssQabm.b%H,*Q[,h9*nXg.R1hn]>Fk945=N)9O$)EiMleUcnoe1l0QR<.;1n@@t#QilqL*N-b!3D_BQk4ZG^gM.gEYdutPnX&XFW=]IWFa=FB%;HEH<2pV?+mbu6>1FDI!TGaH>aTE(O^_8F4:7f#,^29"O.>GrO^F-tLk9*.6'[^RKO8Q(T8eDfs+i4l3Sg+$4D:c62;5.STY,cK!%/5sEREXpU=8[\sMnE_J>X+Y'9bnPG[KN7VWW`P-n'G_@m.nn!fWX4D^B!uilbs)VopD*iV\\=lHl#L.',"bE8L?#As-rk)+8a$!0%&ZSq^V[SI2`=>8X#fn:@N%#uZ3a2;KTA?C9K<pdSYV>b=jK[d[2dYc:b%RB32B%OR,F0#JB;m-,()b:P_QJ&JG:S_KD>@^V-m3#.%K^#6L"f@B>A#5):'cIiT,<Liu,hCErk+QWdUlj#1b5f=6Db['j3#8k&R78)_BdA)J]k$t@&PF7O0qirf2OP'q-'3ZIhF8EZcUo;p%@02:^K_\prGh9C#%u\CNe7AE]]qn,%#p`oH-Yq6p.$6>'P=\$D4@:H8A1+uV#+?kbP;HL'E%]EkbeHrINkHIQ?&L"4S!BO=\aAEG%N5'eQUqE7Y(m!$]a2FJ"e(VDZ*"\X@mCBL#%28FKas#'-SR\l[b$\B*L,;*!@9d0s,39dUDZgrl/!FC=@8Xs4N^m22OjF$LU:/*C%Fi/lDPX69eWR^2eX'IT<E?,Tq^uhc(*UHt\-jR-1Vat=a)FeOX/#feQ>+]on%ZW<D<AIHa#7iJLT;%k=M-F-q-+sDiZspid@[3'.%G).i#(.3*DLn=RN$rS:\0,'k=OalT`-+4+%lSA1M:1T[)``;n$oVR+hL_LtA`3mG+Vmho>*g#3W($fTSK/U.[1>"71P*Ailc4)mt%=\c5*4`t(n;G"LOWn9.KgNZ4(We#q5l?3LC'(MX6%]&Fb;]Ta%N`oJ"gc?)J%WT]/2@Plq[O\X#/a!_t3+=DD[!k1O\j'V39u:9R%?#4nCo.V#W0`,OG3,hN85%/s34$>%5\au+WU9XDjs&Na/XWk@<#KLj0%R>gEZ%",GjiF`V\RY8h/sC:nW_*p^;"!Z+$?S$j=\A=+%5e5S1W5,ASm*UBJ-%[V\;:iPOj<?E]6I3O[LXN2JNl6p!mj&Z5(+/EQ>jbo&+OG_nm4fk&TQqD>KGE0*k1`3Bb7):Wl.]M^?nkm+%oO/0_r,tXrAquutH,8_'k9_)aTge@Z*I\H]D$]7q8"W_"R,@BWXNT9A#hRP76oPk=j.J3CMr,sV#A_/d7QlT7<^b8pY\G4Rj_fMY%3L+42ETKa6fA4C$1cqiM7<^T>BAL+%8s&(+lVaN!H4?W:YEdTI4g%L?h@Ik)a:)L`'K`]d<3e`rWAW!rcto'TOeF#95);0MIo_t@%6p*cFP.hgViWGe,XMV;^XC3\*NGV/DR9'VcQL1rXQ8+NoUlZo4E[Aj<LY2.?6-eol67!;Ek@"@#``=TfU^:H=,E]9se:btPG_L^h%.bj3`M6tHmGSn5\,'-C-QT"P"$t-%k(;N%j:t?3=?Ei5;F"`''TlDaTN.5S/<q+r%L$.C]m!0>W<pbP/0-,fF$QuNe;#UVP<U_44%!_j7r/nebl_#f4Dmq'\S@/8LH/d>20V8Mf,_D[?9mt0@SU^dWC*"9^OMZ#W<:GCl=Z;m91kn)u]%*!Z&Q6dN-#^&t9n7LJHILOq"%1g1+G>+c@i=-[PU#]hR<Jm8[8-Jg;p[Bs8K%9:HGoN[;*QhHH\S&2N,:ao[a*/f)3IRTkb&dL)U<Oiih6'haq.gAjg`F-ol!2>V]%F">aF]5+J.Oc&*uE#279mmABA]O+'d;_]>8jAjF1ngXiR?=e,V:gaL&6F!&<6'sV#=N"**Gng3L3>@*"If`uBeFP$sZ_cgqA'CRh%gQ%bGW_5;@b_Q=n@85AZAT(n41uWqX/EVFGd<(/p]$=3_?o0YD]$?Ban"g'=\BFaZ<]M>m:A[rG6:TQ/(XV$%P&_a`Pq>Y5^9mTG%/'kpYL;75lrFJT#X=M]2W?l_+8r9.iPI<lqq@_PPX[N'KK!A4s'8*/6XVjd.XS15]9q&<5:d5u@Obb_Cd6LBi@Kq[bkkpKiMe*qZ%Mu2J$0`\9(?nm:%l?;ofei7T7;Yc07p[Au&Ipgh5%=r0IpMj^G&_,`q=p'N=Va4!<'E_qMaCZqQ1J)DjAR^/#ILALG'Jf1An6;/(%)B%Ls,#M39Rj(^*mY4G8J153,j0G_Ha.OM#A\f]om<8*g8<mpZ?P,*OMWmg?(=^Y(=D@2:0nZiQDOB!7Dc`FsJI]LShd`?i8GZM^%h8"(^o3JE['d`J-&CV-.A-Q4?1/"`-SOq:KSSq#e+S1n7X+KNhb<FPR<lE4k@QNCMP*p6jO6=+s,s4r-!.H:N\(IpA\>OZ*N8[,@%CJ8p<[u$K0%a2eN!#A.uULV\[VN19lN8+8R8O%OKh[B;jVc4CpG4?\fUB2Y%3RA!1O*rAhB8#B><aQEl=1D/Q>D`OrR_#u<^:m$Q%/OsF:JB]%$ee1VE#X%/DK4j1+@4)RfejL^M5thY#'8`HKPXrXj+'Vqr_5Zb,Lf/A+8?:G#8o-5fAS!UFBT7lPiodq_-=WT@=X3=X%Y!sIdI[jL^E,VSS*aN!`s4tD=*SA8D)4LcA4S6+K"?I5t+%LU2KDEu"qF>`da$Q7CMLfPe`I[Ta_fcq6.cFc/5$\5X07R1$DWTJR%W?5140Yh-c^U'3JT]psb%r^Qhp;rK+/ZEeodh]RbG42lA^LuCML<:&.:D9aQOph2D3Pd8sq2>g_;R^"iDTRs^n[Qu/2(_k7M8sl^%bAeY]=><';%KqH-0n:E]!Xs3m#4WsKI;@_L<hOWc(T,nZ0bkAG\'$M'["+ihL0.TsoNSb10#q."g:,6Z0@\T]/FYu?.+p'?+05K3%amQ:lH$o-%qf\gR:fMk$)"A>X*p0e_gl'Kq-LfbqMg5oQS55pbC$#.]WX;10HRhQ*Ljc<Fdkpgs:69V_LaOp5-d)4dIB/?O/INl8%jVYU;^$RQ8#QR.H4na[k!l0n>dMg&JODsd^J%3h[)goP^91mjZ]XZ*6[]k&ren/T(jEHu\FPb27Z)1tHZ/j+in0<!(B!qDj3bR;I%A/&=<_0CZ#=h\+Hs.T;%?/)5V'<-N^Z_XEZHmUrD:`>f-3iI3@@R`f$?A;0>rSJfNJge9c>"!$WYAHb-=/aY+DbVM26V/`r4/aV3%`2?W,bQW1Yn63bNA1-oh$8'&iCY$%VU"KmH\ZYXlDgN%.kZceO*ilaXUPCA;-0glRW=<Vf=>BH$>`Qq)3`c-cnT&#plc-:U1!e`+%18\XDYo$"WM'<p^#jS2![;Y;ELXJNG',sNBo[[Ibn)oSlgu<$6XW:trn[ns7LsiTMDe56ug06Tr/:r=da/eUZL%2'D@=D&!P[029%C>BA/Q"2F5pq+".b*pjgk2!\LF0+KJ&^uM\=oZ"C.lj',=9Z@:0RkBq;m;gI"_$tGo[>+Jq=62oIC,<?pk,`j]+%+L\q+uji7`hM%HgrBK6XrOS/Ju-F!*p,,)mq7];hoNJ_AY6j8Vg\(_a[GBb`7-4o"!9o_Qe>die-$@$drLmr:48)>PiT;rOD!!*B:EAA=!1<H]7WB%0#eE1RE3F/rKbRN$q&8YHq>B6\WHU9@AX6P4kgA9bQf]k!a#8G,Qb>T5S66-Uff7q!^`';Q6LmEXlcZ,<HM@&#m.u#At]djp/J,Y%mtVE`f\3f-H9e98AE-TR#%cC1E'@^4'(N1/_6;]JPg^<Ki#[\\[Q2F?YRjT"QHtm`72A>hYfN9;&2&f%aT`es74;[R%rCrA%e4RA%BKL;DS7JQTg]b:o82S<DI-6guprV99)*D)H<!Ze'lbd0h88/$VFG:c?$;lXe`@?R?"JcSk`W9KU5>#n1+/V;4R61I>nu_k3+`WMG%X,P"K_;[`Xc&VUC%kIr$^`:`d^t:-c@J[)RVJ@VmgEPN-`=b&dXi2KTs+'%a;rg/F"0r[(/PitjObfcCOMF:0o4Z-m5!L6PnaODN%],"crF<`iR_E;&4'd3S_oiU@Y8;\meDGo^#jpRL#Dt"G:@`Ykn?]SJtJtPJ`*%:H<W_7$[OJN3+L/eY)XuKmEH[mKV,6-VNb'_Q?%Ai*Co&StlMeRNK*XXGMPdZ:aM^3EhE.Q'>\Zu*fG#/o.oiE6h,hGH\sl4(``&P>B^GX_V\Ql5L][]5-fqI3*enE!6.Q@dh<)eR,Y%8m$fOB"?c-H^p$L$;R@t!M?/hhYo[rkH*,8=W[GN(`KC`_X)OA(+qd!<-M#m74JXf&)lHkQi0I'2K/E"dgGJ!K8$2_Qk,\->q,#=%hDKg$2%caP@V-l+gULgj*4r_MYoLh26H=*h7K?%h[06?ei7^EsVEL\Ol.bn9/So[M_f,pDM>k8t=HS"nhui;KTrFu>VF:f3*ls+h%P#[ZjTn>dp!dmXrJc/H[[6qj$YodM=HgmQUK43A@-m02pJkKhr_V`%4;H@.WcE):cB@.F&J8+VeP5]Hp.^/oCJsmK]2NKrp#b(=H%<1*6m'$,Imf<U!pI/7u4c`n+F)^(48SLCY^].9!aNtd3?Yc7"1QQtgOm7UVbA_$p&kZX?=>$--L'kUh$_TG9bdhF-j(=q>VL"Vf7%-jD?]G#F\o;OD`"$gV,&19OfJ*SYJ9D.1U7+9>=G>u:m7K)"f3(k"[XWQ-6TQ_kUN[%R+f/'>T%KoO<6R)0!S_V.)R0`."K2K>[f%.81j9XM*'iZS*=ai!427]$i$=+*JB,\%oT*`oTJa%i]'T'6%Ii*AEA<6\\25;JD2haGCFjAPa/&G1K][Ifi>1]#AkTLs7(#m'[^p%]T?"h0R;&$1h`[0"e.ummL%LNh#O>An3I=!qKB.2d&2_KQ0S"h@-i%JgL7t7lIb3[UENhiCZeX@Us"5GRBX8^7/d9@@d)P_LH[qT%\kcMR2>LQ5cb@.WQMeD.Z'j&URq@]oB5=`eNljLcgq5$F#4/Q>;;*%Va8((Mh=<*t=Rbda'KRLsf;Z_oQ#1+bY#pXhdNYaJAloAG%QGen6;27kR;P,*HD/V-mPrakpJS&#Q+\C[_%@2iXSRH4r_N?ji))ak1+Rqc&F/!:30_W4<R,=F9*8(.6erI\C:5;OX6"(>bX'm[h%$F3dpfNsK0'K\\AHupO%BE9RRd7o<GSefKO`<UKU%^X_unM.M?(QXOc979\R:m8HcQY^Q/@E;\tR.6Is=IJWQ*6"hp?qK@p3\8Ut%2s5J7Qs:C5<Q,^Z<>cPY<H3qMWjkJa<W"&7.c]l8O\h="#o2f.@c%/163TG%+VL/9eK#ec=X>hk8rgo_0FFV2Z]ACt8n'PU=)gJJ%D`Z*8P+loSJ,tX]Qo->,mRPLN!F^)cO,UtA62!V([L"/c"d,i.8H\*7X=]L?8I-OJ"dp;:A"G,K>l]9CfA\e/-nA4"(t#;+U]doY%BiIRjGsDFD4D@u$^jnc%ksD613(-M];7m>23$cc^!jgq_4,JtKPB`p_"$=&I&hHN"<[G0q'W+\Q;>2R&fWJ?V0+:'QA\e!TEiI^-%GcjZ4lH)dnDi!2c=P)8@@EJSnjJhK6m0GFGi.Nq[q0e#BX@`Krs$-j8J^f6\?6!F^aM2kbBG1C^.F]s[JXd;XM_MGVM!\Dg]E\Qu%&L$L@STOe1"<A,`279lU"a<c^$Qp;!#Zr8,GH?B[;Q!+i1t9mQ2`JdL&;D?n&VbPgDqS_,R*;iXBo`6@@>Yf;\DcXVqfZH+&>us,%^ehE@(lb^0Ph?9Qknb`kTcIGj<$SD$TtSa0%;Z/c%3/`Q^'Gr3&CK@r]^YoNiP6Wam3n2l#;HjOCKlW:f_<0sa'j=!H([!Sr2nI1%qQ=OBjc(ESfQI:sGHe,b7n6<>e:qJ'.*1'Og;qqYm,3nTLm"<^OTS\OA;uEOPb$;9't8AO_<Wr<Z=usBj?+Q..?0$eBZuVAQe;DS%D%![ZjB?%/0VnM1U"h2@8;RHpb&.H'*_3\IZY^tmOkj@%CHu+'D+!gj-t]N3"@sJ'[PJ&piV8in0+#*=BooQl7R/YO$50:,A3eEa%!nE)=-Ib?`eVG!Z57rH]`!rGkVN(dG!!@u9)c@"$;&Gm588=e?<'tmR.]FQL(%McR,TcH0KEoWkUP-@enIuFKNe>+VZH#G-W#Tlg%"::&HLCiZh'-:oUYc<XF0Mpn&"0E]c=.>s\'W18JN.V8NkV3D]`I,/4G)Tndk7`-Br&\momFVW%Z5U+1IB5O4EDMQ'!/pu7Kio6C%:JZ8V)G;ecT&+ZH#U"36BoJ2\_I@51G62U+4,oN'VbCG5.gs!'@$Iq3?tnO]%i05m8"ra!js?R'LWtN8LcqX]$l5<JKKR'@9E]oK%HV4<MZ,d>QO7birf:Z0H/#mcB>D;5QM$-u?\P0;>S+'ZA%U4FPn6FJqhLoNL@bn%!SUhqr`_T%d*/"<ckaYemZ(eSc"gXkD.Z:$B%@cN+VS^Sis8/%Ok-<mm0F%kT/hZW+%aPQhrE;ipXr`=(<=)e-A_7@T%1jgc6>:_CApf)@D=Ba5DWV"tU1I@qdZT04/IdXI$Tka.>%O3Iu2PFjERnoKl:8QCtH/LD*PO/6"F7#&.;aO!(.-WNlqmP/0J/QNXC<Kj,'N*'&;\J_YM.=-^\Me]M:7]]RLSmc\LV35qUYp;KM%id?DNP+EigaD7':406ZIPtKI?'1odQg]G#a8\2h;!l7c+HA3$8C9_K(@&YF-@4Y&q=IaH5,"m,^>3&^QQC_LmgoAHD()'hsL+RAF%,"m-IT04fIX!13_YQ\oEV!/?sMqk='diHHV[,J)cRPl-&9@M%[W@Vn23L-EMc_n(Ui=/eQ2E[eXdY?@Q=k^*T.SC_h<FolUDHi"V%`WE1dD-1A8U^]\nZEuCD7[aNa[ks$YISH/:V.m:uX#(9K\O`;99nWB3774l=1e@F@-VK)@+GuCDOKpP)W/3&7)@2U2SZ)F+PFOe8%qpZolASKY]KN06i8(WUFTT3I4<Y_E--cD2oJi$jj8L-jI8fguGAjI=hR5PYQUROYJ7kkpR73s-e1gmU?7#[.f3bfp[>6JZU>ZTgP%21:%@)^7`r;H.CC4eKIM7E]>d)F_h^l5W79f@hR7[-[red]Ji[8)(9[3SKL]aO,0A7?4f4+EFi[.?UBN1.?k6ZRl6c>nb>&Madh_%]=:7Z[YmrbBY.54J8P`u`+Q^K7=;Pu6cA/rM,\^X>E+@"[NRq]*msT##gYj#rj=lgCO,pZ[/_5:^4lf)W!Kds.R)H+P.F3'k:5Z#%_b1Z8ZWA(fMpM(k2$f&b3GELZ(8$Mbj.#gKe5`B&cR"[VN!R`UM78QRc`m/?7M25C7PH]#iRoWu=a3CN4"H:YGXdr]Vb.T\)9ABp%BG08AkbjB$#g\8!WpgF]HnIP!\U`1%7H`ltcnlK.UZ4uo<-4-3o&mM6(7h3Si'qgCS3Um=;:.C)At,(B.QU(='BTl=d2=Y&^PL/I%>`LUEEZsP+*d&qn!u;&Md5h%]]HTB=L3<h;S,l468J.Em@69."bn1rZE?U.b*6"c2#gMK`'UcRr=Cg"Z<++98WOQbJY2ZbOTo.$*%,ZJ#,K;IS5),q?;c/>Y4CaM`mAM]`*/t4:kES2lP'pm/H;K:A@1_l@"3NB<"(9IqeQE_!0fk^^)QHa#=K<oGE@rdT&9[:Y&X<qQt%he$u]mG<NX7M_Gs/>T%tb)O1n;7R8_&X=<?C8,_nC/%ZFUeaD?7Ne2!g^%U-Q%e!O6+N-=Ig+s6?O=jj98dC&(6gD6(H$Oh.ehSI%AktkW*a@"XWMjVf^Soga;;#F=U1R2TjW9n*p/G/&=BsAB[C`"=Q52?)C4*Hl?I\>@n[Z[U1ja%d[YS/;m&BO.@XbK5'7kF`/SOk-%r+rXBW7b)O[)M$0Z_n"@Mkrke*ZLc!A3mQ"#&&Xg$+e.m#aUpP/`miUQ<Kt62D,Un[6e)6=sR5Mg7eOBfV&D;Qa)Cqi&$&^$mSB^%;=6GSRu#LCYsbah1e@P]CPjMLN.K]`,q$ki2)@%t#':3R&+P4X@D^0E-k1RE'Gt=W)DHRmLjC8QU0*Wa9WLj]TZF6L/4u[@7(U1.%1jKLL=':al:5Q+*7D+Z_WJa`;"tYnXaC6u>AN8CL`G!cN?s?'U#"7*l&YdYX9"s@`##+CG,X`l?'d6nk@`5%"#`T+u>m+j4%Z8S<%3@m@<[B]M^[42QNC0Ftt9@Z5#n8--2K]b6s,!+I5eO1<:mNadH\Il[2cCkNhG-4DU[OX[4B=i1PFLE\n6ta+E8T_E,<CCK3Ue,[:%$XZ;7]0Si,[Mt'VB=lugnD(H`':tbn,E;1TLhE4bc\)&tX6$mV<gm-^9@eQljgd3d%CJ<b-pk2kSLXrK_S4ZnbLHA2G3:W_)S$a<%HkHM6i*:YFW#2$j"Qj9h#%pK:^ll&CS9&SrYS`mi%u_EsZO3sHDMI)]-8U9MR#(0FDU-K98'T:]6tde5E'Y1"^SmthW=mcAC$-gX%X-:!#8R8]'PARt>7r^[k05]U8V-_le8Xl82k2t&BG30Xl&Q%l=OcsVZCM!Lsb5AH.H/@P1L$*r>kC83Ks,RQ6HA&QeClULjS]u0,%I(.k8ft=feGW"@4H3bJYm7"@f*pL[m>7^][3&_&8$-nNmBS(<&8!98Z1X]gr`j@Rj\a_OOB$T*]OdM-GKhBRKQYI.Sj11Vsgj$.P%0fL-`-"^TUR_2nh;+0Nc-8n`3Z'.m](8eDEb)J8qJoY@0S"SP=>nrS59?`!n@@K:6Ie@i591%Rk=VHTeNcL'`\Af`TL@$fK6=)X<%-H8T@&FAeIo&O[1e9o0'[F'"RKWh[b_fcGh-`tN.iZV(S$MJX7GuP0L$gmdg(TNCmmgEW2?hiBY0D"b1QFP9XcjJ"o,+.bUHu&U7%099k9q?e?G5>HV1K%UL.^?fR-=B^@5&-5-QT5MZ[+l[FP+e"`f[04SO@X:ieDOD#t@($=2XmO-@4K:i5#MWE)8gK_:(;Xf=nu]$*%?67XK8_:QDJjfSmo]*nm2dZ8j2d1W4;EeebCbKfl=m'9@R-fTTCO7chO(uN#U95!QCWokE@($RAdald3L#kh=9\S&/iUGe`,W-u^%C=$ln*=Lt#/Z@X6ZN9=T`n>/6AnOKF[I^Y"T%(XQk!hpgK\EV%G8mu#YgKM+6,+0$m?7%=(='kTN>R=Zc/r:d4(@c_*O0m8</Y[A%<bq5BDegqVfimH@>KaZAW^Y?=gKMDCEo%VKCb>4[X^th1e.O/eR$e`rbCeKWo-0Qm(\uY-bIfs;-#fkugR$'(p_d(/bk=K>[=+I0%8$tm8UTF^f4J%V$@($jHf%)T0O(q7Lild8tA9OHGAARVgagZH3k2f/d-20QR4LR'"U6t<SI;/T+QUU#B1N$8]AMG"PY[FmDq:=+O%02H=SZ]Thie`LX?0KW2)V&cJJ/1a#Z_V4],JIZc[8rB$#n<^!WZa-NW:\o@kK8R2OQljcZ`Cpg7>LS@]nt[&La4bumoJrBK`G@d"%>MG?eGuP1./^r5NhP]tM'$Som?eQFpZD;kCCM:_&U@Yc3/&CRSagZGpk2fGlHlZYIO$Ge/l\AlV+7cQ$ah0a8Ken[V^46E7hA="E%?fYGGQ[*jUMg.D<^4:=JCp`n)0\[E>f(NZ]T%"DEHsRGVIpHCaZ[IsSD-uGe;(Y5">aeh'EM?_jK%X>g>?f:`4KKh>CbIRh<\`BV%G/P(N,Gs@e&R-ZEC2oK^_"OU6Y/G5@2U(e^^GUFB.$&-5A2iafJa6]VkD3TU(AZP41,"]'R3_g$ecC?g1CC4NXb4?p2=tHWq-d%W%+]MsFr3/`Nq+Fq@=JYGS;o!Q6,Sm4n%>*7OjBGj/]KE2?9+"Ko$`O*g[0UA[O`,(goCB,OJi?id3l"TEcfSFd;[7edC7(8TjZCbO%B5=Fn:7@_SMV/p/>?f.\4K=)k"E_&1Rk`1-8hjP.Hu!McQUeFd\d#%4"`4)-d1X[S,2_*Xk2fGlOgKpM/X>X[1TI:=X[Tt3[EQgh%>$1I$Dseh3(J5CcRI!W<X^H(6PUEkto.pbr>k9aEZ+f@?IV(0r8$s&Z4doR$GaMsll\=(rjBGj3]KE+rN/A*%J7c_"o2B\<`.kZ3%CYuQ4>:`QbM.tf_O:7?=q]]-L1O\$SZ</0u1<uiF/n1)LNI?Y8ftPP:[P.7CU__62DYd7T<pB@-_e(cmIO-Y58%%hTc<W#edrPC*%CRD4m^9tAmbNirK,IY6Q_X**#[s#^Pj\[UdFQ6XYolT^%Wbn-*7D?1;bfc2Rd)OOo=QS_cq&0pJYF3,4,;q39C<:#LkkY?=Z?_:Y%ftPP:[P.7CW0Tc9PHHQMJatb$YF3,4I@6FW[=ISiB]%T6/C*=WL7,d>\#(edj\[V$CeD,h@#k![FqMgH.pna:/<hK(TH)PU"D,)_%?6Wgd-h=D,ah0a9KbGeU[>^n.mqNHYefs#*>3=pD/V+nJ]()e5WghCa`GEfiXW=ZlGu>"g?+RbcXX:C)UmUP-Hu&U7099k)AApAD%:V]*@pnkGub\0-3>GL^n/5L#;$[mTl.HZ$jbk=K>[=+I08$um5X*1mM5%9m2>)$i6ntiHu?5h?k(3jf6kd7X:?PZEprRT9m]KE/>%FHR<f'$Fa@K\=),FQ;)AH$NMM+*a]P\]5Wj]'0mLcFeO=B7?O2WadX`mZM)']I/T)T'3Y\-O]$5/Y;DnZ*f)jfZRD,ZaIl`[[)2a%;@E=)FQ570^"_;M'^J5I^[4L,?67WP<GleGoAMaNq'i&*m>H@-q_BgcC'gBiKIbpO"YN-6brn?u:\`,9-hGc^NYlCc+0PN8EU%lp%R-f`XCO7fiO(t(U[_%>IlorC)/SU?F>UWB_iE^$7/'738"3+G%@S,uJ0I&J/O(p+d(X2*=L\k%sWNK[<0Cl74bIfs:KhjbYQQdfO%kt>_[BC/?+`anJ[]KE8!Y+hK9I(Yn_[Z2(YIF2t-?P^eJ>!ftK7nBE&gZoQ[4eXNG5A"J(q'3(ZgP_3fM<tF5[L_r*mDHRnWFP4;%iWsj\3;%]-XQosW&_]G@APr7hjCV=X&Gb&0^fXY?J(rL.099k)I(,%TWCZFmh,"Dia%F(R@l5o8C*DuLm7V!7ZgA-1?!mB]XtTD;%W0SuIJuL'>fjSW(XK.&im:r&ULUFqBYB/R$@LKi8@($jHf%.-'*nA+[UKoISp:@0o%!?\`EaW+l]JQWuAGq=d@q=DQXb<s^(B1bC%AR6G._N(U$/V/$p[MHlo=sOEZX^tf[eIl!tZaE2eibU3*Fg^_J>qP[=W0YXg3*T#[rE[2("m]p^DnB38j\[U@akW6%\M&k^?^Aq7%]JQ]7\Ac"6@&NhU$YF1:Df%'6j\[TSh_/VXJQS5kNYJRqKtm"iR?pFO9WYY-[7m[lZF)C;e\^3e[EQgX>#K"@!sEHB`qIibB"*mU%S(2+W(7!5?%sP^CXR!1*@'&YtJ(sX*?67X[Lb*cKW*ITkYGbm<+7cQ$ah0a9--PsNVD!49*9O;[Z*#`_/sA&=R?pFOJ@%4f^+Y1V%%p`NFZ[IsSD-uGe@4b>o?Sd+]$fL/pQXI6Tnu_<&6?uOgCF=c,"n#3ModYAebk+?=218UUO(n]Fe\3D[e'7\@_7H5rQX)iPZD;kA%*o6M+Ds#hZ2]H@U+lD![bfcbbVF;sC5"'HA/6LMbBor`UPUEm6Kt^6Mj$I)UZ[IsSD-uGe;([rWbgmEJ<n#SCR&rfk[C+6%UKZ;E%\f7o#'$bS'%!CSV8\OJ8btFfm&uVS24\;+q`3Jcf@(%HRXmO6C4K9]K;B&gJUq!&E@E!%7nu]$*?67Wp(4!QM/b"":FX'p&H+\k%%U_ZS0B)>IsQe(gu0\[E>f(NZ]*nCD,6b1.<QAUq_UF_:j>4c#tb<gJRMf8JbC[l9ABe=qi>3&mlbIfs:A`8T$B\E2!.@?YBq:<j7%6?uI%-ma&j_MY1`f;o?jUa5oekR&+uUH1l)+1C30q<Vh(>84F(-/[GHR[6OP9FFV[JBaY5)eNlR(7`ehbG/5B#L;(-_Ia\JI1a]S%,2_*Xk2fGlOf_Q*<[(bVm'O]"$^cBYk@Is@eWNHfVsW/+%!?Pq)[3SHPA_C`Ks)EFqaC2V63";b7caic`8MjNZ[mMA/jP,RJn[>.%j?"2`aoSY;*8D+=rNB1#Oq1JontT6t:ajj]R>puB9Xr>u0)$4D*^I9o!H7%dj=Lkek*R<D1..Rc.FHBpm;``)2i;8"lq/iXh+Qs.%ip_&?@MU@'^iu"EO?(m^Dc00net<h>:rj83-LM'B_uNU^X]:OBCg%O"MOTb>P2F*o?2u,8J-A1=rtAZsT+XT&#>1JRq#6pOq'8n%%mKNQ\dkV()So["^/V+#nUR%UYr)*a^UPrAGTbJ9!bK0$*#+!n8!)H^k==8bM!urT.M?7d0=NrddZ=M"s4K=f9oDtV)bqe]iB.$WJ%IZ^^8.EatlJ6:g3MD8l_XT_tgdn%Zj0'@fRl.$le`[=hHiK>:e`ok=l2/]^+a?hG"bql/9i4GkManEL^G2NQqWFn5p-tG<1FJXV#%c)OU'l[Ut6=,!qb[D_T_(#hUu:1Dk]??"uhFbDlR46,s>(#UuqM9(<r=t%"TV^,bti#=JCVe]0UhCcC%Shu?U/e.=AUHBI-9sTs>%)C'A.+\n!>@<5RlUprue5^"muPGC9oHY"U$0#t5.-WrPY$-InUAXjF#P/1_g!\i:Z!CS3'?6WVtmW=Om_T_cL!`U?EG_^DE6YD^/%BNmG*RZu!7!90Bf4A&5VW/VeMF2-h<bF5jb;*\^s^_==DE^m^Cf1..@(m'N)7S)uW!p@LPl1(9K6B!Nf1#ao"6:aZ'6`r$*Q@'^/%8qn+2e0R=0FE^0*-NW3gZ190bcU;X^JkbMc0:PN;.hbe%JLR/=D4C^1$b^V\!^&2+EpDYl7"sLW!(:e-`!la58/s*>ADk%AU,,qN%0^;(p=cN\NkZgPO1#`Go1_B(W..nhjDrrH>&fn1O`).hBd?"`3//2&S$E'i)$?2;p$?0TL0*u!+iZkfsI-tO*K>eO^4=kjfF7`eJ%HZ"ZUq=:A@";Ch_^YlUnKo\QcZHt5MbTB0Y5:XSXAhkYsntXS*$G]E<!%/J^!6q[=,^3f;Gi/Bii^r*TWk]10Bus6Y&<BbDBW(Yt%@Y`.B<7g`@=<*JZaAPUj!q*qBKJB()XrsMX49P$U<uX*V(8s))+RMN+7-!$Mm3th(J(20YQamLM`*/"SZ;rKdSU;!GYV:?Vm$g!$%E17Z?"(bA.!RBsjl6hg-eK\j-J[+;Jjn#PZ)1hDfr7T0'"7h/oOt%\TBV1(n<_2Xkp.5L)ihO:>_'tRA9p-dRAWf0W8Z*mh/)V'Q%8p!P)NuG_Al!<d]<e9<AWXpt1"dp)*R!:mm(XMOq#2lTT=X'Dp`$P5R4cQ`QM_9q+=c^pK8cXp?EXE?o*?!kka,4cP,"l8?9`^En%k4SnqZ/.p:Q#VoG\n"R]1_)PJgcg6J#Emju#8#.(BdLmb(N't`]q@OV#0B240tqH(0P]4<,R`6'1e`%S_'V]?cLA_3:^Ga^?cd.5%97GBu^KBnV@Pi=;V2\YC-#WhmYI)dK6pQ&.U)AL/W=S](cNm81k_(;b$omC,,T8fNR@P<AHsHaqPmmnMk5c,tA5umplffD1>,/!#%>AfO4H.3Q!J-Ge&YC?ZX[-T"n6Z/"(aVE2-:/!?3:EfI_&FVC>:$R7+?E-kV$oc6>30%G[FcmLJ0OD\JdB83L-%QY;#"GHD:9IS"%N0cG1Y\ciUjc5^U5a^?<JOp#Q8J'#d2er$j^kaWc8)[15,RFR3c^7=4R0+A*egL0c#)jE5^pm/i)ZdslRV9/k88(I#@M1[90V%K$%A91"dH9u?^I!-.M1/>\E!(LTJ?pk2",HbUJK^Zg<Ot_ap_In6^dD1apq9Wsm(LiCtI_\EU.!HK4/7ZJCMfZ`RO*^C%@!%KiRcqT8%KqWJpr'4oRW'%3br]MDK_i*kC2B`?M"W6c$@.1#]3]HV,0PXJqLR0YJ`lA[!'EgN&+khJ*c4%YT4%G7hW-gHF_/h,Y[$CM!Qqi[;%QlCYh4/]RS!gXR2C86_K@)S$*`mb3_(+7+hf`Fk%,+I$"eeZh+<'d^qL"U4VZn3RZU+HtGit@=V+7]p>%0Jcb7KDkDg7Xd9!lg]X%.]%1&QAI6t@6?'&\4shb<h`LLM@o#*.X0jaUpV8=Ya'b/$AhFhOm*S`a&-ab*i#eRfHB$rO(ojTK?(t"C5o"E+360297F\U==A>/%0fk]Ba>D3.@1_PY"H4.H,VdCAUR\.-4T1j)9:]M0WEF&%rRYJ*.!6BT9S6#*1HUQ*][f!'MC_*<R-bPWjd;VEU=qZlJ>?R#-DK(i%9q>t3li]sZI_-/c0I(GN!+2++$O_CF]&a/:T.D/"jk*RNCm\hXfo(jqQTZQjAt(e<^mLBq23mc*l%>Rg?EUdm>7ihM,'@o56"7&H%S!_Mg@'"rf9Pqg9g(?k$FiZ?FK&\o'edCQF!Rk)jR1J'Y[=[MDH;qsfkY9(,<Mmo'iXRC<q5IPF4^P_%;G"a4lj%?lKjo6<iuobc%"p!)N""EB;"#`M9R!D@aN\]'L\HZFW'#-qLmRWe%OYr./%WW__/3j3TlR`C3n)U^lK8BokW9\k019$jVj.s"B8d+]E$%ia*M9"XE%\PM#ul%.Lkg/WBjo9iGfVJ26unpp802sIjU8_40L:0>2,C&Fd)hO&s&T6-Q`8\!MH\(XA32BdFb?Y3_EQidSH2peK2*)a:l@B--X%7EEQKkLh8@6"&HQ^;gZDW9<A$1knp)3Xq(BP`pG4UgKlP^QW^*RP2iY\fF9%/1)_qV=\RJ]c=+5*m9DMBNCh:aZ!Oq-P,r@*eC3i%Vh]6t&V"=U:#4t$Q)uN/I_b)J.!HI^5%;3G\<BuH?3XsTR\<=g^m'lr<XA9M#q%BBe25<&WJXX[\aF.u4(]$N^1[Se'OFOufY0hq%oOcPMiC'[0VSLn2+ZtGJiU<!ASl@2tgZSVd,,"1B7G2O<+8M:('f07AbAc`V5`34NK:(_e)HsIF.udQVJ8&^c5c3%'PG:KNfg'_@%N2SQb4PM.@Zr\P;?n.Y0:c=.im7WpB%\6,+T+BY5Z1=dU5",uAr&1S]'4_o1[Xjca:t8RsQ3:Xf6#XSd+\4@23!X_VK4>!"kWhU,%=<Wnt>m=E(MdD&b#!-;QjHV;Q<e<k(,tp=OB]A@7:Ru/3CVTD\RK%dhe!4(F9;)/oAF0P])45g"F+j#+o8-7u^d^+Z-[GY_n%d=:%']-u&4b:L!)V:o8Bjg4[GL^4nL`o6bL>NWSgG^0"9Vc>7%\c/93UPRh%pj:(LQAfb@P[+8C^IE)]UXM6'hku\Ek6tO'U9l/"hqBV%;Un0kHqb)P+%]0el+.;/s*PK,+[)2/jls\h?OkT2Kg:AZ8ELg*nT4qqlpl2po6S"g@(_97esRdu9A`d>Ub)f\o#M*!="ij"OJR?.%B4MQ>hKrf_"5amsb&1JrAWneG8b.g5c,hh#JFM4$[W`'7Z/,d#Mu+XXk^\T^3DU\T7&a:4FMs:,BsQe)mXoeq]83_8F4etXZ/3$*%gq`_<1FD]5Pr]?-ngO&DKMb1Wd"58><$JC1!0]hc3Re?hOd[NOXFmC4TEs;rMJe:7j@UZA8-rBBZ]"<IOYgf*lZ%aKHMj>8S!J$.%dAX!uZD7hcaI9?sGbG^=Ej\Q?MMe.UG"Gba*9Fn,<EB:baehO$?Q=@9\Yq#)NcO#ZCu[75]dYF6MJ=jRWZ-q41i!N6>Rqq[+mPVj%_?*6T@n=Nb@3g1eb%XutPF,s[2KP(m09&bkW4&m$AU_j(>0(Z_@k5U6)jOf#]_r/]X3rBCMRZLe]bk8a<8EB-VUWo/Fr>_a/gL@o%`0Qoa`e6*pV<h-"97F[j=X\J10fJEE<ZoC1U[4DIa!eB/@T=PsXI,T%7&-h9Tb1/W0IUct+X@a]f2enJ9*c`(;("R9d(1qb!R?49%0n]gL;(fJ"6X*&Pm))2[Rj;;I7Hne+KrCe7-]EHg8tuJ[SJ<K"MnKk2C7QJ1)>P"XQ"Hbh;F,e9'[uA.K\AmM#7d`8F5a!NUut/\%)rZms9F4gcb8ji7Nta7"?8@9Qh/!^@H'ti+LpfEp935R7pR]`FP2,RdKN;7gJ!&)M.r7WpRck("fViFWI#OdJ(a`H.?PbH)SPmE#%ASRuA`/TPm%e`I/$INBJL<@mir"0St?@s10)UUpOA!WJZ^hqL9\k<;<i7KAYR*T2W'.g:+_l*qi%<RM_fB&0_P=?W@-?i#iY(P?F%QNjmnJObsVDu"PnVi*Ql-O=ru%Jh+X+1Ub^.#,3`3+_1"5d"%#0Lpd#?>lKXm2hHWH+G8uUR#.%0Y2G%'X^%'7VR^9"=2jQR&HAY%04q[D"YlHH5k$h^P4`3WP4cIs5lf&Z9QWHY]]lc$`tBS@2aq/Y$Uc[CH>-&n@cs7XP)>*QQ2@9='e+stmA6ZHU?(P;:\>ksAE((?%$-8+*V('.J[QVW`![T1OJE`m"?&!moZoLmP?D]W#4O6;E^PjJYK\e%'(D/F;ME@]`e5bRYL(S[4YmU48>mL>hd>'Eo9&8Nj+0]0c%AaU1_2t!!/#>&_o"AF%VMp^4@,geRgd>O$t@_r@QN)"h[Li0,!cH[Zdl0LM^-M42._:b7;SdoojH'AOqPB>\SBsMlN[@s57JMN8?%R<4CURD_`@Mk*A1&0\$*DRG79k%;7hh#`en["^*@d/>[C<s+2D%ch0@gX0"TM5:MD#"BrO]*`+LpU[s`be%2'DrIIi]jT#Q7-'G#%K3TkSFP:Gj7.3EH<"PgUC3j-X/bG@&R$<Y=r0*LG;5Yd71&7skF[ngALSQ)o$5'a:)8ZN3a>DC<0)-Ye,cj[R*:Yj'a5oO)F3Mh`%-#>od:uWp6\pHf$-Q8E#;I[A[B=*njLdiGNJHCeM_-9N*j=C*sMs9g!lreLdPA-aQ6s1fKfcV$FIkN<Ae2`HO58KY-^-`T19I+oC%;TK)&[:!\-')RCa(?FPS=1gZeSO\;d'fZ8oYdt3E%j[sMW$i\>.h+2;_>m&l87u5lOkie5'9cs;4#UJM*p\u@pr,!e72Je0N<9S,%Xt+M8A]ARR,RA=DrCKS,-o^lSgWW[UXU6gUR5ZD$2@k\m"m/DC;_^ke`J=iE.[#tEbc=Sn%tXqZULLT"PA!f;g5t5q:3U*JC#gX_%GlZp/RM),%?m%#:rYSO`e7OfsgQf;8#BF&?Ed*AJ%u@12R,jhG,D[Y6]s`teS3Wg>e>j\1%U=p+eD21@bg`RPfuSdRR'QUO%tWf,%(.C.]!N&2)D"hV!;'N;g)=Q,nRV54)'jYlk9*l_/Ch&R[E4ff818J"DU23C7l^7ZAB!OeP],^kjppq!`!O0^-,U5+=pGsE`1*`8P%KC!]sB\g\V\9.B8!(;(236B^e`Tdc./:O7_'\bng8%GKI2o/_dUljJ!(pQ')*PB*V4$BIle<+rE9MJ5(pYN^&Nf;=KLq42Oq>c?"%5JHt4mT*1nPc#0KiO>SK3hogDE-Fu>TrMm[r3posKF),SN$B/6BJ'16]45/"ljdY+!E2:Do=Vu3c)R@U15<WFVhj;fC?Yk[R,-CG%MkJcr>b:?e3cF'.6p\OH0uQZ7mQer[7.KGsEYcVcbuKn.^*,D0>:;6o@oI0cM%S9be`eYDETA#>F%(UM%<@qLLs>]0KX/X1m&Coi%^?ChkLFhc,W(qWf3n5Z4Fe_!/o4!MFFc&:\M!b,Yq];thFnc3#f_jA=d(nTcJ/NJc$DeoWVJZSj.h52?+@7%KeMYg`6F#3m!pb(2%;`27M-FjeG0U-cK.*C!B2YR9M>meek#5.WnN6!g!Qjbo\+iRMgiYJLLm#]&`KOMYJP#D!m8iYHQ,9A;QUZQ@k"1>tRb[#V9;ZdT=%cS4f&6<5[2&6]h&i?)1a#>@#0lobN>:(?)nf@YY)+V]H?Sab9r3e:cP!$fc8YaZFO\dmAd&MP4^cU)F*n,b9Hd8\4#+cPm3ML;]4%&R^3qilGF2]*2t*K(.^.E!YAC2[sVc]-fse;@.t\S^tHL-8Z$`d'U6CJ:c?A,=<-U!<Nn'/W[t@#V'7Vbc(UiL]0]N6&+M>2h=-m%!,Y&ggVK>AWFELWS&0AYYF#li'10Zi]VkJceB/Fr@nNjc04n9;9b!>lh5hqcihRC[M5$@j)O!$<"h?mY`s-`ZE=Sh+0LTHSl=TZ0%>uQL*3Kd2/1bSTT`qI-j>t">Q6Erb%^&q++M#R7$W"F39WGER&1s&I+gjHfifs`7]P*-]e,^+E=@_N_8jhB=(Fn8>&XB-#*-W[#D%,)^O5ZM$^U4irDU_7,`q54VB/-P!<eTrA:T-G@KfqEU/;*RsXUWi",_SYnbc?^0B1?4Q5LN%ti/-C\%R/975PdrB7a!P7F$_tJ)c%KZ&g<8D)9OFL'8Jk#<t$MuXMDAn8k:@']DoOX\/?SF*8eUp6%,8I'fX[P?0HR2VUuIQMW_L;mkd;9k>Uak.HlWk>$Nj00b>#ji<=%7o7!'`.^>d?0,,FjJ\tj6kA257u&^VIS?]\8s(B\q%*,CR[:UD(^OnUYmsR:q#M.I,MEu5ZR:95'/'-\WBNh4ZpJTW01h7pRSSUH%%j<8@81a?7-7n\C[P^JJOXSRUXPXla)H1^R(ccUP0pr;Z=9'"WP5+&^()S2<?n-#66pWgJj`s>L$WCcRA:q6U4D_h!,k,%';Dguq%RQU"@ViFkiKNjS@(Ep8^R:(EqjK`;g+S]ImKQj[;d<j"s8U@B#`1_),/'0$`fE0:o-Q$o6jA^]OTPs@ZA7`G:S%K<%'I+ZEb"=n:%2'P_??_`f%,fBo+LcS7V'0'Bq!L^7]:sUb@Ls[d3Q5M3^O'<r=MF!>#7Y`TE5*ppd>2t9Kf&@54rgfCfM\n,H-GOi7gE=N!ZKHkF%_aGP6N"Oisjr)Ifp?[pXYg7ES=G6Gj>7X5eFI6S*Li#)N[*5I/MA,?rQ>c3Vk(!P^BWcTO3Kh+G;n31cbe:o@Ja<^EhgoY_nU8>f%Z&+Zp?'7t4:M/i`QtKX]NdX@_2Lr#2=[KE",^S!Y.`XGK]Cd-_)XS;_lkRu-Z=B@Y"E;g72kj.PLT\=VDE)'&VWRO4jM"qfK:H1?%DJ0bQ)LK:%,<QZ4pM`o-_1U6:W@ek^&M^$k/URsR)=&/qSgs=R(bmd!G8IMM#e12Yi'D8Qfo7u?NJ'YI[cd'm,_hYrDPr'WZJaH9%iC$gW:)>9OO#_oa0)TlrJW\g8:,PO""`s5p;%&a)dYWRhS^)a?/([O92`,,8->?jP=MuK=X>FNXL2IQcDg74l8A6c$!t,<m97a/I%M-gj4B#qi[2Qg[(]kM/'clk8Y776[0YUf8OW>H%22T3U3$KF%_`_["p2ah(&[>.U]b,GQ3@>BN0UpL`"l%H\^<3CCUC<WK`dgqYH%g.n3r`2qftiF-J[[P5qC-oZeU-EfqLd1T68ieN=p=/o8_^bOhUI.ee>R*:%f+C\^A/gAHOMm7(8)uiZ\s"HA!?"iifA[n3D0mF<1%S*a_T_Ws+JA<>Q(6Z[u'SD8(c6Qk.#83qlqDN1_SYXH:De=bfO$.Tu`0UUq'R4($'+@!#<\0t+d`nV:k&jcuH<dAt*@AkH[6MF*<%mj7rioCn*6I'<Zm+_dJ@Dc*)jaAslB(orh(TK3,XG(*u\6)FDjBfnCfUI;\R>BL#Z.88JWC=O;`&d!j/PTY#eAT\\aO9[XuPT]9<%b$H`;"#T9RYa:8;K_9CtP)ZWE'O9`K"C0DqLuUl5,,(*l,:6b[]($D[eGg<dc0&[+!^sm*k\u@)5p1A`8>;MB;P#/mpBh*XOijVA%5^6BW[?>pRCJbgBAX%n>C"F-V,qW``Ze6oY>>r12[nOuOLmSbG>VAk5p`^K?$74*tajP:`7b.>MQCa"R7R\lK9nQQd#:-NHGnC^,%*+Ui@eL_<+k:IlS7lgghZq`+>5mTg>1QF;f=FV*]UF8tq4.N(CQ'3Q!=[CTCG]OW%P0>-AEDB8tPf=kf.G25UDWIT;0)Q2^@AD8^%S2OC#9V3WZZ`?PVMg6q$U#;$,U@e;!1;a@-D]Jl+PABRo2SP-GaN.foMjhlo(OrT9-f;bf#9`P:e1R\D%:dCPi*D1,?Le2=Nm(/P%"c*;sW!"]Ifb1CgR]M-adZZSV*<=U'OMt<;eWDqWa<!4.6l&Z3eVaXe!Q7#C),:7d76%tP(8D/[^dLSD/1accKVra)fjZ9l;e"7@%2BpttW#8.Ypm$)tNQc[e,eGA/9,Um0$E&rQ`-auWO(',+I<+I,+N>7a7r'a#T!+!3.a,m:HY@dW"L'1=o.X\u"0q>r^o.;kno6-"%SgEJQZP0B0dFL>7)bKk?m$Jkjl4T:@7OEqP"@C%"-e21-Naj8;Va)Lj,Y_0u3<BPIVVDol=!_F=Z3Y/9bqllb9-,jknhI_3^?.U?%FRb00Z3E-SADgj]r.+H(06S/)cl%<(d-ShIm.4W0a9&=U=[mG9p?3bkZD=Q,3C9BU>>n5c5\p9`6KTGj^N*co=0e^`@"G4D,*RA>%GDID1]=beo/dKNJ,k[JM&9Q"V,u+]dbG<oU%WL*t/-bMjXB3R*Dns'q8LS62$nC1[OiSo%s3B25of\);ApC7"h-/a)JHA)/Z6k`J%G7n+gP"<<Ds%L(Gij1G?B*<K#U)O?KMsqCbdF9bQiME7jZR\P.O*O9SIa9WGK6AKFJjkt16&qY3Dm@4)^]P4/^PsUkSSd"l!*4Ca%l;sY=M,OcFp)6G!qS\W<!\5<*+cK'C5lS.)bZt@mK?+A@:;l0MGG2s8iTO8u&O8ifekj%*b(6XL+KYbHR!6GqNU5aPDpW002>\^1%Dap@u/>&V/djXc`65gBK=0`^r[@&#ABYX%R\&LW`M7,BZ\q`]MMQDXR&k4(?6X#U2Gec-n642^uVHe'IiWBpL9h;#@b>GbtJ33n7%!_O^KAiBB0E>$A3U6.Fk"+'?She?;+ohS2-8:n_[4]*l_6Vo[!\e4KQ#FZSq7Goo)/#%JJ,/CYK7"T1)*'Ga,-Xnh%6<h#0AnL7c%CL35SLgt>G9$&+]k`a\)02a+CW4Rn/LsRO]lg]jkH<oej,?<n`R/ML`)eNG(B#>nJ>["!tOYDZi%SId`L<cVu7T^hr=W53rD(Hg?%,n6*Y%N)gh7l+'N"f[oY4R,U[[jEn44J7n+/Y3:A^Il@.Q-%5d*Qoarq'']]UbRHJL>%#4DeRrSljOoZfFiN7aeNsMO;CBCAo-/H%2O^m^\)!k556D9'Kq3]+7LP>_\.!O'fC:CrXfu`SDA1GJYkL0G=fe"@WehC-UD(7W'0>jpkH@LRd6VDiWJG)KUA=9k/,dl#4t8t7%r$qFdadY$oNR4pT^FD.*-WO`:WU9fB#p\a5;fMiKRK7G=js<6RfXLEp.F0M&bNWh5a`cB9=gCC-73W#UOWg1`.C%AuE=MIS,oLIV%%uD_W7S-;E@GjZ`H%gkc1u2&=f`Mo$C@YMb3W_HC<2abhLO;PtIYLEcYTsPq-JdHK18dmY!$rN!TO(Je;K<13'A5uQVBI?JB=CBi%U=$G0[r!g16+g<Xa8lL!Ej\A8&r*GT;\$e)%agM.d<%b(P-QA)<DSf(fa:s=&b&(CGcGcahMd?<3`_Z$56o^m,fu?.A0(=oF-C_N%OccC5.KMNbER@-1Et$o%P_?8R%u,0P@95<)N"(oZ#KA2RjR",>0h7NVFQh"[?$mJ(KHYA/I_[S'(Q0_P29(U:b>]aW;[&T-Wd9V5%)jN.UTL5V>N!'nVVpq'@m1_H+JdcK[Vd*5f5Z[&,<PX^K5%HkK+Dp\<KliE`X;XS0r$)FL7X??Fj$jc2-%2O-2*[t%#Y5D[arKE@%q8G*>:+/_4+:>]$.Wo8n'BJeaa\Dm==]_";D3,.\<=O3'<*84t:/R\60/(#j"B=&I10iqR11b?F)QJuInVU7VUG/2T_O<ola-b=(%$>/3]0po+t_?'s7S`R6%O;!q3+#W[=96S>kI@DN`hBa2a8b*I+;7bj\lH?JLng*O\UHS09iQ@Ru#M]`OLQ)G+U$b5%$usDijI";*%BE5BiZ6,<'[M=UTA9k,Z;8mM8BJIXH%ZDu#TTUq)77cSaU!JEM16M\[U9-3PKu:/ukocr[>1@_-D`%miVU$N+QlgQ-a^O,X@jX^f%8`=d99,b&Nbap8-[s,Ch.*Icl>EWPf'/uOdg8+4a;#kW#M5C9sPRF06!82=FdJT2A+$%ZDqQAs3Ko`57P&O.!nKF=<,>=tc9KDnG%BN1dt(1K*M;W9^LEf.`#A+g#UflAED%FQe[N;"Sr:aG/0T@aK)8-WDNi>!^H75Sn[3(Z'F+UQ+ZXpNqF`C[?A%14S,:JK"Vnb('%%q@As'#.3d;<-`smlmMM"WuDA0555X:n,!`@0`c+K>,XrUYgP&*>.gXeNN/B>P,X$h@hb,)6VK6^UP9U69L939pN&riUh]BjE]k\1%T/"'@14M]<Pggg^52eWFS;sC=OrGRdE[mboD&#]1OM%\Pha*QbVFN($\uEPTM)(EdCdhHNPEVh28Nag,V$dNGR/ARj@m2RU9Hnul%XQY8r5#O_8_KI?a(I^lEd59&cAll9KI1V#uQAfT/Ihp.Z+k^g,O\A%jOHq*4b1Hbm=trlKGFZ?aBSJ`!053UF8OG5@LoEZaDbX!"%6$#o'3P!T3eQ_oXj3R#Vf2pens/\tr?_Q^>Al!-(4K&9/1Me,Q5\ZCs(-o=NJWWcq(J$8jiN,VD+F6=ccb\)W6_^rs<"dgeE1B;_%5+5Hk*,.C0g,q(.\r\ndlni<*$5>^mo>9W>nq$meRNeSG$JpJ:1*q!^W(I>o#pW]q6n,4sR&KX,``%mJ]Qnt2a"LJB>e*p+V%+RG%s8N%%_3'&S&m(-sXks(Qs#M_0l]EP&<!/hcDBRG-%YWuO"2URT<+qDC+?68A#kg(XTfEjei$'1-cr(JZH<Pns:JDChdut+k;A96c%9gN/^<=k\LPmT-A('Ng-"i6eA+>fuL'qA2>K]Y)q_)[cHE)($q\4C<FltHnqF)$>8:N%_i89#4-BFZ5-We4\TGE+dg7X591diLj=%e;)C2rAjH0k)*A+HN)ORI`:\>GM_]``.].K]\I]Ef\nVU<[[;:6sE&G3-SC[gJ?>C*'k3R8%k'.;X/t76(iNG?Y#-i`.<qGS[>-P%;MaV5'h+2s'::*OU0(Cup`_UrE(5!NM6R>%&nU!1&J]3%'F$:,qOkp46o!utM9M7)(5s%U"'O^X'KLP(63&ZU(CC(u8`aAT0U.f[%NblB6#c5P^:@AdY8k9%46VJD/8+:AG'XWg[7%5lW"FVQ6051W4Z$6A(,)IWlC*ALtYAfPc!<OERX-7SjO\u6-ot-*_&rK9:Y2GnN%Uan8oVW=No=-4Nj!+L4Iil;$cb8$g+)YkDA7<D=bc);I>]+70.I#F5B1TA)I11)%8gHZro?VXo;K#mqC!7=2./Dqn@'C\1QIYTrA%."Yjt](.1EOsRd_.8"3uUo'AIM:IdO%uY8`MeV8GZ"$U(W`b7#=$R[\<_?mF!3E2W/<BtPQ7=W+"!g6)7mIu8e[)Xc+=9^L(+DsE%OjI9m%@C\P8'\"5OL0kiTqkiG+pSe^`(*C`qaAjXEd-SdFTA[C+!oZG;Uo*LX/=8A.IW?ZN[u.UOL15$q*6_UV'$CQ']!4rXa&p]%A7>qsL7%/FDokD@b>h6)Z8]pG-.eP."AD9_%>I8p`tgfj6/XJ3/sFAc6H#[^Y2X:0PIaCqe9M3SJ"X:n!5tc0LhAdLD!;_5"G#-M%7`+(n;V.coQU`?%2+C.\R?W>[P)6T#i^XT6PA21"P>P60LF=(Y(?mL86qeL4(aXTGda19?#GN&X@hHR]6m!2&&Cr%'D_+4W=ed,C%4f4rQ61/%#)L>*a(]Y,jW8n*`FWMKV,Th83dOHja!/\!YmXe>hYUKOiT)p/[X]a0oPZ%YaZ2?:!#)I*H<.n@X*#$oYFSVGN,\F`[%6'Bk#,Sk2fQ(P`.1b"8nekAY%F^lJ(3YJk&!+'J5/o^oi)'0nmOd@rY@cCXr0rq3`i_/ECT%(t.aiLeL=XK.S!/M%R*f+T4ZB7PQ%BWT(<7kJ>L&P.,Ngq_2EP&W;$7;s6N%Y3d4g#XI@AgA=`\7WuCT/\#9+Aj4jA89?J2_d(%c#Q#gNsYkBL[:?KF&Fm.BI7dugCAum%`gkQ>,`-Ta@grIQ]/coV".L#+'!nrM6'\c_pdS.NDRKW?hN'\_D/+G?6d3[W-FQB5\b?B'U)-_&])hf/!0EYC<%c9m>@o1^APd.n%&QS?\ggO\S!7F.+6&dH0OP'G>EPcb\<L1T14/E`F(+7<=jm)mhM%pKA8b))h!<feaCEVIHZ#G:Y1mMKr]j>>BUpR)<?kSU#BV%N[%)2Z>db(u:Jd2:]\r)30+#!3ZbP+oO920p"^T#8#X(=`O7p/qMh4GqcG-^Nml`!L8]&gA`JD&)Rh8k_p:*gTAQHP]G+!_:7`O0Y00%PL;d+cK*se:Z;^)@Tnnp'1EF9RS*gV.']_[?=IV*8sZ`8IM))%Xumu_ZXbAq"eT?$bEWY^(1r+[I8TVWU7i\BncZ7V/O6U:$S,VC%]&tB]S6YCqLR!ao6'IcbNl+D?``FFM/X"m$`)`g?1dH(m*>aeAjh!;rW(TLi:5s\Z;S2l`F)Yr1pOC=kKk^%RX@,<(l2N@'I!70Q%NpHZIo+'pk!?$\`^&RP]5LG8r31.X8AL%1$&0jXV5Z.e47Fp5V<7P0Qp:Zds7<4WC+>B^2TA=q,G?=79Wq@lL_O;oDnc?sV.m<"^%FBMdldc=1O1Ng)WFE_Js/7`R:(1&gV*55ESEWGj9R97Ue+1=9d9[iUD^F70Z][lXj<)_,eQC5%gdZ8dK9cscKc#>2>e`%Q^`Fm;q%i`dR2jE7$mEM8&,`il",H?`</]%3!0F'!+R&YJOei@'rF-nAZV5&sor8'SudLXoB$@L<HY*A]B@ih`dC;NV*/-a!i\j;X>21GBo&%:.Aj<N15/kleK]:N-J9'7:d)NMF00S^$*RrQ!)e"!p!A(O^@Ve]8GG\/\U;]^1@1$Wr1,[X9g(\X,,ELKu'KCb>%D%c%OV31M:=:%j*makC)'`u7Z55c"J"74baO@p6o=Bf'=44-<EVc0%BQ<_'CRO:/Bl'0!Dtg40u`>;FK5\^YS#&8'@WCF3%tG=L>l3DW?3L&!`sro%K=r5K^^Mj\)9fJ;#BJX<?ujT>eP_9Iq7i?[6>;1BZB2f?p:%L#WNllr4ZA6Ab^e%-:[Rb*_7f+)OH.&9k"Ua:&=3#/fOee9o;2hO%AfbnkQ%!W#;lm"I:JVF/X.cZ4RoYc&DK*a!`CbVI/o69"/QR8C0uB"&EZ@mMdA*<[b'hOQirO,79LE$<+15XU[L,5k/Od1r$HD*q%hU`22*8\"/K!G9VaUGY!QJjupI,#8UR\:tP(r!>VaiFpbTp[;Y$/\nU\pbm"AHp@b:LUhcaWlI<c,<kT8$H#o^#k;@.5PNb1`Y_A%n3[6RWfqZ&NQul$M>Xhi2)E$Tg]1$NAGo`KiH>;i:,g]!lc@ot37=fN!FK8E.qZs3*,1\!^+f^j^")X.gh=Bt-o*/RDk-Y2(OC1.%7/b*)!XIQ&Dm-&-iscU$R8TFe0!nnS:,cEkPCeQ12HQ*k^@@4s-73.u`*t(m>_a`/#"\Cr=1VRp:Z4CKdGTun_KWG7LpY$C2D%7_%?SN3I/=$jJM;01peC>hk\Y6Pj'9CIZ11jpc2EYVfn+l_@8mu<.)V/T)-;T*.JX_KFa<%O0X*$;8KGJH:/%U*&VoZ9?Wm_CC.I&jO%);s+b<"#mqME^O%=*C4I;,(aO?5Vbhc,?tDR_kI!:>eSjjD'!@^&7u;RU/s3e0UQ?h,eStRYb["_Mtu<dXaPjVXP$.DR9_qI=q!#%-Dl,eIVkr%4Ig,\E"7JE1N;co'PfR;/!tT;dikXUfSV%f`?3@C)[k1`B"F60%tE:hF,bbq1U2)&3RiLLWu:?4l\.6S?d4ZQ;T#2O%FX#rEMj^SKX86%hRBS/LCK3/f>j*\)1[t#=M-qZ:>;%O2>tZP<L\\.B&dn,Na@n,d6(Z.kfkWI8C9N$4]^]r!'AL4WE3!7bQ#Ck[%B&F\eKT;Ifh04q.'jMsLH?DdfDIdK_%r!nmn>g@'ja"B2rQ2CY+D*GL6#@Fd0P2OMi^,uSCufnJ:6[VoH?g\q\GA1##K""ilm\FN%\l1JU3fcViD`/4\/nA21-Fl-ufOc?<ic;HilKfX;@:#=Ta=\tDE.cl:U0cJgqWZ'qR>mU+$Pbm<$_#$<n_*3L]6@u`e"R'6?=Db%%VlsVAGW<Yn\c>:/R#MN[bOt%1+kD8IF0k+!+A$.QUT\P0gqL+f"4%4YV97XZ8mRH0oO_V%2sYZ,(:;daU1t\_OUL9=9:ugaLl8BY%NYJ(ohg&%#G--5V9E@>"M4S^4b%c(LnTd@TM/Ata"KSHFU3VBmQ.aNX()Sp8O@FA$b-(n*E?TD2`g)X;n@mr*dtaF.Cm?#g_uH;.%$*P@,$YTUO.Ek,S`eEd03dD<6]:2MHN3QD?gWo?,#ES3;&0+GiOO\Td@VC`(MI4G4R4U,dQWK*tB6?+eWl]&[&7.n9\a</HNU=["%^j=LHqFr"M2@HOI-@G>L4H%R;=mk'TGiNd#C;tmO)+K3jEPW`h+:2SabZ8EaIr#mH,-6%@aarqlQ<D_f)<#5;h6M`=FuG$I)1HjA%0=_IPfJSm7/IZ9ZD36(V^3S6#YGd(tgQF.9o15J:Kp\Id2D"!Y8)kQhk/T&XgOrotaV1V+G?Z,(puTm+T"L/bEn_$rGid?$[<Zk*%S\tj\[`in;<CRfP5)*,SecJu+2fr0=+ciF`?atgA8D\CW>M(O'*oRlX>P<0AE<(pO1nK=BmhNTgrA3k2L3D@l;'pe-\i!i6`ZkfU%"kkT<OjSfBg!DaLZ.X$JC05^r'\o`t_bWSndr!bF3ZR_3/s6Au0"4PW_B"\Rb[&SNn<NC$;h5U5Hgl_8h!orf/BDkFZ@tYpBa]^o%dM=L(k8rQC%h%1_EMTP55CR*hcd0]rJjV`IQe0oG79dSK+(r@9*B,.7$XTdk>07%nS:0'1ab36:j2],Glspnj9e][1?#h/i$h<1u%O??166V`#Kl#b#"%CCXC)RkK<E6:b6.6X2Ae&/SD>S&iiCiIPMB;5krjb?9JJaUi94Ptcd=VVt)aW#R<aD)iF2mNlY)0F%.b+\OG%D;8mBV%MN@k`W9i?(#fVg![Ym)Xp2j."A<I1t*NgE3b;_NU1=^ApECZ9/l*tf`K>`N[(,.?&&Q$X?mj2T.Q"]hY#6:qm2,L[HNUV%ZVO`_NGG-"KrCS+&%fOn#Jla]ZKR@M*Z`4`:2[UQJP/bp;d"4aff#c/p?;qcp0QWuasC]`%]>gk:<AalKgsNMh(^;DZtqecUg+YU%(tQO?.\!S$R9=+M2()V/J.q0?XSCpPmsO4#^V`-?Hl,,%m#*q(U78kW]8;fB^,[Xq"bJO;8ET]*Mo<cci0tJ5nilJH,4bNpQ-3`b%7^a+<#Bd.0*n?V#".uu+(,#1#j`4$XC0l9B%aSf#iX8sjNZI!0iHa-aGip[[GDT/%]f=C1ZL,9=9OQ9Q)UVnYE+UVHgoQi5`UM2Z%q+es]G&5cN1rLqg[QKU%>2SM*Kn&ODCUKK&Hln9m9V_:IC08jcfPH0U6nXdCbfWU_B2\d7]$3SA<%ES;fePE'Djj,);0X(1J)*-m%`%P`^/J5]nirHKq?X6Cf)oEJlr@f2M(Iuqs1^*Q>F<XI!@i0e/Pfb7U=*2c).kH&uYDmO\O]R3=[\o,;[#-U=%nL*i<-ng*(+fl)%*(\Fqcb8MFmgNc,NfHAZ8p)+63[3X:-[tFk@rSDLR:bb:k9?pH4N,-U%L+X+pDA1aSkksc;7T2]QG,<5Ydb!+)!i/;4c-ds^<P0D%n3tS8as:1e(LAIoF3cd#&n9+/OCUM-;&$13d(jp[%Ski#'%8G$3_[$U.rQV2!h*urHO+"aH,5khle0pj,-1)#7llpSn1dOOS<k1e%(Uj[jgp1KV?&TgH:5g(#G%2+]Tn-O0rSm*On9A`r<geVV>N)?7Opn\eIBm`[OP*1-1(S"WCeeurE*KRATF!-!XRV^9C[2s)*-9<S%WHC"S]\[ES"Henu?W!/'2DJe3pTS?-1*tO-^/gf\jC.kDc\NeV;N@00CEmbXRgGO"5A/])M=((M=sH&ZP-//1AnZ:mqdm7_!L%,9%c4UpT!RQt"anrZCn8Yj`-#4<<1ef@/?-Lf/-WRT:pPd;HG08@^;n"9@22as@?Fb&!f1MiRZC-(jbgk4]Y@A0NN]-F00On&PBFDIn%;iEj.g/k)NKQo.DgggtqGu9r3p]b.gMt<&]Pnm^>5JFuX[juaY'b7bqLiQI.RZ27S%AB(fQ'j=q\`Bd-40uk@CYa%,EB_XaAW!>%%r++;nK'HFS/c+.[WGm]L8jel4k<-5^6Sb/pHs1#44RXlFV0Re1LYeC,T1NI0OUn'.WJ=QX1XBH=3h3mjCmIOK4F:cSkAI`tq)5u4%)pV2^XYUid*@b6'nS6)4>A$\nRh*!R]QeVFBh[U<T$so"2kI:6esRT*Qc6t/?>Xt!#?0\$NG=)Kns\$rH+dDCXkSY*H1kZ[K;nF1%1PL\!>0bNW0$flA2OH-6:;iS%KQ"#nW:U8pOYKoqfPI-7^N)0.pZcm]et\Hra+bAKMei*lKl8U>>\[+3YG6eqS#ek9mYXR,Q*#!l%>HC(^<d7hGJs;h.)Y8>*nb4(4;1t1[*+h%PG4]5L%p`5]P/TJXPmmZ26DWsYeKX0XB$Rs366oPFRgkWRg#f+cm8n>%ff#mnF>n"O%,A"Tg1%SIe!SMX^,K98RmArd/94mImoXmicW(-(IJ4_*XFW6NnV5:*&=c8Lf<*O4D+A2eIemlhjhCM2qm]j]F`[nAOC!?KXE"3r%%?iH2Gp3s7tl"sc=ZZ0:'0:!qjfph&3F](,AlB1lmWh;$R8sCs*aeM(W(XR0<gmRoKo!Pc1;=g1bY^9g+BBFq0Z[Q!Pra&_#RB69l%=SJfe\T_+p")jT6=SB:I$X/uY/A,OTo7#<>:"'J#5F5V`Y:TXr8`#m4]<VZiY:T[sC#1A@56W8a4gKQ=:@_^orL",EH=cn"SUP5>%cgjgO(6j;l[_SlDrff+YgYKg$aE<ZZQ<`)1b3`".b4oIZqX7lt[,.M_'QPdD\\f=f^1_Vcr[nq(($;dG2KClYK;oWen9)rk)R$Ik%[,cHpMF'sr`WY4"cI'9Y[%(X"1A!WJ$KleBk@ge(^!>$B3F>jJ2knIojr#*hZY'[m=s2M]at6G'T1oZ[-+D$523Jk/\)2HWOo4g>%mi*%,gMbAo_.rk4o.*'RXQfN<%AQa:^N-JPQJ8<in&/ts)2%.:-204aV9,2'm-`Dd!]6D7baDK*I*aX]0orKf*D&N&nK#?I.)$ef%J/53SHa\Vp'$tH8BB3OX4l,.-*PT[f]MVb#($62kq("BK!"fd22`k7fq`!u=UK,AWFEK%i^(VRFM86]`[T$dFZ1KVaW5d0&:F?>3%0'OjB_7K5,5.[3-j9V&H/bgnI9o3I#VDuCF-LQSHQ*>s5r]]`]115">/3E'!As'8aA&Xj07^GD<P[,U[O7/5N5"\)DF(NYJESM9(%TH2iWQ.+-!&&?r!*nB;Fb%^1tMg9]:'lDV*QF=-ZK":fif@ephH7-fHc1Z5[Ar.?'EM_A\`s&`3(f+_9eBkU'>;cbYVB2/#;":@P%d)+#?agon<Z@q?h]Aef:d8N55U?C1aq+Ar`%VF`Oq']3*WD_L*#.dmi4jS>Knu8t'ATd7d(6ZjF&@trs4i\(P`GXl&Tmte`*'I+.%]B/7MJ(g;R@Li[Ld5qb!P"be/f`J+7lN7qSk+-]C@$ohpV;X"1pubqh:E`kG4.fJG[@*>C.g9OMkK\9q-A1L,c5`-tUp^mF)=]WI%C<Ps()*W@>bAOa,(:>rP:t]YEB?1:GL!-=o%di&>@i/n!2\R6K2Q9CG$lG'ZRuPg7n!4e'erA!Pn;Gub4["R)1^aL&r&\Q]TSPhE%#n=[*kK6W:(mOQ/Xe*Q=*WL,WUQ0/nXH+8U,f-b%Ul^)fATJH7Mi7E&-ADB]\ig=_>e,;'A:q"LkEPb_Pq@O,$oS&Y5;V8ff?EP?%6d_NAbcrS\cZ]'6&0bZPCt_%.L0Q3qok(FJ((P6`?%^gPAJ_3A.TZ:eZXL[d647`KUu0l1lMdI^iRjChO$!oZ\9.s;[t;D&Fi<,V%2pMV[J(A7A?n:'6Ri;<upCX*2.g$d/X4LV:cX4%XjNhJhf[T_0D#eo\3*:_&M>5(:OdF`Dp!::d5ePcdH:ls9p4(Ih(i'):^?'P<%]NX1d2td1@AN/`M),N%G8]OkHSIE&Y(+d]\o_uB6T4f_:>R37#^-_?sft@9Xi4nP.:8C)p6*W:.,l_O[iGG4I4;?m;-C3`<]O8p#%&g3Mpa!H%E3'2cQ6hKZ"N=?8+s$[uU&du5WNun`S[p0gl])N0BbsLB=H*=>f,":"W\l/Bsja+72qk*<m1Dl8h`J6la'gD/#9s0AV%8VM@pdL1DKEKX>c`FhoT$K(:(MqW#fClNBK^2QlRT2r,GVMf/Y!/&A47*?jb'n%mNo?73d7&?2ZB=Lt:k,C+WZ`P';/acI;jYjP1%mfC+Y(A(-"3[eXY;WA.,J8>;TI%A5Bi1+FDI(Xke[\Ja9P"E[p<,T,',d<eL_Cl'C8Gb6q4L;6H6lOEh'p`g_F2-<biL$Mg\7Q,h%4@QJ3><(c5D=T$0mVXNnDhUV=&R]$b)mG!*T%VV3+r=oN3dG5(<,AJU6dYDJI+KVUF(P[!M,l0>duB4bi1*\&QjlleI&WZCFmYJf%>D7-i>9UF8hrAtWTJsC&Q49.!bVP.Yjs&A)ZZ?d#(>Mrth4R2@`Tuj64MqRYnk2V8k*_LbL,`m,Ib@P7nB+dV2@`s(^:pt.H[]\p%DmkOifCS3FH!gKP:!D,q>J.qHB*lQ40@&]Sf%&=Rf5@,$ZcR!(_b%mWL8FL3$lBDs1&6jl9Ik#-@9G]-I&9Zua(C(?br%(J;V[l0%,4d9cM^29@"P7f3[g&E1$^j;i2-:(NVqBrp8moqLSh;8lrU+L-"f,X?9U!d6pAd2MhLd.+6^@eWKTGWG&`["?]e\JNm;WsQM&q,2%oZ:?ro$KMOM8q.Jl7`U9Lcq^$Q+=2+n>2Lh$h4Ms_`[3VcceIreb%(uKF>qLGPOANR\#rHB[ub!iQ2kV[Jo)5g4Oc/(Dj>GnjaIV%X:^,-]pAn\jss59j0JKDmq5E9J!>-0Y\_&GCfpldXt8nE2<0DXG\=+tV/t3PXN%+.Q"Qo-a#@N(]/l;'=3eA%Kl[kkfmLgV/)4e#%d^eR=^PI&>l9%p7Y4<kOIqt+AZVVlY_:#m8=2\;!QYGu8E7nL'lst#>?h3/9`',<X1uoAl>W)uM:ngaB0/GUPi(,`'qhR[^jhr4N%AC`"I`6MpGjdN_nef:7$ZC.k)P!2t?ZrN$8V>^L-l_'j>/sldg[630bV)&7uAPFeIRoV9;IX#?Q4pfo5aBq0qmM;/7$r\&mV;gTh%.u:UCFO'Gm!k%sf-qA=u?-cZX\9RFeCl=3ae77.co>!id\Vk69-K.MOo(P@0^eHF%1E6>i*q,(mgL/i"o^:f=PNDr1_EMGN4L?kH%RnMm00=&]r97>LI>VK)b[dI6OBDi3J((NXj]l6J$",IB_N*sZL;fDu0DIR%eD?_kl5V8`*YGEqV6bX+(^^RakaB3b/n&mpN5-W/X%NWou%5p1eEG$bYgA-M&.aJIWn#&dDKQOp0.?]8Ob)8-@9?5nns[/VGnP1_sXOgUiu[cR]L3.jq5pWCP#/p,52!$PIg0k_"33+V8T%c%[Wf<m.L!5k`#D].hNXBpl:8j33kFf66'3;)Ypkd`K][$f]B!&!.7h1NukNn&dV2eiN9B3-2Z$A#r@?8,!XibIOr_HWN\*;tdR]%l"h,!G]mSm\S?E))^ETF6SKISX1DJoOljl+mhV$tZ#@i!:3gJHeSYt5c6<lZc#Q>nIsWEIY30Wb)/84WIJ8[Wlah2$l[%uo1YSA\%!&i%f[(OfgG[62+GA"9coQRXDYim'Lo'8'3CV..hac@k**lQ^Y4`%unpXCs2&&t)O?K4>3?.K6N9?OfO+G9X-*1k/W3<Eas^/!@6%,WdF&c%7or<^cCJQ<h3cCpr0QR=*mJ,0efeI8@`HNdKMBl>.e0pLKZeehbN*+J>Y&E_cc(KJG**'#0^tZ-@GPGHS81!7XbAj69_J%i_oBBZ6AA&[oPfG^LHP1]pVO.]:m/[WRde6?/Lu-YisZJ`Mg\F%4o*jb;dC-$TlPNm\N;ZRgBI!U4lZ7P_!4N1Q_WpO7#ID'fNsh%^H3G<!?EA<c+re#NM/0/Oht]SBbM[iVmpE@.-mj$,=P=&/NO[FSQt*Ok,Bb*+\^Ms*EtoP:IQ9[;8Qq\)'MW)!A50_;8cD&i45(f%<sb?%'6]C/UFE3fC);L^eClGW:RnYW#U`'oJWj?W+HAd[3]Q.*'OFeED?>Mn[YQ&&fM&*c3`+IS/sY0Z*D]CeC&hV^083TO;(eUB%U;0\"-j0l=bb]8/PZK?P+%TfrO?D:'\<8i7`nJSngpSc8*"VUnS`'X[BkL/:;Df^,42p=@<iDt0`G4ckWP!BE]2qrYI[[k7V@[;M%Ki^U`8JF&rOf4LU2mmfT;qNfWSYi@:BgkR"?nk:O<+J=diR/dc$/7tq=),"0Uf52<Ru&q2&;d-#4)r,tEG7P*.+2fB!tZks-5(6r%`bnXg5anou>]B.,QF>ti&3B1/21Ht]gU2,N:Y71sE?6RIDC;IZAi4dkZrkh<-R`-7NcW&)=-U'b'ge4jRC:JY4if4s)b)^^e;mrf%Af&(1/E,./Xcb5D06"rHfMThp#:EZk%W_ZNH:K9n)RtqVlmS2e-?8h0G(P?Db-(0R%$`ltV/RuiLA!>a.bV'tNd.e'>f6mPB1R0;%,RM(N!E\>o+hO>A,RLY$1aBmkAjY"(/7B2jE5GIph$If1W@ZIYQn2YN\q%[;P3Xa13a'>#itE\,W]=Ui_HALDK0W6YKG$Sf:31-1%`!AHJV/W4F;AaG$01q(#5R)'6&X\7jU8ldqKbC*e0Ih4r*LSd>2&tR!qQR#URc'kR=SEI?%.t/LVr\I#l"c<kOG]G;@AgVC?^8d-%Y.[\=h3/ZajcJ'0%M<ki'[W[)WHNS\j2`_b>9r$*.Ye3NYeXPUJdWs>;)KUn#;O)u#D424C"GLCLp/+.!:=Ws(n1(j9U31]9qYqY%KdM7_UKg>c8Rd>nf.nBR&U']bYf<6H';aK@&U)D>!2[I:]3)9+MZB?IZ6q?CX.P()n>MmoekXeQb"W0SG"(A=,XQa\)D!&K%Vej2%cpG9P;a]I]C.6qK":;\.Z>uEU]#SX&$fRs,cNFQdr_atl13=VY,i'g3[.?Ehm-6`j)8b)b:r4h(<>T3p2A6ohaVU+<KKrttXpPmP%eb%P,)AnA8RSV)jdF)Ps1p$rq`!O'J()M!g9n/#p>N6rHfgU:BC>T:1Fucd]L14?^@)@S&=ptKioL28uaJFLp]`VV=N[EqNcRY-k%Um(6!!pkg*4E'NI<Va*6On:sbFMKDar:UWJI*jNeW2&UJTF-I4^+#?a9PZp1?'@NIBLN)jr(a5=2MHo7]#r.MjAcaTI8_X\ZubH)%dut#0GZ9eoaV#ZJiJph"U!cT=KLZbcPq:mV\6j!ELGW=H#nN;EJgENYV]hAqd'H(ji?:\!=Mb1":m$Ed<du;"&!`$.,Wlb`(.iaA%Z6kb(cs)`*_B[h.'f%6M3=nbAR4BHfO!Zt@7F9.]&PY6I/#!?2-<b1Z63Znq"!>AR,Z!&d3!Y^^$;=XnKG1j>Ui>m*";O\oMP.hC%>QIkbR3)J<-ZB5siFIWJ/=_e6TnUT3&Qh#$,m"GrVOfc)q#/,<*sR<hE6Y>(IUVN[Ehl9kOu/"*`1_khU-X<m4@!>+icbt^I/J0I%KTiS@SFCO@L_DsIlUWkS(3EYX+LW[=aT^[8,Yn-EfMjmZ=p6nE,c_1uHq^Xk.+!2Y0]@\b#Uc-9'`j"YP*$%b*f>4E.%EO;+bb\d%_`$pG++d$l@T3=A:54XV_BU5K6jf!PNh7gf5jZrkY4-sJ"&r]!Vl6"3I0q^SM[1HRVF_LDNGiX-$BK@\L?2KH^?kKl]ZN=L.c,lu%'ctMtJLiphT.kE36_S:XKnlIV+q*.("&=h2k(1U<\ACV:m,A?_FVYQoGd-QiiPIqpHgue[<@d'j0\[7>],-6^G74eq6acf#$kK^[%&7Kf+!%5YQ:^OBD_ZO2@5StOJie]<NMMT"`l"bO^LbCld"qY-d8CoN/nA$D2dS$C_5RS+9&dg3QOLtd"GUPU'YjbK&S%ulcWP&EB%&#Iq_(*8fE[0-ku"I7PCTT[K$\O;-q&RMt7\g+_(=*9ti_B%0?648#17M&b5X3OCPiI2jR$#G9@!!t74Tk+d;\>t2a@,[-MJ\]-.%`@mqnG8*?"/_m0*'jJ0m[jSJ#hoF+E(nh-I+:EDD7#NTi;2iT54e]Ar$[8Eq5o8qs$t-Apqq6@_TZbB,(%1Z&<k(qqM'.4UTd$RW%=&CfY_Hd0g@>4Rm':\RQc5sWO$?qb&$S'r^77U0_HQs;=(gtO\].K\mp1=c2/S2scdE$tJpJ)5JW,S*;6;ZXD_Im;2Hh*S;^@,.N%M"/L:F_;79h"?%1=L]"T*I?bK7A$g$?+E.-KtC;[_?tLD^4d<i>$!(P(n?84$;1XnXKYrOJqXl3%BqNihjmkXd_$*l0X'8_'crF&%9OU8``>%Iig_i05N<,n1;#*Zs^()p'!b_E?+poQIP<<9<,`*l'ZC`gb_G,&Sd"Iltl_4\EEn#pZ2Bh\QQOl2X3N6u7/W8T+'Q.'q%-`1iMQ6;%$D6*A17,`<^C9NSh*db+V>$L1bTXCu!eM8H$%bND!`D'Y^M8DtDr$2WYRH.dkMq]Kf20cut*!YqdRsKI7-eu"l6p0Fo%RRH\!>?7b[-eo2N15WlM'*oKoW^b6tBYl?D$_Rg8/Bnc$\0X3L1uXbA9@8E^h>rfegdi\'9=VC=/E)?QW0;m=MA/JlDFnLA8[p3%%O=]@VKaV>r[uptgRW(nCP\@p.3Qe-([jsJDU^=L\fu+A@Vs$]'iKeV4U'\:[$b;:VQ0&kD`:Zkr1O6hp[HulZf3<B>+puqmph1:o%Zd3SGKkj`<Jgjr-L*NR7V-6GYiHh/k8JJ>S-4)&)(N3M)Y\L2"";@ph:'+,!:),,`-<sL"%\.L/kl?MQY,NZZ::M@\DrQFc'#B57%Y)5md-VONlLBAr0HX;d6$J-h$'2Z1gTUnF-RbUX=Kko8>#UirA<%4V^4Wq=($J-j*"&cWUgegW$R[P-<KknrT_R*>qk@hpN++RoH%L$JbUAo=Y]]oeu)<@d]p$J4S`:B^j@Gb-`e`.PkB,p<d#$^Wr)/]#:M'taSUQfHY)U8t*B6"o4tJB%aD>Rk"!1L9+8S3'oaXLtWf%$^]peM(`*HaX=rE=m<7`(bR8["(A\b.nbQSU*Mo/_^/m^@LSSS)?OK[jNSgiE64S8SDc49;G#/Q;3/?M%$rU(>iMOJTB$EIe@:&c%>Rp$Mo3[4J>#C"^iQksAQW1AN0jKAo-"FFj>tVtQ8\tQ8_^.2`?FZ(90"c-p#.a6?KfjFmL!,a;i:+u;A["K/(D>GU(+p:j#q^O9%[CFT#=&u'u/pqBhQ#P\4bNf0F^=)HX/pubA95ri?'c;N1?X#IIi55*k*s<Co<\gib(VWoO70>/iWW,c2Ks-p6@cE++><a*PiTllg%`!]p.EOs'r?cNR&?MMZ3'C`k?9$N&+^.&0:M&3mP6Bd6B^/FGL_!mU0/d*$*P$THMn9"_t#oLC>.PAO+Q%D[1L+e7mL`!jhh(HY8%PuZj2$ss6lQ\aTNC%gNp?R<`;BD<t>GS0#KauQ'(kc:5KKo<[JF#<Mu4N7Gjk;pWj#CWEOODlSbPN^4VbNr&h.@W9U]^rd5@!nk!%c=t2fc?d=$7[tnA$ehgfj9-'9R!5hRML'7hdtb;=ZY@9n('C_0_!&q/cCVCOkF*r=AVJi^Fp9+,fVp4,^)?e,Hfg:pg9@hR6kEFL%cB1%L'uouEeLX:!hO=)"X[X[;ONjaW^3_n"kT?@0Z=*bMUn_=fXC8Gkj:'VD'2;#2^<$Q+1P"cM4)*J\%F7+Ya^bi"T7f.@Y_LCH%^uWJk[u%.4D:lrW>rM>i:$Dn._t-WL1l9,q2OUeJ!A5meK/`/YSj]4qcfT$WJkSO?I-7UuhQW?62VFg6qnA6G99&JUoe+5fS$Phd%Nl*BUo?fk\YSYCohcZ[_4#X#gekTd(@De*_iLs9fC[\'7<YfIhH%,mN]aU8:eB2h!-1P1>LE109nN"P,S$*EW%6N-o8'tG=SaY^Z%%=>'qQOTeF1J+I'V:m_$"U2nmk+uirXF3?i<NOG&<<.dpD3Ege'PkGe%QiBT_h)@bSnG^B>W\QC":dNKKN":Bj5&$EGe&"@nPQCD%cLK;+r"r_!`t*8H$FUU69'#KjL6&:`c3I=Q,/)_1d[*e2XkpP')g:0?#Fb"l/i\#fN-@VF8K=<`hrI?KSibP@,RuoaK\(%G#It0d%5TFqb"`FreN-@nYK/i3gPHF;-Heo+9M)ai7&'h)p?KCJK6fP<p9pS8\.3anL=d7A@M7u;OPKZKOLE1-HX1p'\ac8o&%_FElaThN-%Xq(82mii\fUo8#'7F3+hGtR;)l[$(i9he>G25B$[d3`)TKVBfY"N1d3h.5c>?pH8PP;aeJLHF.Q32WF$fO:+4`NQl1j0M"q2^OJ_%iK/R"45#9#kbc-MT>(L>5Ag0$pd7Bfa;f@D(jG/c`h>7!M8QJECH;HS"S1hHARf2j#T\*a)GWDg_io,_%ga8J/)a'Q%_HEBdWSGG%p4Pb1?b@#O7-Lj*oa36/eU.TufTg8@RLqUIb.slkTP[ZIL7lGE1s*!&k$^=n,)9I3aQ'#9GU^rIjKL-W09$-PUUoV+EnI4Q$3(0r%-V8nX%SuAB59t:%-(Kf=#+[-T>p+pc;PmO:iOMA2X?ku/@'c-07N>oofeQf"f!$Z/aXq@o1a]'*8RJQJc_:l\Fr#fEg=i9>6!9^r%!<F-_SSf'tTkZ-)lB=.h(OLju2sfg;_Oru5N<f@S:_k-X@N]s%ks[:]k;jHjdM6,7.6<SRQYpUpLKuRXb:R;qQ&+d%YFPT^bi-)f%:t;?o^625Qka=)OPjhpKkR\NUHjgQF*$c1,,iQ:O>fqu&1_%;2#L*B0jS]-oK(16BSgfL'got"O/E)k,L789(*)I<.'g?n@E5h\K%5apK6h:P>UCqtcQW=C!U)kQXrpH`N`9O;;GL)jC3UIY%H"Ifr\I"G&u)a9AiKFJ/I5rPti(;IBd_2p<PKS##X96Kb*2Bci1"Ifr[%I"G(K)Ep.o/E/n1-A2i#>RJ?&P?pQ-n-LurDHII/?k"J0K=KlNRLhE*&iYUc5%u%U%A-<-!f'S"#B^(q,p\#YY:S[a#etYuqFE<d%$_'s8LTM/?ES,Sa],c,=LBR[64Kq'\^TrY$EkmPQ!0O12aPl`T;58*%=sAan!Y@>](Wj#(\qFT'-cmW)_`8CO)*[3k3Q($m,%p\@%J)h$1*#!@IchU8[n2]ri1RoEu;MNLZLm6l2cU\p;mm_>Pcb#L=i=f`gddW)K+_g`D(*j?]5)$)se+Wu^q".AC%A/*.]]%>sOZ/e:%OgO(=2U.#Q%A+]-[,F%:I6D8]Vme!iq"3i;)a8[7BuB*iK!aM.=[Lj3q91"!pj=uN2EXn^/)KcA_'J_3F!`lc*'PF2@LaIj<\]Aj%#I'T5a+IRFiT#JAmdTc)#C#rF*f)njY(W.*4+&S;`#W/crd&U?O2[$e_cl&U3d`K36leH,9VN"=b:6AEO6%1V_d&c>3IIpeKH*2,%H9r)`CI02"O0taE_i%m>dTL.8,S"UD.cg*(NWlFYY&3@=),=k;b@V0qF4i+"Y]JKF^kM=@RO`L]LKCq:"*"$;oa<a,]H$u3X>^Cc%LKAYa&9)m!CSu-ha'4IP_g8d(DKp:-NeJEY#o<SZGkH_i'0!Q@:).U?GV^"NpiqE)DYSJ*'6&2UK`>NSSF;HS%I<CZYi4UO<3Y==%&q"uph,UCMieEM<?3,g_`mFo/?IE7.E;4\&(3'%n)&I8eG\ID%Qn"X;#B4o^4W"/=5(Wn=%^56),2ht59W`i_7qb6)i?O!VjR<cD%&9<#4?@r4fY65pQ3.-B["<:aYE"d8:AbCe>_acgZaPeB3,O"V/*s-W\La!-eX@SPJ_s<Ui&Tmf(>:"Cd;Tpbe_s,qi3h4U'KFVWo%/[<22HTSLMJi*WlS8L6i_s(&44IgE-":lmD1Vps82&CN4Ldh_69\.>kJVSIG5G<jV@S_Or5!l&3&+;'"&pedE3*)c/G;a[ZH?c@>%!d]*tB<]1h4*aI'*^7HZ64Y0sA>"^=TX3"_Rsc?r*o?i4)K)"LN"6/?GTWa<?k;^"dY^3#Zht:!iQVuqOb\u_]u\)]5[Wm:,OdA[%n<"h)H['24!O7D3h11ajfY`'toHAX-0=$/N*o>Sb;=*7i:nPiN511aO&+?'RAS)0+=2gmEn)MD7I<^sP-hd&D:ED6r5?n5H4ac=M%`#cXhE_Q2rIAM!/Hhb>GBU'TKIo;DaD_c.F*Bpc=iXXl!kRZJ-4-q\]%c?AY+sT$K'9PoXn=A'NZ%qd,m,@gFZT-b4O];O2ps,\J%kehW<,Skh'jp`^3nD3!f\<%NN#!ZQ-h`^M(A.RRgjCI<TZ\DE>i?M8Op@+U]+gHf@eVkl(p`@Q)-%5R68$V9qG;eIpJ,%;N9)RXP%Rci`Bhc]XRrpZI5I.<!\V.GY]_tQdYCs>X:,GF*-hg,6X5C=P@:@a2/Ho-F?I-97T#fLr$Ob#dAU?2skJbUWa+FuKZ(M&G5Wp@f1%!sW`Z6HHT;/0RZN;I(S=l_qDQ7ojVo*6<d#lUl1@3Q+e\+WG/Ul8`%4;dK&9/]t&qHB./g*:4^t$EC7pVlWC<V2Wid7-rGW9t%"$%\oM@U)KAa*aG0[d4YJ0r`*Suj1`fgOA^P,:LsK6HdYOYB#SV!X`DWj<aWpKd,J&cSqPosIG@lc0f0&'!ZAC\QYCPp7/t+>n]X;?P%=RiLAGf44QlBOJ@YK]Zpo"@o:L$pTo=QLH`6t3>*9DU=lXR64j0323:K-Q2jAt_"-Ok=I"83F?GWfjDFnqa('9f@)R@i&1oLqS7t%/eC7mX6dE6BQf-^?_W@O?k:`("(PBla!W*a>$gs4@#:VXOr51dF1m0EbD'>9%I`o,&4\T%`kP*c3h?O7gRUng/.?Mt5\dpVQ>a>X%mq?p2.k]8+=%TD3H,NRKWGcYiH>:mcXF!)aPS`XlF4-7B]LnL?"cq;o9+r/$]%8L]F!>VRWTn9!HPKu]H<^,9,-fb?-5IJAYDJ'o%BM+NCigYXEY8MWq/9-pAb(@4V%/C-qfSb:%e1IbKc&TF>'73SrDMPgT`&\N*lp](PY+gdk4036iR18O-GS2m]Z2gYb]i(7JN#HKb%_H@tgfM"Fh'<T?1QB_&%0Y$FPo7s&?Bi5cS-U-k<M'lUeqq2NV*;/R%27Dc!"`9JQUdemo@qjN51Y3T=o<LZZOG$'^M7jh"Za,?[%@H>Z"'Ir17Y`?`"I$cU;*D-@cTN7F`*@s'$S]Q6GWE0Y2[o9PN@$.-b=G46Ycmu>VM0NKr9+]OPVPRfN&l+tF$_iJFSfrdW#R_c^%K0"^F`!;b+P_0NBm'75KK0c'FJ_?XE.:fW`V.QPQ=!=)Y[0(&)W?04t;35Nk,""2,MJ*8B?B#%S3l]lh<ctoa-[tW\DCj].8L/J4%>*5qmEO$qMU2hgX6t?qBmV'd%3b1hW.>u?Rp0QcH2qC`EnYT\d7gmjL[Vm=R3+Q#KZ;&m%5t9_))p@MV@YmInKd5@@#F&OM5WQi)%1Lc2.2l=Eb)p<GJJr)jM#$Wo4D'P1r2mm-oq34,X]B"sLJmCuQL@bOBliOaI$aaD"T2b/Tg@AO?G[_KW/QeYd96oF/6N9R&kXG/H%C,Q,i]UH4K!Yi9/O?hQYlEPaG:A%^i:D$Ij;TGX(TH9:@;OHIoZ56&>MHsGCdmHh!+i"eh3-:Va-9ILdm#=_5YnWhI'HaVW@>[E8%WmMsEc%H?W`N-=B+!JTH<lJ`0[(AnF-`#BPYAeUmSV8n$hh6A9j);jMLWifVQ%6=V2(Sp7IT<4tQhN-V`=i.O;1*&0Kd^7jX+V=E%F/:TW`_c2;>9s?.&(NE8`KE(d:E8)$IF"b&rS/LE]KPuo0s=uZJeP>ZDb5Tq]6&D8!ZGC>cA<kX)7[Be*hLm@JeNp8*(LArnY&&M%SG82D$Vl)JfEEXGWB2!1K5`q%iWU_oK_#6Z]=P`@]3s]2CU*pSLID.h!#`;"F<pr9%]-r(`!6Z8Ht!<bn.6p$Gq3%EPFObO#J_\s%5(U-D.5+o;3M6'H*JdO>n.7i5(,A1'ie+9S5&n@Sn=(5>Go7)8T/](Gg<ReH)'C)p=?q[L]_e%>pZ#n9p%[/=H2Qt=ci5OMIoR^+%cZNG$Yl3U^[6FW\r3`jq0)tBI5C[l?rp-=ArqP]<s+]P#CH][sp#t"iU20]^D-^N&nGQ[SJ,Jp4nO95m9ARo[T%DtN\qR=4[pE\:%J]E3+a&c^8rH?req:4<poV1.cc!H5+4?6b;$E7.?d^53ZYD9#GG%ja1/T1;-,5`4rp4_dXI#Q"_djt:(p:P4:k<J\3lSeHZG8o`0%>3Bs)9p8Q+]@cj/[5`m]Q$J>6UFLDtWUCIsf0Ai,GQ6uS?*<ATNW9%O:[e47r9E+f<K"UshtbmMIed7cjCs$h8O!%5It(N@5PtAJ%hgY01X5lZnr6l1E%,\HWa$!PSpErW7,<#0WcKfsMP/3W`O81n>%]C6)4NdpC\Osu%nPt*;C<\8@4`7m&F^A#TEgLqk(]KH%T$N?Q%*u=,.ZZ,KbLQOMf=ZOA`6DHdBMj\g8KmVJM:qq>R_u?0Arn/rSrqX%<s"D._q"rtHp7!_LrR9dk5>=@h5(;,V4HY-dq"ZRls6Xa=%q=Wc\J,?^IJ,K(sYQ*jr^]2//rN!tgH>`L:ci8LE[/#^iC")2X*6hi8jpd6m?$$%1R5Z[sp7*I:a(=U5k@)9ZH4O=cqjuKD4^pJK%U_qS@VDG*E:Rkk7n+$<[9WVZBs8'D%S9`!b)u&q.rV4ZNB5>6+4eDP.q&@48hf+!%qA^Ru6nQs'KKEUeDo/F4nY>VW35!S_^5o86%?hWMmSja45\D(A<jrG9/5G!-bk\0r^1QNUNVp%7d&!!W%:Q=pm9)3&"IGmcW:RC*VqbtQOL7/f`^!j;[1C)74R?L8S]jh9+af&pb%+*r7Q4F[8J4_$A&5N]:3D[A@.\8eUEkc;0Wo#K'C;_HYaeGbBN_XG"5s7%Z<5tCMQB&S"4nQiE$fj/7/k4eIjs8$$/B?f7:g4%7F%Hk'I7PVl'k\9<;'?(Zb=P&Z_:'g24s+4Xi:e[KiWJ"PTfBmDlg]=k:KOOYm(hkeRQ@TTlr>>6YT=/<Y0brJ9QhFW,jTf`OsGMLZ;%?+&mQi=7Finm$E>HQ0]QN$O.gb3EnP@j#@AZT>S$"NBTN]l>#R[bB<mm193ke(8*eEJ6URj`b"*QOC+B^]3oOs.P[,rpnrrs.!QM%j6(plm?_2Zb;[34m;j?EV_>d`nfPUAeX-:WT7?D.hgYGMIf>g\YE.ek+00e+Z0E\VX*qjiqBm7uI)</N-QHp8*UAn?,_+n6m/IlW%o7nDCcbFsMQH/1gp-TjA[k,;k3\**qc(65:c15H=d;ET(pLri")`=\Bn4dTlpo[b:b4?)%h!3-LYP2X9PKapUI6;PCrapBQfGtK[%[c=kPdbA.'n_NY?";?7""o*OBo:sXF]rK`ni-F`"BCHo#3;NRCH>]!\K9l,ik>lLkHG.)bm$jmKIQjHGV#"\Qp"1@IMRMQs@&19H%n&M(!qYea!++<jBUN\knXiK,hWZPG[l?@R9P&7&%+j4m!O0.9!oQl#MftTeUbHl]3hOc@^fr+642&PTFn,)Wfs8IqIHrlfH^0dCX%DfF(KPAcjbgF>u_/a(7%Xko*1H@NuW\!kt4^j5@]^Y[/im:1?&.,+7-1!nZ^pCl?-pFde@kSp5/(L:N8VX_r$[>BCcXGF>J?adUp%d:-3Y=_1f_a_GVo9*?8Jn)m/Y"ra[hp[MPC*5C#G)Q17$=im6!OL3Pc4jKPSp(PaLpFj.-kaClNPmhS!pO$QIqQO*;n$VGuKn%?R%Bs#J1[Z^DaQB+iCms]0IAu,-HIimPg[e@Geqfrf3dX8C9RJYH1Brh5FUc6'W-_1/(?`<t>ZYu5mbJI"TD.*oEL@T`,H+kt:mI$J[%K"-4:X')mGj5WWWfgiO[)n[(s^YH`IG;?\LUHUNMHF\gM4m3Gb\R,eb^YZkh5/#jgG5n8"gL"W4%n(d*md%c$R(Cfh:4)?ZMR^!0%j:K[\Vr;,n?OJ'gDS'6bF2-GXa*4gS&!peUf/p"QNd*Ckd@5.4m-7*5naC_?q.XKS=j;ZniA=orSnIA7aq'tc#'`>^N#8fn>ATS@%[T,+K88JCOo;Q=*7$_l9NSY(C?gl:S-C\]WSuYAA;r6lBjN_j<g8_h-kKRrB$"s6!?KQ^rRD59/Yqk#%ok>B=kc'VXZZ=ZBWqf]g%Am9:Z5/+),hok'8MN!T98X>q)UWmgJQ;PqilC7b&@t-Tjg@E<FdbE[R'@-S)?T_AQh:?j&7(tj%=0+K`(%cCe+P^'+<!tY>2R5Hk%L=Q+G(E:%.kk4B1CU-ZAG]4Y)41)>(-)*cLXk)fXhYagSE99C\4&`K<ZFr_'_u%HA5AWJX=>M*c)t#_6ULo[NfVJ(.23S'+Ec*bk%$oD;ZcFuf<q2XVUbCRg*h3Hb9O"!#64jKPSp@?H-J9TO>)O()Z\Bk3$^f^PqpQ87$4<ORrh.NA[_t`?NIIjKM?i903Du][;hgP4O%s7kU*?iKZ+?i9&e0>Dr0led-\J%g;Xn]a!Ne<g4/r6+-PhgYC5kCJ'WptbuLm2sUDr!GC_m'FJ(a1m,uIfZL\(W?~>%AI9_PrivateDataEnd