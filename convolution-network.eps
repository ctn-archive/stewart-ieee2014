%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: convolution-network.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Chris
%%CreationDate: 12-06-27
%%BoundingBox: 0 0 446 300
%%HiResBoundingBox: 0 0 445.3257 299.9556
%%CropBox: 0 0 445.3257 299.9556
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 10248 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD19FFA87DFD4EFF7DFD2FFFA87DFD4DFFA8A8A8FD99FF7DFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FD24FFA87DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD07FFA8A8FD%4DFFA87DFD2FFFA8FD4FFFA8FFA8FD29FFA8277DFD04FF7DFD07A87DFD0F%A87DFFFD0DA8FD52FF7D527DFFFFFFA87D52FD0A7DA8FD0D7DA8FD097DA8%7DA8FD28FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8527DFD53FFA8A8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FD04FF7D7D7DFD7DFF52F87DFD16FFA8FD66FF7D2752FFFFFF7D7D7DA8%7D7D7DA87D7D7DA8FD057DA87D7D7DA87D7D7DA8FD097DA87DA87DA8FD28%FFA8FD0BFFA8FD0FFFA8FD09FFA8FFFFFFA852A8FD04FFA8FFA8FFA8FFA8%FFA8A8A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FD28FFFD0C7DA8FD137DA87DA8FD047DA8FFFFA8277DFFFFFFA8A87D%A87DA87DA87DA87D7D7DA87DA87DA87D7DA8A87DA87DA87DA87DA8A8A87D%A87DA87DA87DA8FD28FFFD07A8FFA8A8A8FFA8A8A8FFFD08A87DA8A8FFA8%FFFD04A87DA8A8FFA8FFFFFFA8FD7FFF7D52A8FD05FFA8FD05FFA8FFA8FF%A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD05FFA8FFA8FD2BFF7DA8A87D%7DA8A8A852A8FD057DA87DA8A8A87DA87DA87D7D7DA87D527DA8A87D7DA8%7D7D7DFFFFFFA852A8FFFFFFA852FD057D52FD077D527D7D7D527D527D52%7D527D7D7D527D527D527D527D527D7DFD27FFA852275252522752525227%522752525227522752275227522752275252522752525227FD0552A8FFFF%7D527DFFFFFFA87D7DA87DA87DA8A8A87DA87DA87DA87DA87DA87DA87DA8%7D7D7DA8A8A87DA87DA87DA87DA87DA8FD28FF7DA87D7D7DA8A8FF7D7D7D%A87D7D7DA8FD077DFD0BA87DA8A8A87DA8FFFF5227A8FD0AFFA8FD05FFA8%FFA8FD07FFA8FFA8FFA8FFFFFFA8FD07FFA8FD05FFA8FD24FFA8A8FFFFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FF%A8FD04FF527D52FFFFFFFD167D52FD097D527D7D7D527D7DA8FD04FFA827%52FD4CFF52FD05FFFD08A87DA8A8FFA8A87DA8A8A87DA87DA8A8FFA8A87D%FFA8A87DFD08A8FD04FFA8527DFD21FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF7D277D%FFFFFFA8FD2BFFA8FD23FFFD05A8FFFD09A8FFA8FFFD0BA8FFFD07A8FFA8%FFFFFF7DF87DFD7DFF52527DFFFFFFA8FD30FFA8A8FD1DFFA8FD25FFA8FD%BDFFA8FDC9FFA8A8A8FD27FFA8FD0DFF7D7DFD16FFA8A8A8FD2CFFA8A87D%FD36FF52F8FD15FFA87D7DFD2EFFA8A8FD04FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0DFFA8%7DA8FD15FFA8FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FD0AFF7D7DFD24FFA87DA87D7DFD0FFFA8FD%15FF52A8FD24FFA87DA87DA8FD05FF7D27FD24FFA8277D527DFD10FFA8FD%13FFA8277DFD24FFA827A852A8FD05FFA8FD27FFA8A8A8FD11FFA8FD13FF%A8FD26FFA8A8A8FD47FFA8FD7AFF527D7DFF7D7DFFFFA8FD07FF52A8FD6D%FFA827F827272752FFA8F827FFA8A8A8FF7D7DA8FD6EFFA8A8A8FF7DFFFF%FF7DFD07FF52A8FD47FFA8FD27FFA8FD56FFA8A8FD26FFA8FD1FFFA8FD37%FFA87DFD25FFA8FD1FFFA87DA8FD5CFFA8FD21FFA8FD22FF7DFD13FFA8FD%25FFA8FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF%A8FFA8FD07FF7DA8FD37FFA8FD07FF7DA87D7D7DA87D7D7DA8FD047D527D%527D7DA8FD0D7DA8FD067D527D52FD0A7DA87D7D7DFD06FFA8FFA8FD27FF%A8FD0CFFA8277DFD08FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FF%A8FFA8FFA8FFFFFFA852FD05FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0FFFA827A8FD08FF7D%FFA8FFFFA8FF7DFF7DFFA8FFA8FFA8A8FFA8FFFFA8FFA8FF7DFF7DFFA8A8%FFA8FF7DFFA8FFA8FFA8A8FFA8FFA8FF7DFFFD04A8FF7DFFFFFF7D277DFF%FFFFFD09A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD09A8FFA8FFA8FD%0DFFA8FD0BFFA8FD0FFFA8FD0FFFA8FFFFFFA8FFFFFFA8FD11FFA852A8FD%7DFF7D527DFFFFFFA8FD31FFA8FD0BFF7D7D7DA8FD057DA8527D52A87D7D%7DA8FD057DA87D7D7DA8FD0C7D52A87DA87D7D7DA87DA8527D7D7DA87D7D%A8A8FF7D52A8FD34FFA8FD0DFFA87D7DA87DA87DA8FD057DA87DA8A8FD04%7DA87DA87DA87DA852A8FD057DA8FD047DA87D7DA87D7D7DA87DA87DA87D%A87D7D52A8FF52F852FFFFFF7D7D527D5252527D7D52527D7D7D527D527D%527D52FD057D527D527D52FD077D52A8FD08FFA8FD0FFFA8FFA8FFA8FFA8%FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA852A8FD08FFA8FD13%FFA8FFA8FFA8FFFFFFA8FFA8FD0BFFA8FD11FFA8FFFFFFA8FD04FF7DA8FD%05FFA8FFA8A8FD04FFA8FD04FFA8A8FFFFFF7DFD04FFA8FD04FFA8FFFFA8%A8FD04FF7DFFFFFF7D277DFFFFFFA8FFA8FF7DA8A8A87DFFFD06A87DFD0C%A8FFFD06A87DA8A8FD05FFA8A8A8FD11FF7DA87DFD07A87DA87DA87DA87D%A8A8A87DA8A8A87DA87DA87DFF7D7DA8A87DA87DA87DA87DFD04A87DA8A8%7DA87DA87DA852A87DFFFFA8FD04FF7D27522752272727FD055227522752%275227522752275252272752525227525252275227527DFD04FFA852A8FD%18FFA8FD0BFFA8FFA8FD09FFA8FFA8FD0DFFA8FD0AFF7D7DA8FFFFFF7D7D%7DA87DA87D7D7DA87DA8A8A87DA87DA87D7D7DA87DA87DA87DA87DA8A87D%7DA87DA8A8A87DA8FD04FF7D5252FD0FFFA87DA8A87DFD05A87DA8A8A87D%A87DA87DA8A8A87DA8A87DA8A87DA87DA87DA87DA87D7DA8A87D7D7DA87D%7D7DA87DA87DA8A87D52A87D7D7DFFA852A8FD2FFFA87DFD11FF7DA87DA8%A87DA8A87D7D52A8A87D52FF7DA87DFF7DA87DA8A8A87D7D7DA852A87D7D%7DA87DA87DA87D7DA8FD047DA87DA852A87DA852FF7DA8FF7D527DFFFFFF%A8A8A8FFA8A8A8FFA8FFFD05A8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FF%A8FFA8FFA8A8A8FD13FF7D527DFFA8FFFFFFA8FFA8FFA8FFA8A8A8FFA8A8%FD08FFA8FFA8FFA8FFFD05A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8A8%FFFFA8FD04FF7D27A8FD04FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FD14FFA852A8FFFFFFA8FF%A8FFA8FFFFA8FF7DFFA8FFFFA8FFA8A8FFA8FFA8FFFFA8FFA8FFFFA8FFA8%FFA8FFFFA8FFA8FFFFA8FFA8FFA8FFFFA8FFA8FFFFA8FFA8FFFF277D7DFF%FFFFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFA8FFA8FD13FF7D527DFFFFFF7DFF7DA87DA87DA8A87D%FD04A87DFF7D7DA87DA87D7DA852FF7DA8A87D7DA8A87DA8A87DA87DA87D%A8A87DA8A87DFF7DFF52A8A87DA8A87DFFA852A8FD3DFF7D27A8FFFFA8A8%7DA87DA87DA87DA852A87DA87DA87DA87DA87DA87DA87D7D7DA87DFF7D7D%7DA87DA87DA87D7D7DA87D7D7DA87DA87DA87DA87DA87DA852A8FFA8527D%FFFFFFA8FFA8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8FFA8FFA8A8A8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FD13FF7D52A8FFFFFFA8A87DFFA8A8FFFD07%A87DA8A8FFA8FFA8FF7DA8A8A87DA8A8FFA8A8A8FF7DA8A8A87DA8A8A852%A8A87DFD06A87D7D7DA8A8FF52F87DFFFFFFA87DA87DA87DA87DA8A8A87D%A87DA8A8A87DA87DA87DA87DA87DA87DA8A8A87DA8A8A87DFD04A8FD12FF%A852A8FFFFA8A8A87DA8FFA8A8A8FFA8FF7DA8A87DA8FFA8A8A8FFA87DA8%FFA87DA8FFA8FFA8FFFFA87DA8FFFFA8FFA87DA8FFA8A8A8FFA8A8A8FFA8%7DA8FFFF52F87DFFFFFFA8FD39FF7D527DFFA8A87D7D7DA8A87D7DA8A8A8%7D7DA8A87DA87DFF7D7DA8FFA87D7DFF7D7DA8A87D7DA87DA8A87DFD04A8%7DA8A87DA8A8A87DFFA87DA8FFA8A87DFFA8A8FD3EFFA852A8FFFFA8FF7D%A8A8FF7DA8A8FFA8A8A8FF7DA8FFFFA8FF7DFFA8FF7DA8A8A87DFFA8A8A8%FF7DFFA8A87DFFA8FF52A8FF7DA8FFA8A8A8FF7DA8A8FFA8A8FD07FFA8FD%39FF52F852FFFFA87DA8A8A87DA87D7D7DA87DA8A8A87DA8A8A87DA87DA8%7DFFA87DA8A8A87D7DFF7DA8A8A87DA8A8A87DA8A87D7DFF7D7DA8A852A8%7DA87DA8FD42FF7D27A8FFFFFFA8A8FFFFA8FFFFA8A8FFFFA8FFFFFFA8FF%FFA8FFFFFFA8FFFFA8FFFFFFA8FFFFFFA8FFFFA8FFFFFFA8FFFFA8FFFFFF%A8FFFFA8FFFFFFA8FD07FFA8FD3BFF2752A8FFFFA8A8FFFD05A8FFA8A8A8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8A8FFA8FFFD05A8FFA8A8A8%FFFD07A8FFA8FFA8A8FD05FFA8A87DFD3BFFA8FFFFFF7DA8A8A87DA87DA8%7DFF7DA87DA87DA87DA87DA87DFF7DA87DA87DA87DA87DA87DA87DA87DA8%7D7D7DA8A8A87DA87DA87DA87D7D7DA8A8A87DFD06FFA8A8A8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFA8FFA8FD15FF7DA87DA8A8A87DA87D7DA87DA87DA87DA87DA8A8A87D%7D7DA8FD057DA87DA87DA87DA87D7DA87D7D7DA8A8A87DA87DA87DA87D7D%7DA87D7DFD07FF7D7DFD25FF52A8A87DFD15FFFD0C7D527D7D7D52A87D7D%7D52FD087D527D7DA8FD067D52FD047D52527D527D7D7D52A8525252FD07%FF7D52FD25FF277D52A8FD15FFA8527D7DA852A8FD087DA87D52FD047DA8%52FD057D527DA87D7DA87D7D7D527DA8FD047D527D52FD057D527D7D527D%FD2EFFA8A8FD18FFA8FFA8A8FFA87DFFA8A8FFFF7DFFFFA8FFFFA8FFFFA8%FFFF7DFFFFA8A8FFA8A8FFA8A8FF7DA8FFA8A8FFA8A8FFA8A8FF7DFFA8A8%FFFF7DFDD1FFA8FD23FFA8FD07FFA8FD1AFF7D7DA8FD05FFA8FFA8FD24FF%FD05A87DA87DA8A87D7DA8A8A87DA87DFD05A87DA87DA8A8A87DA87DA8A8%FFFD07A8FF7DA8A87DA8A87DA87DFF7D7DA87DFD18FF52522752527D7DA8%7D7D7DA8FD23FFA8FFFFFFA8FFA8FFA8FD07FFA8FFA8FD09FFA8FD07FFA8%FFFFFFA8FD05FFA8FFA8FD07FFA8FD18FF52A8F8525252F8A8525252A8FD%24FF7DFFA8A8FFA8A8A87DA87DFF52FFA87DFFA8A8FF7DFF7DA8A8A8FF7D%A8A87DFF52FFA87DFFA8A8A87DFF7DA8A8A8FFA87DFF7DFF7DA8FF7DA8FD%1AFFA8FFA8A8FFA8A8A8FD24FFA8A8A8FFA8FFA8FFA8A87DFFA8FFA8FF7D%FF7DFF7DFF7DFF7DFF7DFF7DFF7DFF7DA87DFF7DFF7DFF7DFF7DFF7DFF7D%FF7DFFA8FFA8FF7DFF7DFD48FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8%FFA8FFA8FFFFFFA8FFA8FFA8FFA8A8A8FFA8FFA8FFFFFFA8FFFFFFA8FFA8%FFA8FFFFA8A8FD4AFFFD087D52A87D7DA87D7DA87DA87DA87D527DA87D7D%7DA8FD057DA87D7D7DA8527D7DA8FD057DA8527D7D7D52A87DA87DFD46FF%A8A8FD0A7D52A87D7D7D527D7D52FD067DA852A852A8FD047D527D7D7D52%A852FD077D527D52527D7D527DA8FD48FFA8FFA8FFA8FD07FFA8FFA8FFA8%FFFFFFA8FFA8FD09FFA8FD07FFA8FFFFFFA8FD05FFA8FFA8FD48FF7D7DFD%36FF7D7DA87DFD44FF7D27FD36FF7D27A852FD44FFA8A8FD36FFA8A87D7D%FD5DFFA8FD7FFF5252FD057DA87D7D7DA8FD74FF7D7D27525227F8A87D52%52FD75FFA8A8A87DA87D7DA87D7D7DA8FD16FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2011-06-13T09:53:05-04:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:ModifyDate>2011-06-13T09:53:05-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2011-06-13T09:53:05-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qhrTUbO8t1uLdy8TO&#xA;8aniwPOJmRxxYA7MhHTFVf1F8D/wJ/pirvUXwP8AwJ/pirvUXwP/AAJ/pirvUXwP/An+mKpXPosM&#xA;vmG21s3E6zW0LW6W4H7oxyVL1BWtWbgTv+wuKpp6i+B/4E/0xV3qL4H/AIE/0xV3qL4H/gT/AExV&#xA;3qL4H/gT/TFW1dWJArUdagjr88VbxV2KuxV2KuxV2KuxV2KtMwVSx6AVPfpiqHstSsr6ytb20k9W&#xA;1vIkuLaQK3xxSKGVqEVFQw64qr+ovgf+BP8ATFXeovgf+BP9MVd6i+B/4E/0xV3qL4H/AIE/0xVA&#xA;W+mW8Gq3WoqzNJdhfUDRgkcVVAFfjzC0QHjWlanviqP9RfA/8Cf6Yq71F8D/AMCf6Yq71F8D/wAC&#xA;f6Yq71F8D/wJ/pirasGrTtsagj9eKsQ8uedtf1Tzhqmg3nlm602xsBK0GsSet6M3pzekgBeCKItK&#xA;n70elLJRaVIaoVVNNQntPLljE1tZXl5G9y8jQWqyXcvKbnJK/wAbE0qxalfZQTtiqAi/MESKzHy5&#xA;rqAOkahrFqlmArsGJop2LH4e4JG+KtXX5gPbxNIfLOuSBEkkcLap8IiNGG8oqTWq8a8h0rQ0VRKe&#xA;dVdmH6D1hVG6M1mwDrtuByqu29GAb2rtiqi3n4c0RfLuuOzfapZEBPiCmrMyqe5+EnYbdVqquHnp&#xA;fX9E6BrQYgFW+pMUJb9nkGKg7NXlQbdfiTkq6TzyVqE8va1K3IKoWzpyVhUPV3VQOxDEMO4xVdJ5&#xA;5jQ1GhazJDsPWWyelSaU4EiXahqeFPfcVVU4vPoO0/l3W7c1NQ1kZKKK/FWFpBuV6Cp+gjFVWLzq&#xA;ZS/DQNYopPpl7UJ6lBWq83XjXf7fH8RVVMND1ltVE8psLzTxEVQJexCJ225clAZqrQj6duoOKppi&#xA;rsVdirsVdirsVdirsVcQCCD0O2xofvGKoGxsbDSraz0+0Ags7SD0LaJnZuMacVRQzlmNAKbnFUR9&#xA;ds6hfXjqTQDmtSa0p198VXPcW8Yq8qKPFmA/XirYmhKhg6lSaBgRQn54q4zQitZFHHc1I2xVzTwq&#xA;aNIoPgSAfD+OKrWvLRGCtNGrEBgCwBINaHr/AJJxVcZ4QrMZFCp9s1FB338MVaa4t1NGlRT1oWAx&#xA;Vtp4FQu0iqg3LEgAfTiromDFyCGHLYj/AFRirwj8q7nn+d2rpe+XhpupTWWpXEeoQzWDQSoNSjgu&#xA;Aq22m6bdSf6RCVD3Tsw41/b5FV7Prut6dpEdvPfGRY3l4KY4pJTUox6RqxFBUn2BxVBS+e/L8Shp&#xA;PrioSBzNjeBaGnxFjFQL8VanwPhircnnjQEj5gXslArFI7C9dgH2UlVhJFd+vgfA4qtPn7yz+6Ky&#xA;3Mkc1BDLHZXjxuXpwVXWEqWavwgGpxVw8++XjcC3X6401WDoLC9DJxXkSymENTtWnXFVNPzE8sPM&#xA;kaPdN6qJJC4s7oiRXDNVB6fNgFUMTSlGXffFVWTz35djkEcjXSGoVi9jeIqMd6SFoQEPH4vip8Px&#xA;dN8VaXz55dPEk3aqzcAzWN4FqNzUmKgoPir4EHpirpPPvlxOrXZ2QkLYXrEeoQqBgIaqWLClfEYq&#xA;qf428v0LFroKOrGxvAAaVoSYdj4jqN/A4qj9N1Sz1BpXthKPT4pIs0Mtu4O5oUmWNvwxVHYq7FXY&#xA;q7FXYq7FXYq7FXYqhrm1tZ7iIzxJJwVypdQaV4g9cVd9Q0wl0+rwkuKSLwWpA8du3L8cVWJpmjxE&#xA;hbWBTWrfAldqHw7VGKtfUtFdynoWzOuzLwjJFKdRT3GKtHT9EEhU21sJEAJHBAQHqo7d9wMVb/R+&#xA;ixoQba3VKEmqIBT7JPT3piq79HaVECfq0CAVYngg8Cx6Yqoiz8vQlwIrVCOTOCI9qAFq16UDA4qr&#xA;xafpYX91bQ8a1+FFpUCnYeGKuGlaUo/3kgFO/pp3+jFV9mtqqOtqqLEHKgR8QtVorD4dtiKHFWA+&#xA;QdL0O38467e236et9Suprz6xYXtjNY6WAt2R60HpQRWUzy7OspkeV1JJp8QCrNdahjkhiMt7JYRR&#xA;uXkmjdI/hCNUMzhgBTvt88VSmDTtMkLCLzHeyOWdGpdoTyWhdaBdiNug27UBxVdHZWvrsjeZ7uWV&#xA;AS0XrWwKheO7KkS/ZNPv3xVpNNs0uInPmS8ZpSyQxm4h4uQCxUDh8RUKTtv44qpRaZpx+sxW3me9&#xA;Mltwhu+NzFK0LKiyAOGRvTYxuGNabNXwxVdDYaeULR+Z7po5uNvFxuLfjUAnjHSOnL7R23p7KKKq&#xA;w06yH915gvFeSrBhcRyEqhFaLIjqApArQfPqaqrDYWH7sL5ku1aUiRD9YiPNR8Xwgp9niD07H2FF&#xA;V8+lWk4MVz5gvnI+N1W4igalSKn0EiIG1PD6d8VUPQ0mIRu/mm5CTFUiL3VvxeQA04kpux4E8Rsa&#xA;HbFU50m1S3a4C3819zKsWndHKbGirwVaCmKphirsVdirsVdirsVdirsVdirDvPsf5cTTWkPnG9s7&#xA;QtFKbX65dLaniGjDlOTpXcrXFWMPc/8AOOv15UbU9KRxF8Mn1wpAVcl/771BHzWnTnVRx2A44q64&#xA;vv8AnHIXlvZHVtI9WVX4mG+5R0QAkTSJIYwTX4fUNW7YqufUf+ceuH1OO40+5YKjAWjS3ErVJjUI&#xA;9vzdn7lVPKnxHahxVW5/848OsNv+k9DJpWM/pCMOa1oS/q8j/k8j8sVUJz/zjorek+paOC1ZAwvV&#xA;ZRwZQQG9QqNx9nvuR3xVQk1D/nG2QxhtZ0sg0RVN+5WknwUPKQhQOQr047E7DFVW81n/AJxy0u2j&#xA;9W80qRK1j9KQ3Uj+mCdvTMjurbr3DH4d+mKrjdf845CzkuhqejLAWKMRegMGLU2T1OQ4k7bbYqp3&#xA;F7/zjzaqrSarYajLJ6cYMV895I7EiNQBFI/xsd+K7tQkDbFWf+T5vLE2lPJ5aEY0z15FCxI0aiRD&#xA;xk+FgpG48NxuNiMVeUflGkv/ACtLVLi7jsrfVbhNaOpWdndRXM8DpqcQT60EsrO4CyD4rdrmWUsn&#xA;92sa1XFXon5l2vlq40qzXzBEs1qLpGijaxk1KsgVqUgijlfpWpp9mtdq4qwM2X5PrHJxSzlgEeyr&#xA;5ceaNUVlFY1W3ZOX2SxUdPiO1CFWv0Z+S+lpIJY9PiSjM7P5eLIFU78y8DABOY5bigp0FMVVLfTv&#xA;ymEdbW2tOChlanlZmGx5MNrQdx08dsVQ9pYfkw07rALNmlc0jHl6QM7OOXBaW45Cg2Rdq9sVX3Nn&#xA;+TMcjvcjT1cApNH/AIfcEepxehjENFchVcVWvH4xseWKoaXQPybksZiLGDgjk8h5ZmRpJQTxEbi3&#xA;XlyNVQI27VA3qMVRf1T8oZ45F9CyuPSCtI8flp5gvIcx8SW7MB179iOxxVDRR/kpMVSM2DsRySZv&#xA;LzlXVyqqS5g+MSNxANfjrTfluqiHt/ynW9ilaCH6zKGtpA3lp4/3aKTyeNrZKonAJz4niWA/axVn&#xA;P5ZWnlCzsb208smA28Dxx3PoWZsyJBGCFkBRC7hCKk7jocVTnzn5otfK/lu71q4QSi34JDA0iQiS&#xA;aZ1ihjMr/AgaRwCzbKNz0xVF6Brdlruh2Gs2LcrPUbeO5gJ6hZVDAMOzCtCOxxVH4q7FXYq7FXYq&#xA;7FXYqxrzd5M03zJcWgvhC6wJKIkntoLkB2KEOvrIxVhx7HFUltvyc8uQhlWO1jiDq0cEWn2PpqsT&#xA;kxg84Xc/B8LktU77jsqrX35S6De2y27rawRRFzEtvp1igDSg85KNE451NVYUoaGhOKoaT8l/Lbgq&#xA;0VmAQB6i6bp6MOP2SAkCqT2NRQr8JB3xVq5/Jfy9PCUP1ZHZQGlTTdORqqxcEFIFK0Y/skffviq5&#xA;vyZ8usJAv1dRLD6R/wBxumEBqg+qgNtRX2/Z+Hvx5fFiqsn5S6Ksc0XCxaCfgJIm0uxIKxlWCsRG&#xA;C9XReXKu3SjfFiqt/wAqs0NlKyRWbr6TwqP0bYjiJECMRSLqVWnSlNqYq0fyo8ucyVtrBYwqLHGN&#xA;L04hChPxLWCtaGm5pQdK1JVWf8qo0ZUkRUsjGWMkER0vT+Mch6lf3J/EV3O/SirIfKvlyz8vaa+n&#xA;WdBB68swCoqAGY8yAFA2BNBWp8STvirzX8qLb8zpPzB1nUtfkvZ/LFxbyGxuJ/rNrC9zJOshpp19&#xA;K09uET4YwsQUIKMWerMq9el+3D/rn/iDYqqYq7FXYq7FXYq7FXYq7FXYqtH963+qv6ziqnc2Vpcm&#xA;E3EKym3kE0BcV4SKCA617gMcVUIbOLTYhHYQJHZhnd7WJQtGkdpHdABuS7ksvft4FVFxyRyIHjYM&#xA;jbqw3BxVdirsVdirsVdirsVQN/pljfXEH1mMuYlcxlXdCCeIO6Fe22KqY8u6QP8AdLGnTlLKaHxF&#xA;W2PuMVWDyxpA48VmXiarS4n2oKCnx7dungPDFVy+W9KXgeMxaMfC/rzA12q3wuPiam574q23lvRX&#xA;ZWe35la05PIw3FOhb7vDFXf4c0mgUJIFC8QonnC8aUpQPShGx8cVWf4Y0ioPCao/5eJ/Hlv8e+4H&#xA;3DwGKtt5a0dpPUaKRmK8TymmYFa1oQXO1e3ufHFW/wDDmljmVE6O5qXW4nDVpSobnUYq03ljRCyH&#xA;0GX014oFllUAewVgMVRdjZ29okkNupWPmW4ksd2AJ+0T3xVEO6IjO7BUUEsxNAANySTiqBt9WsL2&#xA;8mtrWQyS2MqJcfCwUGWD1U4sQFcFHBqpI7dQcVR+KuxV2KuxV2KuxV2KuxV2KrR/et/qr+s4quxV&#xA;2KoeSGSJzNbitd5YOgf3Wpor/ge/iFUs8t+dPLXmWbU4dFvUvH0i4+qX/CtEm4B+NT1pXiSP2gR2&#xA;xVO8VdirsVdiq2WaKGMySusca/adyFAqabk4qg7HU7PUJHktHLpBJcW0vJHQiWCQRyCjhSQGXZhs&#xA;eoJGKo7FXYq7FXYq7FXYq7FXYq7FVqfaf/W/gMVbdEdGR1DIwIZSKgg7EEHFWGtc6vZ/mUmmWWjo&#xA;uh3tnHcXuppBMD60azRj/SFb0F9JYokERXmwk5A0U4qzH018T/wR/rirvTXxP/BH+uKu9NfE/wDB&#xA;H+uKu9NfE/8ABH+uKu9NfE/8Ef64q7018T/wR/rirvTXxP8AwR/rirvTXxP/AAR/rirRQAEipPYc&#xA;j/XFXmOgef8Az3dRaBHqOjy2uo6herFqMX6J1MQpaMgLSGdmZLZopecX7zl6lA4CI3IKvUcVdirs&#xA;VSaw8qaHo93d32hafbadd3xQ3wgjWFLgx8uJlCD7Q5t8dK+NemKprBOkykgFWU0eNtmU+B/s2PbF&#xA;VTFXYq7FVssMU0ZjlRZI2+0jgMDQ13BxVh/l+81pfPWvaQ2kraaDCfrNrfJDNF6s06QySOZ2YxTG&#xA;WSSUFYwCnp/FXmMVZh6a+J/4I/1xV3pr4n/gj/XFXemvif8Agj/XFXemvif+CP8AXFXemvif+CP9&#xA;cVd6a+J/4I/1xV3pr4n/AII/1xV3pr4n/gj/AFxVC6rJdW+mXlxZQm6vIYJJLa25EepKqEola7cm&#xA;AGKsG8t+dvOF7ceXIbzTpYnvri+h1rnpOo2yJFAshtrhZZmZYPVpD+7k5V5MOSlSMVei4q7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXkevfmB+aWn+f7yxsfKX6T0WK+s7GyuUgvoS0NzADJPNd&#xA;hZYTHFM/2kjbiFYMASCVU38n+efO2v8AmiFdQ8uXWh6VHpcs09rMkxY3jPalFM09tbRVVXlCiOZu&#xA;QqXVGHHFUy0/z7rdz581Xyy/la/FjYRwyR64pi+rlpYlkMTl3ReYLbemznxC9cVZSLy4JANjOK9y&#xA;0G33SYqxXRvOV9e+c7vR57qxiWGa5gXRhHMdRSOBUKXUkgdo/Sl5VXlGooy0ctsVWaYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlbNr3+JkUKv6B+qEs3w8vrXqdOvOnD2piqaYq7FXYq7F&#xA;XYq7FXYq7FWndERndgqKCWYmgAG5JJxVQjEk7iaQFIV3hiNQSf53H/EV7dTvsqqIxV2KuxV2KuxV&#xA;2KuxVLrO/vJtVvraaExQW5UQMY5P3ilFbmJSPSPxMV4jcU3xVMcVdirsVdirsVdirsVS+y8x+Xr7&#xA;UbnTLLVLS61GzJF5ZQzxSTwlSAwkjVi6ULAHkMVQukQS6VZQ2urXcUkvO5dZCzBeLzGRFrM7ueCu&#xA;FqTiqYG80sMVM8AZSAyl0qCaUHX3GKrf0hpFAfrNvQ1A+NNyASe/ahxVv6/pNafWLeo6/Gnanv7j&#xA;FXC/0k8qXEB4/a+NNvnvirlvtJbgVuID6n93R0PLau2++2+Kti90ouUE8HNVDMvJKhSSAevQkYq4&#xA;3ulgEmeABW4MeabN4Hfrirhe6WW4ieDlSvHmlaffirX17Sd/9Ig26/Gm344qrQSQyEtCytGQKMhB&#xA;UmpB6Yqq4q7FUPqV79R0+5vfRkufq0TzfV4eHqPwUtxTmyJyNNqsB74qxv8AL7zefPGgrr7adPpd&#xA;r9ZmhtrG7oJibaQxNJMo+ywkRgE34kVqTTiqyzFWMayuo2+sWCNrz2qarqSx2VoLYSBhFbpcyWxe&#xA;uwaKwuTzP+/KdhVVJ4rfX/0bHMfOMrB5pNKWf6igJvEWbTy3Hl2vKS+Hw06GuKq1yusW8l+0vmuR&#xA;UsZoo50Fkp4G5uLaWJQQ3xfug8Vf+LK/s4qhtZtfMWner9Z86Sw/U7N9RuaWCPW3tfV9Ztn6n1o9&#xA;hv8AB74qsfQvOa6mujHz5KNRntZbqEfo6Ogjijtbdnrz47T8pKf8WU6LiqPU6q0iagPNEn1GTVHt&#xA;Et/qa/bj1Nka3ryrTjGbfnTp8eKoO6XW7bTjcTecpVTTZP0bfzCwUmS7uGso4n4htuL8+m374/yY&#xA;qj2stfTULi2bzVJ6lhDFeXUX1NKehNc3jp8XLvGgi2/32G/axVDQ2XmK6WytYPOMguNS09rq0k+o&#xA;pukVtbQPMQXoD68wm4n+fj0WuKus31XVWsLqw82SC31n1LzTozZLvbpcrOUJZgRSBxDU7/tddsVS&#xA;1LLzSV06IefpjJqF5caVbP8Ao2P47uztr9Zgfj+ECS3MtTsfSC/t4qizZ+ZFVwfO0tY9RFk5+oJ/&#xA;eyxxqkP2+gZuXL/Kp2xVMEstfa5u0HmqQ/oxlN7H9TTo0k1yADy3rBPFHt/vuvViMVWadb63cfVr&#xA;ZPNck095Z215bubNVrFF9UEz/a2M5jk+H9n1f8kVVTLyT9eudOj1WTW31ixv7eF7Mvbi3K0aRmkp&#xA;Un41kRaHpw98Vec/lje6Nffm1rV3pUmlXME1vet9YtbuGWfg97HInoww6xqiiKVpHklb6rb/ABkG&#xA;lWK4q9iuLe3nniE8aSBQzKHUNQgruKjFVn6J0kBYxZ24A3VPTQbA9hTtirY0zSo1qLSBVUf77QAA&#xA;b+Htirf6L0zb/RIdhxH7tNhWtOnjiq0aXpKnkLS3BNVr6aDrsR09sVb/AEVplGH1OCjbN+7Tfeu+&#xA;3jviq46bpxXibWEqSSVMa0qwoe3fFVraZpfJS1pBy6KTGldt6Db2rirR0jSSgjNlB6YNQnpJSvyp&#xA;iq8abpwKEWsIMZJjIjX4Sag0226nFV0EFvDJIsMaxhqMyooUV3FTTvQYqrYq07pGhdyFRRVmPQDF&#xA;UOiPcussylIVIaKFupI3DuP+Ir26nenFVEgACgFBudvE7nFXYqxPUPPF7p2r2mn3mkmJLy4khinM&#xA;wNYlu7O0im4qh/vHvx8NduPvUKpV/wArWuFsbm4l0R45bZQpg9Ykmcj0PR5CL/q5K1ny6bep9jFV&#xA;Sb80ZU1O0s49IaSG5kkRrkTEcE+vy6fbvx9Lf1pUi2r8Pqb7KTiq/T/zPa7s7S6OlNHHdNbL/ek8&#xA;RdGORG/uhX/RHe4/2PH7RxVYPzPvPqNtN+g2+t3UdqY7T6xv617a3E8EXP0qfHLbpFy6DnyNONCq&#xA;vtvzShup0MGns9gzzs156jDjaxR2lylx6ZiDfHa3vq8Oo48ftHZVDz/mzLBFdtLozJJZWktzcRmc&#xA;/DNHaT3voV9KhrBFC3IbfvadVIxVV1H81FsW1USaYxXRku5r5vVb4IbC6iS4egiNeFlcxXVFr9rg&#xA;KsDRV19+aMtnFPJNpDAwRzsV9c7vbPYQzJtEfszag6V7+lUbNsq69/NKW2kv4f0Ozz2Rv2WP1iOc&#xA;Ng00fqcvSIXnMlulOo9au4RsVVk/Mmb63ZwTaSYo7u7ubMS+tXj9Wv7XTi/ER71nvCKf5PWhqFUL&#xA;F+ad/ITGNAcXHBlWH6xubpU9P6vX0qb36SWvPp8HP7JGKq7/AJmXJvooINGaa1aYRXF0J6CIT31z&#xA;YWbFDHU/WJbVdv2efxbCpVWRfmjLNZvdQ6QzxtHavaETEes93awXapvF8NI5Zdz/AL77FgMVTHyl&#xA;+YFtr9ytpJamyuvq8EjxFmk43EsC3Utvy9NFPpW9xbyc+jepTqrDFWJeQPIep6f+auueZLrRmtYJ&#xA;Ir62g1h5IInuhcagbkc7ZGupZCi0RJ3mSqKo9LoQqyT8ytd8kaRHp7+bFle1mMy26RCVwXCrXnHC&#xA;wLCm1SpA70rirzG484fkSbWOM+X9SMk6SzTQxSOsiK6H1Y/UF0iuKIE4IxUgKBUKMVRH+OPyLv4n&#xA;t5dE1CezZQ3rzmViSCQQBJceuGKoGai1YNQ78hiqKHnX8l4vSZtE1GBo1rbIGY0/3WVX0rlhGQrE&#xA;fFxqKgV3GKoUeb/yKtpYxF5dv2EMbvVFkYIDIv8Ay8cWdmZ22q+zH9peSrZ89/kZE6C30bUrtV5J&#xA;aOjSUfl+8YKk1yjRhWWgMqoKj4T0xVGf43/Jm5hNodIv1llSrLzKTRpXcCcXI4ceX2VevXiDuMVQ&#xA;cXnL8g71in6JvxGJpCxf1wiPGo9RljM5PFuXFjGpU8mB+01VUQ/nL8kuJg/RWowSleUQhkljkkov&#xA;qFxLDcji1FPxu6lt1UsSQVVOXz/+SwSUw6BqM8cMa1WIhAp5VX0Ue6j/AHv+VGOVKCtKYq9L/LrU&#xA;fKl9pM0vlm0ez0/1AWhkUo3NkBrwLMV+GnWmKpl5q82aV5ZsYb3UufpTy+hGI+FS4ieY1LsigcIm&#xA;O59uuKoyxuLXVbSz1OBy9ncwx3NqrKVqJFDq7Kd68SKA9Pn0VRuKuxV2Kpdqv1+SRLW0hCtPDOBq&#xA;J4sLaVQpiPpsDzq+/wDscVSqW78ySeXZmTSfT1c6QLqMc4m/3IsjN9WoV4VWUA8vsknpiqOM+pQr&#xA;In6MFy8E1pCkwdE9aOV4/XnA4/D6HN34/tcdqVxVCaPJ5it0tLTUbEXbSX15FPfAxRCK1Qyvay+m&#xA;i0NUEcIA37nviqGvtR82XGiFrTQ/qWpyaZLdpWWKUw30JX0bP4l4sXDNR+gp0xVHXj61FrAa1sVf&#xA;TIEigaEGNfXa6nhjeYMV5ILOBJCU/brTsMVdevrU89vFb2K20Z1IRXNwTHIGsUgaRpSpX/drKIKd&#xA;RWvTFVaK71GUoJtGCCaC8ecmRGo8UkccMR+H4vrMZL1/Z40NcVS2C+80w298bnRReyiGC7tF9SKP&#xA;k93PJ61lsnW0SONjIf7zl4jFUTpx19L+6a9tFntr3U5YrZf3a/VLBLQUckLWX1rmAtQ7j1adExVb&#xA;Lc+Ynl0+6TTBHELK9uLyxLRMTdK0Jt4PUK1Bcl25Dbbftiq/XJteOlamml6eItRGmST6fcAxt/p7&#xA;K5SHi68SVk4tybY1xV2rN5gNxF+jrQRQ2uoWgn/u2+t2cnwzEcl/d+g83q+J4UH2sVVbe/1V57aK&#xA;TQ/RhkvLm3ll9VCIre3WQW9zxC7ibgoCdV5e2KoTyjP5lFjpFvrengXslgZtT1CsS8LtTGnomONQ&#xA;KuhJ5LsONMVedflH5i02/wDzH1q20m4t5tNm/Sl1ElpqM9zCD+kE/fLb/pK9iHrmUyF2s7ehP7vm&#xA;rE4q9Z1m1tbhrcXFkl6IyZI45Fibi6MrKy+rtyBFQRvXFUBDpthFB6KaHbxR1FIVW1C1HGmwUDsP&#xA;u+WKtDTtMjkDroduHMYiZ1W0B4L8IjrToOR26Ur8sVVoreOEuF0eOIFixKm2FTQHkdhueI+7FVFd&#xA;M04SxSroVsssClIpONoGjDDiyKQCQCu23bFV6W8FTMNFiWSYH1T/AKNzNaN8VBvXiCfo+hVt9PsJ&#xA;QeWjQOuzjktsRXdQeh3229vuxVzWtqxBfRYyCwbcWpblGSUJ7VHI8d9jXFVq2FmXdpNEgDSNymcC&#xA;1PJlKkEkhSTWNKV7qPAYqu+o2QVkXR4OM3MyrS2AYy1Lk7fEG5HkT198VR+kwW8KyrBapaKxDGNB&#xA;EKkivI+ltXFUP5l8saf5htbe2vZJohazi5hkt39Nw/pvEfiodikrA4qjdJ0uy0nSrLSrCP0rHT4I&#xA;rW1iLFisUKCNF5MSxoqjcnFUVirsVYh5Y8663rHmbUdKvNCk02zs3uVgu5V1ENKLe49FHrNYQWXG&#xA;ZP3i+ndyGlNj8XFVD635M0vUdVvbK7u/9J1uaS9WAK4rYR29jZ3kXIfCC3ppRqhhy26HFUJa6D5c&#xA;v7TS5l1D1rfV9VunqI5E+tIt1e6pFbioBiMMw5l9uXp8ejUxVA675T0q207Wr1tZ+py6DaajNcXZ&#xA;geQWsjfWbqwuDGA3q/U7e/nDItfU5b7gYqmHmL8v9J1C8/RVneGznewf0oCryUX0l095OR2/3ldo&#xA;uNercuoriqnPo3li9ey8xW2o8bXWLuxbSHMUpqz6hFqEycSAw+sPaqAXA4Yq3deS/Lrw6owvSkei&#xA;X0Dk8JD9VtodPVLi3P8Av0y2d9cfGKlfVFPiQUVVG8o6Dcaha6fc3plvNZOoahPHwkX6zpgtv0cI&#xA;lIosZghvLVOVQzca9SxxVLf8IRfoL67+nh9e+rfor9KfVjT/ABB+luf1z0aU4/pXf0+Pp02+xiqM&#xA;u/Kmg2N1fXkGom00/wAuQWDNAY5JDbJaQSR3jFqFpfrGmOsQArwK8h8ZxVVm/L/SYLiLT/rhjutR&#xA;vJbll4u3q2UVvb2r29fsqVt7aBOex2r1JxVSg8saTFdxa9+lK2w16RZ/3T/GpvrlIrIClQU1a75+&#xA;rTcCleGKoO6/LvQ7ZLuz/SXpNYWF4+oAxyNSwvLaWwsen++La04Hj8TcOR3apVTG98m2FxPcQWWp&#xA;fV9X1TTGuNFmMTOIbuG/OoS3pVvgYfXLu3f0n2oONOJbFUrufIflC90rUtWtL8xpqFz+jdOuykpE&#xA;CzzzWU1uYzQv6l3qN4OZG3qDfiikKsv0rQtJtfOeoXMUxa+S2Ei21GHpR6hO7yvyPwt60trsP2eP&#xA;YHdV5z+VPmjStX/NHWdNs4b6OPTYtQubW3uZFVLddRv0mm5W7WVpOklzIom4yTSmMfD8DclVV6xr&#xA;GoiyktybG4vhJyXjbRiQpuvxMCV2xVLv8TsWYL5b1Riikv8AuIVovahaVQ3Kh+FSW8RQiqq+PzGK&#xA;0by/qUW9ATBE1elD8EjdiDv06HcEBVoeZSwAj8u6m1CAwMEKcSaEfblWvXqtRtviqpL5gEcIkfQd&#xA;QKmnwrBE7VP2BxWQnc7V6L1YgVOKqH+KH3P+GdU+BiJP3NvtQ05D998W9fs18ehFVXDzUv7XlzVF&#xA;oWH+80Z3UVPSQ9QRQ9DWnUNRVVTzE+6jy9qQ4glv3UAHEVCkVl+Ll4CpHegxVyeZA8YdtA1JFoSQ&#xA;0EVRx7UEhPypirh5h2+Hy/qJJO6+jCD/AMNKBuf86YqmelXpvImlNpNZMKK0Fwqq4PX9guhG/VWI&#xA;xVG4q7FXYq7FXjn5caYlh+bGutdQejf3n6Ulgl9G7txNAb+NyazaVZi59MPGObX84Sv7oBG2VZb5&#xA;zt4NWvUtrHVI7LVJIr/y/HzjZ63F7aRX5j+yV2t7b1K+G1a7YqkWiW2m6tbw3Njfx2d5qt1bXqWZ&#xA;QuYbk6Ok9jFy4cS0McfqMRswFD1piqtcaN5c1fS+EGqxtpWpaXYW6AI4L2nmC+/0tuXHl/uQSNIo&#xA;+8ZFRx64q1bvBd3Tpc6pHK9yNAnl1D0iqXGoafqv1a94KFBX1JYII+NAoJBG1TiqXQ2NpqehhL6+&#xA;i04T2PmCSXTZI2ZrdrzU+NxVlT/j39QwNTvuPHFU8urWxuLu+uJtZiNyDqJuD6RAFxp86zWLkcKH&#xA;6lBJwcdJK78qYql+haXp18dPiW4/R8kNv+hF0qQM8iC9LahqEZfjubu1t4XQ1+ALsQSaqrPLEcd/&#xA;5YimudUiE95B5fuDN6TKs1zFftFbagqhF4pqH1aJkSnw/tAVNVVRtE0O40+7s7PV4VhvNLv47asc&#xA;h4xebrxBp8jErUhpbeRd9/GgxVUlFlqPmC4vL3UY7e4bW/U0+FkYt9X09RpMKBlWn/HWn9Qk9m4n&#xA;4RirodN0yy0djq2txTPH9fe6ufSYKbT17Ya6vFU6vqCO6sBVeYCbDZVJ1Wa20DUbu4vFj8wxwfpW&#xA;8sJIxzaTy/ND6u/D0wPqckEVOlW5UryOKp22ksh1G2stdhhvYLTW9J00mFm+q3d7L+kAzAoQ4hg9&#xA;DkDUHj7nFVPUNFhmtbhPL2rxW9pLc2otbf0i7fWrbTUuNOWrod1mWC4PZgOLdSMVTDyXawanrA1+&#xA;1vo5LaVpNQhsQp9SGHU7a3PptIVXn/pMFxJXwanQUxVkeh+SfK2h3cl9p9gi6lKhjm1OdpLm9kQk&#xA;Eo93cNLOy1UGhelcVThv96I/9Vv1riqpirsVdirsVdirsVdirsVdiq0U9Vvkv8cVXYq7FXYq49PH&#xA;2xV4Z+T93rl9+bXme7fy5b6dpDpcsdWgtdLq88l0rC3e80/1OUqpvMjXEp5gs3Gqqqr0Xzdompaj&#xA;LHpwiWXTNXu4ormSJVWS1hW1nNxOZKcuUqxpArDcch2xVD6xoHmC6d9ET0VstQ0zW0kvI4ERIbiS&#xA;SCDTAWUBw0VnNKnw/aCn2xVGJZeY015bFI4F0lJo7lLgQoEFlCnCKwAC/bSf98r9hsMVQFt5X1/0&#xA;tRto3gt7meKA3N68KNHPemO2EtxCnH92n7hvhH7fxdcVTLQ9H1GO2gt5I4obeyvbmApLEjPNpwWR&#xA;YlDU6tJ6cjN+1x364qgdA8v+ZQJ7q4lhguLuSD6/HJCjepcW86217cJ8I4R31nbIVT9ktXriq1dM&#xA;8xR6TJ5khgWPzBPaTTTaf6aF6xx3L2FuvwhRNCLkRO/7XHwxVXfy3qGix31xpSxzfW5tLma0EaGj&#xA;wTql1wqKLGbdV9NR9hgWG5xVBX/k/WYtDn0mIwz/AKYj1G1u5UjCiJrmRpLGbpUR2i8l4r+01Riq&#xA;Za9omq3msWUEKxLpjXNvdvKsahohZzrdSRlgOX+kTKjdf2TXriqB13y15l1S0utBnlga31LSJ4jf&#xA;JCqLDemdWkZuIDUuFlU0HeMnqcVRk2hane+bYXvI4TpunSSXkcvpqPWW9gltTbkgVPp8eclTRuSf&#xA;yjFUJo+h+aLmd7vUmii1XTreCwju/SQRXU7iGTUb0RhRtcCNIkB+xxbxxVvQvL2vSXr67IUsb25n&#xA;ngurWSJCPqdnJeJpoRQKK6fWFYv1ZAAcVR/lXS9QnTT9X1SEWd0llFGliiLGYpWSlwJAgAapVeI/&#xA;Z3pirIryCWe2khiuJLSRxRbmERmRD4qJUljr/rKcVYlp+s2eked5fLEss1zfakq3yXPoosSmSFkC&#xA;SMsgJkkGnyyVWJU6jaqjFWY0k/mH3H+uKupJ/MPuP9cVdST+Yfcf64q6kn8w+4/1xV1JP5h9x/ri&#xA;rqSfzD7j/XFXUk/mH3H+uKupJ/MPuP8AXFWjzUElhQbn4T/XFWG6L+aWkatZ6Xf21hfehq92lhHy&#xA;W3VopJIVuImkQTszJJDIJKxByq15haGirNcVdirsVcQCKHcHqMVSTRfI/krQrtrzRPL+m6Vduhie&#xA;4srOC3kMbEMULxIrcSVBp7YqwPzTqs1l5pkt7rnd6hPfaesRiJRBZQzSXlrDxCn42ukjty/cyrX4&#xA;QcVSibzJpUlxBGTJ9R1e9e9F36jUjsre+sb9l4ceR5S6ozcuyrx8MVUZPMUWpaPNbXMc8MusySQ/&#xA;Vw5D2tjrU0b6lbFuHxSJc2t1Akn7JHw7AYqirjzlp95c3epSepas2oxanbyc3KrZtYiG5Vl4b+pY&#xA;wLKtPs/WEP2lOKrv8SrZX93JxmiutNv7I6fFISQlta6aiS2z/CRI0p/SUfM9GSvZaqqUPmdIr6PT&#xA;NMtZp42vrKLTZjIxCWukKOET1T43uB6Xxf8AL3HX7DYqgrvzHYJa3NtZNM9jN9Vm0+cs7ehaWc9p&#xA;qLq/wguZY3u5gx6JEV/lxVd5i8zA6TrlolvPdyXD30VvBDIUdbLUrpTfWvIxn97JPHFHHJ+x9ZSn&#xA;2DiqZ6t5i0kvq8cs0sUFzcTIswLH09MvpLCW/wBuFeT2vO4RuqIaDfFULdebmN3cXrwyQ3N3rcF/&#xA;JZcmLwqdN/Q9zasSvHkLi3MfICnKRT2JxVbb+arWwtWWETTw21xZz6fKWYepp9hKogi3T7RtZ4Jm&#xA;c9RMtdwcVUrnzHpdrdWWmKJpLOS7Wq+qysbSC+jjghDFPtm/lmct3WBk6MuKqFz5q03UNGuvqInv&#xA;IpLK7W8ETshuNP1OW7e1s4yyVjmkNxaBZu3qD3xVWtvOGiTzalZ3E7pDJfXUXrq7f6Rp2u6ldRTq&#xA;ihSY2gj04TBz2qo3xVmf5V+cbDXtR8xygmC71K+iv4bFmLssK6Ppav8AF9n4XlXw69O+KvRMVQra&#xA;VpbammqtZwNqccRt478xoZ1hJ5GMS05hC2/GtMVRWKuxV2KuxV2KuxV2KuxV2KpHF5E8jw3NpdQ+&#xA;XtMjubAlrGdLO3WSBi5kJiYJVCXYt8Pc1xVPMVdirsVdirsVSXV08t3E6i+eNbiyubOQt0dZZJgt&#xA;qrNStHloAMVUXsfKUus2dzSL61bfWdJt7cACMyTJDdSxmOnEusdijA9lBxVAW0n5e21hqGox3EH1&#xA;PUrVvMFxcNuBZtEB9YQ8fhj4Ly27knviqLm0rydJZQ6NIsRSzubS0C0HP17ZIrmGJ2pvyijj5Duu&#xA;2KrZrzyNdTW2svPbt6dlcahFLQcGsxQTTsKfEq8+p/mPicVRUMPlfTtQu6GJLu4uYJJUYA8Jp44r&#xA;eEIKfDzFqlAO4riqS/o/8tx5bg0z1ov0YIZtSilJ+M2+nTo88nPjXhG8io3+S3Hpiqaapa+T7nUb&#xA;GK79FLyzv0NvGoCk3bwPIsbUHxco6vT/ACQe2KtxL5NvL+PUIzBLK9tdRIAoKNDaypDcnjSh9Nwk&#xA;ZPht0xVDy2HkmbSbvTZHja31FfVmkP8Ae8dbupPSZXpUepcOwj8D8sVV/qnk+/Ntpqei8lnPxiiQ&#xA;AN6tj6fNG234hYww8KYqp+r5GNyNZMluedrZsjlQYxBeXDm0kVeOxlmZqHxxVSj0zyJFZyaPEYY0&#xA;l1FrdkQBX+uM/wCkfQBA/ZADKvQKAO2Kr5/8Aiez1yQ2qgWLSW0vBRG1rdSRN6tOO/xleJ7cj/Mc&#xA;VTDStP8ALi61qV5pqRLqEIg07UFiUKIzFGLiNCABRjFdIT4rx8BiqcYq7FXYq7FXYqxLz15EtPNF&#xA;/wCW7ua0s7htE1B7qRruNXb0Xs54uERKPv8AWHhkpsPgDdVXFXmXlf8AJf8AN7RNFsrZPNzLe2tl&#xA;LarTUdQltUd7fUYYzHbyL6QWL1rEoOA4+k1O3JVOL3yB+ak3lvRrGS+jm8wW1pqMcuow6jexQwTz&#xA;6jbXVsv1iQSX0sYtoXgLf3vGqeoOZkCr0TyTpt/p2hNbXsX1eVr7UZ4rfkH9OC4vp5rdKqWUUhkX&#xA;4QaL9kbDFU+xV2KuxV2KuxV2KuxV2KpFrLXUOqwmHTxdWhtbi6vCIgzSTWbQtaRBiP7ws7NH/qmn&#xA;TFUHcvra2usGGwj/AEgtvLqOjTiEEJcPA0UcbilWmBBDEdVamKoTWGvbR71bXQEudJt/LkpgsI7Z&#xA;GaSVK8bBRx4kMg4iLp7Yqir+TXLaVJE0+O5bTrddR1Ro4gWvrj6tPEI7U8dplkgj3P7DAYqoahb6&#xA;rbWvmqCDS7eb6rYM3lr0rdWQwy2vE2RTiA5+tWzOyDYq6DFUbrd1f295d3VvpP1uCwgE8saxhpry&#xA;YCsCwNQ/FEVbr/MKYqhL2DU7WyvYV0mC5l06KWaP0oF9O4sbm5md9PgXj/etDbxCQdGYqTiqL1Se&#xA;6s7/AFq9/RJ1CDT9Pg1CwiihUzXF8gu1kjicg1l9OOJF8OXviqXTzeYdOazhTSY7ltMtIZdWltoA&#xA;EvHv/WS5hs/h+ErcQxzyg9VYV3xVXv11uCPzIIdPhme3No+gFIAQYYokKQkU+NoLlZZFp9kMtN8V&#xA;ROpXF7YaheXlnpHr22n2s07RwxL693dXDRlfQYDqFicSeJK+GKoa9i1W1sb2FNKguZNPSO5QRQL6&#xA;dzZxXVxJb2MK8f76GGJAOwdwRiqJuTfRa1eXC6WkunWrQvHGsK+tNeylEa6jfj/uuFyjHrse2KoS&#xA;6GrW+iwxSaRFeXOlraW97HFApjuojEhlW0Qr8KJNxIFKDjiqd6eLtdf1dGtlis3FtLFOqBTNMyMk&#xA;rM4HxsqxRrv0AAxVNcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVef32hXuta1fXmia7b&#xA;vJa6oxuoIrj1BCsdnbcbeVED8JFv7CF2U0/dFx1bFVKH8uPMNtcWktvqpppxK2ayTSMGjNpAD63w&#xA;fG312yif/jGXHVsVW6d+VmpWB9GHVZmtPTtoqSXEjyUtIYeB5FOrXFspfxUsO+KqV3+WfmiXTBaR&#xA;6sFkVLmNXM0v2Z7D0xUhK1W9Jev++9uuKovVPy+8xXV7rc0Wp8Ir/wCs/o+MyyD0vVspIYudE/Zu&#xA;b25c0/Z9LuuKoTXvyv8AMOpNdSxau0MzSX72aieVUUXP1gwBwEqeBv5uVPCOn2cVRWp/l75iubvU&#xA;Hg1T07e5g1IW8RlkBS4uhL9UYkJ9iI6hdcgD/vqn2MVX3P5fa7LPDMmplWjM3JfVk4lV1Bri124d&#xA;VtriVJPFuHYYqoTflrrypqAtdUIN19a9AyTSnh9YvYbhei/sxwcfavhiqlB+V+u21u9vDq7tHymn&#xA;iaSeRnE0ctqtnU8PsLa2KiUftOzEbNiqNtvy/wBdtmsvS1IuttNWX1ZZCWhhvdPa3XZR8X1LTeEl&#xA;esjsejHFUAv5X+Yv0fawtq7G4tbcW6uJpeJ53FuZ2b4Kk/VrNFQ9nLHo2Kqv/KtNf/S36S/SzerX&#xA;1PT9aT0/V5+l9nh9j6ptT/fnxYqo2P5V6/Fb39vPqzNHdrbRq6Tzc1jS+vnuN2WgZrK+VEI/3YtT&#xA;sBiqZeUrqx0Rr661vzLp08zPFYXji7QRxaiZ7m5lho5UI7PdkJH9riAKbYqzzFXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FUh8teTNL8vXmq3dnLPLLq1w9xMJ2QiPnNLP6cfBE+AS3MjDlyb&#xA;4qVoAAqn2KuxV2KuxV2KsbvvzE8p2GvS6FeXFxDqMJtRIGsrz0R9flEFsfrPo+gRLK3AEPSob+Vq&#xA;Kr7b8xfy+uoZZ7bzPpM8MHD15Yr62dU9V/Tj5srkLzf4Vr1O2Kqmo+evKGmz3dvf6rBbXFlz+sQy&#xA;MQ49KBLqXitKv6VvKksnGvBGDNQHFU9xV2KuxV2KuxVglx+UWlyDUEg1nU7SDVLs3d/BCbJkkU3D&#xA;3Qt29W1lb0RNNI1K1YMVZitAFWd4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq8089f4M/xPefpX9IfXuHln1fq3o+lT9NT/o/jz+L/ern6/8AxXTj8WKvGvMX/KjP0BZ/&#xA;WP8AFno/Vv3P1P6r6/o/ovSfV9Wnw0+p+n6vL4a+v/k4qzD8xPqf6f8ANH+9/wBYpqv1L6t9V4cf&#xA;8PWn1/6zz/0r0vS9P0v91evw9Xb0sVe/px4Lx+zQcflireKuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>iText 5.0.5 (c) 1T3XT BVBA</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>595.000000</stDim:w>
            <stDim:h>842.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811994CF80DA79B2F28</stEvt:instanceID>
                  <stEvt:when>2011-01-13T14:12:52-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0F2765C70A206811BEDCBB1BED1C4DFC</stEvt:instanceID>
                  <stEvt:when>2011-06-13T09:53:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>xmp.did:F87F117407206811994CF80DA79B2F28</xmpMM:OriginalDocumentID>
         <xmpMM:InstanceID>xmp.iid:0F2765C70A206811BEDCBB1BED1C4DFC</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:0F2765C70A206811BEDCBB1BED1C4DFC</xmpMM:DocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:F87F117407206811994CF80DA79B2F28</stRef:instanceID>
            <stRef:documentID>xmp.did:F87F117407206811994CF80DA79B2F28</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:F87F117407206811994CF80DA79B2F28</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -299.956 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 299.956 li
445.326 299.956 li
445.326 0 li
cp
clp
[1 0 0 1 0 0 ]ct
.41045 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
178.908 181.01 mo
239.37 121.108 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
213.142 146.645 mo
206.611 148.82 li
211.855 153.398 li
213.142 146.645 li
cp
ef
239.37 121.108 mo
284.273 121.108 li
@
260.72 121.108 mo
254.453 117.689 li
254.453 124.542 li
260.72 121.108 li
cp
ef
179.826 67.4888 mo
239.37 121.108 li
@
215.567 99.8228 mo
213.611 93.1587 li
209.002 97.7505 li
215.567 99.8228 li
cp
ef
339.853 137.087 mo
339.853 137.087 338.605 137.087 337.923 136.35 cv
337.923 136.35 337.255 135.627 337.255 134.28 cv
337.255 134.28 337.255 132.945 337.937 132.195 cv
337.937 132.195 338.631 131.458 339.897 131.458 cv
339.897 131.458 340.619 131.458 341.577 131.694 cv
341.577 132.417 li
341.577 132.417 340.48 132.028 339.883 132.028 cv
339.883 132.028 339.006 132.028 338.534 132.626 cv
338.534 132.626 338.062 133.209 338.062 134.28 cv
338.062 134.28 338.062 135.308 338.561 135.906 cv
338.561 135.906 339.077 136.489 339.964 136.489 cv
339.964 136.489 340.716 136.489 341.59 136.031 cv
341.59 136.684 li
341.59 136.684 340.8 137.087 339.853 137.087 cv
cp
0 0 0 .698044 cmyk
f
239.607 272.539 mo
439.838 272.539 li
0 0 0 .200012 cmyk
@
368.295 5.62842 mo
368.295 5.62842 367.044 5.62842 366.363 4.8916 cv
366.363 4.8916 365.684 4.15527 365.684 2.8208 cv
365.684 2.8208 365.684 1.47266 366.379 .736328 cv
366.379 .736328 367.074 0 368.336 0 cv
368.336 0 369.047 0 370.019 .23584 cv
370.019 .944824 li
370.019 .944824 368.922 .569336 368.323 .569336 cv
368.323 .569336 367.449 .569336 366.976 1.15283 cv
366.976 1.15283 366.491 1.75049 366.491 2.8208 cv
366.491 2.8208 366.491 3.84912 367.003 4.43311 cv
367.003 4.43311 367.516 5.03076 368.393 5.03076 cv
368.393 5.03076 369.159 5.03076 370.033 4.55811 cv
370.033 5.21143 li
370.033 5.21143 369.227 5.62842 368.295 5.62842 cv
cp
0 0 0 .698044 cmyk
f
299.416 11.021 mo
436.329 11.021 li
436.329 99.4414 li
299.416 99.4414 li
299.416 11.021 li
cp
0 0 0 .200012 cmyk
@
299.416 11.021 mo
299.416 99.4414 li
@
299.416 54.939 mo
436.329 54.939 li
@
299.416 90.3096 mo
301.139 90.3096 li
@
436.329 90.3096 mo
434.619 90.3096 li
@
299.416 81.749 mo
301.139 81.749 li
@
436.329 81.749 mo
434.619 81.749 li
@
299.416 72.6313 mo
301.139 72.6313 li
@
436.329 72.6313 mo
434.619 72.6313 li
@
299.416 64.0698 mo
301.139 64.0698 li
@
436.329 64.0698 mo
434.619 64.0698 li
@
299.416 54.939 mo
301.139 54.939 li
@
436.329 54.939 mo
434.619 54.939 li
@
299.416 46.3921 mo
301.139 46.3921 li
@
436.329 46.3921 mo
434.619 46.3921 li
@
299.416 37.2603 mo
301.139 37.2603 li
@
436.329 37.2603 mo
434.619 37.2603 li
@
299.416 28.6997 mo
301.139 28.6997 li
@
436.329 28.6997 mo
434.619 28.6997 li
@
299.416 19.5679 mo
301.139 19.5679 li
@
436.329 19.5679 mo
434.619 19.5679 li
@
291.831 16.7192 mo
291.831 16.1909 li
292.9 16.1909 li
292.9 11.9517 li
291.831 12.23 li
291.831 11.6743 li
293.623 11.229 li
293.623 16.1909 li
294.695 16.1909 li
294.695 16.7192 li
291.831 16.7192 li
cp
0 0 0 1 cmyk
f
288.967 97.5649 mo
288.967 97.0225 li
292.192 97.0225 li
292.192 97.5649 li
288.967 97.5649 li
cp
294.108 99.4414 mo
294.108 98.8989 li
295.18 98.8989 li
295.18 94.6738 li
294.108 94.938 li
294.108 94.3965 li
295.903 93.9375 li
295.903 98.8989 li
296.972 98.8989 li
296.972 99.4414 li
294.108 99.4414 li
cp
f
92.0562 3.41797 mo
91.1382 1.09717 li
90.2212 3.41797 li
92.0562 3.41797 li
cp
92.8472 5.46143 mo
92.2632 3.97412 li
89.9985 3.97412 li
89.4155 5.46143 li
88.7056 5.46143 li
90.8325 .110352 li
91.5835 .110352 li
93.6675 5.46143 li
92.8472 5.46143 li
cp
0 0 0 .698044 cmyk
f
22.7593 10.9927 mo
159.657 10.9927 li
159.657 99.4136 li
22.7593 99.4136 li
22.7593 10.9927 li
cp
0 0 0 .200012 cmyk
@
22.7593 10.9927 mo
22.7593 99.4136 li
@
22.7593 54.9111 mo
159.657 54.9111 li
@
22.7593 90.2817 mo
24.4683 90.2817 li
@
159.657 90.2817 mo
157.947 90.2817 li
@
22.7593 81.7212 mo
24.4683 81.7212 li
@
159.657 81.7212 mo
157.947 81.7212 li
@
22.7593 72.6035 mo
24.4683 72.6035 li
@
159.657 72.6035 mo
157.947 72.6035 li
@
22.7593 64.042 mo
24.4683 64.042 li
@
159.657 64.042 mo
157.947 64.042 li
@
22.7593 54.9111 mo
24.4683 54.9111 li
@
159.657 54.9111 mo
157.947 54.9111 li
@
22.7593 46.3633 mo
24.4683 46.3633 li
@
159.657 46.3633 mo
157.947 46.3633 li
@
22.7593 37.2324 mo
24.4683 37.2324 li
@
159.657 37.2324 mo
157.947 37.2324 li
@
22.7593 28.6714 mo
24.4683 28.6714 li
@
159.657 28.6714 mo
157.947 28.6714 li
@
22.7593 19.5542 mo
24.4683 19.5542 li
@
159.657 19.5542 mo
157.947 19.5542 li
@
15.1587 16.6909 mo
15.1587 16.1631 li
16.2427 16.1631 li
16.2427 11.9238 li
15.1587 12.2021 li
15.1587 11.6465 li
16.9517 11.2012 li
16.9517 16.1631 li
18.022 16.1631 li
18.022 16.6909 li
15.1587 16.6909 li
cp
0 0 0 1 cmyk
f
12.3101 97.5371 mo
12.3101 96.9946 li
15.52 96.9946 li
15.52 97.5371 li
12.3101 97.5371 li
cp
17.4526 99.4136 mo
17.4526 98.8711 li
18.522 98.8711 li
18.522 94.646 li
17.4526 94.9102 li
17.4526 94.3677 li
19.23 93.9233 li
19.23 98.8711 li
20.3003 98.8711 li
20.3003 99.4136 li
17.4526 99.4136 li
cp
f
89.3315 134.979 mo
89.3315 129.628 li
90.7212 129.628 li
90.7212 129.628 91.5269 129.628 91.9585 129.934 cv
91.9585 129.934 92.3882 130.226 92.3882 130.809 cv
92.3882 130.809 92.3882 131.782 91.2915 132.186 cv
91.2915 132.186 92.5972 132.588 92.5972 133.645 cv
92.5972 133.645 92.5972 134.298 92.1675 134.631 cv
92.1675 134.631 91.7358 134.979 90.9155 134.979 cv
89.3315 134.979 li
cp
90.0815 134.409 mo
90.2495 134.409 li
90.2495 134.409 91.0825 134.409 91.3198 134.312 cv
91.3198 134.312 91.7915 134.103 91.7915 133.575 cv
91.7915 133.575 91.7915 133.089 91.3745 132.769 cv
91.3745 132.769 90.9438 132.463 90.3042 132.463 cv
90.0815 132.463 li
90.0815 134.409 li
cp
90.0815 131.977 mo
90.3315 131.977 li
90.3315 131.977 90.9438 131.977 91.2769 131.712 cv
91.2769 131.712 91.6108 131.449 91.6108 130.976 cv
91.6108 130.976 91.6108 130.198 90.3872 130.198 cv
90.0815 130.198 li
90.0815 131.977 li
cp
0 0 0 .698044 cmyk
f
22.189 140.51 mo
159.086 140.51 li
159.086 228.931 li
22.189 228.931 li
22.189 140.51 li
cp
0 0 0 .200012 cmyk
@
22.189 140.51 mo
22.189 228.931 li
@
22.189 184.429 mo
159.086 184.429 li
@
22.189 219.8 mo
23.8989 219.8 li
@
159.086 219.8 mo
157.376 219.8 li
@
22.189 211.252 mo
23.8989 211.252 li
@
159.086 211.252 mo
157.376 211.252 li
@
22.189 202.121 mo
23.8989 202.121 li
@
159.086 202.121 mo
157.376 202.121 li
@
22.189 193.56 mo
23.8989 193.56 li
@
159.086 193.56 mo
157.376 193.56 li
@
22.189 184.429 mo
23.8989 184.429 li
@
159.086 184.429 mo
157.376 184.429 li
@
22.189 175.881 mo
23.8989 175.881 li
@
159.086 175.881 mo
157.376 175.881 li
@
22.189 166.75 mo
23.8989 166.75 li
@
159.086 166.75 mo
157.376 166.75 li
@
22.189 158.189 mo
23.8989 158.189 li
@
159.086 158.189 mo
157.376 158.189 li
@
22.189 149.072 mo
23.8989 149.072 li
@
159.086 149.072 mo
157.376 149.072 li
@
14.5894 146.208 mo
14.5894 145.681 li
15.6733 145.681 li
15.6733 141.456 li
14.5894 141.719 li
14.5894 141.164 li
16.3823 140.719 li
16.3823 145.681 li
17.4526 145.681 li
17.4526 146.208 li
14.5894 146.208 li
cp
0 0 0 1 cmyk
f
11.7397 227.054 mo
11.7397 226.512 li
14.9507 226.512 li
14.9507 227.054 li
11.7397 227.054 li
cp
16.8823 228.931 mo
16.8823 228.388 li
17.9526 228.388 li
17.9526 224.164 li
16.8823 224.427 li
16.8823 223.886 li
18.6616 223.44 li
18.6616 228.388 li
19.7319 228.388 li
19.7319 228.931 li
16.8823 228.931 li
cp
f
gsave
234.228 111.991 mo
244.499 111.991 li
244.499 130.24 li
234.228 130.24 li
234.228 111.991 li
cp
clp
gsave
-253.342 -88.2402 mo
-253.342 1023.62 li
511.059 1023.62 li
511.059 -88.2402 li
-253.342 -88.2402 li
cp
clp
gsave
234.228 111.991 mo
234.228 130.24 li
244.499 130.24 li
244.499 111.991 li
234.228 111.991 li
cp
clp
grestore
grestore
grestore
gsave
173.558 58.3726 mo
186.677 58.3726 li
186.677 76.6206 li
173.558 76.6206 li
173.558 58.3726 li
cp
clp
gsave
-253.342 -88.2402 mo
-253.342 1023.62 li
511.059 1023.62 li
511.059 -88.2402 li
-253.342 -88.2402 li
cp
clp
gsave
173.558 58.3726 mo
173.558 76.6206 li
186.677 76.6206 li
186.677 58.3726 li
173.558 58.3726 li
cp
clp
173.558 58.3726 mo
186.677 58.3726 li
186.677 76.6206 li
173.558 76.6206 li
173.558 58.3726 li
cp
0 0 0 0 cmyk
f
176.394 71.353 mo
179.521 63.1812 li
180.688 63.1812 li
184.037 71.353 li
182.8 71.353 li
181.854 68.8789 li
178.436 68.8789 li
177.532 71.353 li
176.394 71.353 li
cp
178.741 67.9897 mo
181.521 67.9897 li
180.659 65.7383 li
180.659 65.7383 180.271 64.7095 180.091 64.0425 cv
180.091 64.0425 179.924 64.8208 179.646 65.5991 cv
178.741 67.9897 li
cp
0 0 0 1 cmyk
f
grestore
grestore
grestore
gsave
277.422 111.991 mo
291.111 111.991 li
291.111 130.24 li
277.422 130.24 li
277.422 111.991 li
cp
clp
gsave
-253.342 -88.2402 mo
-253.342 1023.62 li
511.059 1023.62 li
511.059 -88.2402 li
-253.342 -88.2402 li
cp
clp
gsave
277.422 111.991 mo
277.422 130.24 li
291.111 130.24 li
291.111 111.991 li
277.422 111.991 li
cp
clp
277.422 111.991 mo
291.111 111.991 li
291.111 130.24 li
277.422 130.24 li
277.422 111.991 li
cp
0 0 0 0 cmyk
f
286.985 122.109 mo
288.068 122.387 li
288.068 122.387 287.721 123.708 286.844 124.416 cv
286.844 124.416 285.957 125.111 284.678 125.111 cv
284.678 125.111 283.356 125.111 282.536 124.569 cv
282.536 124.569 281.703 124.042 281.271 123.013 cv
281.271 123.013 280.839 121.998 280.839 120.831 cv
280.839 120.831 280.839 119.551 281.329 118.607 cv
281.329 118.607 281.814 117.648 282.718 117.162 cv
282.718 117.162 283.62 116.661 284.705 116.661 cv
284.705 116.661 285.926 116.661 286.762 117.286 cv
286.762 117.286 287.596 117.912 287.93 119.038 cv
286.858 119.302 li
286.858 119.302 286.581 118.398 286.038 117.996 cv
286.038 117.996 285.498 117.592 284.678 117.592 cv
284.678 117.592 283.731 117.592 283.106 118.037 cv
283.106 118.037 282.468 118.496 282.215 119.26 cv
282.215 119.26 281.953 120.01 281.953 120.816 cv
281.953 120.816 281.953 121.859 282.259 122.637 cv
282.259 122.637 282.563 123.416 283.204 123.804 cv
283.204 123.804 283.842 124.18 284.593 124.18 cv
284.593 124.18 285.498 124.18 286.135 123.666 cv
286.135 123.666 286.762 123.137 286.985 122.109 cv
cp
0 0 0 1 cmyk
f
grestore
grestore
grestore
gsave
172.641 171.879 mo
185.76 171.879 li
185.76 190.141 li
172.641 190.141 li
172.641 171.879 li
cp
clp
gsave
-253.342 -88.2402 mo
-253.342 1023.62 li
511.059 1023.62 li
511.059 -88.2402 li
-253.342 -88.2402 li
cp
clp
gsave
172.641 171.879 mo
172.641 190.141 li
185.76 190.141 li
185.76 171.879 li
172.641 171.879 li
cp
clp
172.641 171.879 mo
185.76 171.879 li
185.76 190.141 li
172.641 190.141 li
172.641 171.879 li
cp
0 0 0 0 cmyk
f
176.323 184.873 mo
176.323 176.701 li
179.381 176.701 li
179.381 176.701 180.325 176.701 180.882 176.952 cv
180.882 176.952 181.452 177.202 181.771 177.716 cv
181.771 177.716 182.091 178.23 182.091 178.786 cv
182.091 178.786 182.091 179.314 181.813 179.772 cv
181.813 179.772 181.521 180.246 180.951 180.523 cv
180.951 180.523 181.688 180.746 182.091 181.26 cv
182.091 181.26 182.494 181.788 182.494 182.497 cv
182.494 182.497 182.494 183.08 182.243 183.567 cv
182.243 183.567 182.007 184.067 181.646 184.332 cv
181.646 184.332 181.285 184.595 180.757 184.735 cv
180.757 184.735 180.214 184.873 179.437 184.873 cv
176.323 184.873 li
cp
177.407 180.134 mo
179.172 180.134 li
179.172 180.134 179.882 180.134 180.2 180.037 cv
180.2 180.037 180.617 179.912 180.826 179.634 cv
180.826 179.634 181.035 179.342 181.035 178.925 cv
181.035 178.925 181.035 178.508 180.84 178.202 cv
180.84 178.202 180.646 177.897 180.27 177.786 cv
180.27 177.786 179.909 177.66 179.033 177.66 cv
177.407 177.66 li
177.407 180.134 li
cp
177.407 183.9 mo
179.437 183.9 li
179.437 183.9 179.965 183.9 180.174 183.873 cv
180.174 183.873 180.548 183.804 180.798 183.637 cv
180.798 183.637 181.049 183.483 181.201 183.191 cv
181.201 183.191 181.368 182.886 181.368 182.497 cv
181.368 182.497 181.368 182.038 181.132 181.705 cv
181.132 181.705 180.896 181.372 180.492 181.232 cv
180.492 181.232 180.076 181.093 179.298 181.093 cv
177.407 181.093 li
177.407 183.9 li
cp
0 0 0 1 cmyk
f
grestore
grestore
grestore
239.607 160.061 mo
240.614 160.061 li
240.614 163.577 li
239.607 163.577 li
239.607 160.061 li
cp
f
239.607 226.842 mo
240.614 226.842 li
240.614 230.358 li
239.607 230.358 li
239.607 226.842 li
cp
f
240.623 142.479 mo
241.629 142.479 li
241.629 145.996 li
240.623 145.996 li
240.623 142.479 li
cp
f
240.623 181.144 mo
241.629 181.144 li
241.629 184.661 li
240.623 184.661 li
240.623 181.144 li
cp
f
240.623 184.661 mo
241.629 184.661 li
241.629 188.177 li
240.623 188.177 li
240.623 184.661 li
cp
f
240.623 205.758 mo
241.629 205.758 li
241.629 209.274 li
240.623 209.274 li
240.623 205.758 li
cp
f
240.623 265.52 mo
241.629 265.52 li
241.629 269.037 li
240.623 269.037 li
240.623 265.52 li
cp
f
240.623 269.022 mo
241.629 269.022 li
241.629 272.539 li
240.623 272.539 li
240.623 269.022 li
cp
f
241.622 212.79 mo
242.631 212.79 li
242.631 216.307 li
241.622 216.307 li
241.622 212.79 li
cp
f
241.622 230.358 mo
242.631 230.358 li
242.631 233.874 li
241.622 233.874 li
241.622 230.358 li
cp
f
241.622 233.874 mo
242.631 233.874 li
242.631 237.39 li
241.622 237.39 li
241.622 233.874 li
cp
f
241.622 247.939 mo
242.631 247.939 li
242.631 251.456 li
241.622 251.456 li
241.622 247.939 li
cp
f
242.636 223.325 mo
243.646 223.325 li
243.646 226.842 li
242.636 226.842 li
242.636 223.325 li
cp
f
243.638 160.061 mo
244.645 160.061 li
244.645 163.577 li
243.638 163.577 li
243.638 160.061 li
cp
f
243.638 163.577 mo
244.645 163.577 li
244.645 167.093 li
243.638 167.093 li
243.638 163.577 li
cp
f
243.638 191.693 mo
244.645 191.693 li
244.645 195.209 li
243.638 195.209 li
243.638 191.693 li
cp
f
243.638 195.209 mo
244.645 195.209 li
244.645 198.725 li
243.638 198.725 li
243.638 195.209 li
cp
f
243.638 258.487 mo
244.645 258.487 li
244.645 262.004 li
243.638 262.004 li
243.638 258.487 li
cp
f
243.638 265.52 mo
244.645 265.52 li
244.645 269.037 li
243.638 269.037 li
243.638 265.52 li
cp
f
244.651 142.479 mo
245.661 142.479 li
245.661 145.996 li
244.651 145.996 li
244.651 142.479 li
cp
f
244.651 174.125 mo
245.661 174.125 li
245.661 177.642 li
244.651 177.642 li
244.651 174.125 li
cp
f
244.651 181.144 mo
245.661 181.144 li
245.661 184.661 li
244.651 184.661 li
244.651 181.144 li
cp
f
244.651 198.725 mo
245.661 198.725 li
245.661 202.242 li
244.651 202.242 li
244.651 198.725 li
cp
f
244.651 233.874 mo
245.661 233.874 li
245.661 237.39 li
244.651 237.39 li
244.651 233.874 li
cp
f
244.651 254.971 mo
245.661 254.971 li
245.661 258.487 li
244.651 258.487 li
244.651 254.971 li
cp
f
245.666 149.512 mo
246.675 149.512 li
246.675 153.028 li
245.666 153.028 li
245.666 149.512 li
cp
f
245.666 205.758 mo
246.675 205.758 li
246.675 209.274 li
245.666 209.274 li
245.666 205.758 li
cp
f
245.666 216.307 mo
246.675 216.307 li
246.675 219.823 li
245.666 219.823 li
245.666 216.307 li
cp
f
245.666 230.358 mo
246.675 230.358 li
246.675 233.874 li
245.666 233.874 li
245.666 230.358 li
cp
f
245.666 269.022 mo
246.675 269.022 li
246.675 272.539 li
245.666 272.539 li
245.666 269.022 li
cp
f
246.667 160.061 mo
247.674 160.061 li
247.674 163.577 li
246.667 163.577 li
246.667 160.061 li
cp
f
246.667 184.661 mo
247.674 184.661 li
247.674 188.177 li
246.667 188.177 li
246.667 184.661 li
cp
f
246.667 212.79 mo
247.674 212.79 li
247.674 216.307 li
246.667 216.307 li
246.667 212.79 li
cp
f
246.667 226.842 mo
247.674 226.842 li
247.674 230.358 li
246.667 230.358 li
246.667 226.842 li
cp
f
246.667 237.39 mo
247.674 237.39 li
247.674 240.906 li
246.667 240.906 li
246.667 237.39 li
cp
f
247.683 142.479 mo
248.69 142.479 li
248.69 145.996 li
247.683 145.996 li
247.683 142.479 li
cp
f
247.683 163.577 mo
248.69 163.577 li
248.69 167.093 li
247.683 167.093 li
247.683 163.577 li
cp
f
247.683 223.325 mo
248.69 223.325 li
248.69 226.842 li
247.683 226.842 li
247.683 223.325 li
cp
f
247.683 233.874 mo
248.69 233.874 li
248.69 237.39 li
247.683 237.39 li
247.683 233.874 li
cp
f
247.683 247.939 mo
248.69 247.939 li
248.69 251.456 li
247.683 251.456 li
247.683 247.939 li
cp
f
247.683 265.52 mo
248.69 265.52 li
248.69 269.037 li
247.683 269.037 li
247.683 265.52 li
cp
f
248.682 181.144 mo
249.692 181.144 li
249.692 184.661 li
248.682 184.661 li
248.682 181.144 li
cp
f
248.682 198.725 mo
249.692 198.725 li
249.692 202.242 li
248.682 202.242 li
248.682 198.725 li
cp
f
248.682 209.274 mo
249.692 209.274 li
249.692 212.79 li
248.682 212.79 li
248.682 209.274 li
cp
f
249.697 170.609 mo
250.707 170.609 li
250.707 174.125 li
249.697 174.125 li
249.697 170.609 li
cp
f
249.697 195.209 mo
250.707 195.209 li
250.707 198.725 li
249.697 198.725 li
249.697 195.209 li
cp
f
249.697 230.358 mo
250.707 230.358 li
250.707 233.874 li
249.697 233.874 li
249.697 230.358 li
cp
f
249.697 258.487 mo
250.707 258.487 li
250.707 262.004 li
249.697 262.004 li
249.697 258.487 li
cp
f
249.697 269.022 mo
250.707 269.022 li
250.707 272.539 li
249.697 272.539 li
249.697 269.022 li
cp
f
250.699 142.479 mo
251.706 142.479 li
251.706 145.996 li
250.699 145.996 li
250.699 142.479 li
cp
f
250.699 160.061 mo
251.706 160.061 li
251.706 163.577 li
250.699 163.577 li
250.699 160.061 li
cp
f
250.699 174.125 mo
251.706 174.125 li
251.706 177.642 li
250.699 177.642 li
250.699 174.125 li
cp
f
250.699 202.242 mo
251.706 202.242 li
251.706 205.758 li
250.699 205.758 li
250.699 202.242 li
cp
f
250.699 205.758 mo
251.706 205.758 li
251.706 209.274 li
250.699 209.274 li
250.699 205.758 li
cp
f
250.699 233.874 mo
251.706 233.874 li
251.706 237.39 li
250.699 237.39 li
250.699 233.874 li
cp
f
250.699 265.52 mo
251.706 265.52 li
251.706 269.037 li
250.699 269.037 li
250.699 265.52 li
cp
f
251.711 191.693 mo
252.721 191.693 li
252.721 195.209 li
251.711 195.209 li
251.711 191.693 li
cp
f
252.712 149.512 mo
253.722 149.512 li
253.722 153.028 li
252.712 153.028 li
252.712 149.512 li
cp
f
252.712 163.577 mo
253.722 163.577 li
253.722 167.093 li
252.712 167.093 li
252.712 163.577 li
cp
f
252.712 181.144 mo
253.722 181.144 li
253.722 184.661 li
252.712 184.661 li
252.712 181.144 li
cp
f
252.712 184.661 mo
253.722 184.661 li
253.722 188.177 li
252.712 188.177 li
252.712 184.661 li
cp
f
252.712 212.79 mo
253.722 212.79 li
253.722 216.307 li
252.712 216.307 li
252.712 212.79 li
cp
f
252.712 223.325 mo
253.722 223.325 li
253.722 226.842 li
252.712 226.842 li
252.712 223.325 li
cp
f
253.728 142.479 mo
254.735 142.479 li
254.735 145.996 li
253.728 145.996 li
253.728 142.479 li
cp
f
253.728 198.725 mo
254.735 198.725 li
254.735 202.242 li
253.728 202.242 li
253.728 198.725 li
cp
f
253.728 226.842 mo
254.735 226.842 li
254.735 230.358 li
253.728 230.358 li
253.728 226.842 li
cp
f
253.728 230.358 mo
254.735 230.358 li
254.735 233.874 li
253.728 233.874 li
253.728 230.358 li
cp
f
253.728 233.874 mo
254.735 233.874 li
254.735 237.39 li
253.728 237.39 li
253.728 233.874 li
cp
f
253.728 247.939 mo
254.735 247.939 li
254.735 251.456 li
253.728 251.456 li
253.728 247.939 li
cp
f
253.728 254.971 mo
254.735 254.971 li
254.735 258.487 li
253.728 258.487 li
253.728 254.971 li
cp
f
253.728 265.52 mo
254.735 265.52 li
254.735 269.037 li
253.728 269.037 li
253.728 265.52 li
cp
f
254.743 160.061 mo
255.75 160.061 li
255.75 163.577 li
254.743 163.577 li
254.743 160.061 li
cp
f
254.743 195.209 mo
255.75 195.209 li
255.75 198.725 li
254.743 198.725 li
254.743 195.209 li
cp
f
254.743 205.758 mo
255.75 205.758 li
255.75 209.274 li
254.743 209.274 li
254.743 205.758 li
cp
f
254.743 269.022 mo
255.75 269.022 li
255.75 272.539 li
254.743 272.539 li
254.743 269.022 li
cp
f
256.757 142.479 mo
257.764 142.479 li
257.764 145.996 li
256.757 145.996 li
256.757 142.479 li
cp
f
256.757 163.577 mo
257.764 163.577 li
257.764 167.093 li
256.757 167.093 li
256.757 163.577 li
cp
f
256.757 174.125 mo
257.764 174.125 li
257.764 177.642 li
256.757 177.642 li
256.757 174.125 li
cp
f
256.757 181.144 mo
257.764 181.144 li
257.764 184.661 li
256.757 184.661 li
256.757 181.144 li
cp
f
256.757 223.325 mo
257.764 223.325 li
257.764 226.842 li
256.757 226.842 li
256.757 223.325 li
cp
f
256.757 258.487 mo
257.764 258.487 li
257.764 262.004 li
256.757 262.004 li
256.757 258.487 li
cp
f
257.759 212.79 mo
258.766 212.79 li
258.766 216.307 li
257.759 216.307 li
257.759 212.79 li
cp
f
257.759 216.307 mo
258.766 216.307 li
258.766 219.823 li
257.759 219.823 li
257.759 216.307 li
cp
f
257.759 230.358 mo
258.766 230.358 li
258.766 233.874 li
257.759 233.874 li
257.759 230.358 li
cp
f
257.759 233.874 mo
258.766 233.874 li
258.766 237.39 li
257.759 237.39 li
257.759 233.874 li
cp
f
257.759 237.39 mo
258.766 237.39 li
258.766 240.906 li
257.759 240.906 li
257.759 237.39 li
cp
f
257.759 265.52 mo
258.766 265.52 li
258.766 269.037 li
257.759 269.037 li
257.759 265.52 li
cp
f
258.771 160.061 mo
259.782 160.061 li
259.782 163.577 li
258.771 163.577 li
258.771 160.061 li
cp
f
258.771 198.725 mo
259.782 198.725 li
259.782 202.242 li
258.771 202.242 li
258.771 198.725 li
cp
f
259.773 142.479 mo
260.783 142.479 li
260.783 145.996 li
259.773 145.996 li
259.773 142.479 li
cp
f
259.773 184.661 mo
260.783 184.661 li
260.783 188.177 li
259.773 188.177 li
259.773 184.661 li
cp
f
259.773 191.693 mo
260.783 191.693 li
260.783 195.209 li
259.773 195.209 li
259.773 191.693 li
cp
f
259.773 205.758 mo
260.783 205.758 li
260.783 209.274 li
259.773 209.274 li
259.773 205.758 li
cp
f
259.773 247.939 mo
260.783 247.939 li
260.783 251.456 li
259.773 251.456 li
259.773 247.939 li
cp
f
259.773 269.022 mo
260.783 269.022 li
260.783 272.539 li
259.773 272.539 li
259.773 269.022 li
cp
f
260.789 149.512 mo
261.795 149.512 li
261.795 153.028 li
260.789 153.028 li
260.789 149.512 li
cp
f
260.789 195.209 mo
261.795 195.209 li
261.795 198.725 li
260.789 198.725 li
260.789 195.209 li
cp
f
260.789 226.842 mo
261.795 226.842 li
261.795 230.358 li
260.789 230.358 li
260.789 226.842 li
cp
f
260.789 230.358 mo
261.795 230.358 li
261.795 233.874 li
260.789 233.874 li
260.789 230.358 li
cp
f
260.789 233.874 mo
261.795 233.874 li
261.795 237.39 li
260.789 237.39 li
260.789 233.874 li
cp
f
260.789 265.52 mo
261.795 265.52 li
261.795 269.037 li
260.789 269.037 li
260.789 265.52 li
cp
f
261.788 163.577 mo
262.797 163.577 li
262.797 167.093 li
261.788 167.093 li
261.788 163.577 li
cp
f
261.788 181.144 mo
262.797 181.144 li
262.797 184.661 li
261.788 184.661 li
261.788 181.144 li
cp
f
261.788 223.325 mo
262.797 223.325 li
262.797 226.842 li
261.788 226.842 li
261.788 223.325 li
cp
f
262.802 142.479 mo
263.812 142.479 li
263.812 145.996 li
262.802 145.996 li
262.802 142.479 li
cp
f
262.802 160.061 mo
263.812 160.061 li
263.812 163.577 li
262.802 163.577 li
262.802 160.061 li
cp
f
262.802 174.125 mo
263.812 174.125 li
263.812 177.642 li
262.802 177.642 li
262.802 174.125 li
cp
f
262.802 209.274 mo
263.812 209.274 li
263.812 212.79 li
262.802 212.79 li
262.802 209.274 li
cp
f
262.802 212.79 mo
263.812 212.79 li
263.812 216.307 li
262.802 216.307 li
262.802 212.79 li
cp
f
262.802 254.971 mo
263.812 254.971 li
263.812 258.487 li
262.802 258.487 li
262.802 254.971 li
cp
f
263.818 170.609 mo
264.825 170.609 li
264.825 174.125 li
263.818 174.125 li
263.818 170.609 li
cp
f
263.818 198.725 mo
264.825 198.725 li
264.825 202.242 li
263.818 202.242 li
263.818 198.725 li
cp
f
263.818 233.874 mo
264.825 233.874 li
264.825 237.39 li
263.818 237.39 li
263.818 233.874 li
cp
f
263.818 258.487 mo
264.825 258.487 li
264.825 262.004 li
263.818 262.004 li
263.818 258.487 li
cp
f
263.818 269.022 mo
264.825 269.022 li
264.825 272.539 li
263.818 272.539 li
263.818 269.022 li
cp
f
264.819 205.758 mo
265.827 205.758 li
265.827 209.274 li
264.819 209.274 li
264.819 205.758 li
cp
f
264.819 230.358 mo
265.827 230.358 li
265.827 233.874 li
264.819 233.874 li
264.819 230.358 li
cp
f
264.819 247.939 mo
265.827 247.939 li
265.827 251.456 li
264.819 251.456 li
264.819 247.939 li
cp
f
264.819 265.52 mo
265.827 265.52 li
265.827 269.037 li
264.819 269.037 li
264.819 265.52 li
cp
f
265.832 142.479 mo
266.841 142.479 li
266.841 145.996 li
265.832 145.996 li
265.832 142.479 li
cp
f
265.832 163.577 mo
266.841 163.577 li
266.841 167.093 li
265.832 167.093 li
265.832 163.577 li
cp
f
265.832 181.144 mo
266.841 181.144 li
266.841 184.661 li
265.832 184.661 li
265.832 181.144 li
cp
f
265.832 195.209 mo
266.841 195.209 li
266.841 198.725 li
265.832 198.725 li
265.832 195.209 li
cp
f
266.833 160.061 mo
267.84 160.061 li
267.84 163.577 li
266.833 163.577 li
266.833 160.061 li
cp
f
266.833 184.661 mo
267.84 184.661 li
267.84 188.177 li
266.833 188.177 li
266.833 184.661 li
cp
f
266.833 223.325 mo
267.84 223.325 li
267.84 226.842 li
266.833 226.842 li
266.833 223.325 li
cp
f
266.833 233.874 mo
267.84 233.874 li
267.84 237.39 li
266.833 237.39 li
266.833 233.874 li
cp
f
267.849 212.79 mo
268.856 212.79 li
268.856 216.307 li
267.849 216.307 li
267.849 212.79 li
cp
f
267.849 226.842 mo
268.856 226.842 li
268.856 230.358 li
267.849 230.358 li
267.849 226.842 li
cp
f
267.849 237.39 mo
268.856 237.39 li
268.856 240.906 li
267.849 240.906 li
267.849 237.39 li
cp
f
267.849 265.52 mo
268.856 265.52 li
268.856 269.037 li
267.849 269.037 li
267.849 265.52 li
cp
f
268.848 142.479 mo
269.858 142.479 li
269.858 145.996 li
268.848 145.996 li
268.848 142.479 li
cp
f
268.848 149.512 mo
269.858 149.512 li
269.858 153.028 li
268.848 153.028 li
268.848 149.512 li
cp
f
268.848 174.125 mo
269.858 174.125 li
269.858 177.642 li
268.848 177.642 li
268.848 174.125 li
cp
f
268.848 191.693 mo
269.858 191.693 li
269.858 195.209 li
268.848 195.209 li
268.848 191.693 li
cp
f
268.848 230.358 mo
269.858 230.358 li
269.858 233.874 li
268.848 233.874 li
268.848 230.358 li
cp
f
268.848 269.022 mo
269.858 269.022 li
269.858 272.539 li
268.848 272.539 li
268.848 269.022 li
cp
f
269.863 181.144 mo
270.873 181.144 li
270.873 184.661 li
269.863 184.661 li
269.863 181.144 li
cp
f
269.863 198.725 mo
270.873 198.725 li
270.873 202.242 li
269.863 202.242 li
269.863 198.725 li
cp
f
269.863 205.758 mo
270.873 205.758 li
270.873 209.274 li
269.863 209.274 li
269.863 205.758 li
cp
f
269.863 233.874 mo
270.873 233.874 li
270.873 237.39 li
269.863 237.39 li
269.863 233.874 li
cp
f
270.865 160.061 mo
271.872 160.061 li
271.872 163.577 li
270.865 163.577 li
270.865 160.061 li
cp
f
270.865 163.577 mo
271.872 163.577 li
271.872 167.093 li
270.865 167.093 li
270.865 163.577 li
cp
f
270.865 216.307 mo
271.872 216.307 li
271.872 219.823 li
270.865 219.823 li
270.865 216.307 li
cp
f
270.865 247.939 mo
271.872 247.939 li
271.872 251.456 li
270.865 251.456 li
270.865 247.939 li
cp
f
270.865 254.971 mo
271.872 254.971 li
271.872 258.487 li
270.865 258.487 li
270.865 254.971 li
cp
f
270.865 258.487 mo
271.872 258.487 li
271.872 262.004 li
270.865 262.004 li
270.865 258.487 li
cp
f
270.865 265.52 mo
271.872 265.52 li
271.872 269.037 li
270.865 269.037 li
270.865 265.52 li
cp
f
271.879 142.479 mo
272.887 142.479 li
272.887 145.996 li
271.879 145.996 li
271.879 142.479 li
cp
f
271.879 184.661 mo
272.887 184.661 li
272.887 188.177 li
271.879 188.177 li
271.879 184.661 li
cp
f
271.879 195.209 mo
272.887 195.209 li
272.887 198.725 li
271.879 198.725 li
271.879 195.209 li
cp
f
271.879 223.325 mo
272.887 223.325 li
272.887 226.842 li
271.879 226.842 li
271.879 223.325 li
cp
f
272.892 230.358 mo
273.902 230.358 li
273.902 233.874 li
272.892 233.874 li
272.892 230.358 li
cp
f
272.892 233.874 mo
273.902 233.874 li
273.902 237.39 li
272.892 237.39 li
272.892 233.874 li
cp
f
272.892 269.022 mo
273.902 269.022 li
273.902 272.539 li
272.892 272.539 li
272.892 269.022 li
cp
f
273.894 160.061 mo
274.901 160.061 li
274.901 163.577 li
273.894 163.577 li
273.894 160.061 li
cp
f
273.894 181.144 mo
274.901 181.144 li
274.901 184.661 li
273.894 184.661 li
273.894 181.144 li
cp
f
273.894 212.79 mo
274.901 212.79 li
274.901 216.307 li
273.894 216.307 li
273.894 212.79 li
cp
f
274.909 142.479 mo
275.917 142.479 li
275.917 145.996 li
274.909 145.996 li
274.909 142.479 li
cp
f
274.909 163.577 mo
275.917 163.577 li
275.917 167.093 li
274.909 167.093 li
274.909 163.577 li
cp
f
274.909 174.125 mo
275.917 174.125 li
275.917 177.642 li
274.909 177.642 li
274.909 174.125 li
cp
f
274.909 198.725 mo
275.917 198.725 li
275.917 202.242 li
274.909 202.242 li
274.909 198.725 li
cp
f
274.909 205.758 mo
275.917 205.758 li
275.917 209.274 li
274.909 209.274 li
274.909 205.758 li
cp
f
274.909 226.842 mo
275.917 226.842 li
275.917 230.358 li
274.909 230.358 li
274.909 226.842 li
cp
f
274.909 265.52 mo
275.917 265.52 li
275.917 269.037 li
274.909 269.037 li
274.909 265.52 li
cp
f
275.908 149.512 mo
276.917 149.512 li
276.917 153.028 li
275.908 153.028 li
275.908 149.512 li
cp
f
275.908 230.358 mo
276.917 230.358 li
276.917 233.874 li
275.908 233.874 li
275.908 230.358 li
cp
f
275.908 233.874 mo
276.917 233.874 li
276.917 237.39 li
275.908 237.39 li
275.908 233.874 li
cp
f
276.923 184.661 mo
277.933 184.661 li
277.933 188.177 li
276.923 188.177 li
276.923 184.661 li
cp
f
276.923 191.693 mo
277.933 191.693 li
277.933 195.209 li
276.923 195.209 li
276.923 191.693 li
cp
f
276.923 195.209 mo
277.933 195.209 li
277.933 198.725 li
276.923 198.725 li
276.923 195.209 li
cp
f
276.923 223.325 mo
277.933 223.325 li
277.933 226.842 li
276.923 226.842 li
276.923 223.325 li
cp
f
276.923 247.939 mo
277.933 247.939 li
277.933 251.456 li
276.923 251.456 li
276.923 247.939 li
cp
f
276.923 258.487 mo
277.933 258.487 li
277.933 262.004 li
276.923 262.004 li
276.923 258.487 li
cp
f
277.925 142.479 mo
278.932 142.479 li
278.932 145.996 li
277.925 145.996 li
277.925 142.479 li
cp
f
277.925 160.061 mo
278.932 160.061 li
278.932 163.577 li
277.925 163.577 li
277.925 160.061 li
cp
f
277.925 181.144 mo
278.932 181.144 li
278.932 184.661 li
277.925 184.661 li
277.925 181.144 li
cp
f
277.925 237.39 mo
278.932 237.39 li
278.932 240.906 li
277.925 240.906 li
277.925 237.39 li
cp
f
277.925 254.971 mo
278.932 254.971 li
278.932 258.487 li
277.925 258.487 li
277.925 254.971 li
cp
f
277.925 265.52 mo
278.932 265.52 li
278.932 269.037 li
277.925 269.037 li
277.925 265.52 li
cp
f
277.925 269.022 mo
278.932 269.022 li
278.932 272.539 li
277.925 272.539 li
277.925 269.022 li
cp
f
278.94 163.577 mo
279.947 163.577 li
279.947 167.093 li
278.94 167.093 li
278.94 163.577 li
cp
f
278.94 198.725 mo
279.947 198.725 li
279.947 202.242 li
278.94 202.242 li
278.94 198.725 li
cp
f
278.94 212.79 mo
279.947 212.79 li
279.947 216.307 li
278.94 216.307 li
278.94 212.79 li
cp
f
278.94 233.874 mo
279.947 233.874 li
279.947 237.39 li
278.94 237.39 li
278.94 233.874 li
cp
f
279.939 170.609 mo
280.949 170.609 li
280.949 174.125 li
279.939 174.125 li
279.939 170.609 li
cp
f
279.939 205.758 mo
280.949 205.758 li
280.949 209.274 li
279.939 209.274 li
279.939 205.758 li
cp
f
279.939 230.358 mo
280.949 230.358 li
280.949 233.874 li
279.939 233.874 li
279.939 230.358 li
cp
f
280.955 142.479 mo
281.961 142.479 li
281.961 145.996 li
280.955 145.996 li
280.955 142.479 li
cp
f
280.955 160.061 mo
281.961 160.061 li
281.961 163.577 li
280.955 163.577 li
280.955 160.061 li
cp
f
280.955 174.125 mo
281.961 174.125 li
281.961 177.642 li
280.955 177.642 li
280.955 174.125 li
cp
f
280.955 265.52 mo
281.961 265.52 li
281.961 269.037 li
280.955 269.037 li
280.955 265.52 li
cp
f
281.969 209.274 mo
282.977 209.274 li
282.977 212.79 li
281.969 212.79 li
281.969 209.274 li
cp
f
281.969 223.325 mo
282.977 223.325 li
282.977 226.842 li
281.969 226.842 li
281.969 223.325 li
cp
f
281.969 226.842 mo
282.977 226.842 li
282.977 230.358 li
281.969 230.358 li
281.969 226.842 li
cp
f
281.969 233.874 mo
282.977 233.874 li
282.977 237.39 li
281.969 237.39 li
281.969 233.874 li
cp
f
281.969 247.939 mo
282.977 247.939 li
282.977 251.456 li
281.969 251.456 li
281.969 247.939 li
cp
f
281.969 269.022 mo
282.977 269.022 li
282.977 272.539 li
281.969 272.539 li
281.969 269.022 li
cp
f
282.968 163.577 mo
283.978 163.577 li
283.978 167.093 li
282.968 167.093 li
282.968 163.577 li
cp
f
282.968 181.144 mo
283.978 181.144 li
283.978 184.661 li
282.968 184.661 li
282.968 181.144 li
cp
f
282.968 195.209 mo
283.978 195.209 li
283.978 198.725 li
282.968 198.725 li
282.968 195.209 li
cp
f
282.968 216.307 mo
283.978 216.307 li
283.978 219.823 li
282.968 219.823 li
282.968 216.307 li
cp
f
283.984 142.479 mo
284.994 142.479 li
284.994 145.996 li
283.984 145.996 li
283.984 142.479 li
cp
f
283.984 198.725 mo
284.994 198.725 li
284.994 202.242 li
283.984 202.242 li
283.984 198.725 li
cp
f
283.984 202.242 mo
284.994 202.242 li
284.994 205.758 li
283.984 205.758 li
283.984 202.242 li
cp
f
283.984 230.358 mo
284.994 230.358 li
284.994 233.874 li
283.984 233.874 li
283.984 230.358 li
cp
f
283.984 258.487 mo
284.994 258.487 li
284.994 262.004 li
283.984 262.004 li
283.984 258.487 li
cp
f
284.985 149.512 mo
285.993 149.512 li
285.993 153.028 li
284.985 153.028 li
284.985 149.512 li
cp
f
284.985 160.061 mo
285.993 160.061 li
285.993 163.577 li
284.985 163.577 li
284.985 160.061 li
cp
f
284.985 184.661 mo
285.993 184.661 li
285.993 188.177 li
284.985 188.177 li
284.985 184.661 li
cp
f
284.985 191.693 mo
285.993 191.693 li
285.993 195.209 li
284.985 195.209 li
284.985 191.693 li
cp
f
284.985 205.758 mo
285.993 205.758 li
285.993 209.274 li
284.985 209.274 li
284.985 205.758 li
cp
f
284.985 212.79 mo
285.993 212.79 li
285.993 216.307 li
284.985 216.307 li
284.985 212.79 li
cp
f
284.985 233.874 mo
285.993 233.874 li
285.993 237.39 li
284.985 237.39 li
284.985 233.874 li
cp
f
284.985 265.52 mo
285.993 265.52 li
285.993 269.037 li
284.985 269.037 li
284.985 265.52 li
cp
f
287 142.479 mo
288.009 142.479 li
288.009 145.996 li
287 145.996 li
287 142.479 li
cp
f
287 174.125 mo
288.009 174.125 li
288.009 177.642 li
287 177.642 li
287 174.125 li
cp
f
287 181.144 mo
288.009 181.144 li
288.009 184.661 li
287 184.661 li
287 181.144 li
cp
f
287 223.325 mo
288.009 223.325 li
288.009 226.842 li
287 226.842 li
287 223.325 li
cp
f
287 254.971 mo
288.009 254.971 li
288.009 258.487 li
287 258.487 li
287 254.971 li
cp
f
287 269.022 mo
288.009 269.022 li
288.009 272.539 li
287 272.539 li
287 269.022 li
cp
f
288.015 163.577 mo
289.022 163.577 li
289.022 167.093 li
288.015 167.093 li
288.015 163.577 li
cp
f
288.015 230.358 mo
289.022 230.358 li
289.022 233.874 li
288.015 233.874 li
288.015 230.358 li
cp
f
288.015 233.874 mo
289.022 233.874 li
289.022 237.39 li
288.015 237.39 li
288.015 233.874 li
cp
f
288.015 247.939 mo
289.022 247.939 li
289.022 251.456 li
288.015 251.456 li
288.015 247.939 li
cp
f
288.015 265.52 mo
289.022 265.52 li
289.022 269.037 li
288.015 269.037 li
288.015 265.52 li
cp
f
289.016 160.061 mo
290.023 160.061 li
290.023 163.577 li
289.016 163.577 li
289.016 160.061 li
cp
f
289.016 195.209 mo
290.023 195.209 li
290.023 198.725 li
289.016 198.725 li
289.016 195.209 li
cp
f
289.016 198.725 mo
290.023 198.725 li
290.023 202.242 li
289.016 202.242 li
289.016 198.725 li
cp
f
289.016 205.758 mo
290.023 205.758 li
290.023 209.274 li
289.016 209.274 li
289.016 205.758 li
cp
f
289.016 226.842 mo
290.023 226.842 li
290.023 230.358 li
289.016 230.358 li
289.016 226.842 li
cp
f
289.016 237.39 mo
290.023 237.39 li
290.023 240.906 li
289.016 240.906 li
289.016 237.39 li
cp
f
290.029 142.479 mo
291.039 142.479 li
291.039 145.996 li
290.029 145.996 li
290.029 142.479 li
cp
f
290.029 184.661 mo
291.039 184.661 li
291.039 188.177 li
290.029 188.177 li
290.029 184.661 li
cp
f
290.029 212.79 mo
291.039 212.79 li
291.039 216.307 li
290.029 216.307 li
290.029 212.79 li
cp
f
291.044 149.512 mo
292.054 149.512 li
292.054 153.028 li
291.044 153.028 li
291.044 149.512 li
cp
f
291.044 181.144 mo
292.054 181.144 li
292.054 184.661 li
291.044 184.661 li
291.044 181.144 li
cp
f
291.044 233.874 mo
292.054 233.874 li
292.054 237.39 li
291.044 237.39 li
291.044 233.874 li
cp
f
291.044 258.487 mo
292.054 258.487 li
292.054 262.004 li
291.044 262.004 li
291.044 258.487 li
cp
f
291.044 265.52 mo
292.054 265.52 li
292.054 269.037 li
291.044 269.037 li
291.044 265.52 li
cp
f
291.044 269.022 mo
292.054 269.022 li
292.054 272.539 li
291.044 272.539 li
291.044 269.022 li
cp
f
292.045 163.577 mo
293.053 163.577 li
293.053 167.093 li
292.045 167.093 li
292.045 163.577 li
cp
f
292.045 209.274 mo
293.053 209.274 li
293.053 212.79 li
292.045 212.79 li
292.045 209.274 li
cp
f
292.045 223.325 mo
293.053 223.325 li
293.053 226.842 li
292.045 226.842 li
292.045 223.325 li
cp
f
292.045 230.358 mo
293.053 230.358 li
293.053 233.874 li
292.045 233.874 li
292.045 230.358 li
cp
f
293.058 142.479 mo
294.068 142.479 li
294.068 145.996 li
293.058 145.996 li
293.058 142.479 li
cp
f
293.058 160.061 mo
294.068 160.061 li
294.068 163.577 li
293.058 163.577 li
293.058 160.061 li
cp
f
293.058 174.125 mo
294.068 174.125 li
294.068 177.642 li
293.058 177.642 li
293.058 174.125 li
cp
f
293.058 191.693 mo
294.068 191.693 li
294.068 195.209 li
293.058 195.209 li
293.058 191.693 li
cp
f
293.058 202.242 mo
294.068 202.242 li
294.068 205.758 li
293.058 205.758 li
293.058 202.242 li
cp
f
293.058 247.939 mo
294.068 247.939 li
294.068 251.456 li
293.058 251.456 li
293.058 247.939 li
cp
f
294.06 195.209 mo
295.07 195.209 li
295.07 198.725 li
294.06 198.725 li
294.06 195.209 li
cp
f
294.06 198.725 mo
295.07 198.725 li
295.07 202.242 li
294.06 202.242 li
294.06 198.725 li
cp
f
294.06 205.758 mo
295.07 205.758 li
295.07 209.274 li
294.06 209.274 li
294.06 205.758 li
cp
f
295.075 181.144 mo
296.083 181.144 li
296.083 184.661 li
295.075 184.661 li
295.075 181.144 li
cp
f
295.075 212.79 mo
296.083 212.79 li
296.083 216.307 li
295.075 216.307 li
295.075 212.79 li
cp
f
295.075 216.307 mo
296.083 216.307 li
296.083 219.823 li
295.075 219.823 li
295.075 216.307 li
cp
f
295.075 233.874 mo
296.083 233.874 li
296.083 237.39 li
295.075 237.39 li
295.075 233.874 li
cp
f
295.075 265.52 mo
296.083 265.52 li
296.083 269.037 li
295.075 269.037 li
295.075 265.52 li
cp
f
296.074 142.479 mo
297.083 142.479 li
297.083 145.996 li
296.074 145.996 li
296.074 142.479 li
cp
f
296.074 226.842 mo
297.083 226.842 li
297.083 230.358 li
296.074 230.358 li
296.074 226.842 li
cp
f
296.074 230.358 mo
297.083 230.358 li
297.083 233.874 li
296.074 233.874 li
296.074 230.358 li
cp
f
296.074 254.971 mo
297.083 254.971 li
297.083 258.487 li
296.074 258.487 li
296.074 254.971 li
cp
f
296.074 269.022 mo
297.083 269.022 li
297.083 272.539 li
296.074 272.539 li
296.074 269.022 li
cp
f
297.089 160.061 mo
298.099 160.061 li
298.099 163.577 li
297.089 163.577 li
297.089 160.061 li
cp
f
297.089 163.577 mo
298.099 163.577 li
298.099 167.093 li
297.089 167.093 li
297.089 163.577 li
cp
f
297.089 184.661 mo
298.099 184.661 li
298.099 188.177 li
297.089 188.177 li
297.089 184.661 li
cp
f
297.089 223.325 mo
298.099 223.325 li
298.099 226.842 li
297.089 226.842 li
297.089 223.325 li
cp
f
298.091 233.874 mo
299.098 233.874 li
299.098 237.39 li
298.091 237.39 li
298.091 233.874 li
cp
f
298.091 258.487 mo
299.098 258.487 li
299.098 262.004 li
298.091 262.004 li
298.091 258.487 li
cp
f
298.091 265.52 mo
299.098 265.52 li
299.098 269.037 li
298.091 269.037 li
298.091 265.52 li
cp
f
299.106 142.479 mo
300.113 142.479 li
300.113 145.996 li
299.106 145.996 li
299.106 142.479 li
cp
f
299.106 149.512 mo
300.113 149.512 li
300.113 153.028 li
299.106 153.028 li
299.106 149.512 li
cp
f
299.106 174.125 mo
300.113 174.125 li
300.113 177.642 li
299.106 177.642 li
299.106 174.125 li
cp
f
299.106 181.144 mo
300.113 181.144 li
300.113 184.661 li
299.106 184.661 li
299.106 181.144 li
cp
f
299.106 198.725 mo
300.113 198.725 li
300.113 202.242 li
299.106 202.242 li
299.106 198.725 li
cp
f
299.106 205.758 mo
300.113 205.758 li
300.113 209.274 li
299.106 209.274 li
299.106 205.758 li
cp
f
299.106 247.939 mo
300.113 247.939 li
300.113 251.456 li
299.106 251.456 li
299.106 247.939 li
cp
f
300.119 195.209 mo
301.128 195.209 li
301.128 198.725 li
300.119 198.725 li
300.119 195.209 li
cp
f
300.119 230.358 mo
301.128 230.358 li
301.128 233.874 li
300.119 233.874 li
300.119 230.358 li
cp
f
300.119 237.39 mo
301.128 237.39 li
301.128 240.906 li
300.119 240.906 li
300.119 237.39 li
cp
f
300.119 269.022 mo
301.128 269.022 li
301.128 272.539 li
300.119 272.539 li
300.119 269.022 li
cp
f
301.121 160.061 mo
302.13 160.061 li
302.13 163.577 li
301.121 163.577 li
301.121 160.061 li
cp
f
301.121 212.79 mo
302.13 212.79 li
302.13 216.307 li
301.121 216.307 li
301.121 212.79 li
cp
f
301.121 223.325 mo
302.13 223.325 li
302.13 226.842 li
301.121 226.842 li
301.121 223.325 li
cp
f
301.121 233.874 mo
302.13 233.874 li
302.13 237.39 li
301.121 237.39 li
301.121 233.874 li
cp
f
301.121 265.52 mo
302.13 265.52 li
302.13 269.037 li
301.121 269.037 li
301.121 265.52 li
cp
f
302.135 142.479 mo
303.142 142.479 li
303.142 145.996 li
302.135 145.996 li
302.135 142.479 li
cp
f
302.135 163.577 mo
303.142 163.577 li
303.142 167.093 li
302.135 167.093 li
302.135 163.577 li
cp
f
302.135 191.693 mo
303.142 191.693 li
303.142 195.209 li
302.135 195.209 li
302.135 191.693 li
cp
f
303.134 181.144 mo
304.144 181.144 li
304.144 184.661 li
303.134 184.661 li
303.134 181.144 li
cp
f
303.134 184.661 mo
304.144 184.661 li
304.144 188.177 li
303.134 188.177 li
303.134 184.661 li
cp
f
303.134 226.842 mo
304.144 226.842 li
304.144 230.358 li
303.134 230.358 li
303.134 226.842 li
cp
f
304.15 170.609 mo
305.16 170.609 li
305.16 174.125 li
304.15 174.125 li
304.15 170.609 li
cp
f
304.15 198.725 mo
305.16 198.725 li
305.16 202.242 li
304.15 202.242 li
304.15 198.725 li
cp
f
304.15 205.758 mo
305.16 205.758 li
305.16 209.274 li
304.15 209.274 li
304.15 205.758 li
cp
f
304.15 230.358 mo
305.16 230.358 li
305.16 233.874 li
304.15 233.874 li
304.15 230.358 li
cp
f
304.15 233.874 mo
305.16 233.874 li
305.16 237.39 li
304.15 237.39 li
304.15 233.874 li
cp
f
305.151 142.479 mo
306.159 142.479 li
306.159 145.996 li
305.151 145.996 li
305.151 142.479 li
cp
f
305.151 160.061 mo
306.159 160.061 li
306.159 163.577 li
305.151 163.577 li
305.151 160.061 li
cp
f
305.151 174.125 mo
306.159 174.125 li
306.159 177.642 li
305.151 177.642 li
305.151 174.125 li
cp
f
305.151 195.209 mo
306.159 195.209 li
306.159 198.725 li
305.151 198.725 li
305.151 195.209 li
cp
f
305.151 247.939 mo
306.159 247.939 li
306.159 251.456 li
305.151 251.456 li
305.151 247.939 li
cp
f
305.151 254.971 mo
306.159 254.971 li
306.159 258.487 li
305.151 258.487 li
305.151 254.971 li
cp
f
305.151 258.487 mo
306.159 258.487 li
306.159 262.004 li
305.151 262.004 li
305.151 258.487 li
cp
f
305.151 265.52 mo
306.159 265.52 li
306.159 269.037 li
305.151 269.037 li
305.151 265.52 li
cp
f
305.151 269.022 mo
306.159 269.022 li
306.159 272.539 li
305.151 272.539 li
305.151 269.022 li
cp
f
306.167 163.577 mo
307.173 163.577 li
307.173 167.093 li
306.167 167.093 li
306.167 163.577 li
cp
f
306.167 212.79 mo
307.173 212.79 li
307.173 216.307 li
306.167 216.307 li
306.167 212.79 li
cp
f
306.167 223.325 mo
307.173 223.325 li
307.173 226.842 li
306.167 226.842 li
306.167 223.325 li
cp
f
307.166 181.144 mo
308.175 181.144 li
308.175 184.661 li
307.166 184.661 li
307.166 181.144 li
cp
f
307.166 233.874 mo
308.175 233.874 li
308.175 237.39 li
307.166 237.39 li
307.166 233.874 li
cp
f
308.18 142.479 mo
309.188 142.479 li
309.188 145.996 li
308.18 145.996 li
308.18 142.479 li
cp
f
308.18 149.512 mo
309.188 149.512 li
309.188 153.028 li
308.18 153.028 li
308.18 149.512 li
cp
f
308.18 198.725 mo
309.188 198.725 li
309.188 202.242 li
308.18 202.242 li
308.18 198.725 li
cp
f
308.18 216.307 mo
309.188 216.307 li
309.188 219.823 li
308.18 219.823 li
308.18 216.307 li
cp
f
308.18 230.358 mo
309.188 230.358 li
309.188 233.874 li
308.18 233.874 li
308.18 230.358 li
cp
f
308.18 265.52 mo
309.188 265.52 li
309.188 269.037 li
308.18 269.037 li
308.18 265.52 li
cp
f
309.196 160.061 mo
310.203 160.061 li
310.203 163.577 li
309.196 163.577 li
309.196 160.061 li
cp
f
309.196 205.758 mo
310.203 205.758 li
310.203 209.274 li
309.196 209.274 li
309.196 205.758 li
cp
f
309.196 269.022 mo
310.203 269.022 li
310.203 272.539 li
309.196 272.539 li
309.196 269.022 li
cp
f
310.195 163.577 mo
311.205 163.577 li
311.205 167.093 li
310.195 167.093 li
310.195 163.577 li
cp
f
310.195 184.661 mo
311.205 184.661 li
311.205 188.177 li
310.195 188.177 li
310.195 184.661 li
cp
f
310.195 191.693 mo
311.205 191.693 li
311.205 195.209 li
310.195 195.209 li
310.195 191.693 li
cp
f
310.195 209.274 mo
311.205 209.274 li
311.205 212.79 li
310.195 212.79 li
310.195 209.274 li
cp
f
310.195 226.842 mo
311.205 226.842 li
311.205 230.358 li
310.195 230.358 li
310.195 226.842 li
cp
f
310.195 233.874 mo
311.205 233.874 li
311.205 237.39 li
310.195 237.39 li
310.195 233.874 li
cp
f
310.195 237.39 mo
311.205 237.39 li
311.205 240.906 li
310.195 240.906 li
310.195 237.39 li
cp
f
311.21 142.479 mo
312.22 142.479 li
312.22 145.996 li
311.21 145.996 li
311.21 142.479 li
cp
f
311.21 174.125 mo
312.22 174.125 li
312.22 177.642 li
311.21 177.642 li
311.21 174.125 li
cp
f
311.21 181.144 mo
312.22 181.144 li
312.22 184.661 li
311.21 184.661 li
311.21 181.144 li
cp
f
311.21 195.209 mo
312.22 195.209 li
312.22 198.725 li
311.21 198.725 li
311.21 195.209 li
cp
f
311.21 223.325 mo
312.22 223.325 li
312.22 226.842 li
311.21 226.842 li
311.21 223.325 li
cp
f
311.21 247.939 mo
312.22 247.939 li
312.22 251.456 li
311.21 251.456 li
311.21 247.939 li
cp
f
311.21 258.487 mo
312.22 258.487 li
312.22 262.004 li
311.21 262.004 li
311.21 258.487 li
cp
f
312.211 212.79 mo
313.218 212.79 li
313.218 216.307 li
312.211 216.307 li
312.211 212.79 li
cp
f
312.211 230.358 mo
313.218 230.358 li
313.218 233.874 li
312.211 233.874 li
312.211 230.358 li
cp
f
312.211 265.52 mo
313.218 265.52 li
313.218 269.037 li
312.211 269.037 li
312.211 265.52 li
cp
f
313.227 160.061 mo
314.234 160.061 li
314.234 163.577 li
313.227 163.577 li
313.227 160.061 li
cp
f
313.227 170.609 mo
314.234 170.609 li
314.234 174.125 li
313.227 174.125 li
313.227 170.609 li
cp
f
313.227 198.725 mo
314.234 198.725 li
314.234 202.242 li
313.227 202.242 li
313.227 198.725 li
cp
f
313.227 233.874 mo
314.234 233.874 li
314.234 237.39 li
313.227 237.39 li
313.227 233.874 li
cp
f
314.226 142.479 mo
315.236 142.479 li
315.236 145.996 li
314.226 145.996 li
314.226 142.479 li
cp
f
314.226 163.577 mo
315.236 163.577 li
315.236 167.093 li
314.226 167.093 li
314.226 163.577 li
cp
f
314.226 205.758 mo
315.236 205.758 li
315.236 209.274 li
314.226 209.274 li
314.226 205.758 li
cp
f
314.226 254.971 mo
315.236 254.971 li
315.236 258.487 li
314.226 258.487 li
314.226 254.971 li
cp
f
314.226 269.022 mo
315.236 269.022 li
315.236 272.539 li
314.226 272.539 li
314.226 269.022 li
cp
f
315.241 181.144 mo
316.249 181.144 li
316.249 184.661 li
315.241 184.661 li
315.241 181.144 li
cp
f
315.241 230.358 mo
316.249 230.358 li
316.249 233.874 li
315.241 233.874 li
315.241 230.358 li
cp
f
315.241 265.52 mo
316.249 265.52 li
316.249 269.037 li
315.241 269.037 li
315.241 265.52 li
cp
f
316.243 149.512 mo
317.25 149.512 li
317.25 153.028 li
316.243 153.028 li
316.243 149.512 li
cp
f
316.243 160.061 mo
317.25 160.061 li
317.25 163.577 li
316.243 163.577 li
316.243 160.061 li
cp
f
316.243 195.209 mo
317.25 195.209 li
317.25 198.725 li
316.243 198.725 li
316.243 195.209 li
cp
f
316.243 223.325 mo
317.25 223.325 li
317.25 226.842 li
316.243 226.842 li
316.243 223.325 li
cp
f
316.243 233.874 mo
317.25 233.874 li
317.25 237.39 li
316.243 237.39 li
316.243 233.874 li
cp
f
316.243 247.939 mo
317.25 247.939 li
317.25 251.456 li
316.243 251.456 li
316.243 247.939 li
cp
f
317.255 142.479 mo
318.265 142.479 li
318.265 145.996 li
317.255 145.996 li
317.255 142.479 li
cp
f
317.255 174.125 mo
318.265 174.125 li
318.265 177.642 li
317.255 177.642 li
317.255 174.125 li
cp
f
317.255 184.661 mo
318.265 184.661 li
318.265 188.177 li
317.255 188.177 li
317.255 184.661 li
cp
f
317.255 212.79 mo
318.265 212.79 li
318.265 216.307 li
317.255 216.307 li
317.255 212.79 li
cp
f
317.255 226.842 mo
318.265 226.842 li
318.265 230.358 li
317.255 230.358 li
317.255 226.842 li
cp
f
318.256 258.487 mo
319.264 258.487 li
319.264 262.004 li
318.256 262.004 li
318.256 258.487 li
cp
f
318.256 265.52 mo
319.264 265.52 li
319.264 269.037 li
318.256 269.037 li
318.256 265.52 li
cp
f
318.256 269.022 mo
319.264 269.022 li
319.264 272.539 li
318.256 272.539 li
318.256 269.022 li
cp
f
319.272 163.577 mo
320.279 163.577 li
320.279 167.093 li
319.272 167.093 li
319.272 163.577 li
cp
f
319.272 181.144 mo
320.279 181.144 li
320.279 184.661 li
319.272 184.661 li
319.272 181.144 li
cp
f
319.272 191.693 mo
320.279 191.693 li
320.279 195.209 li
319.272 195.209 li
319.272 191.693 li
cp
f
319.272 198.725 mo
320.279 198.725 li
320.279 202.242 li
319.272 202.242 li
319.272 198.725 li
cp
f
319.272 205.758 mo
320.279 205.758 li
320.279 209.274 li
319.272 209.274 li
319.272 205.758 li
cp
f
319.272 230.358 mo
320.279 230.358 li
320.279 233.874 li
319.272 233.874 li
319.272 230.358 li
cp
f
320.288 142.479 mo
321.294 142.479 li
321.294 145.996 li
320.288 145.996 li
320.288 142.479 li
cp
f
320.288 216.307 mo
321.294 216.307 li
321.294 219.823 li
320.288 219.823 li
320.288 216.307 li
cp
f
320.288 233.874 mo
321.294 233.874 li
321.294 237.39 li
320.288 237.39 li
320.288 233.874 li
cp
f
321.287 160.061 mo
322.296 160.061 li
322.296 163.577 li
321.287 163.577 li
321.287 160.061 li
cp
f
321.287 195.209 mo
322.296 195.209 li
322.296 198.725 li
321.287 198.725 li
321.287 195.209 li
cp
f
321.287 202.242 mo
322.296 202.242 li
322.296 205.758 li
321.287 205.758 li
321.287 202.242 li
cp
f
321.287 223.325 mo
322.296 223.325 li
322.296 226.842 li
321.287 226.842 li
321.287 223.325 li
cp
f
321.287 237.39 mo
322.296 237.39 li
322.296 240.906 li
321.287 240.906 li
321.287 237.39 li
cp
f
321.287 247.939 mo
322.296 247.939 li
322.296 251.456 li
321.287 251.456 li
321.287 247.939 li
cp
f
322.301 184.661 mo
323.308 184.661 li
323.308 188.177 li
322.301 188.177 li
322.301 184.661 li
cp
f
322.301 212.79 mo
323.308 212.79 li
323.308 216.307 li
322.301 216.307 li
322.301 212.79 li
cp
f
322.301 254.971 mo
323.308 254.971 li
323.308 258.487 li
322.301 258.487 li
322.301 254.971 li
cp
f
322.301 265.52 mo
323.308 265.52 li
323.308 269.037 li
322.301 269.037 li
322.301 265.52 li
cp
f
323.303 142.479 mo
324.31 142.479 li
324.31 145.996 li
323.303 145.996 li
323.303 142.479 li
cp
f
323.303 149.512 mo
324.31 149.512 li
324.31 153.028 li
323.303 153.028 li
323.303 149.512 li
cp
f
323.303 174.125 mo
324.31 174.125 li
324.31 177.642 li
323.303 177.642 li
323.303 174.125 li
cp
f
323.303 230.358 mo
324.31 230.358 li
324.31 233.874 li
323.303 233.874 li
323.303 230.358 li
cp
f
323.303 233.874 mo
324.31 233.874 li
324.31 237.39 li
323.303 237.39 li
323.303 233.874 li
cp
f
323.303 269.022 mo
324.31 269.022 li
324.31 272.539 li
323.303 272.539 li
323.303 269.022 li
cp
f
324.316 163.577 mo
325.326 163.577 li
325.326 167.093 li
324.316 167.093 li
324.316 163.577 li
cp
f
324.316 181.144 mo
325.326 181.144 li
325.326 184.661 li
324.316 184.661 li
324.316 181.144 li
cp
f
324.316 205.758 mo
325.326 205.758 li
325.326 209.274 li
324.316 209.274 li
324.316 205.758 li
cp
f
324.316 226.842 mo
325.326 226.842 li
325.326 230.358 li
324.316 230.358 li
324.316 226.842 li
cp
f
325.317 160.061 mo
326.325 160.061 li
326.325 163.577 li
325.317 163.577 li
325.317 160.061 li
cp
f
325.317 198.725 mo
326.325 198.725 li
326.325 202.242 li
325.317 202.242 li
325.317 198.725 li
cp
f
325.317 209.274 mo
326.325 209.274 li
326.325 212.79 li
325.317 212.79 li
325.317 209.274 li
cp
f
325.317 258.487 mo
326.325 258.487 li
326.325 262.004 li
325.317 262.004 li
325.317 258.487 li
cp
f
325.317 265.52 mo
326.325 265.52 li
326.325 269.037 li
325.317 269.037 li
325.317 265.52 li
cp
f
326.333 223.325 mo
327.339 223.325 li
327.339 226.842 li
326.333 226.842 li
326.333 223.325 li
cp
f
326.333 233.874 mo
327.339 233.874 li
327.339 237.39 li
326.333 237.39 li
326.333 233.874 li
cp
f
327.332 142.479 mo
328.341 142.479 li
328.341 145.996 li
327.332 145.996 li
327.332 142.479 li
cp
f
327.332 191.693 mo
328.341 191.693 li
328.341 195.209 li
327.332 195.209 li
327.332 191.693 li
cp
f
327.332 195.209 mo
328.341 195.209 li
328.341 198.725 li
327.332 198.725 li
327.332 195.209 li
cp
f
327.332 230.358 mo
328.341 230.358 li
328.341 233.874 li
327.332 233.874 li
327.332 230.358 li
cp
f
327.332 247.939 mo
328.341 247.939 li
328.341 251.456 li
327.332 251.456 li
327.332 247.939 li
cp
f
327.332 269.022 mo
328.341 269.022 li
328.341 272.539 li
327.332 272.539 li
327.332 269.022 li
cp
f
328.346 160.061 mo
329.356 160.061 li
329.356 163.577 li
328.346 163.577 li
328.346 160.061 li
cp
f
328.346 163.577 mo
329.356 163.577 li
329.356 167.093 li
328.346 167.093 li
328.346 163.577 li
cp
f
328.346 181.144 mo
329.356 181.144 li
329.356 184.661 li
328.346 184.661 li
328.346 181.144 li
cp
f
328.346 212.79 mo
329.356 212.79 li
329.356 216.307 li
328.346 216.307 li
328.346 212.79 li
cp
f
329.362 174.125 mo
330.369 174.125 li
330.369 177.642 li
329.362 177.642 li
329.362 174.125 li
cp
f
329.362 184.661 mo
330.369 184.661 li
330.369 188.177 li
329.362 188.177 li
329.362 184.661 li
cp
f
329.362 205.758 mo
330.369 205.758 li
330.369 209.274 li
329.362 209.274 li
329.362 205.758 li
cp
f
329.362 233.874 mo
330.369 233.874 li
330.369 237.39 li
329.362 237.39 li
329.362 233.874 li
cp
f
329.362 265.52 mo
330.369 265.52 li
330.369 269.037 li
329.362 269.037 li
329.362 265.52 li
cp
f
330.364 142.479 mo
331.371 142.479 li
331.371 145.996 li
330.364 145.996 li
330.364 142.479 li
cp
f
330.364 170.609 mo
331.371 170.609 li
331.371 174.125 li
330.364 174.125 li
330.364 170.609 li
cp
f
330.364 198.725 mo
331.371 198.725 li
331.371 202.242 li
330.364 202.242 li
330.364 198.725 li
cp
f
330.364 254.971 mo
331.371 254.971 li
331.371 258.487 li
330.364 258.487 li
330.364 254.971 li
cp
f
331.375 149.512 mo
332.385 149.512 li
332.385 153.028 li
331.375 153.028 li
331.375 149.512 li
cp
f
331.375 223.325 mo
332.385 223.325 li
332.385 226.842 li
331.375 226.842 li
331.375 223.325 li
cp
f
331.375 226.842 mo
332.385 226.842 li
332.385 230.358 li
331.375 230.358 li
331.375 226.842 li
cp
f
331.375 230.358 mo
332.385 230.358 li
332.385 233.874 li
331.375 233.874 li
331.375 230.358 li
cp
f
331.375 237.39 mo
332.385 237.39 li
332.385 240.906 li
331.375 240.906 li
331.375 237.39 li
cp
f
332.377 160.061 mo
333.384 160.061 li
333.384 163.577 li
332.377 163.577 li
332.377 160.061 li
cp
f
332.377 163.577 mo
333.384 163.577 li
333.384 167.093 li
332.377 167.093 li
332.377 163.577 li
cp
f
332.377 181.144 mo
333.384 181.144 li
333.384 184.661 li
332.377 184.661 li
332.377 181.144 li
cp
f
332.377 216.307 mo
333.384 216.307 li
333.384 219.823 li
332.377 219.823 li
332.377 216.307 li
cp
f
332.377 233.874 mo
333.384 233.874 li
333.384 237.39 li
332.377 237.39 li
332.377 233.874 li
cp
f
332.377 247.939 mo
333.384 247.939 li
333.384 251.456 li
332.377 251.456 li
332.377 247.939 li
cp
f
332.377 258.487 mo
333.384 258.487 li
333.384 262.004 li
332.377 262.004 li
332.377 258.487 li
cp
f
332.377 265.52 mo
333.384 265.52 li
333.384 269.037 li
332.377 269.037 li
332.377 265.52 li
cp
f
332.377 269.022 mo
333.384 269.022 li
333.384 272.539 li
332.377 272.539 li
332.377 269.022 li
cp
f
333.393 142.479 mo
334.4 142.479 li
334.4 145.996 li
333.393 145.996 li
333.393 142.479 li
cp
f
333.393 195.209 mo
334.4 195.209 li
334.4 198.725 li
333.393 198.725 li
333.393 195.209 li
cp
f
333.393 212.79 mo
334.4 212.79 li
334.4 216.307 li
333.393 216.307 li
333.393 212.79 li
cp
f
334.392 184.661 mo
335.402 184.661 li
335.402 188.177 li
334.392 188.177 li
334.392 184.661 li
cp
f
334.392 198.725 mo
335.402 198.725 li
335.402 202.242 li
334.392 202.242 li
334.392 198.725 li
cp
f
334.392 205.758 mo
335.402 205.758 li
335.402 209.274 li
334.392 209.274 li
334.392 205.758 li
cp
f
335.407 174.125 mo
336.417 174.125 li
336.417 177.642 li
335.407 177.642 li
335.407 174.125 li
cp
f
335.407 230.358 mo
336.417 230.358 li
336.417 233.874 li
335.407 233.874 li
335.407 230.358 li
cp
f
335.407 233.874 mo
336.417 233.874 li
336.417 237.39 li
335.407 237.39 li
335.407 233.874 li
cp
f
335.407 265.52 mo
336.417 265.52 li
336.417 269.037 li
335.407 269.037 li
335.407 265.52 li
cp
f
336.409 142.479 mo
337.416 142.479 li
337.416 145.996 li
336.409 145.996 li
336.409 142.479 li
cp
f
336.409 160.061 mo
337.416 160.061 li
337.416 163.577 li
336.409 163.577 li
336.409 160.061 li
cp
f
336.409 181.144 mo
337.416 181.144 li
337.416 184.661 li
336.409 184.661 li
336.409 181.144 li
cp
f
336.409 191.693 mo
337.416 191.693 li
337.416 195.209 li
336.409 195.209 li
336.409 191.693 li
cp
f
336.409 202.242 mo
337.416 202.242 li
337.416 205.758 li
336.409 205.758 li
336.409 202.242 li
cp
f
336.409 223.325 mo
337.416 223.325 li
337.416 226.842 li
336.409 226.842 li
336.409 223.325 li
cp
f
336.409 269.022 mo
337.416 269.022 li
337.416 272.539 li
336.409 272.539 li
336.409 269.022 li
cp
f
337.421 163.577 mo
338.431 163.577 li
338.431 167.093 li
337.421 167.093 li
337.421 163.577 li
cp
f
337.421 209.274 mo
338.431 209.274 li
338.431 212.79 li
337.421 212.79 li
337.421 209.274 li
cp
f
337.421 226.842 mo
338.431 226.842 li
338.431 230.358 li
337.421 230.358 li
337.421 226.842 li
cp
f
338.436 195.209 mo
339.446 195.209 li
339.446 198.725 li
338.436 198.725 li
338.436 195.209 li
cp
f
338.436 233.874 mo
339.446 233.874 li
339.446 237.39 li
338.436 237.39 li
338.436 233.874 li
cp
f
338.436 247.939 mo
339.446 247.939 li
339.446 251.456 li
338.436 251.456 li
338.436 247.939 li
cp
f
339.438 142.479 mo
340.445 142.479 li
340.445 145.996 li
339.438 145.996 li
339.438 142.479 li
cp
f
339.438 149.512 mo
340.445 149.512 li
340.445 153.028 li
339.438 153.028 li
339.438 149.512 li
cp
f
339.438 198.725 mo
340.445 198.725 li
340.445 202.242 li
339.438 202.242 li
339.438 198.725 li
cp
f
339.438 205.758 mo
340.445 205.758 li
340.445 209.274 li
339.438 209.274 li
339.438 205.758 li
cp
f
339.438 212.79 mo
340.445 212.79 li
340.445 216.307 li
339.438 216.307 li
339.438 212.79 li
cp
f
339.438 230.358 mo
340.445 230.358 li
340.445 233.874 li
339.438 233.874 li
339.438 230.358 li
cp
f
339.438 254.971 mo
340.445 254.971 li
340.445 258.487 li
339.438 258.487 li
339.438 254.971 li
cp
f
339.438 258.487 mo
340.445 258.487 li
340.445 262.004 li
339.438 262.004 li
339.438 258.487 li
cp
f
339.438 265.52 mo
340.445 265.52 li
340.445 269.037 li
339.438 269.037 li
339.438 265.52 li
cp
f
340.454 160.061 mo
341.46 160.061 li
341.46 163.577 li
340.454 163.577 li
340.454 160.061 li
cp
f
340.454 181.144 mo
341.46 181.144 li
341.46 184.661 li
340.454 184.661 li
340.454 181.144 li
cp
f
340.454 184.661 mo
341.46 184.661 li
341.46 188.177 li
340.454 188.177 li
340.454 184.661 li
cp
f
341.452 163.577 mo
342.461 163.577 li
342.461 167.093 li
341.452 167.093 li
341.452 163.577 li
cp
f
341.452 174.125 mo
342.461 174.125 li
342.461 177.642 li
341.452 177.642 li
341.452 174.125 li
cp
f
341.452 223.325 mo
342.461 223.325 li
342.461 226.842 li
341.452 226.842 li
341.452 223.325 li
cp
f
341.452 233.874 mo
342.461 233.874 li
342.461 237.39 li
341.452 237.39 li
341.452 233.874 li
cp
f
341.452 269.022 mo
342.461 269.022 li
342.461 272.539 li
341.452 272.539 li
341.452 269.022 li
cp
f
342.467 142.479 mo
343.477 142.479 li
343.477 145.996 li
342.467 145.996 li
342.467 142.479 li
cp
f
342.467 265.52 mo
343.477 265.52 li
343.477 269.037 li
342.467 269.037 li
342.467 265.52 li
cp
f
343.469 230.358 mo
344.476 230.358 li
344.476 233.874 li
343.469 233.874 li
343.469 230.358 li
cp
f
343.469 237.39 mo
344.476 237.39 li
344.476 240.906 li
343.469 240.906 li
343.469 237.39 li
cp
f
343.469 247.939 mo
344.476 247.939 li
344.476 251.456 li
343.469 251.456 li
343.469 247.939 li
cp
f
344.482 160.061 mo
345.492 160.061 li
345.492 163.577 li
344.482 163.577 li
344.482 160.061 li
cp
f
344.482 181.144 mo
345.492 181.144 li
345.492 184.661 li
344.482 184.661 li
344.482 181.144 li
cp
f
344.482 191.693 mo
345.492 191.693 li
345.492 195.209 li
344.482 195.209 li
344.482 191.693 li
cp
f
344.482 195.209 mo
345.492 195.209 li
345.492 198.725 li
344.482 198.725 li
344.482 195.209 li
cp
f
344.482 205.758 mo
345.492 205.758 li
345.492 209.274 li
344.482 209.274 li
344.482 205.758 li
cp
f
344.482 212.79 mo
345.492 212.79 li
345.492 216.307 li
344.482 216.307 li
344.482 212.79 li
cp
f
344.482 226.842 mo
345.492 226.842 li
345.492 230.358 li
344.482 230.358 li
344.482 226.842 li
cp
f
344.482 233.874 mo
345.492 233.874 li
345.492 237.39 li
344.482 237.39 li
344.482 233.874 li
cp
f
345.483 142.479 mo
346.493 142.479 li
346.493 145.996 li
345.483 145.996 li
345.483 142.479 li
cp
f
345.483 198.725 mo
346.493 198.725 li
346.493 202.242 li
345.483 202.242 li
345.483 198.725 li
cp
f
345.483 216.307 mo
346.493 216.307 li
346.493 219.823 li
345.483 219.823 li
345.483 216.307 li
cp
f
345.483 265.52 mo
346.493 265.52 li
346.493 269.037 li
345.483 269.037 li
345.483 265.52 li
cp
f
345.483 269.022 mo
346.493 269.022 li
346.493 272.539 li
345.483 272.539 li
345.483 269.022 li
cp
f
346.499 163.577 mo
347.505 163.577 li
347.505 167.093 li
346.499 167.093 li
346.499 163.577 li
cp
f
346.499 184.661 mo
347.505 184.661 li
347.505 188.177 li
346.499 188.177 li
346.499 184.661 li
cp
f
346.499 223.325 mo
347.505 223.325 li
347.505 226.842 li
346.499 226.842 li
346.499 223.325 li
cp
f
346.499 230.358 mo
347.505 230.358 li
347.505 233.874 li
346.499 233.874 li
346.499 230.358 li
cp
f
346.499 258.487 mo
347.505 258.487 li
347.505 262.004 li
346.499 262.004 li
346.499 258.487 li
cp
f
347.513 149.512 mo
348.521 149.512 li
348.521 153.028 li
347.513 153.028 li
347.513 149.512 li
cp
f
347.513 160.061 mo
348.521 160.061 li
348.521 163.577 li
347.513 163.577 li
347.513 160.061 li
cp
f
347.513 174.125 mo
348.521 174.125 li
348.521 177.642 li
347.513 177.642 li
347.513 174.125 li
cp
f
347.513 233.874 mo
348.521 233.874 li
348.521 237.39 li
347.513 237.39 li
347.513 233.874 li
cp
f
348.512 142.479 mo
349.522 142.479 li
349.522 145.996 li
348.512 145.996 li
348.512 142.479 li
cp
f
348.512 181.144 mo
349.522 181.144 li
349.522 184.661 li
348.512 184.661 li
348.512 181.144 li
cp
f
348.512 205.758 mo
349.522 205.758 li
349.522 209.274 li
348.512 209.274 li
348.512 205.758 li
cp
f
348.512 254.971 mo
349.522 254.971 li
349.522 258.487 li
348.512 258.487 li
348.512 254.971 li
cp
f
349.528 195.209 mo
350.535 195.209 li
350.535 198.725 li
349.528 198.725 li
349.528 195.209 li
cp
f
349.528 212.79 mo
350.535 212.79 li
350.535 216.307 li
349.528 216.307 li
349.528 212.79 li
cp
f
349.528 247.939 mo
350.535 247.939 li
350.535 251.456 li
349.528 251.456 li
349.528 247.939 li
cp
f
349.528 265.52 mo
350.535 265.52 li
350.535 269.037 li
349.528 269.037 li
349.528 265.52 li
cp
f
350.53 163.577 mo
351.537 163.577 li
351.537 167.093 li
350.53 167.093 li
350.53 163.577 li
cp
f
350.53 170.609 mo
351.537 170.609 li
351.537 174.125 li
350.53 174.125 li
350.53 170.609 li
cp
f
350.53 198.725 mo
351.537 198.725 li
351.537 202.242 li
350.53 202.242 li
350.53 198.725 li
cp
f
350.53 209.274 mo
351.537 209.274 li
351.537 212.79 li
350.53 212.79 li
350.53 209.274 li
cp
f
350.53 223.325 mo
351.537 223.325 li
351.537 226.842 li
350.53 226.842 li
350.53 223.325 li
cp
f
350.53 230.358 mo
351.537 230.358 li
351.537 233.874 li
350.53 233.874 li
350.53 230.358 li
cp
f
350.53 269.022 mo
351.537 269.022 li
351.537 272.539 li
350.53 272.539 li
350.53 269.022 li
cp
f
351.542 142.479 mo
352.551 142.479 li
352.551 145.996 li
351.542 145.996 li
351.542 142.479 li
cp
f
351.542 160.061 mo
352.551 160.061 li
352.551 163.577 li
351.542 163.577 li
351.542 160.061 li
cp
f
351.542 226.842 mo
352.551 226.842 li
352.551 230.358 li
351.542 230.358 li
351.542 226.842 li
cp
f
351.542 233.874 mo
352.551 233.874 li
352.551 237.39 li
351.542 237.39 li
351.542 233.874 li
cp
f
352.543 181.144 mo
353.553 181.144 li
353.553 184.661 li
352.543 184.661 li
352.543 181.144 li
cp
f
352.543 191.693 mo
353.553 191.693 li
353.553 195.209 li
352.543 195.209 li
352.543 191.693 li
cp
f
352.543 265.52 mo
353.553 265.52 li
353.553 269.037 li
352.543 269.037 li
352.543 265.52 li
cp
f
353.559 174.125 mo
354.566 174.125 li
354.566 177.642 li
353.559 177.642 li
353.559 174.125 li
cp
f
353.559 184.661 mo
354.566 184.661 li
354.566 188.177 li
353.559 188.177 li
353.559 184.661 li
cp
f
353.559 205.758 mo
354.566 205.758 li
354.566 209.274 li
353.559 209.274 li
353.559 205.758 li
cp
f
353.559 258.487 mo
354.566 258.487 li
354.566 262.004 li
353.559 262.004 li
353.559 258.487 li
cp
f
354.558 142.479 mo
355.568 142.479 li
355.568 145.996 li
354.558 145.996 li
354.558 142.479 li
cp
f
354.558 230.358 mo
355.568 230.358 li
355.568 233.874 li
354.558 233.874 li
354.558 230.358 li
cp
f
354.558 233.874 mo
355.568 233.874 li
355.568 237.39 li
354.558 237.39 li
354.558 233.874 li
cp
f
354.558 237.39 mo
355.568 237.39 li
355.568 240.906 li
354.558 240.906 li
354.558 237.39 li
cp
f
354.558 269.022 mo
355.568 269.022 li
355.568 272.539 li
354.558 272.539 li
354.558 269.022 li
cp
f
355.573 149.512 mo
356.583 149.512 li
356.583 153.028 li
355.573 153.028 li
355.573 149.512 li
cp
f
355.573 160.061 mo
356.583 160.061 li
356.583 163.577 li
355.573 163.577 li
355.573 160.061 li
cp
f
355.573 163.577 mo
356.583 163.577 li
356.583 167.093 li
355.573 167.093 li
355.573 163.577 li
cp
f
355.573 195.209 mo
356.583 195.209 li
356.583 198.725 li
355.573 198.725 li
355.573 195.209 li
cp
f
355.573 198.725 mo
356.583 198.725 li
356.583 202.242 li
355.573 202.242 li
355.573 198.725 li
cp
f
355.573 212.79 mo
356.583 212.79 li
356.583 216.307 li
355.573 216.307 li
355.573 212.79 li
cp
f
355.573 223.325 mo
356.583 223.325 li
356.583 226.842 li
355.573 226.842 li
355.573 223.325 li
cp
f
355.573 247.939 mo
356.583 247.939 li
356.583 251.456 li
355.573 251.456 li
355.573 247.939 li
cp
f
355.573 265.52 mo
356.583 265.52 li
356.583 269.037 li
355.573 269.037 li
355.573 265.52 li
cp
f
356.588 181.144 mo
357.595 181.144 li
357.595 184.661 li
356.588 184.661 li
356.588 181.144 li
cp
f
356.588 254.971 mo
357.595 254.971 li
357.595 258.487 li
356.588 258.487 li
356.588 254.971 li
cp
f
357.589 142.479 mo
358.597 142.479 li
358.597 145.996 li
357.589 145.996 li
357.589 142.479 li
cp
f
357.589 216.307 mo
358.597 216.307 li
358.597 219.823 li
357.589 219.823 li
357.589 216.307 li
cp
f
357.589 233.874 mo
358.597 233.874 li
358.597 237.39 li
357.589 237.39 li
357.589 233.874 li
cp
f
358.602 184.661 mo
359.612 184.661 li
359.612 188.177 li
358.602 188.177 li
358.602 184.661 li
cp
f
358.602 205.758 mo
359.612 205.758 li
359.612 209.274 li
358.602 209.274 li
358.602 205.758 li
cp
f
358.602 226.842 mo
359.612 226.842 li
359.612 230.358 li
358.602 230.358 li
358.602 226.842 li
cp
f
358.602 230.358 mo
359.612 230.358 li
359.612 233.874 li
358.602 233.874 li
358.602 230.358 li
cp
f
359.604 160.061 mo
360.611 160.061 li
360.611 163.577 li
359.604 163.577 li
359.604 160.061 li
cp
f
359.604 163.577 mo
360.611 163.577 li
360.611 167.093 li
359.604 167.093 li
359.604 163.577 li
cp
f
359.604 174.125 mo
360.611 174.125 li
360.611 177.642 li
359.604 177.642 li
359.604 174.125 li
cp
f
359.604 258.487 mo
360.611 258.487 li
360.611 262.004 li
359.604 262.004 li
359.604 258.487 li
cp
f
359.604 265.52 mo
360.611 265.52 li
360.611 269.037 li
359.604 269.037 li
359.604 265.52 li
cp
f
359.604 269.022 mo
360.611 269.022 li
360.611 272.539 li
359.604 272.539 li
359.604 269.022 li
cp
f
360.62 142.479 mo
361.626 142.479 li
361.626 145.996 li
360.62 145.996 li
360.62 142.479 li
cp
f
360.62 191.693 mo
361.626 191.693 li
361.626 195.209 li
360.62 195.209 li
360.62 191.693 li
cp
f
360.62 195.209 mo
361.626 195.209 li
361.626 198.725 li
360.62 198.725 li
360.62 195.209 li
cp
f
360.62 198.725 mo
361.626 198.725 li
361.626 202.242 li
360.62 202.242 li
360.62 198.725 li
cp
f
360.62 209.274 mo
361.626 209.274 li
361.626 212.79 li
360.62 212.79 li
360.62 209.274 li
cp
f
360.62 212.79 mo
361.626 212.79 li
361.626 216.307 li
360.62 216.307 li
360.62 212.79 li
cp
f
360.62 223.325 mo
361.626 223.325 li
361.626 226.842 li
360.62 226.842 li
360.62 223.325 li
cp
f
360.62 233.874 mo
361.626 233.874 li
361.626 237.39 li
360.62 237.39 li
360.62 233.874 li
cp
f
361.618 181.144 mo
362.627 181.144 li
362.627 184.661 li
361.618 184.661 li
361.618 181.144 li
cp
f
361.618 247.939 mo
362.627 247.939 li
362.627 251.456 li
361.618 251.456 li
361.618 247.939 li
cp
f
362.633 149.512 mo
363.643 149.512 li
363.643 153.028 li
362.633 153.028 li
362.633 149.512 li
cp
f
362.633 230.358 mo
363.643 230.358 li
363.643 233.874 li
362.633 233.874 li
362.633 230.358 li
cp
f
362.633 265.52 mo
363.643 265.52 li
363.643 269.037 li
362.633 269.037 li
362.633 265.52 li
cp
f
363.635 142.479 mo
364.642 142.479 li
364.642 145.996 li
363.635 145.996 li
363.635 142.479 li
cp
f
363.635 160.061 mo
364.642 160.061 li
364.642 163.577 li
363.635 163.577 li
363.635 160.061 li
cp
f
363.635 205.758 mo
364.642 205.758 li
364.642 209.274 li
363.635 209.274 li
363.635 205.758 li
cp
f
363.635 233.874 mo
364.642 233.874 li
364.642 237.39 li
363.635 237.39 li
363.635 233.874 li
cp
f
363.635 237.39 mo
364.642 237.39 li
364.642 240.906 li
363.635 240.906 li
363.635 237.39 li
cp
f
363.635 269.022 mo
364.642 269.022 li
364.642 272.539 li
363.635 272.539 li
363.635 269.022 li
cp
f
364.65 163.577 mo
365.658 163.577 li
365.658 167.093 li
364.65 167.093 li
364.65 163.577 li
cp
f
364.65 174.125 mo
365.658 174.125 li
365.658 177.642 li
364.65 177.642 li
364.65 174.125 li
cp
f
364.65 184.661 mo
365.658 184.661 li
365.658 188.177 li
364.65 188.177 li
364.65 184.661 li
cp
f
364.65 202.242 mo
365.658 202.242 li
365.658 205.758 li
364.65 205.758 li
364.65 202.242 li
cp
f
365.663 170.609 mo
366.672 170.609 li
366.672 174.125 li
365.663 174.125 li
365.663 170.609 li
cp
f
365.663 181.144 mo
366.672 181.144 li
366.672 184.661 li
365.663 184.661 li
365.663 181.144 li
cp
f
365.663 198.725 mo
366.672 198.725 li
366.672 202.242 li
365.663 202.242 li
365.663 198.725 li
cp
f
365.663 223.325 mo
366.672 223.325 li
366.672 226.842 li
365.663 226.842 li
365.663 223.325 li
cp
f
365.663 226.842 mo
366.672 226.842 li
366.672 230.358 li
365.663 230.358 li
365.663 226.842 li
cp
f
365.663 254.971 mo
366.672 254.971 li
366.672 258.487 li
365.663 258.487 li
365.663 254.971 li
cp
f
365.663 265.52 mo
366.672 265.52 li
366.672 269.037 li
365.663 269.037 li
365.663 265.52 li
cp
f
366.665 142.479 mo
367.671 142.479 li
367.671 145.996 li
366.665 145.996 li
366.665 142.479 li
cp
f
366.665 160.061 mo
367.671 160.061 li
367.671 163.577 li
366.665 163.577 li
366.665 160.061 li
cp
f
366.665 195.209 mo
367.671 195.209 li
367.671 198.725 li
366.665 198.725 li
366.665 195.209 li
cp
f
366.665 212.79 mo
367.671 212.79 li
367.671 216.307 li
366.665 216.307 li
366.665 212.79 li
cp
f
366.665 230.358 mo
367.671 230.358 li
367.671 233.874 li
366.665 233.874 li
366.665 230.358 li
cp
f
366.665 233.874 mo
367.671 233.874 li
367.671 237.39 li
366.665 237.39 li
366.665 233.874 li
cp
f
366.665 258.487 mo
367.671 258.487 li
367.671 262.004 li
366.665 262.004 li
366.665 258.487 li
cp
f
367.679 247.939 mo
368.687 247.939 li
368.687 251.456 li
367.679 251.456 li
367.679 247.939 li
cp
f
368.678 163.577 mo
369.688 163.577 li
369.688 167.093 li
368.678 167.093 li
368.678 163.577 li
cp
f
368.678 205.758 mo
369.688 205.758 li
369.688 209.274 li
368.678 209.274 li
368.678 205.758 li
cp
f
368.678 269.022 mo
369.688 269.022 li
369.688 272.539 li
368.678 272.539 li
368.678 269.022 li
cp
f
369.694 142.479 mo
370.704 142.479 li
370.704 145.996 li
369.694 145.996 li
369.694 142.479 li
cp
f
369.694 149.512 mo
370.704 149.512 li
370.704 153.028 li
369.694 153.028 li
369.694 149.512 li
cp
f
369.694 181.144 mo
370.704 181.144 li
370.704 184.661 li
369.694 184.661 li
369.694 181.144 li
cp
f
369.694 191.693 mo
370.704 191.693 li
370.704 195.209 li
369.694 195.209 li
369.694 191.693 li
cp
f
369.694 216.307 mo
370.704 216.307 li
370.704 219.823 li
369.694 219.823 li
369.694 216.307 li
cp
f
369.694 233.874 mo
370.704 233.874 li
370.704 237.39 li
369.694 237.39 li
369.694 233.874 li
cp
f
369.694 265.52 mo
370.704 265.52 li
370.704 269.037 li
369.694 269.037 li
369.694 265.52 li
cp
f
370.696 160.061 mo
371.703 160.061 li
371.703 163.577 li
370.696 163.577 li
370.696 160.061 li
cp
f
370.696 174.125 mo
371.703 174.125 li
371.703 177.642 li
370.696 177.642 li
370.696 174.125 li
cp
f
370.696 198.725 mo
371.703 198.725 li
371.703 202.242 li
370.696 202.242 li
370.696 198.725 li
cp
f
370.696 223.325 mo
371.703 223.325 li
371.703 226.842 li
370.696 226.842 li
370.696 223.325 li
cp
f
370.696 230.358 mo
371.703 230.358 li
371.703 233.874 li
370.696 233.874 li
370.696 230.358 li
cp
f
371.71 184.661 mo
372.717 184.661 li
372.717 188.177 li
371.71 188.177 li
371.71 184.661 li
cp
f
371.71 195.209 mo
372.717 195.209 li
372.717 198.725 li
371.71 198.725 li
371.71 195.209 li
cp
f
371.71 212.79 mo
372.717 212.79 li
372.717 216.307 li
371.71 216.307 li
371.71 212.79 li
cp
f
371.71 226.842 mo
372.717 226.842 li
372.717 230.358 li
371.71 230.358 li
371.71 226.842 li
cp
f
372.709 142.479 mo
373.719 142.479 li
373.719 145.996 li
372.709 145.996 li
372.709 142.479 li
cp
f
372.709 205.758 mo
373.719 205.758 li
373.719 209.274 li
372.709 209.274 li
372.709 205.758 li
cp
f
372.709 209.274 mo
373.719 209.274 li
373.719 212.79 li
372.709 212.79 li
372.709 209.274 li
cp
f
372.709 233.874 mo
373.719 233.874 li
373.719 237.39 li
372.709 237.39 li
372.709 233.874 li
cp
f
372.709 247.939 mo
373.719 247.939 li
373.719 251.456 li
372.709 251.456 li
372.709 247.939 li
cp
f
372.709 265.52 mo
373.719 265.52 li
373.719 269.037 li
372.709 269.037 li
372.709 265.52 li
cp
f
373.725 163.577 mo
374.732 163.577 li
374.732 167.093 li
373.725 167.093 li
373.725 163.577 li
cp
f
373.725 181.144 mo
374.732 181.144 li
374.732 184.661 li
373.725 184.661 li
373.725 181.144 li
cp
f
373.725 230.358 mo
374.732 230.358 li
374.732 233.874 li
373.725 233.874 li
373.725 230.358 li
cp
f
373.725 254.971 mo
374.732 254.971 li
374.732 258.487 li
373.725 258.487 li
373.725 254.971 li
cp
f
373.725 258.487 mo
374.732 258.487 li
374.732 262.004 li
373.725 262.004 li
373.725 258.487 li
cp
f
373.725 269.022 mo
374.732 269.022 li
374.732 272.539 li
373.725 272.539 li
373.725 269.022 li
cp
f
374.74 160.061 mo
375.747 160.061 li
375.747 163.577 li
374.74 163.577 li
374.74 160.061 li
cp
f
374.74 237.39 mo
375.747 237.39 li
375.747 240.906 li
374.74 240.906 li
374.74 237.39 li
cp
f
375.739 142.479 mo
376.749 142.479 li
376.749 145.996 li
375.739 145.996 li
375.739 142.479 li
cp
f
375.739 198.725 mo
376.749 198.725 li
376.749 202.242 li
375.739 202.242 li
375.739 198.725 li
cp
f
375.739 223.325 mo
376.749 223.325 li
376.749 226.842 li
375.739 226.842 li
375.739 223.325 li
cp
f
375.739 233.874 mo
376.749 233.874 li
376.749 237.39 li
375.739 237.39 li
375.739 233.874 li
cp
f
375.739 265.52 mo
376.749 265.52 li
376.749 269.037 li
375.739 269.037 li
375.739 265.52 li
cp
f
376.754 174.125 mo
377.764 174.125 li
377.764 177.642 li
376.754 177.642 li
376.754 174.125 li
cp
f
376.754 212.79 mo
377.764 212.79 li
377.764 216.307 li
376.754 216.307 li
376.754 212.79 li
cp
f
377.755 149.512 mo
378.763 149.512 li
378.763 153.028 li
377.755 153.028 li
377.755 149.512 li
cp
f
377.755 163.577 mo
378.763 163.577 li
378.763 167.093 li
377.755 167.093 li
377.755 163.577 li
cp
f
377.755 181.144 mo
378.763 181.144 li
378.763 184.661 li
377.755 184.661 li
377.755 181.144 li
cp
f
377.755 191.693 mo
378.763 191.693 li
378.763 195.209 li
377.755 195.209 li
377.755 191.693 li
cp
f
377.755 195.209 mo
378.763 195.209 li
378.763 198.725 li
377.755 198.725 li
377.755 195.209 li
cp
f
377.755 205.758 mo
378.763 205.758 li
378.763 209.274 li
377.755 209.274 li
377.755 205.758 li
cp
f
377.755 230.358 mo
378.763 230.358 li
378.763 233.874 li
377.755 233.874 li
377.755 230.358 li
cp
f
377.755 269.022 mo
378.763 269.022 li
378.763 272.539 li
377.755 272.539 li
377.755 269.022 li
cp
f
378.768 142.479 mo
379.778 142.479 li
379.778 145.996 li
378.768 145.996 li
378.768 142.479 li
cp
f
378.768 160.061 mo
379.778 160.061 li
379.778 163.577 li
378.768 163.577 li
378.768 160.061 li
cp
f
378.768 184.661 mo
379.778 184.661 li
379.778 188.177 li
378.768 188.177 li
378.768 184.661 li
cp
f
378.768 226.842 mo
379.778 226.842 li
379.778 230.358 li
378.768 230.358 li
378.768 226.842 li
cp
f
378.768 247.939 mo
379.778 247.939 li
379.778 251.456 li
378.768 251.456 li
378.768 247.939 li
cp
f
379.77 198.725 mo
380.78 198.725 li
380.78 202.242 li
379.77 202.242 li
379.77 198.725 li
cp
f
379.77 233.874 mo
380.78 233.874 li
380.78 237.39 li
379.77 237.39 li
379.77 233.874 li
cp
f
379.77 265.52 mo
380.78 265.52 li
380.78 269.037 li
379.77 269.037 li
379.77 265.52 li
cp
f
380.786 223.325 mo
381.792 223.325 li
381.792 226.842 li
380.786 226.842 li
380.786 223.325 li
cp
f
380.786 258.487 mo
381.792 258.487 li
381.792 262.004 li
380.786 262.004 li
380.786 258.487 li
cp
f
381.787 142.479 mo
382.793 142.479 li
382.793 145.996 li
381.787 145.996 li
381.787 142.479 li
cp
f
381.787 181.144 mo
382.793 181.144 li
382.793 184.661 li
381.787 184.661 li
381.787 181.144 li
cp
f
381.787 212.79 mo
382.793 212.79 li
382.793 216.307 li
381.787 216.307 li
381.787 212.79 li
cp
f
381.787 230.358 mo
382.793 230.358 li
382.793 233.874 li
381.787 233.874 li
381.787 230.358 li
cp
f
382.799 160.061 mo
383.809 160.061 li
383.809 163.577 li
382.799 163.577 li
382.799 160.061 li
cp
f
382.799 163.577 mo
383.809 163.577 li
383.809 167.093 li
382.799 167.093 li
382.799 163.577 li
cp
f
382.799 174.125 mo
383.809 174.125 li
383.809 177.642 li
382.799 177.642 li
382.799 174.125 li
cp
f
382.799 195.209 mo
383.809 195.209 li
383.809 198.725 li
382.799 198.725 li
382.799 195.209 li
cp
f
382.799 205.758 mo
383.809 205.758 li
383.809 209.274 li
382.799 209.274 li
382.799 205.758 li
cp
f
382.799 216.307 mo
383.809 216.307 li
383.809 219.823 li
382.799 219.823 li
382.799 216.307 li
cp
f
382.799 233.874 mo
383.809 233.874 li
383.809 237.39 li
382.799 237.39 li
382.799 233.874 li
cp
f
382.799 254.971 mo
383.809 254.971 li
383.809 258.487 li
382.799 258.487 li
382.799 254.971 li
cp
f
382.799 265.52 mo
383.809 265.52 li
383.809 269.037 li
382.799 269.037 li
382.799 265.52 li
cp
f
382.799 269.022 mo
383.809 269.022 li
383.809 272.539 li
382.799 272.539 li
382.799 269.022 li
cp
f
383.801 170.609 mo
384.808 170.609 li
384.808 174.125 li
383.801 174.125 li
383.801 170.609 li
cp
f
383.801 247.939 mo
384.808 247.939 li
384.808 251.456 li
383.801 251.456 li
383.801 247.939 li
cp
f
384.816 142.479 mo
385.823 142.479 li
385.823 145.996 li
384.816 145.996 li
384.816 142.479 li
cp
f
384.816 149.512 mo
385.823 149.512 li
385.823 153.028 li
384.816 153.028 li
384.816 149.512 li
cp
f
384.816 184.661 mo
385.823 184.661 li
385.823 188.177 li
384.816 188.177 li
384.816 184.661 li
cp
f
385.829 160.061 mo
386.838 160.061 li
386.838 163.577 li
385.829 163.577 li
385.829 160.061 li
cp
f
385.829 181.144 mo
386.838 181.144 li
386.838 184.661 li
385.829 184.661 li
385.829 181.144 li
cp
f
385.829 198.725 mo
386.838 198.725 li
386.838 202.242 li
385.829 202.242 li
385.829 198.725 li
cp
f
385.829 223.325 mo
386.838 223.325 li
386.838 226.842 li
385.829 226.842 li
385.829 223.325 li
cp
f
385.829 226.842 mo
386.838 226.842 li
386.838 230.358 li
385.829 230.358 li
385.829 226.842 li
cp
f
385.829 230.358 mo
386.838 230.358 li
386.838 233.874 li
385.829 233.874 li
385.829 230.358 li
cp
f
385.829 233.874 mo
386.838 233.874 li
386.838 237.39 li
385.829 237.39 li
385.829 233.874 li
cp
f
385.829 237.39 mo
386.838 237.39 li
386.838 240.906 li
385.829 240.906 li
385.829 237.39 li
cp
f
386.831 163.577 mo
387.84 163.577 li
387.84 167.093 li
386.831 167.093 li
386.831 163.577 li
cp
f
386.831 191.693 mo
387.84 191.693 li
387.84 195.209 li
386.831 195.209 li
386.831 191.693 li
cp
f
386.831 265.52 mo
387.84 265.52 li
387.84 269.037 li
386.831 269.037 li
386.831 265.52 li
cp
f
386.831 269.022 mo
387.84 269.022 li
387.84 272.539 li
386.831 272.539 li
386.831 269.022 li
cp
f
387.845 142.479 mo
388.853 142.479 li
388.853 145.996 li
387.845 145.996 li
387.845 142.479 li
cp
f
387.845 205.758 mo
388.853 205.758 li
388.853 209.274 li
387.845 209.274 li
387.845 205.758 li
cp
f
387.845 209.274 mo
388.853 209.274 li
388.853 212.79 li
387.845 212.79 li
387.845 209.274 li
cp
f
387.845 212.79 mo
388.853 212.79 li
388.853 216.307 li
387.845 216.307 li
387.845 212.79 li
cp
f
387.845 258.487 mo
388.853 258.487 li
388.853 262.004 li
387.845 262.004 li
387.845 258.487 li
cp
f
388.844 174.125 mo
389.854 174.125 li
389.854 177.642 li
388.844 177.642 li
388.844 174.125 li
cp
f
388.844 195.209 mo
389.854 195.209 li
389.854 198.725 li
388.844 198.725 li
388.844 195.209 li
cp
f
388.844 230.358 mo
389.854 230.358 li
389.854 233.874 li
388.844 233.874 li
388.844 230.358 li
cp
f
388.844 233.874 mo
389.854 233.874 li
389.854 237.39 li
388.844 237.39 li
388.844 233.874 li
cp
f
389.86 160.061 mo
390.87 160.061 li
390.87 163.577 li
389.86 163.577 li
389.86 160.061 li
cp
f
389.86 181.144 mo
390.87 181.144 li
390.87 184.661 li
389.86 184.661 li
389.86 181.144 li
cp
f
389.86 247.939 mo
390.87 247.939 li
390.87 251.456 li
389.86 251.456 li
389.86 247.939 li
cp
f
389.86 265.52 mo
390.87 265.52 li
390.87 269.037 li
389.86 269.037 li
389.86 265.52 li
cp
f
390.862 142.479 mo
391.869 142.479 li
391.869 145.996 li
390.862 145.996 li
390.862 142.479 li
cp
f
390.862 198.725 mo
391.869 198.725 li
391.869 202.242 li
390.862 202.242 li
390.862 198.725 li
cp
f
390.862 202.242 mo
391.869 202.242 li
391.869 205.758 li
390.862 205.758 li
390.862 202.242 li
cp
f
390.862 223.325 mo
391.869 223.325 li
391.869 226.842 li
390.862 226.842 li
390.862 223.325 li
cp
f
390.862 269.022 mo
391.869 269.022 li
391.869 272.539 li
390.862 272.539 li
390.862 269.022 li
cp
f
391.876 163.577 mo
392.883 163.577 li
392.883 167.093 li
391.876 167.093 li
391.876 163.577 li
cp
f
391.876 184.661 mo
392.883 184.661 li
392.883 188.177 li
391.876 188.177 li
391.876 184.661 li
cp
f
391.876 233.874 mo
392.883 233.874 li
392.883 237.39 li
391.876 237.39 li
391.876 233.874 li
cp
f
391.876 254.971 mo
392.883 254.971 li
392.883 258.487 li
391.876 258.487 li
391.876 254.971 li
cp
f
392.875 149.512 mo
393.885 149.512 li
393.885 153.028 li
392.875 153.028 li
392.875 149.512 li
cp
f
392.875 205.758 mo
393.885 205.758 li
393.885 209.274 li
392.875 209.274 li
392.875 205.758 li
cp
f
392.875 212.79 mo
393.885 212.79 li
393.885 216.307 li
392.875 216.307 li
392.875 212.79 li
cp
f
392.875 226.842 mo
393.885 226.842 li
393.885 230.358 li
392.875 230.358 li
392.875 226.842 li
cp
f
392.875 230.358 mo
393.885 230.358 li
393.885 233.874 li
392.875 233.874 li
392.875 230.358 li
cp
f
392.875 265.52 mo
393.885 265.52 li
393.885 269.037 li
392.875 269.037 li
392.875 265.52 li
cp
f
393.891 142.479 mo
394.901 142.479 li
394.901 145.996 li
393.891 145.996 li
393.891 142.479 li
cp
f
393.891 160.061 mo
394.901 160.061 li
394.901 163.577 li
393.891 163.577 li
393.891 160.061 li
cp
f
393.891 181.144 mo
394.901 181.144 li
394.901 184.661 li
393.891 184.661 li
393.891 181.144 li
cp
f
393.891 195.209 mo
394.901 195.209 li
394.901 198.725 li
393.891 198.725 li
393.891 195.209 li
cp
f
394.906 191.693 mo
395.913 191.693 li
395.913 195.209 li
394.906 195.209 li
394.906 191.693 li
cp
f
394.906 216.307 mo
395.913 216.307 li
395.913 219.823 li
394.906 219.823 li
394.906 216.307 li
cp
f
394.906 233.874 mo
395.913 233.874 li
395.913 237.39 li
394.906 237.39 li
394.906 233.874 li
cp
f
394.906 247.939 mo
395.913 247.939 li
395.913 251.456 li
394.906 251.456 li
394.906 247.939 li
cp
f
394.906 258.487 mo
395.913 258.487 li
395.913 262.004 li
394.906 262.004 li
394.906 258.487 li
cp
f
395.905 163.577 mo
396.915 163.577 li
396.915 167.093 li
395.905 167.093 li
395.905 163.577 li
cp
f
395.905 174.125 mo
396.915 174.125 li
396.915 177.642 li
395.905 177.642 li
395.905 174.125 li
cp
f
395.905 198.725 mo
396.915 198.725 li
396.915 202.242 li
395.905 202.242 li
395.905 198.725 li
cp
f
395.905 223.325 mo
396.915 223.325 li
396.915 226.842 li
395.905 226.842 li
395.905 223.325 li
cp
f
395.905 237.39 mo
396.915 237.39 li
396.915 240.906 li
395.905 240.906 li
395.905 237.39 li
cp
f
395.905 269.022 mo
396.915 269.022 li
396.915 272.539 li
395.905 272.539 li
395.905 269.022 li
cp
f
396.92 205.758 mo
397.93 205.758 li
397.93 209.274 li
396.92 209.274 li
396.92 205.758 li
cp
f
396.92 230.358 mo
397.93 230.358 li
397.93 233.874 li
396.92 233.874 li
396.92 230.358 li
cp
f
396.92 265.52 mo
397.93 265.52 li
397.93 269.037 li
396.92 269.037 li
396.92 265.52 li
cp
f
397.921 142.479 mo
398.929 142.479 li
398.929 145.996 li
397.921 145.996 li
397.921 142.479 li
cp
f
397.921 160.061 mo
398.929 160.061 li
398.929 163.577 li
397.921 163.577 li
397.921 160.061 li
cp
f
397.921 181.144 mo
398.929 181.144 li
398.929 184.661 li
397.921 184.661 li
397.921 181.144 li
cp
f
397.921 184.661 mo
398.929 184.661 li
398.929 188.177 li
397.921 188.177 li
397.921 184.661 li
cp
f
397.921 212.79 mo
398.929 212.79 li
398.929 216.307 li
397.921 216.307 li
397.921 212.79 li
cp
f
397.921 233.874 mo
398.929 233.874 li
398.929 237.39 li
397.921 237.39 li
397.921 233.874 li
cp
f
398.937 209.274 mo
399.944 209.274 li
399.944 212.79 li
398.937 212.79 li
398.937 209.274 li
cp
f
398.937 226.842 mo
399.944 226.842 li
399.944 230.358 li
398.937 230.358 li
398.937 226.842 li
cp
f
399.936 142.479 mo
400.946 142.479 li
400.946 145.996 li
399.936 145.996 li
399.936 142.479 li
cp
f
399.936 149.512 mo
400.946 149.512 li
400.946 153.028 li
399.936 153.028 li
399.936 149.512 li
cp
f
399.936 163.577 mo
400.946 163.577 li
400.946 167.093 li
399.936 167.093 li
399.936 163.577 li
cp
f
399.936 195.209 mo
400.946 195.209 li
400.946 198.725 li
399.936 198.725 li
399.936 195.209 li
cp
f
399.936 254.971 mo
400.946 254.971 li
400.946 258.487 li
399.936 258.487 li
399.936 254.971 li
cp
f
399.936 265.52 mo
400.946 265.52 li
400.946 269.037 li
399.936 269.037 li
399.936 265.52 li
cp
f
400.951 198.725 mo
401.958 198.725 li
401.958 202.242 li
400.951 202.242 li
400.951 198.725 li
cp
f
400.951 223.325 mo
401.958 223.325 li
401.958 226.842 li
400.951 226.842 li
400.951 223.325 li
cp
f
400.951 230.358 mo
401.958 230.358 li
401.958 233.874 li
400.951 233.874 li
400.951 230.358 li
cp
f
400.951 233.874 mo
401.958 233.874 li
401.958 237.39 li
400.951 237.39 li
400.951 233.874 li
cp
f
400.951 247.939 mo
401.958 247.939 li
401.958 251.456 li
400.951 251.456 li
400.951 247.939 li
cp
f
400.951 269.022 mo
401.958 269.022 li
401.958 272.539 li
400.951 272.539 li
400.951 269.022 li
cp
f
401.953 160.061 mo
402.959 160.061 li
402.959 163.577 li
401.953 163.577 li
401.953 160.061 li
cp
f
401.953 170.609 mo
402.959 170.609 li
402.959 174.125 li
401.953 174.125 li
401.953 170.609 li
cp
f
401.953 174.125 mo
402.959 174.125 li
402.959 177.642 li
401.953 177.642 li
401.953 174.125 li
cp
f
401.953 181.144 mo
402.959 181.144 li
402.959 184.661 li
401.953 184.661 li
401.953 181.144 li
cp
f
401.953 202.242 mo
402.959 202.242 li
402.959 205.758 li
401.953 205.758 li
401.953 202.242 li
cp
f
401.953 205.758 mo
402.959 205.758 li
402.959 209.274 li
401.953 209.274 li
401.953 205.758 li
cp
f
401.953 258.487 mo
402.959 258.487 li
402.959 262.004 li
401.953 262.004 li
401.953 258.487 li
cp
f
402.965 142.479 mo
403.975 142.479 li
403.975 145.996 li
402.965 145.996 li
402.965 142.479 li
cp
f
402.965 184.661 mo
403.975 184.661 li
403.975 188.177 li
402.965 188.177 li
402.965 184.661 li
cp
f
402.965 191.693 mo
403.975 191.693 li
403.975 195.209 li
402.965 195.209 li
402.965 191.693 li
cp
f
402.965 265.52 mo
403.975 265.52 li
403.975 269.037 li
402.965 269.037 li
402.965 265.52 li
cp
f
403.981 212.79 mo
404.991 212.79 li
404.991 216.307 li
403.981 216.307 li
403.981 212.79 li
cp
f
403.981 233.874 mo
404.991 233.874 li
404.991 237.39 li
403.981 237.39 li
403.981 233.874 li
cp
f
404.982 163.577 mo
405.989 163.577 li
405.989 167.093 li
404.982 167.093 li
404.982 163.577 li
cp
f
404.982 195.209 mo
405.989 195.209 li
405.989 198.725 li
404.982 198.725 li
404.982 195.209 li
cp
f
404.982 223.325 mo
405.989 223.325 li
405.989 226.842 li
404.982 226.842 li
404.982 223.325 li
cp
f
404.982 230.358 mo
405.989 230.358 li
405.989 233.874 li
404.982 233.874 li
404.982 230.358 li
cp
f
404.982 269.022 mo
405.989 269.022 li
405.989 272.539 li
404.982 272.539 li
404.982 269.022 li
cp
f
405.998 142.479 mo
407.004 142.479 li
407.004 145.996 li
405.998 145.996 li
405.998 142.479 li
cp
f
405.998 160.061 mo
407.004 160.061 li
407.004 163.577 li
405.998 163.577 li
405.998 160.061 li
cp
f
405.998 181.144 mo
407.004 181.144 li
407.004 184.661 li
405.998 184.661 li
405.998 181.144 li
cp
f
405.998 198.725 mo
407.004 198.725 li
407.004 202.242 li
405.998 202.242 li
405.998 198.725 li
cp
f
405.998 226.842 mo
407.004 226.842 li
407.004 230.358 li
405.998 230.358 li
405.998 226.842 li
cp
f
405.998 237.39 mo
407.004 237.39 li
407.004 240.906 li
405.998 240.906 li
405.998 237.39 li
cp
f
406.997 205.758 mo
408.006 205.758 li
408.006 209.274 li
406.997 209.274 li
406.997 205.758 li
cp
f
406.997 216.307 mo
408.006 216.307 li
408.006 219.823 li
406.997 219.823 li
406.997 216.307 li
cp
f
406.997 233.874 mo
408.006 233.874 li
408.006 237.39 li
406.997 237.39 li
406.997 233.874 li
cp
f
406.997 247.939 mo
408.006 247.939 li
408.006 251.456 li
406.997 251.456 li
406.997 247.939 li
cp
f
406.997 265.52 mo
408.006 265.52 li
408.006 269.037 li
406.997 269.037 li
406.997 265.52 li
cp
f
408.011 149.512 mo
409.018 149.512 li
409.018 153.028 li
408.011 153.028 li
408.011 149.512 li
cp
f
408.011 174.125 mo
409.018 174.125 li
409.018 177.642 li
408.011 177.642 li
408.011 174.125 li
cp
f
408.011 258.487 mo
409.018 258.487 li
409.018 262.004 li
408.011 262.004 li
408.011 258.487 li
cp
f
409.013 142.479 mo
410.02 142.479 li
410.02 145.996 li
409.013 145.996 li
409.013 142.479 li
cp
f
409.013 163.577 mo
410.02 163.577 li
410.02 167.093 li
409.013 167.093 li
409.013 163.577 li
cp
f
409.013 184.661 mo
410.02 184.661 li
410.02 188.177 li
409.013 188.177 li
409.013 184.661 li
cp
f
409.013 212.79 mo
410.02 212.79 li
410.02 216.307 li
409.013 216.307 li
409.013 212.79 li
cp
f
409.013 230.358 mo
410.02 230.358 li
410.02 233.874 li
409.013 233.874 li
409.013 230.358 li
cp
f
410.026 160.061 mo
411.036 160.061 li
411.036 163.577 li
410.026 163.577 li
410.026 160.061 li
cp
f
410.026 181.144 mo
411.036 181.144 li
411.036 184.661 li
410.026 184.661 li
410.026 181.144 li
cp
f
410.026 198.725 mo
411.036 198.725 li
411.036 202.242 li
410.026 202.242 li
410.026 198.725 li
cp
f
410.026 223.325 mo
411.036 223.325 li
411.036 226.842 li
410.026 226.842 li
410.026 223.325 li
cp
f
410.026 233.874 mo
411.036 233.874 li
411.036 237.39 li
410.026 237.39 li
410.026 233.874 li
cp
f
410.026 254.971 mo
411.036 254.971 li
411.036 258.487 li
410.026 258.487 li
410.026 254.971 li
cp
f
410.026 265.52 mo
411.036 265.52 li
411.036 269.037 li
410.026 269.037 li
410.026 265.52 li
cp
f
410.026 269.022 mo
411.036 269.022 li
411.036 272.539 li
410.026 272.539 li
410.026 269.022 li
cp
f
411.027 191.693 mo
412.035 191.693 li
412.035 195.209 li
411.027 195.209 li
411.027 191.693 li
cp
f
411.027 195.209 mo
412.035 195.209 li
412.035 198.725 li
411.027 198.725 li
411.027 195.209 li
cp
f
411.027 209.274 mo
412.035 209.274 li
412.035 212.79 li
411.027 212.79 li
411.027 209.274 li
cp
f
412.042 142.479 mo
413.049 142.479 li
413.049 145.996 li
412.042 145.996 li
412.042 142.479 li
cp
f
412.042 205.758 mo
413.049 205.758 li
413.049 209.274 li
412.042 209.274 li
412.042 205.758 li
cp
f
412.042 230.358 mo
413.049 230.358 li
413.049 233.874 li
412.042 233.874 li
412.042 230.358 li
cp
f
413.058 160.061 mo
414.065 160.061 li
414.065 163.577 li
413.058 163.577 li
413.058 160.061 li
cp
f
413.058 170.609 mo
414.065 170.609 li
414.065 174.125 li
413.058 174.125 li
413.058 170.609 li
cp
f
413.058 226.842 mo
414.065 226.842 li
414.065 230.358 li
413.058 230.358 li
413.058 226.842 li
cp
f
413.058 247.939 mo
414.065 247.939 li
414.065 251.456 li
413.058 251.456 li
413.058 247.939 li
cp
f
413.058 265.52 mo
414.065 265.52 li
414.065 269.037 li
413.058 269.037 li
413.058 265.52 li
cp
f
414.057 163.577 mo
415.067 163.577 li
415.067 167.093 li
414.057 167.093 li
414.057 163.577 li
cp
f
414.057 174.125 mo
415.067 174.125 li
415.067 177.642 li
414.057 177.642 li
414.057 174.125 li
cp
f
414.057 181.144 mo
415.067 181.144 li
415.067 184.661 li
414.057 184.661 li
414.057 181.144 li
cp
f
414.057 233.874 mo
415.067 233.874 li
415.067 237.39 li
414.057 237.39 li
414.057 233.874 li
cp
f
415.072 142.479 mo
416.079 142.479 li
416.079 145.996 li
415.072 145.996 li
415.072 142.479 li
cp
f
415.072 212.79 mo
416.079 212.79 li
416.079 216.307 li
415.072 216.307 li
415.072 212.79 li
cp
f
415.072 237.39 mo
416.079 237.39 li
416.079 240.906 li
415.072 240.906 li
415.072 237.39 li
cp
f
415.072 258.487 mo
416.079 258.487 li
416.079 262.004 li
415.072 262.004 li
415.072 258.487 li
cp
f
415.072 269.022 mo
416.079 269.022 li
416.079 272.539 li
415.072 272.539 li
415.072 269.022 li
cp
f
416.074 184.661 mo
417.081 184.661 li
417.081 188.177 li
416.074 188.177 li
416.074 184.661 li
cp
f
416.074 198.725 mo
417.081 198.725 li
417.081 202.242 li
416.074 202.242 li
416.074 198.725 li
cp
f
416.074 223.325 mo
417.081 223.325 li
417.081 226.842 li
416.074 226.842 li
416.074 223.325 li
cp
f
416.074 230.358 mo
417.081 230.358 li
417.081 233.874 li
416.074 233.874 li
416.074 230.358 li
cp
f
417.086 149.512 mo
418.096 149.512 li
418.096 153.028 li
417.086 153.028 li
417.086 149.512 li
cp
f
417.086 160.061 mo
418.096 160.061 li
418.096 163.577 li
417.086 163.577 li
417.086 160.061 li
cp
f
417.086 195.209 mo
418.096 195.209 li
418.096 198.725 li
417.086 198.725 li
417.086 195.209 li
cp
f
417.086 205.758 mo
418.096 205.758 li
418.096 209.274 li
417.086 209.274 li
417.086 205.758 li
cp
f
417.086 233.874 mo
418.096 233.874 li
418.096 237.39 li
417.086 237.39 li
417.086 233.874 li
cp
f
417.086 265.52 mo
418.096 265.52 li
418.096 269.037 li
417.086 269.037 li
417.086 265.52 li
cp
f
418.087 142.479 mo
419.094 142.479 li
419.094 145.996 li
418.087 145.996 li
418.087 142.479 li
cp
f
418.087 163.577 mo
419.094 163.577 li
419.094 167.093 li
418.087 167.093 li
418.087 163.577 li
cp
f
418.087 247.939 mo
419.094 247.939 li
419.094 251.456 li
418.087 251.456 li
418.087 247.939 li
cp
f
418.087 254.971 mo
419.094 254.971 li
419.094 258.487 li
418.087 258.487 li
418.087 254.971 li
cp
f
419.103 181.144 mo
420.11 181.144 li
420.11 184.661 li
419.103 184.661 li
419.103 181.144 li
cp
f
419.103 191.693 mo
420.11 191.693 li
420.11 195.209 li
419.103 195.209 li
419.103 191.693 li
cp
f
419.103 216.307 mo
420.11 216.307 li
420.11 219.823 li
419.103 219.823 li
419.103 216.307 li
cp
f
419.103 269.022 mo
420.11 269.022 li
420.11 272.539 li
419.103 272.539 li
419.103 269.022 li
cp
f
420.102 174.125 mo
421.112 174.125 li
421.112 177.642 li
420.102 177.642 li
420.102 174.125 li
cp
f
420.102 212.79 mo
421.112 212.79 li
421.112 216.307 li
420.102 216.307 li
420.102 212.79 li
cp
f
420.102 223.325 mo
421.112 223.325 li
421.112 226.842 li
420.102 226.842 li
420.102 223.325 li
cp
f
420.102 226.842 mo
421.112 226.842 li
421.112 230.358 li
420.102 230.358 li
420.102 226.842 li
cp
f
420.102 230.358 mo
421.112 230.358 li
421.112 233.874 li
420.102 233.874 li
420.102 230.358 li
cp
f
420.102 233.874 mo
421.112 233.874 li
421.112 237.39 li
420.102 237.39 li
420.102 233.874 li
cp
f
420.102 265.52 mo
421.112 265.52 li
421.112 269.037 li
420.102 269.037 li
420.102 265.52 li
cp
f
421.117 142.479 mo
422.126 142.479 li
422.126 145.996 li
421.117 145.996 li
421.117 142.479 li
cp
f
421.117 160.061 mo
422.126 160.061 li
422.126 163.577 li
421.117 163.577 li
421.117 160.061 li
cp
f
421.117 184.661 mo
422.126 184.661 li
422.126 188.177 li
421.117 188.177 li
421.117 184.661 li
cp
f
421.117 205.758 mo
422.126 205.758 li
422.126 209.274 li
421.117 209.274 li
421.117 205.758 li
cp
f
422.132 163.577 mo
423.139 163.577 li
423.139 167.093 li
422.132 167.093 li
422.132 163.577 li
cp
f
422.132 195.209 mo
423.139 195.209 li
423.139 198.725 li
422.132 198.725 li
422.132 195.209 li
cp
f
422.132 198.725 mo
423.139 198.725 li
423.139 202.242 li
422.132 202.242 li
422.132 198.725 li
cp
f
422.132 258.487 mo
423.139 258.487 li
423.139 262.004 li
422.132 262.004 li
422.132 258.487 li
cp
f
423.134 181.144 mo
424.141 181.144 li
424.141 184.661 li
423.134 184.661 li
423.134 181.144 li
cp
f
423.134 209.274 mo
424.141 209.274 li
424.141 212.79 li
423.134 212.79 li
423.134 209.274 li
cp
f
423.134 230.358 mo
424.141 230.358 li
424.141 233.874 li
423.134 233.874 li
423.134 230.358 li
cp
f
423.134 233.874 mo
424.141 233.874 li
424.141 237.39 li
423.134 237.39 li
423.134 233.874 li
cp
f
423.134 265.52 mo
424.141 265.52 li
424.141 269.037 li
423.134 269.037 li
423.134 265.52 li
cp
f
423.134 269.022 mo
424.141 269.022 li
424.141 272.539 li
423.134 272.539 li
423.134 269.022 li
cp
f
424.146 142.479 mo
425.156 142.479 li
425.156 145.996 li
424.146 145.996 li
424.146 142.479 li
cp
f
424.146 149.512 mo
425.156 149.512 li
425.156 153.028 li
424.146 153.028 li
424.146 149.512 li
cp
f
424.146 160.061 mo
425.156 160.061 li
425.156 163.577 li
424.146 163.577 li
424.146 160.061 li
cp
f
424.146 247.939 mo
425.156 247.939 li
425.156 251.456 li
424.146 251.456 li
424.146 247.939 li
cp
f
425.148 223.325 mo
426.155 223.325 li
426.155 226.842 li
425.148 226.842 li
425.148 223.325 li
cp
f
425.148 237.39 mo
426.155 237.39 li
426.155 240.906 li
425.148 240.906 li
425.148 237.39 li
cp
f
426.164 174.125 mo
427.17 174.125 li
427.17 177.642 li
426.164 177.642 li
426.164 174.125 li
cp
f
426.164 181.144 mo
427.17 181.144 li
427.17 184.661 li
426.164 184.661 li
426.164 181.144 li
cp
f
426.164 198.725 mo
427.17 198.725 li
427.17 202.242 li
426.164 202.242 li
426.164 198.725 li
cp
f
426.164 212.79 mo
427.17 212.79 li
427.17 216.307 li
426.164 216.307 li
426.164 212.79 li
cp
f
426.164 233.874 mo
427.17 233.874 li
427.17 237.39 li
426.164 237.39 li
426.164 233.874 li
cp
f
427.163 163.577 mo
428.172 163.577 li
428.172 167.093 li
427.163 167.093 li
427.163 163.577 li
cp
f
427.163 205.758 mo
428.172 205.758 li
428.172 209.274 li
427.163 209.274 li
427.163 205.758 li
cp
f
427.163 226.842 mo
428.172 226.842 li
428.172 230.358 li
427.163 230.358 li
427.163 226.842 li
cp
f
427.163 254.971 mo
428.172 254.971 li
428.172 258.487 li
427.163 258.487 li
427.163 254.971 li
cp
f
427.163 265.52 mo
428.172 265.52 li
428.172 269.037 li
427.163 269.037 li
427.163 265.52 li
cp
f
428.177 142.479 mo
429.187 142.479 li
429.187 145.996 li
428.177 145.996 li
428.177 142.479 li
cp
f
428.177 191.693 mo
429.187 191.693 li
429.187 195.209 li
428.177 195.209 li
428.177 191.693 li
cp
f
428.177 195.209 mo
429.187 195.209 li
429.187 198.725 li
428.177 198.725 li
428.177 195.209 li
cp
f
428.177 230.358 mo
429.187 230.358 li
429.187 233.874 li
428.177 233.874 li
428.177 230.358 li
cp
f
428.177 269.022 mo
429.187 269.022 li
429.187 272.539 li
428.177 272.539 li
428.177 269.022 li
cp
f
429.179 160.061 mo
430.186 160.061 li
430.186 163.577 li
429.179 163.577 li
429.179 160.061 li
cp
f
429.179 184.661 mo
430.186 184.661 li
430.186 188.177 li
429.179 188.177 li
429.179 184.661 li
cp
f
429.179 233.874 mo
430.186 233.874 li
430.186 237.39 li
429.179 237.39 li
429.179 233.874 li
cp
f
429.179 247.939 mo
430.186 247.939 li
430.186 251.456 li
429.179 251.456 li
429.179 247.939 li
cp
f
429.179 258.487 mo
430.186 258.487 li
430.186 262.004 li
429.179 262.004 li
429.179 258.487 li
cp
f
430.192 181.144 mo
431.202 181.144 li
431.202 184.661 li
430.192 184.661 li
430.192 181.144 li
cp
f
430.192 198.725 mo
431.202 198.725 li
431.202 202.242 li
430.192 202.242 li
430.192 198.725 li
cp
f
430.192 223.325 mo
431.202 223.325 li
431.202 226.842 li
430.192 226.842 li
430.192 223.325 li
cp
f
430.192 265.52 mo
431.202 265.52 li
431.202 269.037 li
430.192 269.037 li
430.192 265.52 li
cp
f
431.207 142.479 mo
432.216 142.479 li
432.216 145.996 li
431.207 145.996 li
431.207 142.479 li
cp
f
431.207 163.577 mo
432.216 163.577 li
432.216 167.093 li
431.207 167.093 li
431.207 163.577 li
cp
f
431.207 202.242 mo
432.216 202.242 li
432.216 205.758 li
431.207 205.758 li
431.207 202.242 li
cp
f
431.207 212.79 mo
432.216 212.79 li
432.216 216.307 li
431.207 216.307 li
431.207 212.79 li
cp
f
432.208 149.512 mo
433.215 149.512 li
433.215 153.028 li
432.208 153.028 li
432.208 149.512 li
cp
f
432.208 160.061 mo
433.215 160.061 li
433.215 163.577 li
432.208 163.577 li
432.208 160.061 li
cp
f
432.208 170.609 mo
433.215 170.609 li
433.215 174.125 li
432.208 174.125 li
432.208 170.609 li
cp
f
432.208 174.125 mo
433.215 174.125 li
433.215 177.642 li
432.208 177.642 li
432.208 174.125 li
cp
f
432.208 205.758 mo
433.215 205.758 li
433.215 209.274 li
432.208 209.274 li
432.208 205.758 li
cp
f
432.208 216.307 mo
433.215 216.307 li
433.215 219.823 li
432.208 219.823 li
432.208 216.307 li
cp
f
432.208 230.358 mo
433.215 230.358 li
433.215 233.874 li
432.208 233.874 li
432.208 230.358 li
cp
f
432.208 233.874 mo
433.215 233.874 li
433.215 237.39 li
432.208 237.39 li
432.208 233.874 li
cp
f
432.208 269.022 mo
433.215 269.022 li
433.215 272.539 li
432.208 272.539 li
432.208 269.022 li
cp
f
433.224 265.52 mo
434.231 265.52 li
434.231 269.037 li
433.224 269.037 li
433.224 265.52 li
cp
f
434.222 142.479 mo
435.233 142.479 li
435.233 145.996 li
434.222 145.996 li
434.222 142.479 li
cp
f
434.222 181.144 mo
435.233 181.144 li
435.233 184.661 li
434.222 184.661 li
434.222 181.144 li
cp
f
434.222 195.209 mo
435.233 195.209 li
435.233 198.725 li
434.222 198.725 li
434.222 195.209 li
cp
f
435.238 163.577 mo
436.248 163.577 li
436.248 167.093 li
435.238 167.093 li
435.238 163.577 li
cp
f
435.238 198.725 mo
436.248 198.725 li
436.248 202.242 li
435.238 202.242 li
435.238 198.725 li
cp
f
435.238 223.325 mo
436.248 223.325 li
436.248 226.842 li
435.238 226.842 li
435.238 223.325 li
cp
f
435.238 226.842 mo
436.248 226.842 li
436.248 230.358 li
435.238 230.358 li
435.238 226.842 li
cp
f
435.238 230.358 mo
436.248 230.358 li
436.248 233.874 li
435.238 233.874 li
435.238 230.358 li
cp
f
435.238 233.874 mo
436.248 233.874 li
436.248 237.39 li
435.238 237.39 li
435.238 233.874 li
cp
f
435.238 247.939 mo
436.248 247.939 li
436.248 251.456 li
435.238 251.456 li
435.238 247.939 li
cp
f
436.24 184.661 mo
437.247 184.661 li
437.247 188.177 li
436.24 188.177 li
436.24 184.661 li
cp
f
436.24 205.758 mo
437.247 205.758 li
437.247 209.274 li
436.24 209.274 li
436.24 205.758 li
cp
f
436.24 212.79 mo
437.247 212.79 li
437.247 216.307 li
436.24 216.307 li
436.24 212.79 li
cp
f
436.24 254.971 mo
437.247 254.971 li
437.247 258.487 li
436.24 258.487 li
436.24 254.971 li
cp
f
436.24 258.487 mo
437.247 258.487 li
437.247 262.004 li
436.24 262.004 li
436.24 258.487 li
cp
f
436.24 269.022 mo
437.247 269.022 li
437.247 272.539 li
436.24 272.539 li
436.24 269.022 li
cp
f
437.252 142.479 mo
438.262 142.479 li
438.262 145.996 li
437.252 145.996 li
437.252 142.479 li
cp
f
437.252 160.061 mo
438.262 160.061 li
438.262 163.577 li
437.252 163.577 li
437.252 160.061 li
cp
f
437.252 191.693 mo
438.262 191.693 li
438.262 195.209 li
437.252 195.209 li
437.252 191.693 li
cp
f
437.252 237.39 mo
438.262 237.39 li
438.262 240.906 li
437.252 240.906 li
437.252 237.39 li
cp
f
437.252 265.52 mo
438.262 265.52 li
438.262 269.037 li
437.252 269.037 li
437.252 265.52 li
cp
f
438.253 174.125 mo
439.263 174.125 li
439.263 177.642 li
438.253 177.642 li
438.253 174.125 li
cp
f
438.253 181.144 mo
439.263 181.144 li
439.263 184.661 li
438.253 184.661 li
438.253 181.144 li
cp
f
438.253 233.874 mo
439.263 233.874 li
439.263 237.39 li
438.253 237.39 li
438.253 233.874 li
cp
f
439.269 163.577 mo
440.276 163.577 li
440.276 167.093 li
439.269 167.093 li
439.269 163.577 li
cp
f
439.269 195.209 mo
440.276 195.209 li
440.276 198.725 li
439.269 198.725 li
439.269 195.209 li
cp
f
439.269 198.725 mo
440.276 198.725 li
440.276 202.242 li
439.269 202.242 li
439.269 198.725 li
cp
f
439.269 209.274 mo
440.276 209.274 li
440.276 212.79 li
439.269 212.79 li
439.269 209.274 li
cp
f
1.5 lw
299.416 60.3315 mo
300.111 59.4839 li
300.792 61.3604 li
301.487 60.9292 li
302.181 61.4019 li
302.863 60.5264 li
303.558 60.7759 li
304.239 60.6099 li
304.934 60.9985 li
305.616 61.3047 li
306.31 60.3037 li
306.992 60.2065 li
307.686 59.4146 li
308.368 60.8735 li
309.063 61.9438 li
309.757 60.415 li
310.439 60.1509 li
311.134 60.1924 li
311.813 60.457 li
312.507 60.4014 li
313.189 60.915 li
313.883 60.415 li
314.565 60.0117 li
315.26 59.6089 li
315.941 59.8872 li
316.636 59.9561 li
317.332 60.165 li
318.012 60.415 li
318.708 60.8179 li
319.389 60.7212 li
320.083 60.6934 li
320.765 60.123 li
321.459 60.6377 li
322.141 60.6509 li
322.836 60.7905 li
323.515 61.0684 li
324.209 61.1655 li
324.905 60.2759 li
325.585 60.1924 li
326.281 60.9429 li
326.962 60.123 li
327.657 59.8594 li
328.338 59.8315 li
329.034 60.2344 li
329.714 59.8179 li
330.41 60.415 li
331.091 60.9292 li
331.786 60.2622 li
332.467 60.0396 li
333.162 59.1362 li
333.857 60.6934 li
334.539 61.1235 li
335.233 60.7065 li
335.915 61.0542 li
336.61 60.248 li
337.288 60.3735 li
337.983 60.957 li
338.665 61.4575 li
339.359 60.8735 li
340.041 60.6792 li
340.736 59.5811 li
341.43 61.6655 li
342.112 62.1943 li
342.806 60.8604 li
343.488 60.6377 li
344.183 60.2759 li
344.864 60.6934 li
345.559 61.3184 li
346.241 60.7212 li
346.935 60.9849 li
347.617 59.8594 li
348.312 59.748 li
349.006 61.0127 li
349.685 60.4014 li
350.38 60.248 li
351.061 59.9985 li
351.756 60.7065 li
352.438 60.54 li
353.132 59.748 li
353.814 59.4561 li
354.508 60.8735 li
355.19 60.6235 li
355.885 60.0396 li
356.58 61.4019 li
357.261 60.7759 li
357.957 59.8594 li
358.637 60.0117 li
359.333 60.5264 li
360.014 61.6377 li
360.708 61.5264 li
361.387 59.6509 li
362.083 60.6377 li
362.763 60.4429 li
363.458 60.5957 li
364.154 60.1509 li
364.834 60.2202 li
365.53 60.3735 li
366.211 60.3315 li
366.906 61.1519 li
367.587 60.9985 li
368.282 60.2065 li
368.963 59.8037 li
369.659 60.3735 li
370.339 60.3735 li
371.035 61.2212 li
371.729 61.2212 li
372.411 60.5264 li
373.106 61.3047 li
373.788 60.7065 li
374.482 61.3462 li
375.161 60.0259 li
375.856 60.7065 li
376.537 61.0127 li
377.232 60.3872 li
377.914 61.3325 li
378.608 60.9849 li
379.29 60.2344 li
379.984 61.0542 li
380.679 59.9282 li
381.361 59.9282 li
382.055 61.1377 li
382.737 60.7065 li
383.432 60.7622 li
384.113 61.1099 li
384.808 61.541 li
385.489 59.8872 li
386.184 59.5674 li
386.863 60.2622 li
387.558 60.0259 li
388.252 60.9707 li
388.934 60.8457 li
389.628 60.8047 li
390.31 61.249 li
391.005 60.5127 li
391.686 61.0127 li
392.381 60.8872 li
393.063 61.416 li
393.757 60.7065 li
394.439 60.6792 li
395.134 61.3604 li
395.829 60.5264 li
396.51 60.749 li
397.205 60.3315 li
397.886 60.5957 li
398.582 60.6099 li
399.26 60.8179 li
399.955 60.4287 li
400.636 60.8047 li
401.331 60.3594 li
402.012 60.2622 li
402.708 60.957 li
403.402 60.6934 li
404.083 61.1792 li
404.779 61.4854 li
405.459 61.8467 li
406.155 60.6377 li
406.836 60.9849 li
407.531 61.4297 li
408.212 60.9014 li
408.907 60.8735 li
409.588 61.3047 li
410.284 60.0117 li
410.978 60.7349 li
411.66 60.6377 li
412.355 60.7349 li
413.034 59.9561 li
413.728 60.5679 li
414.41 60.5127 li
415.104 60.9292 li
415.786 60.8872 li
416.481 60.4985 li
417.162 59.7896 li
417.857 59.748 li
418.539 60.4707 li
419.233 61.2627 li
419.928 61.1655 li
420.61 60.54 li
421.304 60.0674 li
421.986 59.8179 li
422.68 61.6377 li
423.362 61.6934 li
424.057 59.7759 li
424.736 60.248 li
425.43 61.2212 li
426.112 60.9429 li
426.806 61.2905 li
427.501 61.0127 li
428.183 60.5957 li
428.877 60.3037 li
429.559 60.3735 li
430.254 61.9297 li
430.935 60.582 li
431.63 60.123 li
432.311 60.8047 li
433.006 60.9292 li
433.688 59.2476 li
434.382 59.8037 li
435.078 60.4707 li
@
299.416 56.0093 mo
300.111 55.564 li
300.792 55.9399 li
301.487 56.3848 li
302.181 56.3149 li
302.863 57.2324 li
303.558 56.3149 li
304.239 55.3008 li
304.934 55.4258 li
305.616 56.5796 li
306.31 57.5239 li
306.992 56.2734 li
307.686 56.5093 li
308.368 56.7456 li
309.063 56.7178 li
309.757 55.2725 li
310.439 56.0786 li
311.134 57.1489 li
311.813 56.9268 li
312.507 57.0933 li
313.189 56.2876 li
313.883 55.3145 li
314.565 55.9399 li
315.26 55.6899 li
315.941 56.3433 li
316.636 56.9541 li
317.332 57.2046 li
318.012 57.0239 li
318.708 56.1206 li
319.389 55.8013 li
320.083 55.5928 li
320.765 55.7588 li
321.459 55.5229 li
322.141 56.5796 li
322.836 56.7178 li
323.515 56.3848 li
324.209 55.6484 li
324.905 54.9668 li
325.585 54.8276 li
326.281 55.7456 li
326.962 55.564 li
327.657 55.6484 li
328.338 56.3433 li
329.034 57.4961 li
329.714 56.5928 li
330.41 56.5928 li
331.091 56.4819 li
331.786 55.6899 li
332.467 56.3433 li
333.162 56.4126 li
333.857 56.2178 li
334.539 56.6909 li
335.233 56.4683 li
335.915 55.8569 li
336.61 55.7173 li
337.288 56.5928 li
337.983 56.4819 li
338.665 56.6353 li
339.359 56.4263 li
340.041 56.2178 li
340.736 56.1484 li
341.43 55.4258 li
342.112 55.8701 li
342.806 57.0796 li
343.488 56.8154 li
344.183 56.2041 li
344.864 56.8848 li
345.559 57.6909 li
346.241 56.9961 li
346.935 56.3848 li
347.617 56.4536 li
348.312 56.6621 li
349.006 56.6353 li
349.685 56.7734 li
350.38 56.3291 li
351.061 56.2734 li
351.756 55.8013 li
352.438 55.8286 li
353.132 56.8154 li
353.814 56.3013 li
354.508 56.8989 li
355.19 56.7178 li
355.885 56.7041 li
356.58 56.2876 li
357.261 56.4263 li
357.957 56.1064 li
358.637 56.6206 li
359.333 56.5093 li
360.014 57.7466 li
360.708 57.2603 li
361.387 57.0518 li
362.083 56.0508 li
362.763 56.4536 li
363.458 56.2041 li
364.154 56.2456 li
364.834 56.5518 li
365.53 56.5239 li
366.211 56.9404 li
366.906 57.6909 li
367.587 56.8433 li
368.282 56.7734 li
368.963 56.2319 li
369.659 55.6899 li
370.339 56.7041 li
371.035 56.8291 li
371.729 56.7041 li
372.411 56.7319 li
373.106 56.7734 li
373.788 56.3291 li
374.482 56.5239 li
375.161 57.1074 li
375.856 56.7734 li
376.537 57.2466 li
377.232 56.8433 li
377.914 56.8013 li
378.608 55.8701 li
379.29 55.2168 li
379.984 55.7031 li
380.679 54.689 li
381.361 55.731 li
382.055 55.8286 li
382.737 56.4126 li
383.432 56.2876 li
384.113 55.0083 li
384.808 55.6343 li
385.489 55.564 li
386.184 55.4951 li
386.863 56.7598 li
387.558 56.9268 li
388.252 56.2319 li
388.934 56.4263 li
389.628 56.9541 li
390.31 55.8701 li
391.005 55.7729 li
391.686 55.4395 li
392.381 55.5371 li
393.063 56.4961 li
393.757 56.2319 li
394.439 56.0649 li
395.134 56.3013 li
395.829 55.7173 li
396.51 55.4116 li
397.205 55.8423 li
397.886 57.2046 li
398.582 56.5796 li
399.26 55.9536 li
399.955 55.9399 li
400.636 56.0371 li
401.331 55.3423 li
402.012 55.9673 li
402.708 57.1353 li
403.402 57.0381 li
404.083 55.8423 li
404.779 56.6353 li
405.459 56.4263 li
406.155 55.5508 li
406.836 55.2725 li
407.531 55.4673 li
408.212 56.5376 li
408.907 56.5518 li
409.588 56.2319 li
410.284 56.2734 li
410.978 56.2178 li
411.66 55.8286 li
412.355 56.1763 li
413.034 55.9673 li
413.728 56.5518 li
414.41 56.3149 li
415.104 56.8433 li
415.786 56.4819 li
416.481 56.3706 li
417.162 55.6196 li
417.857 55.8423 li
418.539 56.2876 li
419.233 56.6909 li
419.928 56.9404 li
420.61 55.6899 li
421.304 55.7588 li
421.986 56.2041 li
422.68 55.5371 li
423.362 54.9668 li
424.057 55.3423 li
424.736 56.1621 li
425.43 55.7031 li
426.112 55.5371 li
426.806 56.6763 li
427.501 56.4819 li
428.183 55.6343 li
428.877 55.7031 li
429.559 56.7734 li
430.254 56.9126 li
430.935 56.9268 li
431.63 56.8433 li
432.311 57.4961 li
433.006 57.6489 li
433.688 55.9814 li
434.382 55.6064 li
435.078 57.1211 li
0 0 0 .889999 cmyk
@
299.416 43.2227 mo
300.111 43.0142 li
300.792 42.5 li
301.487 43.334 li
302.181 43.5288 li
302.863 43.1113 li
303.558 42.5142 li
304.239 43.8901 li
304.934 42.9453 li
305.616 42.2642 li
306.31 42.9585 li
306.992 42.7227 li
307.686 43.3896 li
308.368 43.5146 li
309.063 43.334 li
309.757 42.667 li
310.439 42.1528 li
311.134 42.4448 li
311.813 42.9028 li
312.507 44.1821 li
313.189 44.0288 li
313.883 42.0977 li
314.565 42.6948 li
315.26 43.0288 li
315.941 43.5981 li
316.636 43.8208 li
317.332 43.0142 li
318.012 42.7783 li
318.708 43.7505 li
319.389 43.334 li
320.083 43.5288 li
320.765 43.001 li
321.459 43.001 li
322.141 43.626 li
322.836 42.9312 li
323.515 43.0981 li
324.209 42.5 li
324.905 43.376 li
325.585 43.8062 li
326.281 43.2925 li
326.962 43.3896 li
327.657 44.0708 li
328.338 43.7236 li
329.034 43.6538 li
329.714 44.1265 li
330.41 43.6958 li
331.091 43.6401 li
331.786 42.7505 li
332.467 42.7085 li
333.162 42.7505 li
333.857 44.46 li
334.539 42.8198 li
335.233 43.2227 li
335.915 42.5142 li
336.61 42.2778 li
337.288 42.1113 li
337.983 41.6108 li
338.665 43.2227 li
339.359 43.5425 li
340.041 43.3481 li
340.736 42.0835 li
341.43 42.2915 li
342.112 42.1802 li
342.806 42.7925 li
343.488 43.2783 li
344.183 43.4731 li
344.864 42.6392 li
345.559 42.8198 li
346.241 43.835 li
346.935 43.668 li
347.617 44.335 li
348.312 42.9868 li
349.006 43.0557 li
349.685 43.626 li
350.38 44.0845 li
351.061 43.2227 li
351.756 43.3481 li
352.438 42.6948 li
353.132 41.9863 li
353.814 41.9028 li
354.508 42.7642 li
355.19 42.9731 li
355.885 43.0425 li
356.58 43.626 li
357.261 42.9868 li
357.957 42.6113 li
358.637 42.834 li
359.333 42.5 li
360.014 42.1948 li
360.708 43.0557 li
361.387 43.6538 li
362.083 43.6816 li
362.763 43.0845 li
363.458 42.3608 li
364.154 43.5981 li
364.834 42.6113 li
365.53 42.9453 li
366.211 43.1255 li
366.906 43.4453 li
367.587 42.8755 li
368.282 42.7085 li
368.963 42.042 li
369.659 43.7505 li
370.339 43.1948 li
371.035 42.5835 li
371.729 42.4307 li
372.411 42.7505 li
373.106 42.2778 li
373.788 43.4453 li
374.482 42.1528 li
375.161 42.0688 li
375.856 42.5977 li
376.537 43.8208 li
377.232 43.7505 li
377.914 43.3618 li
378.608 43.4453 li
379.29 43.4175 li
379.984 43.7793 li
380.679 43.2227 li
381.361 43.5566 li
382.055 43.501 li
382.737 43.3618 li
383.432 42.167 li
384.113 43.2095 li
384.808 43.1255 li
385.489 43.7651 li
386.184 42.7085 li
386.863 43.2925 li
387.558 43.5288 li
388.252 43.2368 li
388.934 41.8608 li
389.628 42.1802 li
390.31 43.1255 li
391.005 43.0425 li
391.686 44.0288 li
392.381 43.0425 li
393.063 42.4722 li
393.757 41.708 li
394.439 43.3618 li
395.134 43.001 li
395.829 42.375 li
396.51 42.2222 li
397.205 41.6523 li
397.886 42.6392 li
398.582 42.7783 li
399.26 42.9175 li
399.955 43.6123 li
400.636 43.4873 li
401.331 43.0142 li
402.012 42.0278 li
402.708 41.75 li
403.402 42.8198 li
404.083 42.2222 li
404.779 43.2095 li
405.459 43.7095 li
406.155 43.3896 li
406.836 41.9443 li
407.531 42.2915 li
408.212 43.4033 li
408.907 43.6401 li
409.588 42.5 li
410.284 42.8896 li
410.978 42.9453 li
411.66 43.167 li
412.355 42.9175 li
413.034 43.3618 li
413.728 43.3896 li
414.41 42.6948 li
415.104 42.3062 li
415.786 42.5977 li
416.481 43.4873 li
417.162 44.0845 li
417.857 45.3354 li
418.539 43.6401 li
419.233 43.167 li
419.928 43.1113 li
420.61 43.0698 li
421.304 43.8481 li
421.986 44.5845 li
422.68 42.9175 li
423.362 44.2793 li
424.057 43.3618 li
424.736 42.8062 li
425.43 42.4448 li
426.112 43.5288 li
426.806 43.7236 li
427.501 42.7925 li
428.183 43.167 li
428.877 42.5278 li
429.559 42.9028 li
430.254 43.2095 li
430.935 43.3062 li
431.63 42.9453 li
432.311 42.8618 li
433.006 42.6948 li
433.688 41.4854 li
434.382 42.6392 li
435.078 43.5566 li
0 0 0 .699997 cmyk
@
299.416 71.0747 mo
300.111 71.6582 li
300.792 72.187 li
301.487 70.894 li
302.181 69.9766 li
302.863 71.7417 li
303.558 72.3398 li
304.239 72.2422 li
304.934 71.5615 li
305.616 71.478 li
306.31 71.0054 li
306.992 71.8945 li
307.686 71.3667 li
308.368 71.3667 li
309.063 72.2422 li
309.757 71.2695 li
310.439 71.2417 li
311.134 71.5615 li
311.813 72.2705 li
312.507 71.645 li
313.189 71.311 li
313.883 71.6729 li
314.565 71.1025 li
315.26 71.0054 li
315.941 71.4644 li
316.636 70.5469 li
317.332 70.5469 li
318.012 71.3389 li
318.708 71.3667 li
319.389 71.9233 li
320.083 72.02 li
320.765 70.6997 li
321.459 71.2417 li
322.141 72.3262 li
322.836 72.2007 li
323.515 72.479 li
324.209 71.2695 li
324.905 71.311 li
325.585 72.3677 li
326.281 72.437 li
326.962 71.728 li
327.657 71.2554 li
328.338 71.1025 li
329.034 71.9087 li
329.714 71.2554 li
330.41 72.7427 li
331.091 71.5059 li
331.786 71.186 li
332.467 71.5059 li
333.162 72.0894 li
333.857 72.6035 li
334.539 73.271 li
335.233 71.9502 li
335.915 71.1304 li
336.61 70.7417 li
337.288 71.228 li
337.983 71.812 li
338.665 71.603 li
339.359 71.7837 li
340.041 72.2563 li
340.736 72.2842 li
341.43 72.2422 li
342.112 70.8384 li
342.806 71.5615 li
343.488 71.3389 li
344.183 72.2705 li
344.864 71.6172 li
345.559 71.5337 li
346.241 72.0337 li
346.935 71.9502 li
347.617 71.9087 li
348.312 71.2139 li
349.006 71.5615 li
349.685 71.1724 li
350.38 71.5615 li
351.061 71.478 li
351.756 71.52 li
352.438 71.9365 li
353.132 71.061 li
353.814 70.6025 li
354.508 71.1304 li
355.19 70.8521 li
355.885 72.2285 li
356.58 72.479 li
357.261 71.8252 li
357.957 70.4219 li
358.637 70.7554 li
359.333 71.228 li
360.014 71.228 li
360.708 71.4922 li
361.387 71.0747 li
362.083 70.2964 li
362.763 71.9365 li
363.458 71.853 li
364.154 71.3809 li
364.834 71.5894 li
365.53 71.7417 li
366.211 71.3667 li
366.906 71.7837 li
367.587 72.4927 li
368.282 72.1729 li
368.963 71.311 li
369.659 71.7417 li
370.339 71.2974 li
371.035 71.2837 li
371.729 72.1172 li
372.411 72.3955 li
373.106 72.3398 li
373.788 72.2979 li
374.482 71.478 li
375.161 70.7695 li
375.856 71.6729 li
376.537 72.2285 li
377.232 71.6729 li
377.914 72.4512 li
378.608 71.9644 li
379.29 70.9365 li
379.984 71.478 li
380.679 71.52 li
381.361 72.2148 li
382.055 72.6182 li
382.737 71.3809 li
383.432 70.6719 li
384.113 71.8677 li
384.808 72.312 li
385.489 72.1313 li
386.184 72.5347 li
386.863 71.1997 li
387.558 70.9224 li
388.252 72.0059 li
388.934 71.4365 li
389.628 71.5474 li
390.31 71.7695 li
391.005 72.0337 li
391.686 71.2554 li
392.381 71.7139 li
393.063 71.7837 li
393.757 72.2705 li
394.439 72.5483 li
395.134 71.9365 li
395.829 70.4634 li
396.51 70.8384 li
397.205 72.5757 li
397.886 71.0747 li
398.582 71.4502 li
399.26 71.5615 li
399.955 71.9785 li
400.636 71.2417 li
401.331 71.7974 li
402.012 71.0054 li
402.708 70.6162 li
403.402 71.6172 li
404.083 71.6582 li
404.779 72.312 li
405.459 72.0615 li
406.155 71.478 li
406.836 71.1724 li
407.531 72.2563 li
408.212 71.186 li
408.907 72.4233 li
409.588 72.02 li
410.284 71.186 li
410.978 71.5474 li
411.66 71.52 li
412.355 72.0059 li
413.034 71.311 li
413.728 71.6729 li
414.41 71.4365 li
415.104 72.4644 li
415.786 72.812 li
416.481 71.9922 li
417.162 72.6592 li
417.857 71.7139 li
418.539 70.4355 li
419.233 70.7275 li
419.928 71.0889 li
420.61 71.1304 li
421.304 71.4502 li
421.986 71.603 li
422.68 71.3667 li
423.362 72.0059 li
424.057 71.353 li
424.736 72.52 li
425.43 72.1729 li
426.112 70.5747 li
426.806 71.4224 li
427.501 70.8521 li
428.183 72.0757 li
428.877 71.6172 li
429.559 71.8252 li
430.254 71.1167 li
430.935 71.812 li
431.63 71.353 li
432.311 71.6172 li
433.006 71.52 li
433.688 70.6997 li
434.382 70.7695 li
435.078 72.6313 li
0 0 0 .410004 cmyk
@
299.416 44.168 mo
300.111 43.5566 li
300.792 42.9312 li
301.487 43.1401 li
302.181 43.9453 li
302.863 43.4873 li
303.558 43.376 li
304.239 44.793 li
304.934 43.4033 li
305.616 44.8218 li
306.31 43.501 li
306.992 42.5977 li
307.686 43.0981 li
308.368 44.293 li
309.063 44.0708 li
309.757 43.5566 li
310.439 43.4873 li
311.134 42.2915 li
311.813 42.9312 li
312.507 43.4316 li
313.189 45.0156 li
313.883 43.3896 li
314.565 43.9878 li
315.26 43.5425 li
315.941 43.1948 li
316.636 43.5566 li
317.332 43.0142 li
318.012 43.0425 li
318.708 43.334 li
319.389 44.0288 li
320.083 43.6958 li
320.765 43.5146 li
321.459 44.1401 li
322.141 42.9312 li
322.836 42.5278 li
323.515 42.834 li
324.209 42.1245 li
324.905 43.0845 li
325.585 43.5703 li
326.281 42.8896 li
326.962 42.2915 li
327.657 42 li
328.338 43.4316 li
329.034 43.2227 li
329.714 42.9731 li
330.41 44.6826 li
331.091 43.4873 li
331.786 42.5 li
332.467 42.0835 li
333.162 43.334 li
333.857 43.4033 li
334.539 43.7236 li
335.233 44.335 li
335.915 44.0435 li
336.61 43.2095 li
337.288 42.7505 li
337.983 43.1401 li
338.665 43.2646 li
339.359 43.2095 li
340.041 42.8896 li
340.736 43.0698 li
341.43 42.2085 li
342.112 42.7925 li
342.806 43.501 li
343.488 43.7095 li
344.183 42.7642 li
344.864 43.6958 li
345.559 43.6538 li
346.241 42.1245 li
346.935 42.8896 li
347.617 44.6128 li
348.312 44.4321 li
349.006 43.4453 li
349.685 42.667 li
350.38 43.4033 li
351.061 43.2095 li
351.756 42.5977 li
352.438 42.3608 li
353.132 42.8618 li
353.814 43.4453 li
354.508 41.75 li
355.19 43.2925 li
355.885 43.5845 li
356.58 42.6533 li
357.261 43.7793 li
357.957 44.168 li
358.637 44.001 li
359.333 42.2915 li
360.014 43.7651 li
360.708 44.293 li
361.387 43.3618 li
362.083 43.1401 li
362.763 43.5981 li
363.458 43.5845 li
364.154 43.5566 li
364.834 42.6948 li
365.53 42.9868 li
366.211 44.6128 li
366.906 43.5288 li
367.587 43.2505 li
368.282 43.5425 li
368.963 43.6958 li
369.659 42.7925 li
370.339 42.5 li
371.035 43.7651 li
371.729 42.5977 li
372.411 43.1113 li
373.106 44.001 li
373.788 44.9878 li
374.482 43.001 li
375.161 43.1255 li
375.856 43.0698 li
376.537 42.5142 li
377.232 44.0708 li
377.914 44.001 li
378.608 44.2793 li
379.29 43.1401 li
379.984 43.7373 li
380.679 43.4453 li
381.361 43.7095 li
382.055 44.5015 li
382.737 43.4453 li
383.432 43.4731 li
384.113 43.8062 li
384.808 45.1406 li
385.489 44.2793 li
386.184 42.7227 li
386.863 42.7227 li
387.558 43.1948 li
388.252 44.1821 li
388.934 43.9175 li
389.628 44.6548 li
390.31 43.793 li
391.005 44.0981 li
391.686 43.2646 li
392.381 43.2783 li
393.063 42.7783 li
393.757 42.6392 li
394.439 43.3481 li
395.134 43.7793 li
395.829 43.6958 li
396.51 42.5557 li
397.205 43.0981 li
397.886 42.8062 li
398.582 42.7783 li
399.26 42.0557 li
399.955 43.8765 li
400.636 43.9175 li
401.331 43.6816 li
402.012 43.2925 li
402.708 43.0288 li
403.402 43.1255 li
404.083 43.1255 li
404.779 43.2783 li
405.459 43.3618 li
406.155 44.2793 li
406.836 43.7236 li
407.531 43.5566 li
408.212 43.668 li
408.907 43.2227 li
409.588 43.1812 li
410.284 44.1123 li
410.978 43.6958 li
411.66 43.2227 li
412.355 43.8481 li
413.034 43.1538 li
413.728 43.2368 li
414.41 43.7095 li
415.104 43.793 li
415.786 43.9175 li
416.481 43.9321 li
417.162 43.1113 li
417.857 43.626 li
418.539 43.7095 li
419.233 43.8618 li
419.928 43.6816 li
420.61 43.9038 li
421.304 43.459 li
421.986 44.1958 li
422.68 44.3906 li
423.362 44.6826 li
424.057 44.7798 li
424.736 42.5977 li
425.43 43.2095 li
426.112 43.4453 li
426.806 43.3896 li
427.501 43.501 li
428.183 44.0288 li
428.877 43.4453 li
429.559 42.4722 li
430.254 43.9453 li
430.935 43.459 li
431.63 43.4873 li
432.311 43.2368 li
433.006 42.667 li
433.688 42.834 li
434.382 43.4316 li
435.078 42.834 li
0 0 0 .589996 cmyk
@
299.416 28.0601 mo
300.111 28.2964 li
300.792 28.4214 li
301.487 29.2554 li
302.181 27.7266 li
302.863 28.2544 li
303.558 28.0327 li
304.239 27.8101 li
304.934 28.5049 li
305.616 28.6021 li
306.31 27.9624 li
306.992 27.8101 li
307.686 28.0327 li
308.368 28.4077 li
309.063 28.0459 li
309.757 27.2539 li
310.439 28.2822 li
311.134 28.2129 li
311.813 28.8384 li
312.507 28.7827 li
313.189 27.1016 li
313.883 27.6294 li
314.565 27.7407 li
315.26 28.0459 li
315.941 27.5181 li
316.636 27.7266 li
317.332 27.1284 li
318.012 28.4771 li
318.708 29.2554 li
319.389 28.4771 li
320.083 28.0327 li
320.765 28.6997 li
321.459 28.7134 li
322.141 27.9214 li
322.836 29.644 li
323.515 29.4634 li
324.209 28.7554 li
324.905 28.3521 li
325.585 28.9492 li
326.281 28.1294 li
326.962 28.7407 li
327.657 28.1709 li
328.338 28.0459 li
329.034 28.3521 li
329.714 27.7407 li
330.41 27.2539 li
331.091 27.5737 li
331.786 28.9771 li
332.467 28.2822 li
333.162 27.3232 li
333.857 27.5874 li
334.539 28.4077 li
335.233 28.0459 li
335.915 27.4067 li
336.61 27.9487 li
337.288 28.1851 li
337.983 28.5884 li
338.665 28.6719 li
339.359 28.2822 li
340.041 28.5884 li
340.736 28.3521 li
341.43 28.3657 li
342.112 28.6997 li
342.806 28.6577 li
343.488 28.0044 li
344.183 28.6577 li
344.864 27.9771 li
345.559 28.7275 li
346.241 28.4492 li
346.935 28.6997 li
347.617 28.0181 li
348.312 27.9902 li
349.006 28.7827 li
349.685 28.7407 li
350.38 28.1851 li
351.061 28.5049 li
351.756 28.1851 li
352.438 28.1152 li
353.132 28.8101 li
353.814 28.7964 li
354.508 27.5596 li
355.19 27.8521 li
355.885 28.9634 li
356.58 28.5327 li
357.261 29.186 li
357.957 28.1016 li
358.637 28.1851 li
359.333 28.0459 li
360.014 28.4624 li
360.708 27.7681 li
361.387 27.7681 li
362.083 29.3389 li
362.763 29.269 li
363.458 28.2822 li
364.154 28.2266 li
364.834 28.9634 li
365.53 28.9077 li
366.211 28.0181 li
366.906 28.3101 li
367.587 28.0601 li
368.282 28.4355 li
368.963 28.144 li
369.659 27.5044 li
370.339 27.9346 li
371.035 28.8521 li
371.729 28.2964 li
372.411 28.1016 li
373.106 27.6851 li
373.788 27.7681 li
374.482 28.9634 li
375.161 28.4771 li
375.856 27.9346 li
376.537 27.8374 li
377.232 28.5049 li
377.914 29.1025 li
378.608 28.2407 li
379.29 28.7275 li
379.984 28.8799 li
380.679 28.4492 li
381.361 27.8374 li
382.055 26.7813 li
382.737 27.9771 li
383.432 28.8657 li
384.113 28.6162 li
384.808 26.8921 li
385.489 27.8931 li
386.184 28.1992 li
386.863 28.5049 li
387.558 27.6152 li
388.252 28.1572 li
388.934 27.5044 li
389.628 27.9067 li
390.31 28.5181 li
391.005 29.0049 li
391.686 28.8521 li
392.381 28.1709 li
393.063 29.7144 li
393.757 27.7129 li
394.439 28.3936 li
395.134 29.0469 li
395.829 28.0737 li
396.51 28.2686 li
397.205 28.3242 li
397.886 28.5884 li
398.582 28.5327 li
399.26 28.6719 li
399.955 28.3521 li
400.636 28.0327 li
401.331 28.0044 li
402.012 28.6851 li
402.708 27.4067 li
403.402 27.9214 li
404.083 28.6851 li
404.779 29.0884 li
405.459 28.6021 li
406.155 27.9771 li
406.836 28.0601 li
407.531 28.9077 li
408.212 29.1719 li
408.907 28.2129 li
409.588 28.1152 li
410.284 27.4902 li
410.978 27.7129 li
411.66 27.9902 li
412.355 27.4487 li
413.034 28.5049 li
413.728 28.6577 li
414.41 28.2129 li
415.104 27.8237 li
415.786 27.7544 li
416.481 27.8931 li
417.162 27.9902 li
417.857 27.6987 li
418.539 28.4492 li
419.233 29.144 li
419.928 28.9355 li
420.61 28.2266 li
421.304 28.7275 li
421.986 28.1709 li
422.68 28.4912 li
423.362 28.3936 li
424.057 28.2129 li
424.736 28.144 li
425.43 28.4355 li
426.112 28.9771 li
426.806 28.4214 li
427.501 28.5605 li
428.183 28.3101 li
428.877 27.4902 li
429.559 28.2266 li
430.254 28.4771 li
430.935 27.1704 li
431.63 28.0737 li
432.311 28.8657 li
433.006 28.1152 li
433.688 27.9067 li
434.382 28.4355 li
435.078 28.2822 li
0 0 0 .300003 cmyk
@
299.416 60.5679 mo
300.111 60.8047 li
300.792 61.6934 li
301.487 61.7769 li
302.181 61.0962 li
302.863 60.4429 li
303.558 60.9849 li
304.239 61.6519 li
304.934 61.4575 li
305.616 61.2627 li
306.31 60.915 li
306.992 60.2202 li
307.686 59.5254 li
308.368 60.6655 li
309.063 61.0962 li
309.757 60.8735 li
310.439 61.1655 li
311.134 60.9707 li
311.813 60.9707 li
312.507 61.3462 li
313.189 60.8179 li
313.883 60.8047 li
314.565 61.0962 li
315.26 61.082 li
315.941 60.4287 li
316.636 61.2627 li
317.332 61.2349 li
318.012 61.4019 li
318.708 61.4854 li
319.389 60.8872 li
320.083 59.8037 li
320.765 60.8047 li
321.459 60.6509 li
322.141 61.6655 li
322.836 61.374 li
323.515 60.4429 li
324.209 59.3311 li
324.905 60.457 li
325.585 60.4707 li
326.281 61.4712 li
326.962 60.29 li
327.657 61.1792 li
328.338 61.3184 li
329.034 61.082 li
329.714 61.2627 li
330.41 60.457 li
331.091 60.582 li
331.786 60.5127 li
332.467 61.2905 li
333.162 61.1099 li
333.857 61.9297 li
334.539 62.2769 li
335.233 61.749 li
335.915 60.9429 li
336.61 61.6377 li
337.288 62.208 li
337.983 61.4438 li
338.665 60.8604 li
339.359 60.4429 li
340.041 62.0967 li
340.736 61.4438 li
341.43 62.1802 li
342.112 61.1792 li
342.806 60.54 li
343.488 60.2622 li
344.183 61.1099 li
344.864 60.7759 li
345.559 61.6519 li
346.241 61.9438 li
346.935 61.2627 li
347.617 61.0542 li
348.312 60.6235 li
349.006 61.2627 li
349.685 60.6377 li
350.38 61.374 li
351.061 61.3047 li
351.756 61.8604 li
352.438 60.3872 li
353.132 60.1787 li
353.814 60.54 li
354.508 61.541 li
355.19 61.7769 li
355.885 61.082 li
356.58 60.415 li
357.261 60.9429 li
357.957 61.4438 li
358.637 61.2075 li
359.333 61.8325 li
360.014 60.9429 li
360.708 61.0684 li
361.387 60.7065 li
362.083 61.4575 li
362.763 61.6934 li
363.458 61.0264 li
364.154 62.1802 li
364.834 61.4854 li
365.53 60.0396 li
366.211 60.2622 li
366.906 61.4995 li
367.587 62.5273 li
368.282 62.2915 li
368.963 61.6245 li
369.659 62.1523 li
370.339 61.4575 li
371.035 60.6792 li
371.729 60.0674 li
372.411 61.7075 li
373.106 61.4712 li
373.788 61.8184 li
374.482 61.9854 li
375.161 61.5688 li
375.856 61.2769 li
376.537 60.4707 li
377.232 61.416 li
377.914 61.1235 li
378.608 61.6802 li
379.29 60.6377 li
379.984 60.6099 li
380.679 60.4287 li
381.361 60.5542 li
382.055 61.7212 li
382.737 61.791 li
383.432 61.3882 li
384.113 60.7349 li
384.808 60.29 li
385.489 59.5254 li
386.184 60.123 li
386.863 61.6655 li
387.558 61.374 li
388.252 61.0542 li
388.934 60.0396 li
389.628 60.1787 li
390.31 61.6802 li
391.005 62.6523 li
391.686 62.083 li
392.381 60.8457 li
393.063 60.9707 li
393.757 61.1792 li
394.439 61.5132 li
395.134 60.9985 li
395.829 60.9292 li
396.51 61.7212 li
397.205 61.5132 li
397.886 60.7905 li
398.582 60.3037 li
399.26 60.0117 li
399.955 60.7622 li
400.636 61.749 li
401.331 60.1787 li
402.012 60.6792 li
402.708 61.6519 li
403.402 61.8184 li
404.083 61.6099 li
404.779 61.8604 li
405.459 61.9717 li
406.155 61.0542 li
406.836 61.8467 li
407.531 60.8604 li
408.212 61.2075 li
408.907 61.749 li
409.588 62.4585 li
410.284 61.9438 li
410.978 61.5688 li
411.66 60.6655 li
412.355 60.8457 li
413.034 60.0542 li
413.728 61.082 li
414.41 61.2769 li
415.104 61.1655 li
415.786 61.6802 li
416.481 60.4707 li
417.162 60.9014 li
417.857 61.082 li
418.539 60.1924 li
419.233 61.374 li
419.928 61.2075 li
420.61 61.7212 li
421.304 61.874 li
421.986 60.9707 li
422.68 60.3315 li
423.362 60.4985 li
424.057 60.957 li
424.736 62.0688 li
425.43 61.0684 li
426.112 60.6377 li
426.806 61.4019 li
427.501 61.874 li
428.183 60.8872 li
428.877 60.7622 li
429.559 62.6802 li
430.254 62.1387 li
430.935 60.8872 li
431.63 60.54 li
432.311 59.623 li
433.006 60.9849 li
433.688 61.7075 li
434.382 61.4854 li
435.078 60.6099 li
0 0 0 .110001 cmyk
@
299.416 54.6611 mo
300.111 54.1606 li
300.792 55.0918 li
301.487 55.0503 li
302.181 55.2031 li
302.863 56.2876 li
303.558 55.1338 li
304.239 54.4111 li
304.934 55.0083 li
305.616 55.0225 li
306.31 54.6196 li
306.992 54.3276 li
307.686 55.3701 li
308.368 55.1196 li
309.063 55.1196 li
309.757 54.9805 li
310.439 54.4111 li
311.134 54.1885 li
311.813 53.8413 li
312.507 53.1875 li
313.189 54.8423 li
313.883 54.4805 li
314.565 53.9658 li
315.26 54.9536 li
315.941 54.0771 li
316.636 54.2583 li
317.332 54.5776 li
318.012 55.2451 li
318.708 55.356 li
319.389 54.5776 li
320.083 54.8276 li
320.765 54.8691 li
321.459 55.6621 li
322.141 54.5503 li
322.836 54.3833 li
323.515 54.5503 li
324.209 55.4814 li
324.905 54.772 li
325.585 55.0225 li
326.281 54.6333 li
326.962 54.522 li
327.657 53.1743 li
328.338 54.8691 li
329.034 54.2583 li
329.714 53.605 li
330.41 55.9116 li
331.091 55.7866 li
331.786 54.6475 li
332.467 54.3135 li
333.162 54.689 li
333.857 55.0781 li
334.539 54.522 li
335.233 54.3135 li
335.915 54.856 li
336.61 54.2163 li
337.288 54.0771 li
337.983 54.522 li
338.665 55.0781 li
339.359 55.7588 li
340.041 53.438 li
340.736 53.438 li
341.43 53.6743 li
342.112 54.4111 li
342.806 54.772 li
343.488 54.7168 li
344.183 54.1606 li
344.864 53.5908 li
345.559 54.272 li
346.241 53.2852 li
346.935 53.3965 li
347.617 53.8555 li
348.312 54.5361 li
349.006 54.939 li
349.685 54.6196 li
350.38 54.2856 li
351.061 54.4805 li
351.756 54.564 li
352.438 54.8003 li
353.132 55.0083 li
353.814 54.6196 li
354.508 54.7866 li
355.19 54.1606 li
355.885 54.5503 li
356.58 54.9668 li
357.261 55.3423 li
357.957 54.2163 li
358.637 54.8833 li
359.333 54.7866 li
360.014 55.3145 li
360.708 55.0083 li
361.387 55.106 li
362.083 55.4116 li
362.763 55.3145 li
363.458 54.397 li
364.154 54.3413 li
364.834 54.4946 li
365.53 55.0503 li
366.211 54.9536 li
366.906 55.1475 li
367.587 55.0225 li
368.282 54.7866 li
368.963 53.5635 li
369.659 53.5493 li
370.339 55.1753 li
371.035 55.231 li
371.729 54.5776 li
372.411 54.0771 li
373.106 54.6753 li
373.788 55.1338 li
374.482 54.4805 li
375.161 54.147 li
375.856 54.856 li
376.537 53.9937 li
377.232 55.0083 li
377.914 55.0083 li
378.608 54.1885 li
379.29 54.147 li
379.984 55.6196 li
380.679 56.5928 li
381.361 54.6611 li
382.055 53.9111 li
382.737 53.73 li
383.432 54.6475 li
384.113 55.3701 li
384.808 54.439 li
385.489 54.064 li
386.184 54.4248 li
386.863 53.605 li
387.558 55.3701 li
388.252 55.2866 li
388.934 54.6196 li
389.628 54.8276 li
390.31 55.3145 li
391.005 54.606 li
391.686 54.6753 li
392.381 54.2163 li
393.063 54.105 li
393.757 54.0771 li
394.439 54.1328 li
395.134 54.7588 li
395.829 54.4668 li
396.51 54.522 li
397.205 54.0215 li
397.886 55.2168 li
398.582 55.3838 li
399.26 54.439 li
399.955 52.9102 li
400.636 54.23 li
401.331 54.9946 li
402.012 54.8276 li
402.708 53.0073 li
403.402 53.9805 li
404.083 54.0771 li
404.779 54.6611 li
405.459 55.7729 li
406.155 54.3691 li
406.836 53.8413 li
407.531 54.9946 li
408.212 55.0361 li
408.907 55.2031 li
409.588 55.0918 li
410.284 55.0361 li
410.978 54.8691 li
411.66 55.3423 li
412.355 54.9536 li
413.034 54.8833 li
413.728 54.6475 li
414.41 54.1196 li
415.104 55.0225 li
415.786 53.7021 li
416.481 55.0918 li
417.162 54.8276 li
417.857 54.6611 li
418.539 55.4258 li
419.233 54.7031 li
419.928 55.3701 li
420.61 54.6611 li
421.304 54.5776 li
421.986 55.1895 li
422.68 55.8013 li
423.362 55.4673 li
424.057 54.8145 li
424.736 53.73 li
425.43 53.6885 li
426.112 53.9111 li
426.806 54.6475 li
427.501 55.3979 li
428.183 54.7168 li
428.877 54.8691 li
429.559 52.5903 li
430.254 53.772 li
430.935 54.2026 li
431.63 53.897 li
432.311 54.0361 li
433.006 53.9111 li
433.688 53.1318 li
434.382 53.7998 li
435.078 54.3833 li
0 0 0 1 cmyk
@
22.7593 67.4331 mo
23.4399 67.4609 li
24.1343 67.9897 li
24.8159 67.0581 li
25.5112 67.4751 li
26.1919 66.9053 li
26.8862 67.5166 li
27.5679 67.3218 li
28.2632 67.8228 li
28.9585 67.5308 li
29.6382 68.2949 li
30.3335 67.3218 li
31.0151 67.4609 li
31.7095 67.3638 li
32.3901 67.9897 li
33.0854 67.8643 li
33.7671 67.6558 li
34.4614 66.7803 li
35.1421 66.8359 li
35.8374 68.1001 li
36.5317 67.8784 li
37.2134 67.6694 li
37.9077 67.5723 li
38.5894 67.6421 li
39.2837 66.9189 li
39.9644 67.7671 li
40.6597 68.1147 li
41.3413 67.0444 li
42.0356 67.5723 li
42.7163 67.4888 li
43.4116 67.6421 li
44.1069 67.8921 li
44.7876 67.6138 li
45.4819 67.7114 li
46.1636 67.8506 li
46.8589 68.1147 li
47.5405 67.3364 li
48.2349 67.1968 li
48.9155 67.1279 li
49.6108 68.3228 li
50.2915 67.5166 li
50.9868 67.2949 li
51.6812 67.6001 li
52.3628 68.1147 li
53.0571 67.2808 li
53.7378 66.9331 li
54.4331 67.8643 li
55.1138 68.6147 li
55.8091 67.7949 li
56.4897 67.7114 li
57.1851 66.8633 li
57.8657 67.8506 li
58.5601 67.9341 li
59.2554 67.2104 li
59.937 67.0444 li
60.6323 67.8506 li
61.312 67.5723 li
62.0073 67.2393 li
62.689 67.5864 li
63.3843 67.3774 li
64.064 67.6973 li
64.7593 67.1694 li
65.4409 67.5864 li
66.1353 67.2393 li
66.8159 67.7251 li
67.5112 67.5723 li
68.2065 67.3364 li
68.8872 67.7251 li
69.5815 67.1138 li
70.2632 68.1836 li
70.9585 67.9478 li
71.6392 67.1558 li
72.3335 67.4751 li
73.0151 68.1978 li
73.7095 67.4751 li
74.3911 66.9189 li
75.0854 68.1704 li
75.7808 67.2524 li
76.4614 67.4053 li
77.1558 67.7671 li
77.8374 68.0444 li
78.5327 67.3218 li
79.2134 67.4194 li
79.9077 68.5591 li
80.5894 67.6421 li
81.2847 67.6973 li
81.9644 67.4053 li
82.6597 67.0723 li
83.355 67.0723 li
84.0366 67.7949 li
84.731 67.6138 li
85.4126 67.1968 li
86.1069 67.1968 li
86.7886 67.4888 li
87.4829 67.8643 li
88.1636 68.7539 li
88.8589 67.9614 li
89.5405 67.6001 li
90.2349 67.2524 li
90.9292 67.2104 li
91.6108 67.4331 li
92.3062 68.5176 li
92.9858 67.6836 li
93.6812 67.6973 li
94.3628 67.0859 li
95.0581 67.9058 li
95.7378 67.5581 li
96.4331 68.2949 li
97.1147 67.1558 li
97.8101 67.8228 li
98.5044 67.4194 li
99.1851 67.6836 li
99.8804 68.0723 li
100.562 66.6826 li
101.256 67.4888 li
101.937 66.7246 li
102.632 67.2104 li
103.313 67.2393 li
104.008 67.9199 li
104.689 67.4888 li
105.384 67.2808 li
106.065 67.1001 li
106.759 67.2251 li
107.455 67.9199 li
108.135 67.9614 li
108.831 67.5723 li
109.511 68.1426 li
110.207 67.4331 li
110.887 66.2661 li
111.582 67.2251 li
112.263 68.2261 li
112.958 68.0591 li
113.639 67.7114 li
114.333 68.0591 li
115.029 68.2529 li
115.71 67.2524 li
116.406 66.5156 li
117.085 67.6279 li
117.781 68.3086 li
118.462 67.9199 li
119.157 67.0444 li
119.837 67.1001 li
120.533 67.2251 li
121.214 67.8506 li
121.909 67.5308 li
122.603 67.5444 li
123.285 66.8774 li
123.98 67.1279 li
124.661 67.6421 li
125.355 68.2949 li
126.037 67.4609 li
126.732 68.6982 li
127.413 67.8921 li
128.107 67.2524 li
128.789 66.6826 li
129.484 68.0171 li
130.178 67.5723 li
130.859 67.3081 li
131.554 67.2949 li
132.236 68.7397 li
132.93 67.8364 li
133.611 66.7939 li
134.306 67.5444 li
134.988 67.6138 li
135.682 67.2251 li
136.363 68.4341 li
137.058 68.3921 li
137.753 67.3638 li
138.433 67.4331 li
139.128 67.6558 li
139.81 67.0444 li
140.504 67.0444 li
141.185 67.9897 li
141.88 67.2661 li
142.562 66.7803 li
143.257 67.7251 li
143.937 67.4609 li
144.632 67.0303 li
145.313 67.3218 li
146.007 68.1001 li
146.703 68.5034 li
147.384 67.7808 li
148.08 67.7529 li
148.761 66.127 li
149.456 67.7114 li
150.135 67.3638 li
150.831 67.5864 li
151.511 67.9199 li
152.207 67.6694 li
152.888 67.1001 li
153.583 67.5029 li
154.278 67.5723 li
154.958 67.9756 li
155.654 67.9341 li
156.333 68.1426 li
157.029 67.4194 li
157.71 68.4341 li
158.406 67.3081 li
@
22.7593 24.7798 mo
23.4399 24.4736 li
24.1343 24.627 li
24.8159 23.5703 li
25.5112 23.8901 li
26.1919 24.6128 li
26.8862 25.0581 li
27.5679 24.7939 li
28.2632 23.8901 li
28.9585 23.7095 li
29.6382 25.2661 li
30.3335 24.8496 li
31.0151 24.7939 li
31.7095 23.5015 li
32.3901 24.7939 li
33.0854 24.7939 li
33.7671 23.8345 li
34.4614 24.0156 li
35.1421 24.0571 li
35.8374 24.7104 li
36.5317 24.5024 li
37.2134 24.7383 li
37.9077 24.1406 li
38.5894 25.2939 li
39.2837 24.6826 li
39.9644 23.9878 li
40.6597 24.4736 li
41.3413 24.1685 li
42.0356 24.2798 li
42.7163 23.9043 li
43.4116 24.1265 li
44.1069 24.8354 li
44.7876 23.7515 li
45.4819 24.4185 li
46.1636 24.7241 li
46.8589 24.6826 li
47.5405 23.9321 li
48.2349 24.2241 li
48.9155 23.9458 li
49.6108 25.0859 li
50.2915 23.918 li
50.9868 23.668 li
51.6812 24.1406 li
52.3628 24.752 li
53.0571 23.9043 li
53.7378 23.8071 li
54.4331 23.168 li
55.1138 25.7109 li
55.8091 25.1548 li
56.4897 24.7661 li
57.1851 24.4878 li
57.8657 24.3628 li
58.5601 23.9458 li
59.2554 23.6816 li
59.937 24.5293 li
60.6323 24.085 li
61.312 24.6963 li
62.0073 24.2378 li
62.689 24.1548 li
63.3843 24.0713 li
64.064 24.8633 li
64.7593 24.5581 li
65.4409 24.4321 li
66.1353 24.3911 li
66.8159 24.1685 li
67.5112 24.1128 li
68.2065 24.5713 li
68.8872 24.752 li
69.5815 24.3071 li
70.2632 23.8765 li
70.9585 24.0156 li
71.6392 24.9878 li
72.3335 24.9321 li
73.0151 24.3354 li
73.7095 24.2241 li
74.3911 24.7104 li
75.0854 24.4468 li
75.7808 25.0991 li
76.4614 24.2935 li
77.1558 23.5156 li
77.8374 24.7939 li
78.5327 24.0293 li
79.2134 24.4468 li
79.9077 24.7383 li
80.5894 24.3208 li
81.2847 23.5156 li
81.9644 24.4321 li
82.6597 24.5435 li
83.355 24.3071 li
84.0366 23.8628 li
84.731 24.5581 li
85.4126 24.5156 li
86.1069 24.5293 li
86.7886 24.5435 li
87.4829 23.7095 li
88.1636 24.1128 li
88.8589 24.6685 li
89.5405 25.1968 li
90.2349 24.0156 li
90.9292 23.6128 li
91.6108 24.0293 li
92.3062 24.8076 li
92.9858 25.2939 li
93.6812 24.6406 li
94.3628 24.3071 li
95.0581 24.4321 li
95.7378 24.2241 li
96.4331 24.0435 li
97.1147 24.4468 li
97.8101 24.8213 li
98.5044 24.7241 li
99.1851 24.4043 li
99.8804 24.3071 li
100.562 24.0991 li
101.256 24.4321 li
101.937 23.6816 li
102.632 24.6406 li
103.313 24.9053 li
104.008 24.5581 li
104.689 24.4468 li
105.384 24.5156 li
106.065 24.3765 li
106.759 23.7095 li
107.455 24.627 li
108.135 23.8208 li
108.831 24.5293 li
109.511 23.8486 li
110.207 23.6816 li
110.887 24.5713 li
111.582 24.8496 li
112.263 24.5293 li
112.958 24.6128 li
113.639 24.7104 li
114.333 25.0303 li
115.029 24.5024 li
115.71 24.3354 li
116.406 23.9321 li
117.085 23.8765 li
117.781 24.6406 li
118.462 23.9043 li
119.157 23.7515 li
119.837 24.2935 li
120.533 24.0156 li
121.214 24.5293 li
121.909 25.3633 li
122.603 24.3911 li
123.285 23.918 li
123.98 24.4185 li
124.661 24.8765 li
125.355 24.8496 li
126.037 23.5981 li
126.732 23.6401 li
127.413 23.9878 li
128.107 24.752 li
128.789 23.1816 li
129.484 24.1406 li
130.178 24.5435 li
130.859 24.2378 li
131.554 25.1685 li
132.236 24.627 li
132.93 24.2241 li
133.611 24.6406 li
134.306 25.0581 li
134.988 23.8486 li
135.682 24.2104 li
136.363 24.7241 li
137.058 24.3765 li
137.753 24.3765 li
138.433 25.0991 li
139.128 24.5156 li
139.81 24.752 li
140.504 24.8765 li
141.185 24.3765 li
141.88 23.96 li
142.562 24.7104 li
143.257 23.8628 li
143.937 23.6401 li
144.632 24.6963 li
145.313 24.2651 li
146.007 24.1548 li
146.703 24.3354 li
147.384 24.0713 li
148.08 24.7383 li
148.761 24.4321 li
149.456 24.3071 li
150.135 24.2515 li
150.831 24.1821 li
151.511 24.3486 li
152.207 24.1406 li
152.888 23.8486 li
153.583 24.6548 li
154.278 24.7661 li
154.958 24.3208 li
155.654 23.7515 li
156.333 23.8765 li
157.029 24.9746 li
157.71 24.6685 li
158.406 23.8071 li
0 0 0 .889999 cmyk
@
22.7593 39.4141 mo
23.4399 39.8174 li
24.1343 40.6235 li
24.8159 39.3726 li
25.5112 38.4561 li
26.1919 39.1226 li
26.8862 40.2905 li
27.5679 40.207 li
28.2632 39.4282 li
28.9585 39.8457 li
29.6382 39.5674 li
30.3335 39.3594 li
31.0151 38.8447 li
31.7095 38.4976 li
32.3901 39.2896 li
33.0854 39.8457 li
33.7671 39.6509 li
34.4614 39.7202 li
35.1421 39.1226 li
35.8374 38.7612 li
36.5317 39.5952 li
37.2134 39.7759 li
37.9077 39.1089 li
38.5894 39.9287 li
39.2837 38.5532 li
39.9644 39.6367 li
40.6597 39.7759 li
41.3413 40.3594 li
42.0356 39.8872 li
42.7163 38.9976 li
43.4116 39.7202 li
44.1069 39.7344 li
44.7876 39.8457 li
45.4819 39.3726 li
46.1636 39.5254 li
46.8589 39.5811 li
47.5405 40.3735 li
48.2349 39.9287 li
48.9155 39.4141 li
49.6108 39.2339 li
50.2915 38.7749 li
50.9868 38.8306 li
51.6812 39.3872 li
52.3628 39.7065 li
53.0571 38.6924 li
53.7378 39.6089 li
54.4331 39.1089 li
55.1138 38.7334 li
55.8091 39.8872 li
56.4897 40.7349 li
57.1851 39.6509 li
57.8657 39.5674 li
58.5601 39.6646 li
59.2554 39.6089 li
59.937 39.9707 li
60.6323 39.4565 li
61.312 39.3594 li
62.0073 38.9282 li
62.689 39.6509 li
63.3843 38.6924 li
64.064 39.0117 li
64.7593 40.0679 li
65.4409 39.4429 li
66.1353 40.0122 li
66.8159 40.5679 li
67.5112 39.0669 li
68.2065 38.9697 li
68.8872 39.2339 li
69.5815 39.3174 li
70.2632 39.3594 li
70.9585 38.8032 li
71.6392 38.9697 li
72.3335 39.2339 li
73.0151 40.3462 li
73.7095 38.8726 li
74.3911 39.2061 li
75.0854 40.2627 li
75.7808 39.5811 li
76.4614 39.3726 li
77.1558 40.3037 li
77.8374 40.1792 li
78.5327 38.3584 li
79.2134 39.7759 li
79.9077 39.3872 li
80.5894 39.2061 li
81.2847 39.4985 li
81.9644 39.3174 li
82.6597 39.248 li
83.355 39.4282 li
84.0366 41.1099 li
84.731 39.4565 li
85.4126 38.8862 li
86.1069 39.4009 li
86.7886 39.1646 li
87.4829 39.3594 li
88.1636 40.1514 li
88.8589 40.3315 li
89.5405 37.8716 li
90.2349 39.1226 li
90.9292 40.0679 li
91.6108 40.1514 li
92.3062 40.9019 li
92.9858 39.2202 li
93.6812 38.6367 li
94.3628 39.3872 li
95.0581 39.7344 li
95.7378 39.6509 li
96.4331 39.6367 li
97.1147 39.0532 li
97.8101 39.0811 li
98.5044 39.2759 li
99.1851 39.0532 li
99.8804 39.0254 li
100.562 39.3315 li
101.256 40.1792 li
101.937 40.4985 li
102.632 39.748 li
103.313 38.8032 li
104.008 39.5396 li
104.689 39.1924 li
105.384 39.5674 li
106.065 38.8306 li
106.759 40.207 li
107.455 39.3174 li
108.135 39.5811 li
108.831 38.9004 li
109.511 39.8457 li
110.207 39.9707 li
110.887 40.4849 li
111.582 40.1934 li
112.263 39.2339 li
112.958 38.7749 li
113.639 39.5532 li
114.333 38.9282 li
115.029 39.9985 li
115.71 40.2349 li
116.406 39.3315 li
117.085 39.1924 li
117.781 38.7334 li
118.462 39.2061 li
119.157 39.623 li
119.837 40.0542 li
120.533 40.3037 li
121.214 38.9561 li
121.909 38.6777 li
122.603 39.1924 li
123.285 39.9844 li
123.98 40.1646 li
124.661 39.6509 li
125.355 40.2627 li
126.037 39.1646 li
126.732 39.0952 li
127.413 39.4697 li
128.107 39.4985 li
128.789 39.3872 li
129.484 40.2627 li
130.178 39.79 li
130.859 40.2905 li
131.554 39.1226 li
132.236 38.5811 li
132.93 39.8174 li
133.611 39.3452 li
134.306 39.1226 li
134.988 39.3037 li
135.682 39.1782 li
136.363 39.0254 li
137.058 40.4985 li
137.753 38.8862 li
138.433 39.3037 li
139.128 39.1646 li
139.81 38.9976 li
140.504 39.8457 li
141.185 39.8037 li
141.88 39.6924 li
142.562 40.1934 li
143.257 39.4282 li
143.937 39.1782 li
144.632 39.8037 li
145.313 39.5122 li
146.007 39.248 li
146.703 39.2339 li
147.384 39.0811 li
148.08 39.873 li
148.761 39.5952 li
149.456 40.0679 li
150.135 39.4565 li
150.831 39.1924 li
151.511 39.6089 li
152.207 39.9985 li
152.888 39.4282 li
153.583 38.9839 li
154.278 39.0254 li
154.958 38.8169 li
155.654 39.4429 li
156.333 39.4282 li
157.029 40.1514 li
157.71 39.8037 li
158.406 39.915 li
0 0 0 .699997 cmyk
@
22.7593 60.6509 mo
23.4399 60.3169 li
24.1343 60.3457 li
24.8159 61.1792 li
25.5112 61.0542 li
26.1919 60.9292 li
26.8862 60.9985 li
27.5679 60.7759 li
28.2632 60.8315 li
28.9585 60.8037 li
29.6382 61.082 li
30.3335 61.249 li
31.0151 61.582 li
31.7095 60.123 li
32.3901 60.0811 li
33.0854 61.3037 li
33.7671 60.8179 li
34.4614 60.4565 li
35.1421 59.9004 li
35.8374 60.8872 li
36.5317 61.6099 li
37.2134 61.8047 li
37.9077 61.2212 li
38.5894 60.3594 li
39.2837 60.6787 li
39.9644 61.0122 li
40.6597 60.7202 li
41.3413 59.9839 li
42.0356 61.3325 li
42.7163 61.1514 li
43.4116 60.915 li
44.1069 61.6655 li
44.7876 60.4009 li
45.4819 61.4849 li
46.1636 61.2627 li
46.8589 61.0957 li
47.5405 60.9292 li
48.2349 61.2349 li
48.9155 61.2349 li
49.6108 61.0405 li
50.2915 60.7344 li
50.9868 60.2065 li
51.6812 61.0405 li
52.3628 60.4839 li
53.0571 60.123 li
53.7378 60.8457 li
54.4331 60.8315 li
55.1138 61.9575 li
55.8091 61.582 li
56.4897 60.1787 li
57.1851 60.3726 li
57.8657 60.8457 li
58.5601 60.915 li
59.2554 60.1924 li
59.937 59.8032 li
60.6323 59.6646 li
61.312 60.9985 li
62.0073 61.0679 li
62.689 60.6929 li
63.3843 61.207 li
64.064 59.8169 li
64.7593 61.0957 li
65.4409 61.5127 li
66.1353 60.8594 li
66.8159 61.2627 li
67.5112 60.29 li
68.2065 61.7354 li
68.8872 61.2905 li
69.5815 60.6787 li
70.2632 60.3726 li
70.9585 60.7065 li
71.6392 60.1089 li
72.3335 60.4282 li
73.0151 61.1655 li
73.7095 61.4429 li
74.3911 60.248 li
75.0854 60.8735 li
75.7808 61.9297 li
76.4614 60.7202 li
77.1558 60.4565 li
77.8374 61.1934 li
78.5327 59.7476 li
79.2134 60.29 li
79.9077 60.8457 li
80.5894 61.1655 li
81.2847 61.2905 li
81.9644 60.8457 li
82.6597 61.1655 li
83.355 60.4985 li
84.0366 60.6787 li
84.731 61.6514 li
85.4126 60.3169 li
86.1069 60.9707 li
86.7886 61.7354 li
87.4829 61.3325 li
88.1636 61.249 li
88.8589 60.29 li
89.5405 60.5674 li
90.2349 60.748 li
90.9292 60.9707 li
91.6108 61.249 li
92.3062 61.8882 li
92.9858 61.0679 li
93.6812 61.7627 li
94.3628 61.2905 li
95.0581 60.4282 li
95.7378 60.8872 li
96.4331 60.6372 li
97.1147 60.4282 li
97.8101 59.5532 li
98.5044 60.8037 li
99.1851 61.7905 li
99.8804 60.7065 li
100.562 60.2065 li
101.256 60.748 li
101.937 60.9849 li
102.632 61.3179 li
103.313 60.8315 li
104.008 60.8037 li
104.689 59.7202 li
105.384 61.0122 li
106.065 61.3882 li
106.759 61.1235 li
107.455 59.5117 li
108.135 60.1509 li
108.831 60.582 li
109.511 60.6509 li
110.207 61.6797 li
110.887 60.79 li
111.582 62.4019 li
112.263 61.082 li
112.958 60.2617 li
113.639 60.415 li
114.333 60.8457 li
115.029 61.5542 li
115.71 60.5117 li
116.406 60.5396 li
117.085 60.1367 li
117.781 60.582 li
118.462 61.082 li
119.157 60.8594 li
119.837 61.3179 li
120.533 60.6509 li
121.214 61.1235 li
121.909 60.4565 li
122.603 60.7344 li
123.285 60.5117 li
123.98 60.915 li
124.661 61.9019 li
125.355 61.5542 li
126.037 60.8037 li
126.732 60.0952 li
127.413 61.4849 li
128.107 61.3325 li
128.789 60.1787 li
129.484 60.5264 li
130.178 61.4849 li
130.859 61.2349 li
131.554 61.207 li
132.236 60.8594 li
132.93 60.5674 li
133.611 60.9849 li
134.306 61.1235 li
134.988 61.6655 li
135.682 60.0811 li
136.363 60.8872 li
137.058 60.79 li
137.753 60.6509 li
138.433 61.9575 li
139.128 60.4985 li
139.81 59.8447 li
140.504 60.8594 li
141.185 61.8462 li
141.88 60.2065 li
142.562 59.8867 li
143.257 60.5952 li
143.937 61.1655 li
144.632 61.249 li
145.313 60.5674 li
146.007 60.2759 li
146.703 59.9839 li
147.384 60.1924 li
148.08 61.4575 li
148.761 60.3169 li
149.456 61.082 li
150.135 61.3325 li
150.831 60.6929 li
151.511 60.3457 li
152.207 60.7759 li
152.888 60.9985 li
153.583 61.0122 li
154.278 59.6367 li
154.958 61.0264 li
155.654 61.0405 li
156.333 60.5674 li
157.029 61.4849 li
157.71 60.5542 li
158.406 60.8315 li
0 0 0 .410004 cmyk
@
22.7593 45.4878 mo
23.4399 45.7798 li
24.1343 45.2383 li
24.8159 46.0161 li
25.5112 45.5854 li
26.1919 45.5435 li
26.8862 45.0576 li
27.5679 45.0156 li
28.2632 45.8633 li
28.9585 45.502 li
29.6382 45.6826 li
30.3335 44.4458 li
31.0151 44.668 li
31.7095 45.8633 li
32.3901 45.0991 li
33.0854 44.9043 li
33.7671 45.2661 li
34.4614 45.7939 li
35.1421 44.7793 li
35.8374 44.3345 li
36.5317 45.3496 li
37.2134 45.6826 li
37.9077 46.0161 li
38.5894 45.7383 li
39.2837 44.9321 li
39.9644 45.2798 li
40.6597 45.6133 li
41.3413 44.6123 li
42.0356 45.2104 li
42.7163 46.4331 li
43.4116 46.4189 li
44.1069 45.9888 li
44.7876 45.5713 li
45.4819 45.3071 li
46.1636 46.4888 li
46.8589 45.8911 li
47.5405 45.3765 li
48.2349 45.1548 li
48.9155 46.0444 li
49.6108 45.1548 li
50.2915 45.9888 li
50.9868 45.5576 li
51.6812 45.5435 li
52.3628 45.4878 li
53.0571 44.96 li
53.7378 45.2104 li
54.4331 45.3208 li
55.1138 45.46 li
55.8091 46.0303 li
56.4897 45.0991 li
57.1851 44.8486 li
57.8657 44.9878 li
58.5601 45.8354 li
59.2554 46.4888 li
59.937 45.1963 li
60.6323 45.4053 li
61.312 45.7524 li
62.0073 44.6548 li
62.689 45.127 li
63.3843 45.9189 li
64.064 44.7373 li
64.7593 45.8774 li
65.4409 45.7524 li
66.1353 45.2383 li
66.8159 45.5435 li
67.5112 45.3765 li
68.2065 45.3911 li
68.8872 45.3628 li
69.5815 45.4741 li
70.2632 45.9468 li
70.9585 44.2788 li
71.6392 45.2661 li
72.3335 45.252 li
73.0151 45.4185 li
73.7095 45.1548 li
74.3911 45.7104 li
75.0854 44.2651 li
75.7808 45.2383 li
76.4614 46.0161 li
77.1558 46.0303 li
77.8374 45.1128 li
78.5327 45.5435 li
79.2134 45.502 li
79.9077 45.3765 li
80.5894 46.4609 li
81.2847 45.3765 li
81.9644 44.8486 li
82.6597 45.9053 li
83.355 46.3774 li
84.0366 45.127 li
84.731 45.5435 li
85.4126 45.2939 li
86.1069 45.1685 li
86.7886 45.2241 li
87.4829 46.4189 li
88.1636 45.7241 li
88.8589 46.1001 li
89.5405 44.46 li
90.2349 45.1685 li
90.9292 45.8354 li
91.6108 45.7383 li
92.3062 45.5854 li
92.9858 45.5298 li
93.6812 45.4741 li
94.3628 45.46 li
95.0581 45.5991 li
95.7378 46.0581 li
96.4331 45.8496 li
97.1147 44.6123 li
97.8101 44.835 li
98.5044 45.3208 li
99.1851 45.3628 li
99.8804 45.6826 li
100.562 45.3071 li
101.256 44.4878 li
101.937 45.002 li
102.632 45.5298 li
103.313 45.1963 li
104.008 44.7373 li
104.689 44.7793 li
105.384 45.0576 li
106.065 45.8633 li
106.759 45.8076 li
107.455 45.8218 li
108.135 46.0444 li
108.831 44.9463 li
109.511 45.2383 li
110.207 45.9609 li
110.887 46.0859 li
111.582 45.8911 li
112.263 45.1128 li
112.958 45.5298 li
113.639 45.1548 li
114.333 45.0293 li
115.029 45.7383 li
115.71 45.8218 li
116.406 44.7793 li
117.085 45.0576 li
117.781 44.7104 li
118.462 45.4878 li
119.157 46.0581 li
119.837 45.9053 li
120.533 45.4468 li
121.214 44.8906 li
121.909 45.1685 li
122.603 46.4053 li
123.285 45.0156 li
123.98 45.085 li
124.661 45.7383 li
125.355 45.7104 li
126.037 46.4189 li
126.732 46.1548 li
127.413 46.4473 li
128.107 46.3364 li
128.789 45.2798 li
129.484 45.5854 li
130.178 45.4321 li
130.859 45.4185 li
131.554 45.7661 li
132.236 45.7383 li
132.93 45.46 li
133.611 45.8496 li
134.306 44.8628 li
134.988 45.2104 li
135.682 44.4321 li
136.363 44.9043 li
137.058 45.6411 li
137.753 44.6401 li
138.433 44.0425 li
139.128 44.8071 li
139.81 45.9746 li
140.504 45.5991 li
141.185 45.3071 li
141.88 45.2798 li
142.562 45.4185 li
143.257 44.6958 li
143.937 45.8911 li
144.632 46.0718 li
145.313 45.1963 li
146.007 45.6548 li
146.703 45.4878 li
147.384 46.0024 li
148.08 45.3496 li
148.761 45.46 li
149.456 45.0435 li
150.135 45.085 li
150.831 45.0576 li
151.511 45.9189 li
152.207 45.3354 li
152.888 45.2939 li
153.583 45.252 li
154.278 45.3628 li
154.958 45.002 li
155.654 45.7939 li
156.333 46.1973 li
157.029 45.5991 li
157.71 44.7515 li
158.406 45.5576 li
0 0 0 .589996 cmyk
@
22.7593 60.748 mo
23.4399 61.415 li
24.1343 61.9575 li
24.8159 59.998 li
25.5112 60.9014 li
26.1919 61.5684 li
26.8862 61.874 li
27.5679 61.1934 li
28.2632 59.998 li
28.9585 59.7891 li
29.6382 60.7759 li
30.3335 60.6089 li
31.0151 61.2349 li
31.7095 60.8735 li
32.3901 60.8735 li
33.0854 60.248 li
33.7671 61.2627 li
34.4614 61.4575 li
35.1421 59.998 li
35.8374 61.0679 li
36.5317 61.0264 li
37.2134 60.9565 li
37.9077 61.3594 li
38.5894 61.3882 li
39.2837 60.2344 li
39.9644 61.7905 li
40.6597 61.6797 li
41.3413 60.582 li
42.0356 60.7759 li
42.7163 60.7065 li
43.4116 61.2769 li
44.1069 61.0405 li
44.7876 60.8594 li
45.4819 60.3315 li
46.1636 61.4849 li
46.8589 60.8457 li
47.5405 60.1089 li
48.2349 61.0264 li
48.9155 61.1655 li
49.6108 60.748 li
50.2915 60.915 li
50.9868 61.4019 li
51.6812 60.6929 li
52.3628 60.79 li
53.0571 60.3872 li
53.7378 60.3457 li
54.4331 61.1792 li
55.1138 61.3882 li
55.8091 61.2212 li
56.4897 61.4985 li
57.1851 61.3594 li
57.8657 60.9849 li
58.5601 60.748 li
59.2554 60.2759 li
59.937 60.6929 li
60.6323 61.207 li
61.312 61.6514 li
62.0073 60.0532 li
62.689 60.8594 li
63.3843 60.915 li
64.064 61.249 li
64.7593 61.2769 li
65.4409 60.5674 li
66.1353 60.4282 li
66.8159 61.4707 li
67.5112 61.4429 li
68.2065 60.5674 li
68.8872 60.9429 li
69.5815 60.9985 li
70.2632 60.29 li
70.9585 60.9565 li
71.6392 61.7354 li
72.3335 61.2769 li
73.0151 60.7344 li
73.7095 59.9697 li
74.3911 61.6797 li
75.0854 61.7212 li
75.7808 61.1235 li
76.4614 59.8032 li
77.1558 61.3594 li
77.8374 60.8315 li
78.5327 60.4707 li
79.2134 60.8872 li
79.9077 61.0264 li
80.5894 60.7202 li
81.2847 60.8872 li
81.9644 61.1792 li
82.6597 60.7065 li
83.355 61.3037 li
84.0366 60.9292 li
84.731 61.3462 li
85.4126 61.0405 li
86.1069 60.4839 li
86.7886 60.8179 li
87.4829 61.3882 li
88.1636 61.0405 li
88.8589 61.3325 li
89.5405 61.5264 li
90.2349 61.2905 li
90.9292 60.8457 li
91.6108 60.8315 li
92.3062 60.8315 li
92.9858 60.7202 li
93.6812 61.1377 li
94.3628 60.582 li
95.0581 60.7344 li
95.7378 60.6929 li
96.4331 60.5117 li
97.1147 60.8315 li
97.8101 61.4575 li
98.5044 60.8735 li
99.1851 60.8315 li
99.8804 61.415 li
100.562 60.5396 li
101.256 60.8594 li
101.937 61.1655 li
102.632 61.624 li
103.313 60.79 li
104.008 61.082 li
104.689 61.3037 li
105.384 61.3735 li
106.065 60.9429 li
106.759 59.9697 li
107.455 60.79 li
108.135 61.3325 li
108.831 61.9854 li
109.511 61.1377 li
110.207 61.0679 li
110.887 60.3872 li
111.582 60.8315 li
112.263 61.2212 li
112.958 60.623 li
113.639 60.4429 li
114.333 61.3462 li
115.029 61.3325 li
115.71 61.3735 li
116.406 61.207 li
117.085 60.9849 li
117.781 60.8037 li
118.462 61.6377 li
119.157 60.4839 li
119.837 60.4985 li
120.533 61.6514 li
121.214 61.4849 li
121.909 61.0679 li
122.603 60.7344 li
123.285 61.6797 li
123.98 60.8179 li
124.661 61.0264 li
125.355 60.248 li
126.037 61.0264 li
126.732 60.8872 li
127.413 60.3594 li
128.107 60.8179 li
128.789 61.5405 li
129.484 61.3594 li
130.178 60.8179 li
130.859 60.4707 li
131.554 60.9849 li
132.236 60.6929 li
132.93 60.415 li
133.611 60.748 li
134.306 61.2212 li
134.988 61.0405 li
135.682 60.5396 li
136.363 61.082 li
137.058 61.3882 li
137.753 60.8037 li
138.433 60.9985 li
139.128 61.0122 li
139.81 60.3726 li
140.504 61.1934 li
141.185 61.6797 li
141.88 60.9014 li
142.562 60.7065 li
143.257 60.5264 li
143.937 60.6089 li
144.632 60.4985 li
145.313 60.9707 li
146.007 61.582 li
146.703 61.0679 li
147.384 61.5127 li
148.08 61.5684 li
148.761 60.9292 li
149.456 60.3169 li
150.135 61.0542 li
150.831 60.915 li
151.511 61.7212 li
152.207 60.582 li
152.888 60.5952 li
153.583 61.3037 li
154.278 61.2349 li
154.958 60.623 li
155.654 60.7622 li
156.333 60.4282 li
157.029 60.9292 li
157.71 61.7627 li
158.406 60.3457 li
0 0 0 .300003 cmyk
@
22.7593 54.1328 mo
23.4399 54.9248 li
24.1343 54.7866 li
24.8159 54.7163 li
25.5112 54.23 li
26.1919 54.5083 li
26.8862 54.6753 li
27.5679 55.1611 li
28.2632 54.8555 li
28.9585 53.9102 li
29.6382 55.3281 li
30.3335 54.6475 li
31.0151 53.2153 li
31.7095 54.2441 li
32.3901 55.1196 li
33.0854 54.4106 li
33.7671 54.9805 li
34.4614 54.6606 li
35.1421 54.8833 li
35.8374 54.2163 li
36.5317 55.2031 li
37.2134 54.8135 li
37.9077 54.1743 li
38.5894 53.8267 li
39.2837 55.2168 li
39.9644 55.9951 li
40.6597 54.4663 li
41.3413 53.9658 li
42.0356 55.3003 li
42.7163 54.439 li
43.4116 54.2021 li
44.1069 54.4106 li
44.7876 54.439 li
45.4819 54.8413 li
46.1636 54.8276 li
46.8589 55.1611 li
47.5405 54.6328 li
48.2349 55.9673 li
48.9155 55.356 li
49.6108 54.3276 li
50.2915 53.9526 li
50.9868 54.7021 li
51.6812 54.5493 li
52.3628 54.9111 li
53.0571 53.7988 li
53.7378 54.397 li
54.4331 55.8701 li
55.1138 55.5918 li
55.8091 54.3691 li
56.4897 54.7998 li
57.1851 55.1475 li
57.8657 54.564 li
58.5601 54.4106 li
59.2554 54.605 li
59.937 54.2441 li
60.6323 54.9946 li
61.312 53.6597 li
62.0073 54.1328 li
62.689 54.2856 li
63.3843 55.1753 li
64.064 54.8135 li
64.7593 54.605 li
65.4409 53.897 li
66.1353 54.8276 li
66.8159 56.0786 li
67.5112 54.8555 li
68.2065 54.3276 li
68.8872 54.8276 li
69.5815 54.2163 li
70.2632 53.8823 li
70.9585 54.731 li
71.6392 54.6753 li
72.3335 54.522 li
73.0151 55.606 li
73.7095 55.231 li
74.3911 54.1743 li
75.0854 53.6328 li
75.7808 55.0361 li
76.4614 55.8979 li
77.1558 54.9111 li
77.8374 54.4248 li
78.5327 53.8687 li
79.2134 54.4106 li
79.9077 53.6328 li
80.5894 53.1597 li
81.2847 54.731 li
81.9644 54.564 li
82.6597 55.606 li
83.355 54.2163 li
84.0366 54.7021 li
84.731 54.8413 li
85.4126 55.731 li
86.1069 54.731 li
86.7886 54.2021 li
87.4829 55.0918 li
88.1636 53.7021 li
88.8589 54.6328 li
89.5405 54.3276 li
90.2349 54.9526 li
90.9292 54.7021 li
91.6108 55.606 li
92.3062 55.0918 li
92.9858 54.8135 li
93.6812 55.2588 li
94.3628 54.2578 li
95.0581 53.8413 li
95.7378 54.8833 li
96.4331 54.9111 li
97.1147 54.439 li
97.8101 54.1328 li
98.5044 54.2021 li
99.1851 55.0361 li
99.8804 54.0356 li
100.562 54.272 li
101.256 55.356 li
101.937 55.4258 li
102.632 54.6606 li
103.313 54.0215 li
104.008 54.9668 li
104.689 54.9805 li
105.384 55.2446 li
106.065 54.5083 li
106.759 54.7163 li
107.455 53.9102 li
108.135 54.4937 li
108.831 54.397 li
109.511 53.3823 li
110.207 54.8276 li
110.887 55.2588 li
111.582 55.3838 li
112.263 54.7163 li
112.958 53.9937 li
113.639 53.6597 li
114.333 54.4106 li
115.029 55.5083 li
115.71 54.9111 li
116.406 54.0073 li
117.085 55.2031 li
117.781 54.1743 li
118.462 54.3276 li
119.157 53.9937 li
119.837 54.3135 li
120.533 55.8838 li
121.214 55.4258 li
121.909 53.6465 li
122.603 53.7988 li
123.285 55.5786 li
123.98 55.3145 li
124.661 54.9946 li
125.355 54.3413 li
126.037 54.3135 li
126.732 54.6885 li
127.413 54.1885 li
128.107 53.7441 li
128.789 54.0493 li
129.484 55.4526 li
130.178 55.2588 li
130.859 55.5918 li
131.554 54.5776 li
132.236 55.2446 li
132.93 54.7441 li
133.611 54.0215 li
134.306 53.897 li
134.988 55.6753 li
135.682 55.3838 li
136.363 54.1743 li
137.058 53.8413 li
137.753 54.731 li
138.433 54.522 li
139.128 53.9937 li
139.81 54.1465 li
140.504 54.355 li
141.185 54.8413 li
141.88 54.897 li
142.562 54.7998 li
143.257 54.1328 li
143.937 54.564 li
144.632 54.7578 li
145.313 54.8413 li
146.007 53.4658 li
146.703 53.4937 li
147.384 54.0771 li
148.08 55.0781 li
148.761 55.4258 li
149.456 56.231 li
150.135 54.4663 li
150.831 54.4526 li
151.511 54.3413 li
152.207 54.772 li
152.888 54.4663 li
153.583 55.5918 li
154.278 54.3691 li
154.958 54.3691 li
155.654 54.2441 li
156.333 54.1606 li
157.029 54.6328 li
157.71 55.9116 li
158.406 54.6196 li
0 0 0 .110001 cmyk
@
22.7593 56.9961 mo
23.4399 56.6899 li
24.1343 56.1621 li
24.8159 56.9961 li
25.5112 57.5239 li
26.1919 56.5371 li
26.8862 55.5361 li
27.5679 56.2036 li
28.2632 57.0376 li
28.9585 56.3843 li
29.6382 55.8979 li
30.3335 56.4951 li
31.0151 55.5503 li
31.7095 55.8003 li
32.3901 55.731 li
33.0854 57.5796 li
33.7671 57.3291 li
34.4614 57.2046 li
35.1421 56.8569 li
35.8374 56.6206 li
36.5317 55.6753 li
37.2134 56.2178 li
37.9077 56.3569 li
38.5894 56.5786 li
39.2837 56.4683 li
39.9644 56.8291 li
40.6597 56.1206 li
41.3413 56.1763 li
42.0356 57.2598 li
42.7163 57.0098 li
43.4116 56.3423 li
44.1069 57.1343 li
44.7876 57.3848 li
45.4819 55.6616 li
46.1636 56.6343 li
46.8589 56.8984 li
47.5405 57.2456 li
48.2349 56.1621 li
48.9155 55.2725 li
49.6108 56.0229 li
50.2915 56.8711 li
50.9868 56.231 li
51.6812 56.1763 li
52.3628 56.5508 li
53.0571 56.6206 li
53.7378 56.8428 li
54.4331 56.7871 li
55.1138 56.0371 li
55.8091 55.7729 li
56.4897 56.5093 li
57.1851 56.9263 li
57.8657 55.9536 li
58.5601 57.0098 li
59.2554 56.8013 li
59.937 56.6064 li
60.6323 56.3569 li
61.312 56.1206 li
62.0073 56.1343 li
62.689 56.9126 li
63.3843 56.7319 li
64.064 56.4536 li
64.7593 55.3701 li
65.4409 55.7729 li
66.1353 56.4395 li
66.8159 56.6763 li
67.5112 56.6484 li
68.2065 56.7178 li
68.8872 56.6343 li
69.5815 56.4258 li
70.2632 56.8428 li
70.9585 56.2588 li
71.6392 56.6064 li
72.3335 56.7598 li
73.0151 57.7046 li
73.7095 54.731 li
74.3911 55.0225 li
75.0854 56.8154 li
75.7808 56.3423 li
76.4614 56.3423 li
77.1558 56.3423 li
77.8374 56.9541 li
78.5327 56.7871 li
79.2134 56.8711 li
79.9077 57.3154 li
80.5894 56.7871 li
81.2847 56.9263 li
81.9644 57.0649 li
82.6597 56.0371 li
83.355 55.9395 li
84.0366 56.3291 li
84.731 55.7729 li
85.4126 56.3569 li
86.1069 56.6206 li
86.7886 55.5503 li
87.4829 56.4395 li
88.1636 57.1763 li
88.8589 57.0098 li
89.5405 56.6763 li
90.2349 56.9263 li
90.9292 56.4683 li
91.6108 57.6074 li
92.3062 56.3291 li
92.9858 55.6895 li
93.6812 55.564 li
94.3628 55.8145 li
95.0581 56.7598 li
95.7378 56.3145 li
96.4331 56.9961 li
97.1147 57.1343 li
97.8101 56.5928 li
98.5044 56.2734 li
99.1851 55.7588 li
99.8804 57.0518 li
100.562 56.4951 li
101.256 57.3154 li
101.937 56.3701 li
102.632 56.1899 li
103.313 56.8013 li
104.008 56.5371 li
104.689 56.0371 li
105.384 55.6895 li
106.065 56.7734 li
106.759 56.4536 li
107.455 56.1621 li
108.135 57.5796 li
108.831 56.5508 li
109.511 56.4395 li
110.207 56.9126 li
110.887 57.5518 li
111.582 55.9536 li
112.263 55.6753 li
112.958 56.2178 li
113.639 56.4395 li
114.333 57.2188 li
115.029 56.9541 li
115.71 56.6206 li
116.406 56.5786 li
117.085 56.5508 li
117.781 56.5239 li
118.462 55.6895 li
119.157 56.4951 li
119.837 56.6763 li
120.533 55.6338 li
121.214 56.1479 li
121.909 56.9819 li
122.603 57.0649 li
123.285 56.3701 li
123.98 56.0371 li
124.661 56.9683 li
125.355 57.0239 li
126.037 56.8291 li
126.732 57.4126 li
127.413 56.7598 li
128.107 56.1206 li
128.789 56.7598 li
129.484 57.0376 li
130.178 56.4814 li
130.859 55.9814 li
131.554 55.9116 li
132.236 56.9683 li
132.93 57.0376 li
133.611 56.0786 li
134.306 56.3701 li
134.988 56.4951 li
135.682 57.1489 li
136.363 56.9404 li
137.058 57.0098 li
137.753 55.9951 li
138.433 56.3843 li
139.128 56.7319 li
139.81 56.6343 li
140.504 55.5229 li
141.185 55.9951 li
141.88 55.9395 li
142.562 56.0229 li
143.257 56.7456 li
143.937 56.7319 li
144.632 57.0376 li
145.313 56.0093 li
146.007 56.7319 li
146.703 57.3848 li
147.384 57.6074 li
148.08 55.8838 li
148.761 55.3145 li
149.456 56.0649 li
150.135 55.5918 li
150.831 55.8979 li
151.511 56.8013 li
152.207 55.9673 li
152.888 55.8423 li
153.583 56.2178 li
154.278 57.5659 li
154.958 56.7319 li
155.654 56.6064 li
156.333 57.0649 li
157.029 55.9951 li
157.71 56.6206 li
158.406 56.7456 li
0 0 0 1 cmyk
@
22.189 179.856 mo
22.8706 181.024 li
23.5659 180.857 li
24.2456 180.19 li
24.9409 181.427 li
25.6226 181.385 li
26.3179 180.064 li
26.9976 180.287 li
27.6929 179.828 li
28.3882 181.134 li
29.0698 180.329 li
29.7642 180.968 li
30.4448 180.218 li
31.1401 180.593 li
31.8208 180.996 li
32.5151 181.177 li
33.1968 180.982 li
33.8921 180.064 li
34.5728 180.329 li
35.2671 180.634 li
35.9624 180.551 li
36.6431 179.62 li
37.3384 180.69 li
38.019 180.495 li
38.7144 180.871 li
39.395 180.231 li
40.0894 181.051 li
40.771 180.801 li
41.4663 179.717 li
42.147 179.481 li
42.8413 181.218 li
43.5229 180.342 li
44.2183 180.092 li
44.9136 180.787 li
45.5933 180.996 li
46.2886 180.454 li
46.9702 179.8 li
47.6646 180.551 li
48.3452 181.58 li
49.0405 180.439 li
49.7222 180.634 li
50.4165 180.843 li
51.0972 179.814 li
51.7925 180.467 li
52.4868 180.787 li
53.1685 180.593 li
53.8628 180.176 li
54.5444 180.606 li
55.2388 180.954 li
55.9204 180.523 li
56.6147 180.648 li
57.2964 180.565 li
57.9907 180.926 li
58.6714 180.412 li
59.3667 180.996 li
60.062 180.94 li
60.7437 180.634 li
61.438 180.398 li
62.1187 180.134 li
62.814 180.523 li
63.4956 180.509 li
64.1899 180.509 li
64.8706 179.87 li
65.5659 180.051 li
66.2466 180.773 li
66.9419 180.439 li
67.6362 180.676 li
68.3179 180.538 li
69.0122 180.092 li
69.6929 180.106 li
70.3882 181.177 li
71.0688 180.926 li
71.7642 180.885 li
72.4448 180.134 li
73.1401 180.218 li
73.8208 180.287 li
74.5151 181.08 li
75.2104 180.829 li
75.8921 180.579 li
76.5874 180.037 li
77.2671 181.329 li
77.9624 181.51 li
78.644 180.718 li
79.3394 181.149 li
80.019 180.843 li
80.7144 180.439 li
81.396 180.259 li
82.0913 180.482 li
82.771 180.843 li
83.4663 180.885 li
84.1616 180.398 li
84.8423 180.259 li
85.5366 179.926 li
86.2183 180.551 li
86.9136 181.218 li
87.5942 181.093 li
88.2886 179.425 li
88.9702 180.718 li
89.6646 179.69 li
90.3462 180.662 li
91.0405 180.94 li
91.7358 180.871 li
92.4165 179.828 li
93.1108 179.772 li
93.7925 180.342 li
94.4878 180.565 li
95.1685 180.843 li
95.8628 180.676 li
96.5444 180.356 li
97.2397 180.676 li
97.9214 180.746 li
98.6157 180.801 li
99.3101 180.579 li
99.9917 180.3 li
100.686 180.787 li
101.368 180.621 li
102.062 180.913 li
102.744 179.939 li
103.438 180.773 li
104.119 180.467 li
104.814 180.579 li
105.496 180.162 li
106.19 180.857 li
106.884 181.149 li
107.566 180.454 li
108.261 180.385 li
108.942 180.996 li
109.636 181.246 li
110.318 180.621 li
111.013 180.538 li
111.693 180.12 li
112.388 180.606 li
113.07 179.384 li
113.765 179.842 li
114.459 180.801 li
115.14 180.385 li
115.835 180.467 li
116.517 180.982 li
117.211 180.454 li
117.892 181.051 li
118.587 180.356 li
119.268 179.912 li
119.963 179.828 li
120.644 180.676 li
121.339 181.08 li
122.02 180.954 li
122.714 180.732 li
123.41 181.08 li
124.09 180.538 li
124.786 180.106 li
125.466 180.051 li
126.162 180.509 li
126.842 180.523 li
127.537 180.773 li
128.218 180.815 li
128.914 180.565 li
129.594 181.205 li
130.289 180.467 li
130.984 179.898 li
131.666 180.398 li
132.361 181.232 li
133.041 181.149 li
133.736 180.162 li
134.417 179.481 li
135.112 180.009 li
135.793 180.69 li
136.488 181.246 li
137.169 180.746 li
137.865 180.634 li
138.56 180.551 li
139.24 180.3 li
139.935 179.425 li
140.616 179.703 li
141.31 181.19 li
141.992 181.316 li
142.687 179.62 li
143.369 180.106 li
144.063 180.996 li
144.744 180.467 li
145.438 180.718 li
146.132 180.176 li
146.814 180.898 li
147.509 180.885 li
148.191 180.759 li
148.885 180.634 li
149.567 180.079 li
150.261 180.092 li
150.941 180.176 li
151.636 181.051 li
152.318 181.093 li
153.013 181.065 li
153.708 180.704 li
154.389 180.467 li
155.083 180.593 li
155.765 181.19 li
156.46 181.205 li
157.14 180.704 li
157.835 180.621 li
@
22.189 169.46 mo
22.8706 168.904 li
23.5659 168.542 li
24.2456 168.988 li
24.9409 168.946 li
25.6226 168.598 li
26.3179 168.195 li
26.9976 168.779 li
27.6929 168.474 li
28.3882 168.432 li
29.0698 168.195 li
29.7642 169.349 li
30.4448 168.668 li
31.1401 169.668 li
31.8208 168.487 li
32.5151 167.723 li
33.1968 168.737 li
33.8921 168.793 li
34.5728 169.057 li
35.2671 168.724 li
35.9624 167.39 li
36.6431 168.251 li
37.3384 169.529 li
38.019 169.016 li
38.7144 169.614 li
39.395 168.737 li
40.0894 169.071 li
40.771 168.14 li
41.4663 169.71 li
42.147 168.932 li
42.8413 169.321 li
43.5229 168.668 li
44.2183 168.432 li
44.9136 168.849 li
45.5933 168.46 li
46.2886 169.335 li
46.9702 168.598 li
47.6646 168.709 li
48.3452 168.876 li
49.0405 169.099 li
49.7222 168.307 li
50.4165 168.626 li
51.0972 168.209 li
51.7925 168.376 li
52.4868 167.973 li
53.1685 169.516 li
53.8628 169.766 li
54.5444 168.613 li
55.2388 167.542 li
55.9204 168.849 li
56.6147 168.168 li
57.2964 168.751 li
57.9907 168.724 li
58.6714 168.946 li
59.3667 168.349 li
60.062 168.918 li
60.7437 169.155 li
61.438 169.238 li
62.1187 168.529 li
62.814 168.64 li
63.4956 168.876 li
64.1899 169.252 li
64.8706 168.015 li
65.5659 168.542 li
66.2466 169.127 li
66.9419 168.849 li
67.6362 168.932 li
68.3179 169.057 li
69.0122 168.668 li
69.6929 168.863 li
70.3882 168.224 li
71.0688 169.376 li
71.7642 168.516 li
72.4448 167.682 li
73.1401 168.751 li
73.8208 168.96 li
74.5151 169.057 li
75.2104 168.168 li
75.8921 169.043 li
76.5874 168.613 li
77.2671 169.363 li
77.9624 168.209 li
78.644 168.863 li
79.3394 168.751 li
80.019 167.598 li
80.7144 168.709 li
81.396 168.988 li
82.0913 168.737 li
82.771 168.516 li
83.4663 168.974 li
84.1616 168.765 li
84.8423 168.042 li
85.5366 169.696 li
86.2183 168.751 li
86.9136 169.168 li
87.5942 169.168 li
88.2886 168.682 li
88.9702 168.834 li
89.6646 168.724 li
90.3462 169.28 li
91.0405 168.057 li
91.7358 169.21 li
92.4165 169.196 li
93.1108 168.529 li
93.7925 169.001 li
94.4878 168.64 li
95.1685 168.293 li
95.8628 168.474 li
96.5444 168.737 li
97.2397 169.224 li
97.9214 168.432 li
98.6157 168.529 li
99.3101 168.474 li
99.9917 169.224 li
100.686 168.863 li
101.368 168.904 li
102.062 168.863 li
102.744 168.696 li
103.438 168.209 li
104.119 168.46 li
104.814 168.668 li
105.496 168.557 li
106.19 168.682 li
106.884 168.474 li
107.566 168.349 li
108.261 169.224 li
108.942 168.682 li
109.636 168.542 li
110.318 169.835 li
111.013 168.696 li
111.693 168.404 li
112.388 169.001 li
113.07 168.918 li
113.765 168.084 li
114.459 168.042 li
115.14 169.405 li
115.835 169.752 li
116.517 168.904 li
117.211 168.696 li
117.892 168.737 li
118.587 168.474 li
119.268 169.196 li
119.963 169.127 li
120.644 167.639 li
121.339 168.418 li
122.02 169.252 li
122.714 168.668 li
123.41 169.655 li
124.09 168.154 li
124.786 168.112 li
125.466 168.418 li
126.162 169.224 li
126.842 169.127 li
127.537 168.613 li
128.218 168.126 li
128.914 168.224 li
129.594 168.432 li
130.289 168.821 li
130.984 168.709 li
131.666 168.64 li
132.361 169.127 li
133.041 169.308 li
133.736 168.501 li
134.417 168.154 li
135.112 168.834 li
135.793 168.918 li
136.488 169.571 li
137.169 168.724 li
137.865 169.558 li
138.56 169.752 li
139.24 168.542 li
139.935 168.098 li
140.616 168.737 li
141.31 168.918 li
141.992 168.321 li
142.687 168.863 li
143.369 168.446 li
144.063 168.446 li
144.744 168.584 li
145.438 169.655 li
146.132 169.475 li
146.814 168.793 li
147.509 168.349 li
148.191 168.557 li
148.885 168.362 li
149.567 168.084 li
150.261 168.14 li
150.941 169.127 li
151.636 169.21 li
152.318 169.182 li
153.013 168.362 li
153.708 168.07 li
154.389 168.765 li
155.083 168.224 li
155.765 168.793 li
156.46 168.682 li
157.14 168.224 li
157.835 168.904 li
0 0 0 .889999 cmyk
@
22.189 205.262 mo
22.8706 205.484 li
23.5659 204.789 li
24.2456 205.471 li
24.9409 204.609 li
25.6226 205.373 li
26.3179 205.526 li
26.9976 205.234 li
27.6929 204.97 li
28.3882 204.776 li
29.0698 205.332 li
29.7642 205.651 li
30.4448 204.692 li
31.1401 204.637 li
31.8208 205.165 li
32.5151 204.553 li
33.1968 205.165 li
33.8921 206.207 li
34.5728 205.457 li
35.2671 205.248 li
35.9624 203.927 li
36.6431 204.136 li
37.3384 204.984 li
38.019 204.512 li
38.7144 204.525 li
39.395 204.789 li
40.0894 205.568 li
40.771 204.553 li
41.4663 205.067 li
42.147 205.568 li
42.8413 205.165 li
43.5229 204.692 li
44.2183 204.233 li
44.9136 204.386 li
45.5933 205.401 li
46.2886 205.638 li
46.9702 204.609 li
47.6646 204.692 li
48.3452 205.179 li
49.0405 204.832 li
49.7222 205.568 li
50.4165 205.457 li
51.0972 204.984 li
51.7925 205.499 li
52.4868 204.9 li
53.1685 205.484 li
53.8628 205.595 li
54.5444 205.29 li
55.2388 204.97 li
55.9204 205.22 li
56.6147 204.637 li
57.2964 205.457 li
57.9907 205.415 li
58.6714 205.081 li
59.3667 204.581 li
60.062 205.79 li
60.7437 205.79 li
61.438 205.346 li
62.1187 205.095 li
62.814 205.067 li
63.4956 204.331 li
64.1899 204.817 li
64.8706 204.623 li
65.5659 204.761 li
66.2466 205.638 li
66.9419 204.623 li
67.6362 203.983 li
68.3179 204.623 li
69.0122 204.97 li
69.6929 204.873 li
70.3882 205.276 li
71.0688 204.707 li
71.7642 204.692 li
72.4448 205.025 li
73.1401 204.956 li
73.8208 205.179 li
74.5151 205.151 li
75.2104 204.928 li
75.8921 205.151 li
76.5874 205.054 li
77.2671 204.97 li
77.9624 204.609 li
78.644 204.553 li
79.3394 204.873 li
80.019 205.401 li
80.7144 206.249 li
81.396 206.082 li
82.0913 205.415 li
82.771 204.4 li
83.4663 204.665 li
84.1616 204.692 li
84.8423 204.442 li
85.5366 205.638 li
86.2183 205.832 li
86.9136 204.373 li
87.5942 204.289 li
88.2886 205.359 li
88.9702 205.22 li
89.6646 205.262 li
90.3462 205.665 li
91.0405 204.748 li
91.7358 204.47 li
92.4165 204.066 li
93.1108 204.999 li
93.7925 205.109 li
94.4878 204.692 li
95.1685 204.317 li
95.8628 205.818 li
96.5444 205.248 li
97.2397 204.928 li
97.9214 205.276 li
98.6157 204.817 li
99.3101 204.053 li
99.9917 204.845 li
100.686 205.901 li
101.368 206.166 li
102.062 205.29 li
102.744 204.317 li
103.438 204.97 li
104.119 204.567 li
104.814 204.748 li
105.496 205.401 li
106.19 206.138 li
106.884 204.999 li
107.566 204.512 li
108.261 205.123 li
108.942 205.401 li
109.636 205.165 li
110.318 205.707 li
111.013 204.817 li
111.693 205.025 li
112.388 204.817 li
113.07 205.387 li
113.765 204.984 li
114.459 204.178 li
115.14 205.276 li
115.835 205.054 li
116.517 205.04 li
117.211 205.276 li
117.892 205.901 li
118.587 204.692 li
119.268 205.067 li
119.963 204.789 li
120.644 204.359 li
121.339 204.761 li
122.02 205.054 li
122.714 204.873 li
123.41 205.332 li
124.09 204.9 li
124.786 204.581 li
125.466 205.638 li
126.162 204.817 li
126.842 204.261 li
127.537 205.387 li
128.218 205.346 li
128.914 205.012 li
129.594 205.429 li
130.289 205.025 li
130.984 205.109 li
131.666 204.776 li
132.361 204.915 li
133.041 204.623 li
133.736 205.346 li
134.417 205.387 li
135.112 204.817 li
135.793 205.012 li
136.488 204.9 li
137.169 205.276 li
137.865 205.804 li
138.56 205.025 li
139.24 204.734 li
139.935 205.317 li
140.616 204.97 li
141.31 204.595 li
141.992 205.346 li
142.687 205.179 li
143.369 204.845 li
144.063 205.276 li
144.744 205.165 li
145.438 205.109 li
146.132 205.526 li
146.814 204.832 li
147.509 204.984 li
148.191 204.817 li
148.885 204.637 li
149.567 205.359 li
150.261 205.499 li
150.941 204.9 li
151.636 204.623 li
152.318 204.928 li
153.013 204.707 li
153.708 204.233 li
154.389 204.887 li
155.083 205.401 li
155.765 204.915 li
156.46 205.012 li
157.14 205.457 li
157.835 205.471 li
0 0 0 .699997 cmyk
@
22.189 152.615 mo
22.8706 153.63 li
23.5659 152.894 li
24.2456 152.741 li
24.9409 152.866 li
25.6226 153.894 li
26.3179 152.615 li
26.9976 152.782 li
27.6929 152.81 li
28.3882 153.811 li
29.0698 154.005 li
29.7642 153.269 li
30.4448 153.116 li
31.1401 153.63 li
31.8208 152.936 li
32.5151 152.185 li
33.1968 152.81 li
33.8921 153.241 li
34.5728 153.713 li
35.2671 153.061 li
35.9624 152.921 li
36.6431 153.102 li
37.3384 153.061 li
38.019 153.241 li
38.7144 154.089 li
39.395 152.56 li
40.0894 152.782 li
40.771 153.394 li
41.4663 153.477 li
42.147 153.894 li
42.8413 153.464 li
43.5229 152.004 li
44.2183 152.629 li
44.9136 153.728 li
45.5933 153.672 li
46.2886 152.963 li
46.9702 152.824 li
47.6646 153.421 li
48.3452 153.13 li
49.0405 152.866 li
49.7222 153.546 li
50.4165 153.241 li
51.0972 152.171 li
51.7925 153.102 li
52.4868 153.575 li
53.1685 153.394 li
53.8628 152.824 li
54.5444 153.144 li
55.2388 152.463 li
55.9204 152.754 li
56.6147 152.949 li
57.2964 153.867 li
57.9907 153.477 li
58.6714 153.199 li
59.3667 152.56 li
60.062 152.977 li
60.7437 152.629 li
61.438 153.366 li
62.1187 153.658 li
62.814 153.672 li
63.4956 152.463 li
64.1899 153.492 li
64.8706 153.005 li
65.5659 153.353 li
66.2466 153.269 li
66.9419 152.824 li
67.6362 153.353 li
68.3179 152.643 li
69.0122 153.353 li
69.6929 153.755 li
70.3882 153.297 li
71.0688 152.671 li
71.7642 153.505 li
72.4448 152.963 li
73.1401 152.129 li
73.8208 153.519 li
74.5151 153.894 li
75.2104 152.936 li
75.8921 152.574 li
76.5874 152.936 li
77.2671 153.978 li
77.9624 153.464 li
78.644 153.325 li
79.3394 153.325 li
80.019 152.838 li
80.7144 152.907 li
81.396 153.102 li
82.0913 153.546 li
82.771 152.81 li
83.4663 152.268 li
84.1616 152.102 li
84.8423 153.464 li
85.5366 153.894 li
86.2183 153.005 li
86.9136 153.31 li
87.5942 153.228 li
88.2886 152.685 li
88.9702 153.297 li
89.6646 153.741 li
90.3462 153.811 li
91.0405 153.074 li
91.7358 153.172 li
92.4165 152.31 li
93.1108 152.435 li
93.7925 153.005 li
94.4878 153.602 li
95.1685 153.005 li
95.8628 153.074 li
96.5444 153.7 li
97.2397 153.741 li
97.9214 153.102 li
98.6157 152.796 li
99.3101 152.754 li
99.9917 153.241 li
100.686 153.658 li
101.368 153.644 li
102.062 153.13 li
102.744 152.782 li
103.438 151.823 li
104.119 152.338 li
104.814 153.088 li
105.496 153.061 li
106.19 153.31 li
106.884 153.505 li
107.566 153.394 li
108.261 153.325 li
108.942 152.866 li
109.636 152.852 li
110.318 153.755 li
111.013 153.116 li
111.693 153.394 li
112.388 153.436 li
113.07 153.464 li
113.765 153.283 li
114.459 152.227 li
115.14 152.143 li
115.835 153.38 li
116.517 153.464 li
117.211 153.088 li
117.892 153.686 li
118.587 153.449 li
119.268 153.755 li
119.963 153.13 li
120.644 153.046 li
121.339 152.81 li
122.02 153.728 li
122.714 152.615 li
123.41 153.116 li
124.09 152.838 li
124.786 153.172 li
125.466 152.741 li
126.162 153.755 li
126.842 153.102 li
127.537 153.033 li
128.218 153.533 li
128.914 152.671 li
129.594 153.561 li
130.289 153.38 li
130.984 153.269 li
131.666 152.282 li
132.361 152.268 li
133.041 153.213 li
133.736 153.31 li
134.417 153.102 li
135.112 153.019 li
135.793 154.033 li
136.488 152.88 li
137.169 153.408 li
137.865 153.853 li
138.56 153.061 li
139.24 153.13 li
139.935 153.005 li
140.616 153.464 li
141.31 153.839 li
141.992 152.741 li
142.687 152.491 li
143.369 152.741 li
144.063 153.061 li
144.744 152.754 li
145.438 153.158 li
146.132 153.477 li
146.814 153.492 li
147.509 152.699 li
148.191 153.254 li
148.885 154.27 li
149.567 152.824 li
150.261 152.963 li
150.941 152.713 li
151.636 152.991 li
152.318 153.033 li
153.013 152.671 li
153.708 152.894 li
154.389 153.325 li
155.083 152.907 li
155.765 152.685 li
156.46 153.658 li
157.14 153.602 li
157.835 153.616 li
0 0 0 .410004 cmyk
@
22.189 179.703 mo
22.8706 179.495 li
23.5659 179.564 li
24.2456 179.356 li
24.9409 179.745 li
25.6226 178.466 li
26.3179 179.287 li
26.9976 179.772 li
27.6929 179.356 li
28.3882 178.508 li
29.0698 179.147 li
29.7642 179.856 li
30.4448 179.37 li
31.1401 178.411 li
31.8208 179.717 li
32.5151 180.064 li
33.1968 179.37 li
33.8921 179.425 li
34.5728 178.716 li
35.2671 178.702 li
35.9624 178.828 li
36.6431 179.328 li
37.3384 179.397 li
38.019 179.384 li
38.7144 180.051 li
39.395 179.787 li
40.0894 179.703 li
40.771 179.898 li
41.4663 179.647 li
42.147 179.967 li
42.8413 179.62 li
43.5229 179.064 li
44.2183 178.271 li
44.9136 179.161 li
45.5933 179.453 li
46.2886 179.161 li
46.9702 178.633 li
47.6646 179.551 li
48.3452 178.772 li
49.0405 179.467 li
49.7222 179.356 li
50.4165 179.842 li
51.0972 179.425 li
51.7925 179.675 li
52.4868 179.551 li
53.1685 179.189 li
53.8628 178.411 li
54.5444 179.05 li
55.2388 179.856 li
55.9204 179.8 li
56.6147 179.217 li
57.2964 178.327 li
57.9907 178.745 li
58.6714 179.551 li
59.3667 179.287 li
60.062 179.828 li
60.7437 179.772 li
61.438 179.064 li
62.1187 179.592 li
62.814 180.051 li
63.4956 179.092 li
64.1899 178.592 li
64.8706 179.981 li
65.5659 180.342 li
66.2466 179.717 li
66.9419 178.8 li
67.6362 179.551 li
68.3179 179.647 li
69.0122 180.023 li
69.6929 178.939 li
70.3882 179.287 li
71.0688 178.8 li
71.7642 178.841 li
72.4448 179.287 li
73.1401 179.231 li
73.8208 179.439 li
74.5151 179.953 li
75.2104 179.342 li
75.8921 179.314 li
76.5874 179.564 li
77.2671 178.133 li
77.9624 179.133 li
78.644 179.661 li
79.3394 179.745 li
80.019 180.051 li
80.7144 179.384 li
81.396 179.05 li
82.0913 179.036 li
82.771 178.716 li
83.4663 178.605 li
84.1616 179.328 li
84.8423 179.551 li
85.5366 179.481 li
86.2183 179.133 li
86.9136 179.092 li
87.5942 179.287 li
88.2886 180.19 li
88.9702 179.828 li
89.6646 179.759 li
90.3462 179.272 li
91.0405 179.551 li
91.7358 179.467 li
92.4165 178.995 li
93.1108 179.564 li
93.7925 179.731 li
94.4878 178.8 li
95.1685 178.619 li
95.8628 179.69 li
96.5444 179.884 li
97.2397 179.384 li
97.9214 179.592 li
98.6157 179.481 li
99.3101 179.287 li
99.9917 179.356 li
100.686 179.272 li
101.368 179.551 li
102.062 179.647 li
102.744 179.217 li
103.438 178.772 li
104.119 178.856 li
104.814 178.689 li
105.496 178.856 li
106.19 179.147 li
106.884 178.953 li
107.566 180.176 li
108.261 179.579 li
108.942 180.176 li
109.636 178.8 li
110.318 179.397 li
111.013 179.397 li
111.693 180.259 li
112.388 179.328 li
113.07 179.356 li
113.765 179.37 li
114.459 178.271 li
115.14 178.661 li
115.835 179.564 li
116.517 180.064 li
117.211 180.454 li
117.892 179.675 li
118.587 179.287 li
119.268 178.995 li
119.963 178.55 li
120.644 179.814 li
121.339 179.731 li
122.02 179.647 li
122.714 179.314 li
123.41 179.022 li
124.09 178.578 li
124.786 179.231 li
125.466 179.481 li
126.162 179.69 li
126.842 179.495 li
127.537 179.425 li
128.218 179.564 li
128.914 179.147 li
129.594 179.092 li
130.289 179.008 li
130.984 179.217 li
131.666 179.314 li
132.361 179.3 li
133.041 178.8 li
133.736 178.911 li
134.417 179.508 li
135.112 179.328 li
135.793 180.12 li
136.488 179.634 li
137.169 179.745 li
137.865 179.231 li
138.56 178.939 li
139.24 179.425 li
139.935 179.592 li
140.616 180.467 li
141.31 179.397 li
141.992 179.328 li
142.687 178.578 li
143.369 179.078 li
144.063 179.245 li
144.744 180.148 li
145.438 179.772 li
146.132 179.898 li
146.814 179.287 li
147.509 178.966 li
148.191 179.579 li
148.885 179.661 li
149.567 178.966 li
150.261 178.911 li
150.941 179.3 li
151.636 180.176 li
152.318 178.8 li
153.013 178.383 li
153.708 178.8 li
154.389 179.231 li
155.083 178.925 li
155.765 179.147 li
156.46 179.453 li
157.14 179.759 li
157.835 180.064 li
0 0 0 .589996 cmyk
@
22.189 189.96 mo
22.8706 189.835 li
23.5659 190.183 li
24.2456 189.988 li
24.9409 189.779 li
25.6226 189.543 li
26.3179 190.419 li
26.9976 189.918 li
27.6929 190.808 li
28.3882 190.35 li
29.0698 189.126 li
29.7642 189.126 li
30.4448 189.96 li
31.1401 189.557 li
31.8208 190.835 li
32.5151 189.668 li
33.1968 189.529 li
33.8921 189.584 li
34.5728 189.446 li
35.2671 189.584 li
35.9624 190.168 li
36.6431 190.002 li
37.3384 189.891 li
38.019 189.737 li
38.7144 190.238 li
39.395 190.099 li
40.0894 189.224 li
40.771 189.932 li
41.4663 190.21 li
42.147 189.39 li
42.8413 189.488 li
43.5229 190.155 li
44.2183 190.391 li
44.9136 189.793 li
45.5933 189.516 li
46.2886 189.946 li
46.9702 189.988 li
47.6646 190.196 li
48.3452 190.016 li
49.0405 190.863 li
49.7222 190.168 li
50.4165 189.112 li
51.0972 189.001 li
51.7925 189.307 li
52.4868 190.335 li
53.1685 191.03 li
53.8628 190.363 li
54.5444 190.141 li
55.2388 189.376 li
55.9204 189.696 li
56.6147 189.932 li
57.2964 190.141 li
57.9907 189.404 li
58.6714 188.987 li
59.3667 190.071 li
60.062 189.112 li
60.7437 190.488 li
61.438 190.002 li
62.1187 189.779 li
62.814 189.265 li
63.4956 190.266 li
64.1899 190.224 li
64.8706 190.461 li
65.5659 189.349 li
66.2466 189.821 li
66.9419 189.849 li
67.6362 189.584 li
68.3179 190.168 li
69.0122 190.127 li
69.6929 189.321 li
70.3882 190.099 li
71.0688 190.543 li
71.7642 189.668 li
72.4448 189.821 li
73.1401 190.363 li
73.8208 189.946 li
74.5151 189.668 li
75.2104 189.196 li
75.8921 189.863 li
76.5874 190.683 li
77.2671 190.322 li
77.9624 189.168 li
78.644 189.668 li
79.3394 190.058 li
80.019 189.46 li
80.7144 190.029 li
81.396 189.432 li
82.0913 189.821 li
82.771 189.668 li
83.4663 189.46 li
84.1616 191.086 li
84.8423 190.252 li
85.5366 189.084 li
86.2183 190.405 li
86.9136 190.168 li
87.5942 189.613 li
88.2886 189.946 li
88.9702 190.376 li
89.6646 190.238 li
90.3462 189.918 li
91.0405 188.793 li
91.7358 189.46 li
92.4165 190.252 li
93.1108 190.516 li
93.7925 189.39 li
94.4878 189.543 li
95.1685 189.376 li
95.8628 190.877 li
96.5444 189.627 li
97.2397 189.501 li
97.9214 189.766 li
98.6157 189.835 li
99.3101 189.821 li
99.9917 190.516 li
100.686 190.029 li
101.368 189.376 li
102.062 189.209 li
102.744 189.182 li
103.438 190.669 li
104.119 190.085 li
104.814 190.196 li
105.496 189.946 li
106.19 189.737 li
106.884 189.209 li
107.566 189.627 li
108.261 189.904 li
108.942 189.696 li
109.636 190.016 li
110.318 189.307 li
111.013 189.751 li
111.693 190.502 li
112.388 190.461 li
113.07 189.682 li
113.765 189.404 li
114.459 190.488 li
115.14 190.614 li
115.835 189.974 li
116.517 189.557 li
117.211 189.404 li
117.892 188.862 li
118.587 188.945 li
119.268 189.96 li
119.963 191.086 li
120.644 189.988 li
121.339 190.071 li
122.02 189.627 li
122.714 189.974 li
123.41 190.099 li
124.09 190.599 li
124.786 189.988 li
125.466 189.349 li
126.162 188.904 li
126.842 189.793 li
127.537 189.766 li
128.218 188.876 li
128.914 190.127 li
129.594 190.488 li
130.289 189.835 li
130.984 189.974 li
131.666 189.349 li
132.361 190.335 li
133.041 190.53 li
133.736 189.488 li
134.417 190.432 li
135.112 190.419 li
135.793 189.39 li
136.488 189.96 li
137.169 189.932 li
137.865 189.891 li
138.56 190.28 li
139.24 189.876 li
139.935 189.891 li
140.616 189.224 li
141.31 189.863 li
141.992 189.584 li
142.687 190.002 li
143.369 190.266 li
144.063 190.155 li
144.744 190.029 li
145.438 189.599 li
146.132 189.863 li
146.814 189.029 li
147.509 189.307 li
148.191 189.96 li
148.885 190.196 li
149.567 189.599 li
150.261 190.155 li
150.941 189.64 li
151.636 189.432 li
152.318 189.46 li
153.013 190.308 li
153.708 190.655 li
154.389 189.891 li
155.083 189.696 li
155.765 189.613 li
156.46 189.46 li
157.14 189.279 li
157.835 190.308 li
0 0 0 .300003 cmyk
@
22.189 195.77 mo
22.8706 196.062 li
23.5659 194.616 li
24.2456 193.824 li
24.9409 195.061 li
25.6226 195.77 li
26.3179 195.005 li
26.9976 195.27 li
27.6929 195.116 li
28.3882 195.005 li
29.0698 195.019 li
29.7642 195.492 li
30.4448 195.005 li
31.1401 194.978 li
31.8208 194.505 li
32.5151 195.019 li
33.1968 195.088 li
33.8921 194.991 li
34.5728 194.741 li
35.2671 196.326 li
35.9624 195.673 li
36.6431 194.227 li
37.3384 194.908 li
38.019 195.27 li
38.7144 194.616 li
39.395 194.102 li
40.0894 194.728 li
40.771 195.255 li
41.4663 195.617 li
42.147 194.936 li
42.8413 196.062 li
43.5229 194.949 li
44.2183 194.588 li
44.9136 193.962 li
45.5933 195.95 li
46.2886 195.603 li
46.9702 195.061 li
47.6646 195.534 li
48.3452 195.019 li
49.0405 194.046 li
49.7222 195.158 li
50.4165 195.895 li
51.0972 194.366 li
51.7925 194.685 li
52.4868 194.602 li
53.1685 195.63 li
53.8628 194.394 li
54.5444 194.366 li
55.2388 195.144 li
55.9204 195.061 li
56.6147 195.644 li
57.2964 195.964 li
57.9907 195.603 li
58.6714 194.978 li
59.3667 195.172 li
60.062 195.033 li
60.7437 194.672 li
61.438 195.033 li
62.1187 194.949 li
62.814 195.13 li
63.4956 194.894 li
64.1899 194.908 li
64.8706 194.991 li
65.5659 194.546 li
66.2466 195.895 li
66.9419 195.228 li
67.6362 194.685 li
68.3179 195.088 li
69.0122 194.241 li
69.6929 195.144 li
70.3882 195.478 li
71.0688 195.506 li
71.7642 194.978 li
72.4448 194.296 li
73.1401 194.755 li
73.8208 195.144 li
74.5151 193.851 li
75.2104 195.562 li
75.8921 195.63 li
76.5874 194.908 li
77.2671 195.103 li
77.9624 194.991 li
78.644 194.129 li
79.3394 195.408 li
80.019 195.519 li
80.7144 194.685 li
81.396 196.214 li
82.0913 195.686 li
82.771 194.394 li
83.4663 194.491 li
84.1616 195.144 li
84.8423 194.811 li
85.5366 195.158 li
86.2183 196.062 li
86.9136 195.408 li
87.5942 194.338 li
88.2886 194.963 li
88.9702 195.644 li
89.6646 195.13 li
90.3462 194.991 li
91.0405 194.672 li
91.7358 195.019 li
92.4165 195.463 li
93.1108 194.519 li
93.7925 195.463 li
94.4878 195.714 li
95.1685 195.158 li
95.8628 194.546 li
96.5444 194.978 li
97.2397 195.088 li
97.9214 195.033 li
98.6157 193.435 li
99.3101 194.894 li
99.9917 195.617 li
100.686 195.228 li
101.368 195.005 li
102.062 195.241 li
102.744 194.436 li
103.438 193.837 li
104.119 195.186 li
104.814 195.63 li
105.496 195.38 li
106.19 195.27 li
106.884 195.45 li
107.566 195.422 li
108.261 194.685 li
108.942 194.102 li
109.636 195.408 li
110.318 195.214 li
111.013 194.755 li
111.693 195.158 li
112.388 196.381 li
113.07 194.616 li
113.765 194.769 li
114.459 195.617 li
115.14 195.436 li
115.835 194.602 li
116.517 195.033 li
117.211 195.116 li
117.892 195.436 li
118.587 194.894 li
119.268 194.769 li
119.963 194.352 li
120.644 194.852 li
121.339 195.353 li
122.02 194.755 li
122.714 194.241 li
123.41 194.657 li
124.09 194.838 li
124.786 195.241 li
125.466 195.547 li
126.162 195.463 li
126.842 195.116 li
127.537 194.324 li
128.218 194.963 li
128.914 194.588 li
129.594 194.824 li
130.289 195.255 li
130.984 195.27 li
131.666 194.755 li
132.361 195.13 li
133.041 194.755 li
133.736 194.978 li
134.417 195.478 li
135.112 195.172 li
135.793 195.283 li
136.488 195.005 li
137.169 193.936 li
137.865 195.755 li
138.56 194.908 li
139.24 195.144 li
139.935 194.129 li
140.616 195.478 li
141.31 196.062 li
141.992 196.395 li
142.687 194.741 li
143.369 195.534 li
144.063 195.992 li
144.744 194.421 li
145.438 194.657 li
146.132 194.657 li
146.814 195.478 li
147.509 194.102 li
148.191 195.13 li
148.885 195.255 li
149.567 194.491 li
150.261 194.533 li
150.941 195.534 li
151.636 194.491 li
152.318 195.172 li
153.013 195.562 li
153.708 194.588 li
154.389 194.366 li
155.083 194.949 li
155.765 195.047 li
156.46 194.908 li
157.14 194.7 li
157.835 193.477 li
0 0 0 .110001 cmyk
@
22.189 177.215 mo
22.8706 177.438 li
23.5659 177.66 li
24.2456 178.55 li
24.9409 177.966 li
25.6226 177.841 li
26.3179 178.216 li
26.9976 177.646 li
27.6929 177.313 li
28.3882 176.881 li
29.0698 176.16 li
29.7642 177.327 li
30.4448 177.813 li
31.1401 177.632 li
31.8208 177.646 li
32.5151 177.702 li
33.1968 177.368 li
33.8921 177.271 li
34.5728 178.035 li
35.2671 177.063 li
35.9624 177.438 li
36.6431 178.007 li
37.3384 177.646 li
38.019 176.215 li
38.7144 176.896 li
39.395 177.494 li
40.0894 177.327 li
40.771 178.035 li
41.4663 176.66 li
42.147 177.786 li
42.8413 178.466 li
43.5229 178.007 li
44.2183 176.868 li
44.9136 177.327 li
45.5933 177.868 li
46.2886 177.688 li
46.9702 177.34 li
47.6646 176.285 li
48.3452 177.702 li
49.0405 177.786 li
49.7222 176.937 li
50.4165 177.716 li
51.0972 177.744 li
51.7925 176.799 li
52.4868 177.424 li
53.1685 177.16 li
53.8628 177.076 li
54.5444 177.688 li
55.2388 178.174 li
55.9204 177.758 li
56.6147 176.924 li
57.2964 176.924 li
57.9907 176.91 li
58.6714 177.243 li
59.3667 177.688 li
60.062 177.466 li
60.7437 176.854 li
61.438 177.299 li
62.1187 176.729 li
62.814 177.215 li
63.4956 178.161 li
64.1899 177.577 li
64.8706 177.507 li
65.5659 177.882 li
66.2466 177.868 li
66.9419 177.16 li
67.6362 177.021 li
68.3179 177.771 li
69.0122 177.16 li
69.6929 176.979 li
70.3882 177.257 li
71.0688 177.494 li
71.7642 178.077 li
72.4448 177.257 li
73.1401 177.313 li
73.8208 176.993 li
74.5151 177.744 li
75.2104 177.979 li
75.8921 178.369 li
76.5874 177.313 li
77.2671 176.381 li
77.9624 177.813 li
78.644 177.327 li
79.3394 177.632 li
80.019 177.257 li
80.7144 177.744 li
81.396 176.66 li
82.0913 177.035 li
82.771 178.174 li
83.4663 177.438 li
84.1616 178.216 li
84.8423 177.924 li
85.5366 177.882 li
86.2183 178.161 li
86.9136 177.313 li
87.5942 176.881 li
88.2886 176.618 li
88.9702 177.479 li
89.6646 176.924 li
90.3462 176.854 li
91.0405 177.632 li
91.7358 177.215 li
92.4165 178.286 li
93.1108 178.397 li
93.7925 176.826 li
94.4878 176.771 li
95.1685 177.688 li
95.8628 177.521 li
96.5444 176.701 li
97.2397 177.424 li
97.9214 176.66 li
98.6157 177.73 li
99.3101 177.924 li
99.9917 177.146 li
100.686 176.965 li
101.368 177.299 li
102.062 177.882 li
102.744 177.132 li
103.438 177.229 li
104.119 177.104 li
104.814 178.244 li
105.496 177.938 li
106.19 177.271 li
106.884 177.368 li
107.566 177.215 li
108.261 176.979 li
108.942 176.771 li
109.636 177.104 li
110.318 177.354 li
111.013 177.479 li
111.693 177.841 li
112.388 177.271 li
113.07 176.979 li
113.765 177.771 li
114.459 178.674 li
115.14 177.229 li
115.835 178.48 li
116.517 177.577 li
117.211 177.327 li
117.892 177.466 li
118.587 177.438 li
119.268 176.979 li
119.963 177.243 li
120.644 177.813 li
121.339 176.952 li
122.02 177.771 li
122.714 177.771 li
123.41 177.521 li
124.09 177.674 li
124.786 177.591 li
125.466 177.813 li
126.162 177.021 li
126.842 177.146 li
127.537 177.271 li
128.218 177.271 li
128.914 177.938 li
129.594 176.84 li
130.289 176.84 li
130.984 176.924 li
131.666 177.132 li
132.361 177.938 li
133.041 177.799 li
133.736 177.841 li
134.417 178.105 li
135.112 178.453 li
135.793 176.952 li
136.488 177.271 li
137.169 177.09 li
137.865 176.937 li
138.56 177.299 li
139.24 178.23 li
139.935 177.202 li
140.616 177.132 li
141.31 177.494 li
141.992 177.632 li
142.687 177.188 li
143.369 177.758 li
144.063 177.41 li
144.744 177.382 li
145.438 178.244 li
146.132 176.563 li
146.814 176.854 li
147.509 177.368 li
148.191 177.188 li
148.885 177.076 li
149.567 176.534 li
150.261 176.743 li
150.941 177.535 li
151.636 178.522 li
152.318 176.493 li
153.013 176.993 li
153.708 177.619 li
154.389 178.105 li
155.083 177.396 li
155.765 177.507 li
156.46 177.494 li
157.14 177.424 li
157.835 177.188 li
0 0 0 1 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 48 /zero putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings2 dict dup begin/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B27F0FFDEC3D4AC868BB2F3F35FB5E9F1C0F84AF60C7D8EABDB59B8E1F960151F9511E55A6B26091EC60E1C90C277465A6CD6BF415E99C1E3222E5D8229E07EB706E217942A6C6EE460AA0> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/RIAADD+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/RIAADD+MyriadPro-Regular*1 [48{/.notdef}rp /zero 207{/.notdef}rp]RIAADD+MyriadPro-Regular nfRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf295.911 110.432 mo(0)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRIAADD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B89DB76243241956147685E9D11B558168E06D18275E2338D279B9913C7A1D115D13271EAC> |-/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACAF941116582617B9738BB5AF1D396C826652BF6DBB46CC2019C22EEDB26045C1BEFE4887D256AE5DA3C25CAA99D62ED97486E7939D89DEC92F35F04285> |-systemdict /gcheck known {setglobal} if end {end} ifendRIAADD+MyriadPro-Regular /Encoding getdup 46 /period putdup 50 /two putpop%ADOEndSubsetFont
/RIAADD+MyriadPro-Regular*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 205{/.notdef}rp]RIAADD+MyriadPro-Regular nfRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf430.176 110.433 mo(0.2)shRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf18.5879 109.228 mo(0)shRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf152.854 109.228 mo(0.2)shRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf18.5879 238.844 mo(0)shRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf152.854 238.843 mo(0.2)shRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf237.938 283.885 mo(0)shRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf432.996 283.886 mo(0.2)sh222.801 125.823 mo
247.783 125.823 li
247.783 114.953 li
222.801 114.953 li
222.801 125.823 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRIAADD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/B <1C60D8A8C9B79D2DDA73CBA562CCA616611FA2F6D9A4F73A34564160886E9CF893B5F30C6CA3CC5C829E6C86CCD8B6039E0C7F2FD0FFEC5790BDC97E18D50224F8DBF29BE62BF93B9B46A0E426252323AF779BE129778FBC2237B0172C862C48766856E64A95D30B6FDF49C5041364379F758936E5F343D201DDC5AF9E1CC2D12A5BB71D809FD0C76D483DCA8BBD4974D0EC93996621F2710B5158F156401628A148FF8FBE9DF1DF727E152C865F07> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-systemdict /gcheck known {setglobal} if end {end} ifendRIAADD+MyriadPro-Regular /Encoding getdup 66 /B putdup 100 /d putdup 105 /i putdup 110 /n putpop%ADOEndSubsetFont
/RIAADD+MyriadPro-Regular*1 [46{/.notdef}rp /period /.notdef /zero /.notdef /two 15{/.notdef}rp /B 33{/.notdef}rp /d 4{/.notdef}rp /i 4{/.notdef}rp /n 145{/.notdef}rp]RIAADD+MyriadPro-Regular nfRIAADD+MyriadPro-Regular*1 [10 0 0 -10 0 0 ]msf225.817 123.323 mo(Bind)sh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRIAADD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/T <1C60D8A8C9B7AA91799D50BEC147DC15659E7F5EC34F826A01358F7E6EB53E56E1831B0550D2FE4055F5> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-systemdict /gcheck known {setglobal} if end {end} ifendRIAADD+MyriadPro-Regular /Encoding getdup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 84 /T putdup 101 /e putdup 109 /m putdup 115 /s putpop%ADOEndSubsetFont
/RIAADD+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /.notdef /two 15{/.notdef}rp /B 17{/.notdef}rp /T 15{/.notdef}rp /d /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n 4{/.notdef}rp /s 140{/.notdef}rp]RIAADD+MyriadPro-Regular nfRIAADD+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf76.6929 259.215 mo(Time \(s\))[5.81982 2.80811 10.0078 6.01221 2.54395 3.40771 4.75195 0 ]xshRIAADD+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf323.963 296.956 mo(Time \(s\))[5.81982 2.80811 10.0078 6.01221 2.54395 3.40771 4.75195 0 ]xsh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRIAADD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B647206730D8F66F8AC61925B6B1318E1FB010B62374917FD833E1AD6BC7D55692C9AE2F77E568D5881F8457D1A44289B0DB31B4E1DC1F3487A85D6C086A5A13FB7D7B66A3F61EF4969C1AE080F7AF6D145220EBF9A7BF4151121C2FA015E52FB7E43B5305D938D71B0B61429953BBCCA81012B7A0E4> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-systemdict /gcheck known {setglobal} if end {end} ifendRIAADD+MyriadPro-Regular /Encoding getdup 78 /N putdup 111 /o putdup 114 /r putdup 117 /u putpop%ADOEndSubsetFont
/RIAADD+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /.notdef /two 15{/.notdef}rp /B 11{/.notdef}rp /N 5{/.notdef}rp /T 15{/.notdef}rp /d /e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s /.notdef /u 138{/.notdef}rp]RIAADD+MyriadPro-Regular nfRIAADD+MyriadPro-Regular*1 [-5.24537e-07 -12 -12 5.24536e-07 0 0 ]msf232.055 226.552 mo(Neuron)[-7.896 -6.01172 -6.6123 -3.80469 -6.58789 0 ]ysh%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginRIAADD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/V <1C60D8A8C9B7EDAFD30F79AA728C73B6F9D7243B3F3111E28F2A88FF9E5531C99B386BBCEA887616E38278755F3D624761739CBCFEBE737FE4F6B41F26A8CE4C75B9203972AF1AD2A0D0E820> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78CD729866CE567C88B5C4105F11006EA75E6774682E91A2E1F257423C8BD0B940F1B9F1BCB8B413DFC78AF75D4027> |-systemdict /gcheck known {setglobal} if end {end} ifendRIAADD+MyriadPro-Regular /Encoding getdup 86 /V putdup 97 /a putdup 99 /c putdup 108 /l putdup 116 /t putdup 118 /v putpop%ADOEndSubsetFont
/RIAADD+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /.notdef /two 15{/.notdef}rp /B 11{/.notdef}rp /N 5{/.notdef}rp /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]RIAADD+MyriadPro-Regular nfRIAADD+MyriadPro-Regular*1 [-5.24537e-07 -12 -12 5.24536e-07 0 0 ]msf10.0439 214.618 mo(Vector value)[-6.30029 -6.01172 -5.53174 -3.8999 -6.58789 -3.92432 -2.54346 -5.72412 -5.78369 -2.83203 -6.6123 0 ]yshRIAADD+MyriadPro-Regular*1 [-5.24537e-07 -12 -12 5.24536e-07 0 0 ]msf10.0439 84.0098 mo(Vector value)[-6.30029 -6.01172 -5.53174 -3.8999 -6.58789 -3.92432 -2.54346 -5.72412 -5.78369 -2.83203 -6.6123 0 ]ysh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/RIAADD+MyriadPro-Regular*1 uf/RIAADD+MyriadPro-Regular uf/MyriadPro-Regular ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Chris) ()%%Title: (convolution-network.eps)%%CreationDate: 12-06-27 4:36 PM%%Canvassize: 16383%AI9_DataStream%Gb!Q;q-NV_e*+=CmK$9tLCeVsFoi!X$E1HX90d#FJXLf?5L-[/?F"Z>'#O5<k5ER],?m3/h:8oW=5%Q<0/ngJA22@_s%-C(Zo&hu%XH?oG)N+bNG'dfkaRZ>XIQA)N_05fG*&NZN,B4VY#@Bi\#e6eB*,Od(@bot.".&*XbLr'=PLdUChSOTj)hTY(CPSJ*Q@E-1Zef(^%gqkTYCXD_A%l`_^_>V)<G.a7932/ucZWbU#lqkH2mO$@n-8UrjEqA/A)Pm9Fr%U`do:*j<Ge][@=Y=Ct7:YiM:`"8Yc%DU=:;Y?P%kF9Fu[Mc@[cp`,&1C'7lGTkX,T:>1n%7gPH!6J3MlVu!b-EWLs(89q7G`TiWd<GqFTP0bu*thO,)R_]a5`[;jRd7('bJf60kR=q*%c$S4[!2dP]O[R,+&(C;WMk.%`]et`1JPH3^>JgGpoLW^"L5oF_^ou.A2%kt#&$\M(?^>>[rG0:LS[;GMhN/JnQK-Q@aaX:2K&JCP%iE(EgEAM+8p0n);Nk1FiFLt`efbkucE'H/ENJ5X[!:hXXd->U\Fq&\23SV>X-`qA#".5EYmgmV3!jkA)^1%n\jV-pU0*DIsU>j``%*V9Rc.VbgY5oP+]7KCoWUG48>7ED3#CG;3=n-?p6N!+`c!(BS3"mc[PSTSg*Sh-&=3$8qV_=Lpo-:<'I+Vt!-L?"=.IgPWUpD]3%%]k/(t2uqhNmUS9kjhGS?"KcUXMMp<odZ4SW"94#Aj8i=5MS4-Cr(>Aq31-@gXSG(raF4iu(CJ"1BGA0-'(E;*&:Y.Ci-QjTYD,C5%C++b=1(:f7h\D-f<m`>n(6-13d3rfGNA?Fu1Qd3)&dd2;OatXXhdNQR!k*]Qi%&VD.)8l;!kbj9J6*']fS3hm<JH?"iS=nEY;6U$%#PT)0(\\/E`)kogiq6-h@Y_.k'c[m7Krs:#`0'%pE('11[XfZTYAi8@-1JTe9^idGK-PuO&/(iRL($QT?fANR48]hR$0&nQ`;!ak%3%jt5gFs'69q3<XF%g(;78,$&MXSJ.a1]NAa*kkX@F)nQ&mO:DYSA-"I"d[O%,t.ECO!kW4)>)@-dFEC$GI=:&&,o!E--@(i@F=V%qusgO<cEHU(!e)d&klAc+(>q0!;9[Y+*#SFs"Mu3.nhma/pQHepTWhj?PkGN/C#&L+o[+2i93SSKVO0Dj&+j;E.%-i[_hqOa+nA\%mtIsL%31qX/onBK4.(%*"6OK`LIGM]\IJ6PEsh%5;(fdI`H9/6_c4[$1#66``>K9.LAMHbM:aP)Hp>?*s5BPZai)tnk8_qT6X\8*%beLHjj*N>#;-IPQ''U\553?aFmq)KNGKW)o9"I..,*h88J3=Mo$1F1Z+neq&YD="4`HMN='`&'lYuV8?s(E<XOl,[nBZ]0sq&TLA%fHV"+Mu8V8!KRH`PMboFGT;3oa$nd'iEn3mYK62-?TsOcbO>4u`Ek+T?fZG/Y>iBrj`gW`P5\m<%d+>9id&N#`GbMlN/nGb_@`X^%"LQ@k@n!73/hmc^V]"`c,5_TD@u?Af1%ZLCbqSqA+n*4hD-na?@0,\Sq]YBU0LFDk%$-#i>3pK-ni4H6M3]um"s&?JWA(1S'uTDf%e8s80n@8g/7qgO!6DNE@We'&b<%`p.;aoY.!T,JPr/H_0ppU0X?E=(Tj&Y&ghbda<OcV8'W>2<+Tmu9DJKF;F#6$>bUkgY>.&J#L%`E87_6)q_M\1Ja\rZo2[=:t*cnTt=ea+'1O_RPM'??d8uNCkV>/bW#!C._ZGJ)<P51h-N3!V\#[P5@b'd5rRmNR/bl*HMVa-]V7,%Na""5[-s<,&Q=\j^OtG(in\(i@IM:pA6FgFQuDLg#kX'hEJpMia`eH`4G5-V>TAHR5rg\X2'C6).jVSPAlebeTqV2t^(^JNhshf$%Hi$n?&'95._h+Bcs-)?6<[<1FqGZ5Oq]kf2`%C;,m9/!>PGL[N-0>2jG.G+2AXH[I.Dkp3YJ^ir"oF6^jN'?GA1XUW>K#DF?GX3V%WR&igWV)UZ>OWWk(/V%;o:/Y&W$ljlio#ar%:2<R#k^tF$/<srIi#KpU/kNRMmXrR<,5?JNP*<(TL5EM^c#/X*qUL?rJq3sSWIN>%k)tsXnSZ_"\?(`_mUM+t9'CaZ=;9[$o4P>kKjP/n8V[Rl!Nd.".T*M[<so/]MP2HLs.E(SjE8hH,[qHFn[AGLf7$@T=N'58FKeAQ%R=diQHlIN0*4>!eLnbS7Nl;L5@\#us&c2Ul<P1X+g'RD9P3rfO<^LOIlUYH=@PYoT62Xq@,YAA;bXYd&X]Q'+:/%086=qt=W5.Qr%2Y_q)5q)n;iWM//PcSPTr(W\9lj&@Y7GK*-7&&\Rdt04a'R;BeEMG6YaD2VsU`_o8`_+\s(T%qC)QdG?[/Z@+;:7$7/bJI-^.W[F%OlQFq@`i%74I@goH)R.,ho,8fBSf,!;=pcbW2q3d<<]L,O?&'DdA(H)\ijr5(0Z2s40?+`mCF7^*a2F&/AWMRIZq0laF@Ye+O1C@%?.h]eXaQ8KdE!sR\QdS(@T4T<?"<:FoeY`09$jPASuRgj_=ER3$L0Kk/-374-ppu2cBsYH#DlV]kuD5S't7%dT;"I`mhV`?pE^Lh%YR6MUdK^r/3Cl`#S,=ME51)_u8r<HnqCU?TJej'!*q1#O?,N;!SfO+Ofde>D.jk)$ETJ`bF/iD5G(&!*F)>Vip*CPRhbDlPnW0@C%AIB4g[1M7R8J]8qo"0.-(rHt<"=klf;bDR<Y!fH"nTn1(OpXPJ0)QpOO%=;BHB%)gN1AGiXlYb'ena%7-)2;'Y@5^W;FgH1iIBKA%(OlOqABU=[ekkV[j$/rXU4``9o7K7TLsMgnk9OgmEAH3g=U)7n+a#V4hC\Qo_K]LM7G\ea@h2I!P*B[a*IGqM+SH#[--H4CH3`b=%_'9Th5]Qke2&RTSM=6dUKMhFOj&5/"A`%$X,.9ki#tp">K8R<2l>B)^YI1Nqhao=HE-=d,Y:\uo7-Gk6=_nDNrh"#IP[(>T@;XgD%gMca<3d29j14Ks]PC8R1WKoEtrhQpYb"m>u1CVbsZ3AgWNUco>\4+LbB26g4N1-ZlN.jht,kIPI?_i&tV$HU\,_6Aaa-=>qOqK6:%F"5GDQ4;Bm#"hUpX]r4s;QW/Gj4FkbA"mg8ergR72ZmtoU:NH3+rpf#Lrn@:bO-e?;u&NA]1@"j(<JQK+YtQTh:AO#<n,]PC2GD(%+ttVf98PV`67XRb-1_E<44];K-`&q]2FDA]V5FH7O&:rOE)qS?:aAcrb`\pNeTMa=<8(bY54IdTg`A`r78KcU/VZlnDSbt,4jEB)%<U1SM##Qnn,K$W;HmPU[k]6+6@Y`Hq4\YP8Dd-e91U)A3ZrGdB.FV"g,4)!STceNU8a2S;J^FC"H;1C-['cS#2fZ6ZeGCFa6@#MV%8Np`cp<bjggLXZE/9Hi`6hV9=:PJ@[ca7Dh/Xq($/+;'4VinfQZ+!8L4^55<]-;hr\LKITl1oX-1T=GIe38uAa@'>J1H%Qp.jE^m%g`nO7'I,+'DWF[7("lVB(E4-b0_.Eo2e.8roaf&49/.:/eqrn7=:"Y"KF;FON9$45`P9LI'saYQ$^1>++N\V^_X9*UbWri#q%g/q%G:N9DqKL>9$[3DF@NI%qPdI)''.DI,_MHehO'Sli"`@CI-U3eM7d=T^G"8k[a#RTKkpTV;Ld"J%/G>3.'bKCGiAWNI9o_ga[A]cf%*f5g1Ji,;(Q>&nD;.4TE0lNl%Q#4Wd93F?<F"dM>8'o)BP!^q\LasEZ4\'+KYg4R^ebUMqWrHTk-<iSl5@Ih\9?rGmejA26[;Jn=%kK"S'&GO+S%But(A80Q=1D+pW,(Csr:B40iN5oo";iVth$-$-QCBni:QddhDj'ng,5<15>fMs6*<,5Vd03?-5g0>VXMqSj>%T-,e%_I51R+,Ys,*3DSbq%r\8.*5<",=68JY.P+q;O+;@$*3B$?@n#Dg1.6%P;4]D<WK>P5l02-M]pk"Ld)W?F1A!/(H2j_\E.Ne`n.$4%kXq%EDcW/_9.1DIh(7//5?WqXX>LS!N4IeP/DPssa:0LJ#HmQI*!\)$$3PH2RE^&/;K&dBZ[r#HA2[s#Fg7>\d$F+`i?g\j/^PG1%\A;c@R^)kqH?'sPIh)Q%Lqm/8V^9.<>?Trd<k<F*_,#$>$.3?/[94XAQG=-B?/i:cU?tin]>S".i2.IKF<``P"?'04@;e8?\\Jbu%OC\Lr5jn]fB"8d!"j[\:B%B4s1RkZ8^oGF@$EUrDi/W)$1$m3dPrQ/*(I/oD#0YO=DDM2t#M*-uaMRni!SdndSU[nL&(sf&<smIQ%=c`Tk83a4g)h'tRCue(Fq]BtnQuCJ=>IN7Bmn7OX@KEFLJq]i[4asW'_(T8M*r'$VrjuTa36:(LmmVd*B/&Yrd7:uXP<j*kDNO9)%c'DaX\%=BOJ>m/DbOpf7XlXJg''sEm=i$6lX58@9jR?^@"D/>(8qA;LOi7lR.DX6V)e*>C@K][.JmkBlo'c@oiT.0KA.XT2'$WMd%V\.Ou1KrLO9@Qlc.8mq.2[%D=(eqer"nhq`""Sn73J7fmk$"(WIZJ-<%\bVLl2#b;i;nj=!]bj$9>p!5k)>JQ\Ip76%K?<\AChd"%d1'tma,T?e4E9/!gnKd4Zq2rgHt`k!MWZ>fibgjjoA5"Mr6DRW=`8fn!fJn$BM791ZP`GHc$\*sXFV?D([Nt4k^iU^XV0?I*P(RG%ps#='>499r]KI:7WR>7[KEVTPCNjQD^W)<6\%m0n_"Nb46[7o3,6GGR6t=INQ[Q=8B>n'2K$g56j47Th'EGLLIlG%Yp_"$0(*aqP%lT^%*6Md>Z5_64(390Ld,o@.Z5m3'Q4mC4GPL1cY#!,79r<"Qf3SY$nR[=)2CT-_&pimuZT<mRLeIkPD!^J8$Ts=k9Ys<42DYQ`c%73Wd$ZEn]"8dE68-Na\Q&%`[b<]Wpj`\YEbh<(>TIlZg!n@PnD*Y1DcC"rkKDh&.HgX7\J.sNAsD9Oor;OLa,<]>radc*ZZZ*o0B%5W[Hm5=!].XA7^Zq,;>j=gS+aAE>QL`.3,@XnX*M)1<7WGMc\:7n[_Phi<1</cK3lb7t%Yq?=s*osr,FG(X\VH4.M4k][>RD$!C?%UBbHX_j5d.!OT?8[cV3f?1AP$r)F%6s0`kQErbM53,>,?nDDgJE]K?!.PFB?KqHbrYl0%VNX!(';.!]4D.=1sW%mDDom[ttcrqLn%\G4qi^!Hj>(HEt/JJJ<HlOkOlD'-baRV9RaAUYhPBg>BQR'Fn#^dX\26%dYeC3U"$&Lea2\'+RS(91N,hn9b_@'76^e?UM(N'P'P%W]m'$==<Nb6NUVGPuR'6^cY^#eHPH+ckgKGid:i3XLFV"5?udTI;dD7]p:p)1'_PuCdM:j(<V\1A75A'mK`[I9+ThIB\?[0L2F_!%c6AQcJM2MgQWrt<#Q45'2/Kt4^3ri/+o(`ld=S"n`rp1n.uP.0Se63;K*5/9LU`OCN?7SIJU7oi2Ys:4X"KN%#5mRIQEATG`k^$D%9AL/am5%Nq!03S>X\kesLG2,X_Nusg6SSO1p_a'0rMTg'kc7gsLEjQO5l;+:#(E$aQaOm46/S5OGJFgFbcPoj*Fu_S@KN&@^h_:u%"/9iM$sFr:-p4jDj_I,s)Sh\Mf2fti0#4@baiduW*o*oTn]L.pB+=uo+mT41\4Ie;Q+V'CNoPGqec.I^'>Pu!%DID.bHVH1L:.;(%!1BX`n7DQ2,nS+B\_t)Lof2pXcrhVJg%;K)Ca6BB^[jMR()"<7T(%VUs%B>t!'\+'_T\<u.6B@R)6r:[)"Z*ood?[t3bVu=J2r.9%@<(!a5-jj<VZ01Z":ZegCAa9%J&[pcr111j^Ice9J!h'pf^rP5BK3Z@L0lUss/m^GTB!g7hh)sd1o*CTbd-:/\6OQur"jM;rs("7%7t:OT>N:39%/ALdn@r6F_jXq^49@j(^a%U'kn!KWL$;bsF"FctGI;B@)YSrci6H?@4W1E;bm[6Yq!X6c7n76B1eu#5%I9(C+oV5g%LD,UOrDYnBfJT1K9IZ<XHT49ajHiMl@J#n%i"abod2G5'`QY9hn+eX+!0HJ]/iVR978Gl=f3JAaW;c0:bh7,W#X"hkqiNkD+6Q!7%+(9o9LrSp#9'"pc9u=L,X]Wlk:Ze,a8e`_r"C(N.Far*)L=QBQQB;:O?&)3bb&M5N#NY>,G)J5KPZ@W7kf;"[&5mT-6Te&#+!ZVu%psFe5'>DS@'1O2)K.)DU7RQ^-e6Oe';s5h4lLF@(9t41[&d_!K#A"?Jq\!`PncXSGO`]1=!ef"Fc.Y4ulQ6=*-i=T@JdT;(;:mC@%1d[$;&GG%BjhIpY4h03/q%"Z4ObLYr7-H<FfC(P5KhHAsgN$aA+@I[T;;\HV?rY-/TaAeUY.*=j4i#3m5G/7F+lFE(bWC.pPBl>M%&;/`j<Z54>0dA)*a8Nt\>O4RiCM>b2p\L*,AGo$?`EES^>&Q.PoZ!u?Z!<.7^#dWjP]2hW<I/E\jp%u'h\:?f8Te4fQ@n$&-83HK%A:kX+1E]`c%S6NLRnX%'&/N7g-mQfJ9UrcSC>p%3+=_EIW]*mUNaFBgMIPH&Vc)\u2qHbr]p(KGD&6X7eiJubUP%61"m-,GP5eYC%rf3fl*9c4`&nc(W(X&pgP*b&A2t@.qQ#K6JQ!\UU.;Q6Z)R+nA%uO`tZ71Pukkg8YX9"[\HaDR<+=c;WfFP>'Tm`iL)eLmqM/;h&%E]b0g\1/+$:jfM.L?rl+.]n:!ja*QB@YY&k?P*!8pAJCMU#o3%EHNKodb\f;[P_:V!;ck$+7B3M:FE2,+O/DIfJU/JK&]un#0pKR%6n&p!e@D-<=5PI`61k"G;?_#jk'#F5.qD[`Uk5Bs>V'HXZVD9lD3t/g,cK"/!O5Bb>Cgl5X::7BO4kABF;+lBGU0+1-7_46'['_=%$$0UJj@4i;_6(n"HN[;\E.&h_)O4'!fE$@u%13;E15.Y1SZ0>;2[P)e;PRrl#.Up%&[pHF"n?GmZ;/gT2`"/ZgjEIDiOa8sCPN`W%(-2nL)i?N05,TO`QLs\4R=C#9+s%LGD27>jgP#:+he;/DeSl!NcPEB>[2PJ<Ng$Nl*Po6VI^7pI`VCnN;58TMmEAhYohmL,O[Rj3%,q%k8@M.>(/WSa7'tE(A!8ILd*0#2d]rThqWgT`Q*4#KQ]]a2oBq"n*019bK&5g@,BJO'l[-R8\aa2fJ))oNO30dTZ[3!OO@(mCA%rN;h!@aJ--;GttlpiKbn[bT6EjIg2\G+]'L7mIT50=h)gm%Ml8=TfA'`[!mPTSKl1b5Z=ah-^#,>E.fE57$M(05++0cja*-jOlA2%&"'ZqA1c'@T8mT*4_tHn)Cf2?A#A"'kX\Btg"k&7,PEYSBSu`eIZNLuLl3/QP-I@s9n[sLd9'9Y-JB))_F/0;9gj,nUPBd=HYoL^%e8#_7M-cZb:%ha``@K!=iE>(BkM]JE.3:(lro%\4NKsqs@:/PRk_4"qO0'R0n:%#bU$o\q9aR<&eaf>tT2R6cj:c47*1Kf2TUhad%LnMVh*KF+k+T`IG=%[j:CR.dQ0j`gaIE[>S?]:uho05_@;Js!LJ$YXG_1A/o.`Qul5T@Q3$bR8)25>gKM'[7JOm<KPi&h#L1pluV%=Gttq0A'Jr%0u<f>nmGdX\`_X-CRrUrAGg-,EsZ4*PEltVJ5^r\$aDLE9#b$#IO;bLjc[8nUo\W'k-KGB4/GmUXa2Ma+-HQS&'\8%+t733T$4!`R]^ekiEil3D323[AS!huUM=oh.knr,BXZkYI;r40D8e@7U%->lMKn&K_%=I[q^pH?:JSdlW`%d5/WAH.Jl(G"`%Gh$%4B/fIn<s&&DkN_'=?FX9.Al3+!O\lIXlu`Zi11bNi8n]]i*r>`]YVrlKAjg(c8C\kE4`@T@qE>V$qr)Qe@N+kLq,M41_"3-9+(im%/p""um;Mj'cYO[+gq>RAT'steF1q,3ZMm;]#XY5!+JJt?E!*Iu@H9g]C/AMLEahCIr^Dt2W#OgqPSo#&QE?FAW.8]\>r8knP[5jX%'@EW/qhr,iL2F5bYrQBml@@q97+itDh)<S'>."W!kBsn0br3X!??4UA1'X1B%O;t2N)$B$0)o89D*M5T!48'UlJ.=ns2al"U,Ins%]!WZmGh'oFW6`Y5G<KbgEaIXJTOk;#kKn2umo9nIW5J+"h>S>JGILg.#N+<WcH:BC&nu^&7e`q')`FK,KV1QdYUS@rF/p1#M"fIt%p4EB)"2Xh\a\?Qj@?Bo*O#s'Uh&BRQTp4t^Gp6#;hh$YlL"n,eNcV,("R?n7e&uu(l;N,GM<.9&j)'7e7#/r[Y8-H9=`Y>!8@6=c%_&Vt9qRnaMm`+`S)W-:.+?K?)13I(eRi&]EidHF$K(7_^\)E0tCPq>_.#8cs"F9kS=(2E1"(6XV$rIN$AdDd=7MDOC*AtA6@g6"F%!NJJ)L"Bl`ij<D[b-L;fhW]\ua>Hr0O?%ih,98%?ODL"(&9'@COl.BR-;BVgEi('Cm2eBFW_"h:R^>0a7;CE9R-bd(c$[Q""@*.Y%->\U0bjSq?Bm8#rG&4H1U1Bih#3te&0OQhoR7N`Md<Z)b6;-%!UR)Nl&+>qBOVALJ5Y88MEGAD!p2M1i/]0EBU1o'HL/6L]M7D3=%dkhK&ME*pGJY3CZ$"@E\SS\$+D9qX!805JO@E'(W7;Q0_]ZGE)J@"nXe<gu:BWo0RX,u/Co"s'kf"\uQKpD-*"Z9t3@3n'\W,Sk%%*r[])f+o6<du`Go>^m"l]IJL2=`1;k?q7?7,dUT],1IIb\2RR+V.p'of*[U2[k>H1=P$1O@_c.pBO/5_Sb;ut]hGXEIPS_$T&0sj%@J=XT7C9?GK>H1UJ:TVOGKZ,-I_o;JM^ba`oUE0/!;(f2XL<>ABf0e2H]'$QX*1s'_WPgp[BK`A,B<I_#'$hnK`]L`pP*qqYr,qI%eOgN'&6OSBY^]c:@Qab(b[%^Z>h3%%Re,h3$Fe3m[>lo&-&hYV(qf""Kq"QVUr^Eh^l./FrUS3sHG4Q-oj5;?U!(##TB45en)S_%%]4GebVkYs1q>#q^]2FNX-aW2\qC\:0f%qEk=`-$O0dZZKD@_K>k7klOIu7_hFcjB6oXhFYmu#H^<B=NmB<Q&.:2G$acAsId[;7>:%2@G`7oUtFB42tL'C;UOs(Fq97AF-_:0)g7Z_ll7BDSE4B+C8E)Hd^=5%9![B4Qh3+Nb=9`321<fR_UObM,EX(iU&e[.eoY.Oco*p%+5,/.q8an.s4gQFg,Fts4<.MjLfhk;@$Ta8j#NEtAS3[<;>toJpl<#l($,/$/.R9>heXe&GfF\fQheM]pi?a*?2bUXL,ZQR0E-$T%C\l<m\.:7+iPo>&r&?ildNJ,=/:<5b=/h]QFQpp)HbV\rJtpR)fSqukFF4"82&Pt_nC,<S)V)PVjrbE&`OO%/=*!kW43Z%;)2F:E%]Phhuk2e8_^FOYRq[F(K]6a=pjq\'>giImf'o:,lY:$SWJ00Jcgu'OCR3mP!`'NpZIfa/=3S;u*L`.TfKg60mDt*2Kl1;4V=fa?u%,O!YDftpJKr41l_7!LC=2fI+8FKD_EoVA(5Db7Nirdhk^(NqL*FOY^KVrTH+*.:pS3i2FH=4AV%k0pP("[C<$MLf+!P-K:=3J\sg%074rlW/8Jgp!7Nmkd)Y]UkDOCk>E$R06g,s(`;)&DZK+;:nDd?jJ@d&n[/A[q)WXUr42hq1F[G`^oQWC!Z'-2Ik,["6gd4dH2S!f%Z!m9/`0N'"&ZL=Bb(QOnd@W_-<W)A$7tKrDWRl2rjJ2\I6_\"=C$4c8I%rZ9:4BOa+3Ce,Se$$K>tiJokjZ"0%=4W:iKmf?.K2GR%$^72ri+b*XO.!l+*<ZL=J&PlX_ki;FhY`pGF7l!6aqS.!.]/1rB[$?]p=ChpK.$9?qo&Y08)q;L<GR#KCYc-PgI"n:QCrji&MKYK%"P!X<;_P4(p<r9R5,Q(mR3KV_B1%IY;I:lM#e7e>p#MHr:\@sA.8*F;3"_O!1>i!6;$i28Usj1_SEo#9&]^\0X/dnn3NDps<3#U`%].Q9G\0FUd6oU/5Q>p66>_VY1j0[mHq&,T!JH0eX:r>+_6cbs(+B7r*0XPn&@JjEj@on<V@kRII5HEt?;40Qr@%W]W5&WZZ2'n).%>D3T]Dqtjc5f9B2`I+dDe`n`$8[L!l@O!!P-(:ROiO`sP=Z71!@s5g*,HnI%?2jCtm..[%W!4KD</ecd;.'8..3*iAo&N51Mh/'s%49)W.cL\B]dk]POI^oG$WZDJ^WoRIBe'+XAp6L%FI655]+.)f%VtQ+XV5lRr<2-%pbAXHc92@2U;2#)TeW3aeac<Q3TS!1np;>e6%\[Hq%/)+@l*a<Qhps70N65iQV"9=@-I<eJ^nl+^d_PG=?-_]:%+5K)C-GYoYauW)d2^RY[n$?hE<*')J44g_lkT8L6\fUnB>i"lo%TWnabOaM+(Hcn:]D@=>37.)RpWYGB(ak%3Q!k$4!n9*4)2)hYAHkeLCH49^*cZ4[!-(Z\d4p.?TVI!BC@b'<qFh<+G;H;nm"C?h.%WYul>n>G$dFTQr:8V>oH=n9&[303J-=NHdkiPqm=>S(iO!M<VR#/3U;>==##?skJh[*(R`:Hq;'6tj6M=JYB$7O/t,AR8>g+?D13%EB>0VL#1`?_9O2PTFVSA*[ZIE46=UDnS\I_1b+.^hQ8,ee7CMc>"YFsJ;;/8Q6G\1?.W#J;*+kdhJskj&UNVQ<hs3iJKOujkH!WL%K^tOp.1<@.-VA`#pRMT?1e:_^>?N3ekbul+/M5CB5n;[FregLTE=Tq"h$9LUR$eRD!rPWC-sTc"KkpeQ7>ET+f](F^,=a&dau6NO%"c,U*=Epp'&gB>l0uM#"6q+aSN*.9r6o"A5_*%i`$&#TCKTP3P^82Q8+Zt_U-&ptSSh9'*@bO,(\2g48QDb&j$#bFt5VacTon2E2%?Jh+!48B&BqumU*jtUT0ja43KNXH)s+ds$P\;4TbOs+^EZn?eo"+nG+,B^XL>sEP9oi,3N=U3[_T)ONm%7VPN!4HoQA%q@l8]Kod%""QjGrFB0?p:^pm\J1spkO\DW0_t'I97uKt,rT=f3tYUSoYVQpmI365E!F6ib('\=ZoIci1>)88gpl3P)lJM#W:TA>_jMp#D]W8D%e`q(E*)OAmjrP>XHFEXkomm?0bKb`4/05Ke,k%^82s'pGQKkN%1Y3QO6D%;TJ[ZB88%l9jL`;!Brj^%\9,6-hJtCEX-6X$lnA=&B%FWtoPSHodq_Upb$A!SA+So"LQ$%pu[bJ;roHOf`WGY5bUO1ZMIS<sRVTVlmBE+1"J&\L;a6[`oe3+Q(.^7S=a6Aa%d>Xb$4[XBY#%7k_>sjMo>aP!T'H'j71p>)]@/n&9$*l2V)prVT%Vc(0?gJ#nbo9\l"e0b$1+Ym=h9FL:<dhYb<<1>+p'!=:-85I[T0Sn>B2Y26;_%FpHHPR8`O0?;Q4;R>sbmOoUa<Zfq/nH2m):c%>u1h,1Ue/5PXa&?gj'9PP!O-h"XZ3pS.+Su_@o&o:8i84bhGL+2;SZ`FDe4oPm#%*]%q"gU8D]8@@Pk!O8N\*C2pg3^#-D^Y=pE_qhITq]C8@>X+>Kr:J8:!g1JN/."i["pU^q.=H&s01a;^-&;(0"fLTc&L0g;9WIaQ%Q_;9acO]b1;d+!f<7:KY4H;GFHP(L\`s/s+r'M^`TO",a^!P/$a.@XfDa)!>>J0J'',"uk]VK#c9ts!E<rQ6iYHs`+ZQPM_go&/.%YtHXiA3'(i*DYHSB+TYF.Wb7dUUpRb8ec.Kf_&7YOq2L%<7'C^D2L>uqog@hW]oZ6/,\_*jA7C.nn,G=gButaH,DmQ4bNOL4'VdO%oZ/^lQgG`P1mC`-58W#9#L?uPgXDYmj-TO,HqnA<XTV,4=1mYM?^SmB3Q>)lj-Gl+.Y*qN?94Oe6l$?r@<Tb285;2a9/"[).(p`;%>`K.)IM.?;"lC9g+%j9O'gr^44otAn"t[53]qJiE:n=:,a^EnI%qOSJBrlC+:2l#en[a$2/.UhLYK2+:1D$HsW+)H@NfB0>BhS>C%+ol9%T!'A1p?RkVkYu7!nh^;U&--Q"OP=3K@uU0Lpd_=\Bn$5U+5=*9q+mo!Z+_Nu"'RX0@0`#fgd%>b0(f=M';Z4l2"hlGh$&.2%)Zrkbp3a>a.W%+^),#ZUD!A:_mfMD-$7_R.X#0<Bn%#YYnGq(rEub&Y!rC8h2O.u`(2r?![s[9$`LhKr2o`DKQA5M3@P<5Lo$cNY%,@)%#:p'o>S%"h*3ZF-Y$.-tsVH2m?XilVLdlkJ4'M![[q-!X4>J,*iSB/7'A06(0A,?u07,mQJFOC$;5T0hroT:ePgsH^JhV_Y@%](s\=e&?Vb@BP/1*o!FT)?V1tI&,lu.5!VseBM2X-%M*D/'?5qrJX4fM<!P)\9-RI;s[K=>!l5qMg-fHX,lAs]2>=NGO0ct<ED&g%@R"-sPXeC'O09lVn+&=A1h.euCIX\PnpKhJ^ihr:L=tR\Eurts]5R&WA>1a=_L:AlUZ)_kon'N`!Oqn!&PR6=QgbIg:m<&`pN^>T%UBM3g3Ud.HX@Au:b\ne-SCJgh'.ci:kII]SC47`BPI$/Q@-hhq[n,C-[<Mu&$Y6jFEj/0kN<6q$4^"dsYOX3lo+lY<Eb7==@KUan%2Ac6-hA8\=Y<_?;?!jVqRJ>_\/R\<;41XHsh$kd0A/<9m6=8X3c@\l'D?qjd?UmIe%$I"?9!)>LnVGu?DK5<a",i+<L!\Ss3E+"I%N1!"Ur)gM>%c67ZJS@lk8^@9uI;7U1QrJ'"oEK!go<W9(R2or#/$=g$P1s)2[*+Hk$?/l&g[%J9S#:q&.aRPFSoh&=!VYXLor962%<!Xnp&eEI`%tH`j0!e?KeqS^GNo"Z2rl:]cS%Sch'$`L^Bgp@876t%%Oi6oO8(YQCc[kafOP_c#I']GP,,s6L8WHDk;lkB;I*p\]%8h&AG]a]4ko:)B(dueKrGrPogC\eB$V5p7&kddo<\8&-2ER`u5YXa]8KEU0$+(&S@A#j4Po?VQ![,h-'%%@5tF6nKo4"j99PR5Ik%,K)7^3JbL>/9\:cMjL%B77X64`H'\X!Z*'n`AuSedjm)&]jdKj_e0fk^-`q2;Ii^u0N?\Lj8`"]jU&JgY'>W3H3R\Qq'T5Sk!L98%c:kRDo]hs27F;PGT8!AuMA5N-NMbIh;D-t05!VOKgr=paToORWFA((0SM@N@Bb4DIbW`d7K34.=XEhj:3Tr;?bM:1<N<N.m)V5)M%"PseL:>U7_^ll,YD5JRY_=i+[oGCq-^/Jei`2uIgU,1!q@&bl[2!An@@^`T='cVLdd%QA,7OiVf1UM*LGSct;gXfY]3l($.jCbaa%"UZQ/L!1rM>_opL:gZ=3IA7K(NKd+&gf7TYIPtDYW<.=4`sB$-0D2</KCn(*Lf&OC2s[_f<T4uNekiotASk`FepiILV_m4#]dE+S%_K&ctS4,Y-,\,l%;Z*eoFuFe"O#7V"?]F37QQU,EM9<PoL'MZ&1j7!%-6$>In0tN39:i`4!sn\d1MW8j"(GBG!14Y=(1rJ1_Yp!!%bnq8]K<'P\p#Q[@n8I:"Pk[QL`KTFk'=)W]g(Fn[gA0[l^^0$c0KDq+"G^#o`,oXC.+"+(=Z5t/0'2)(ILVXXI>mdKpJ_F,kPQ'a%]UXU/5IsD0l/+Ml,,%cW$s9@7guRJneX/#s8E%9HoI@Z.>>eOt%Ek_Nn'YJM&9gYQ_h`"Xp?6EKd00GlP@:b,^uWa7CUfj`UF>=p%FF\AH*FPLP)YbPV]3NgS"nOKm01[XM3D5"L=Z7/kq9P^$(fdgW0LlL/+.`stdAQ]Y;`p?p<!qN$__W-<SRk_1U!I2URQ?WJMq,9;%IuNVtQEjR6D;]TW*]t/(r>bkis#L<AGI5LUc6CRA-/<jhnue=c@eDV^f`""JdSd%'WdWnbf'7,g(-?24\1WdddBf']o0/#.J))C^%"hB,N'Jg<1;:87'C(bZPTZ;:#W+]F^Y-YC>,2,*Y3q?.(22B?hnA\NGT0>9GR2c\AXX)_D2tAb3YZ6-tI9D)G=m+m_*c?#ug#"Jj%+.I2YgVSMN,N$Am$DWG#-_#^K(rrs;$M^4/`4);J7=WNS\kN4qPFa!<8F3TXJ:.LElfSH`Y[[oQm9q5H`B<jaCUIY(R<FF$p88*a%5(?V//0U:nSq2`%;1+Brh62X)-mD^KO_PWePJA=&m8W\f\G$3E]:=DV+BasL,!F),P9Y<s-/_JY#J#/g!gcR#*CpE=dA;US?l[h.%X5<I=#=PbHdZ9qJ-'jbCkKA&g-lcSaU\Ruu?%;_`1e`mSf7hJZelU&C+R4jFmp*"eCiT()JW[H')uTd'rZ1#!m!S>,no`sPI/#__%,A)GrkoJqj7G]'`XnFO%+?"Cpi$oI@ifg%FYCX@YPLJjWa/!cO0U`+LL%W7Dbk45S*X^fXTs&\s.m0k+5".]KT/4c-*Zc9WGkE\G%nLO1g;+WQ;@/Llkoin8KX;Mb??_QLV)5;elQm$`LTUZ@JO[IVpR<(rcH=&nng`g6D0ON*9)@FB/n^]UmjR.l/]:W.`ou^c$q9n\`%Z*92F+p(dY[)FUS#."iq4;U9P:?Li:an$$A>Dj\^Y,?C)8H>a]G_$:2psL9j!MJ/5X,BBXoQH?65D'djoW/,co)?s?l[,jjIJgio%W?=pGn#_D;kD(N,@`kV:OKIU"cr\sJ?1NOWb4>kr*`RM>!N[FXY?B6/<:UjMST^THj=BB74S8eU^iS]/AA6Y=pk]KY*g.]2_LqIe%?+:5Q>3e<?)p6XPq;ZT.3rE^V.dacqN.0MdTusdf(N=mahr[L+;`<8+CVo64Sq'I@,JVL08N(GB]9f8:8);Qli4@r:kTdNflQOL$%4>9j!i\[1)J#,O.GUO&hF8h'&?&4F"X&Pq=(+aWh94.F7hUVRA[[Q.'nOi*"cR`G@:F5H-Pq'L'SJH:;],h*+?a10HKJ"<."eYZ(%i2]<>L5Q;t&(M:/J7;`BC-9OBnL]:0HU@tR9fripB7-4P5LH+Hkp84"$mNo<)(bMJnL4H"^@A#B[S&Gr1bZhI5JY=_iV;ll&,9>"%J\+!4-.7#*j6lk3)eh>+)+i\4qDFCa?JGW9>_Q3J)P'jNG&=$(S!2lbG"ruj,PW<DUQ]R5WPpKbjW32>T+9;j\$P8]PdHR-4"h:8%\aMA;ShWT?]e4gV]%7iN`O)4p3_6%/p-pj)dmNt#Q-Wgl1/bJ8<C0p`AK<^Xs,/4Thg]rL!GTI1:m!\Y[@Rg>;S\4hP&a;ZJ<N4]%gO"b-[6:Si\+'&r_#odRQWpQ`R::9#7V;>"[>\)IA;mt;I9tX"FHA81ke[o@Bd2Y[+!EeC'gT%c>A'ouf$p+OGJl*o/Yq1a.qj,e%1N+@=81>l_9$9a+(?MW(1nV9.D5?.9#K;'i*]6H6`pd('C#GtiKbVJFAaebfB<9L%#<U5^F[g*RE;Z_U!Kjt&aSWc_1U4%K%Npb5%/9^\gCU&7W5hb`g<Cin0g@P[r/\Opt`CO@B<:-e%d6_TQo4O=q4uPQRLa'3@Uj$]oU5Liim1s_'8DdZO1Wf1n.HE2uJZHNZlB(\A%23Bf/R4DR=p[=C%]G=DDq87+SlH/Q/f-Kigm<mA&pP3`_UeeDV;AX&Z*%9,E;N"gjXB"P"(!>eac+'?/T>,E88=q\d[h_l7P9JXt%2n+7e+n0iGqP^l.g.:\uj.DZIb,pNmA*nb28>1Ib*p^Jt\U;dlb#$oLhip%IHIg'KjnOE7.EoOl[&"jO</89ZMXC52WaV^:ZZTD"%1`:3&r"b#X4^16O5JM5eDWY4IQ,Cd\:-I/]pZ$sXFII0L/BoJ`G99+ABh-l[;'P[Sr:ot*,5'&K!>[seeGQcLo-a^&B)+#YpqBF0%U`!geX!4`!a4)+Hl,Pi1X!"UHmCB6%hZ>>/D.$Q_[Y):rmICK)AN";!ga(nmO<u(Ib)o`YH2D.[+Ur#:[2M@=Z/DmY^[[Hc>6?(G%[Kq8Q\3,+@5MQ77oTj[_ErAG]@h5ECYNFk1-[4:PpKPo.S";3#h7S*c3`d?d@#o5rCL%*"^j'_ir'_3(e^?.:rZW7j/qWTh(>G?Z%^/q$Xe%3-K@eGdS7!2LurQ9F,&#N]Dg3;FZg9UD7dY#iqoi:\Ip70aK>,=D6p6s#8g#u\%G42d%NC2lDFjrt%SpZu.j7f`Cd?;pa%%>r]7$Y_5AgK1/:mG;%rX`HA]Hn(q`Z`:&=`G0\mo*%(pleGe9Fpl^K]Csde*:n7=$G!OIhEM("r53_O*hDUM5P#F.TQRE_J![ku%)qVgXq.N/<HTlh\#/rd]D\@84hqe6Z'(qs<e_U[^IHHMDH5'jrm[<`NS^kH$7"'GEIW!FfYM,TjL/1S!I7ENPa'Em2/G;p6_<HX)%rS,rgr([,55DN=LPRs2Ic?\0"USrH\o9FF/m4$d+]"1<bE;eMPc9Ajeo%iPq/%(Na^(jODksXXm#AGiko$o-ZTik&>1a=4QS%Et]%[!@RjcSk7@-\s:b_j8RCk1[UH%2aR1CqaX#pd-X_(qqSM]ps]21p[I[N&bhn?T:;1qQ`E'%Z6E=.1,Be?uk(I!>"Y#"N$^[;K$Sg%[,\aV'7ud5-#%t[k96f'Ds'+4l!HPJ8\7cm%D1KiOe+;"5$aruPE4:;O@IP^PdC^%F_.oeUn(9`Uh*au+)/:0FX3b+kZna5j-B5n%kiQ/=>+R/Lr';M92_R_m5%G`AUr1C!Eu?FBE]%Xib@jlYL>95c7N1]:oT>_"@nIo09!g!icp8#58J!uUooSlhO[=!!9I4i%MEDMW%UsL2tl]KdL,K8MnEi_3dW`]dWJZjXOUJJ`pgi%qEg==MPQ0dhD4KDiD9XNh<h5Qsl(3%K\[f!_]W'hHWm<*aG9E#uR5PS3.rne//%N(@)Cilh!b5iXr0n<0K$oF8qR_728eI3dpRE=(-ij/jHr]D%Zt*DJ08/*F.5c5H`Uq7npn[)85O$%Z<Gjq=s_TKdA6TKE1k^d]IU%6<8HtFNI:j!6lqhgHm*BB\^,q'q5KHQ#[\6bLCCIDFZ@A)&.XVd'L;?JtaXK%oil:&p,e9)rU$.Zs4P/_M@2@^JheF;lVId,s!]*%_=Y\A)?`K@(!mf9@d[K<Z^^1BjcPMD29(sh<bkn!Ze3A3U6j_0;/6Btq$Uc*>'IU@c[.&/$]Ki`O)9pho_-FE9J#f,=)KY+=S<r)%!O*r"B"-DeYe*R[C?5/<1!<]T?V(qV3GTN!>rX<\;-o=O!L].4VL5!pVRsg'==VkMnLi=kVt=:tOU.c1.ohYL^2l1r9>T$]?^<s1%ZjBj;?4'GqVGrl<lYFE;+PlI>05kCLFc1Dh(dV62e@*(j\o`]C]""ckp)9CJMIBDtTC4-"-'f^fN_jPqgQk>unsElcY"LT$D)L&;%Y*<O-a+/7g9^07S=(iFB$l+.bYmp`0dT7fo.:%E&7:_POabLI?P]XY)=m60JBtOQrHOPE>r,3p4BnHIbVoZ]Oqt*c<GJ1?:Y6h`q%Q9)t+4[s1^1RHs](V^5s'jPFY76bmk24`)m;GJWf&[WZQ@VbI&n*D[*b8Z$$V<;%40>tuS?_*e9^NBH4EN;5nDr.JPKrLt<Z'LWG%``K/h!I)"56X=J.oou.7eo3<(L2!"#W8PX'=fGC-ZXg?03PX&<Aq08@>P:AGq_hqn_=7\PFt%EC?n:@<QuM9i^@--V/nG4>2`lZ'%/tJYG],QO!c``_P>qV]Dq;W`!'bWP&(go^$Y@QEAMqoqg?#bWs^D(JC#ac[Zmls@rX#g@$Pa_;:MCCF:h@pVY>6:SIq3R+;)7W_?%W0I#MNoe!L4?r2Y3k[n%&.YhN*ZJ1&h.qpsbJDd''e8K>r!98A=6P]>^:Hh-N)t)0B6'QJbHqj*nboFs53rBY&U_bRlBE6/ZY9Q5%Z(uYJ.Hnm3M.n^PnPgOFSs!\eG%gt5*Du^"#LR(KfS^a^@q=Lh\MR#[rhURj0.+_4RSo#IZ%qBjM&+2Tajdc*\D@aI:/^*VYOIkP%:`h_"!lD/th(DjsHZeU="X*=P+`]e+-W0qPI$a`Mqmth2,TlH58T$7So\s'J'hm^F'V7FTl_?]>n).oI$4(0t82jrR@[uc6MogHd%W)<&c@tHos]4\@X2Cmdu@?1sG6"39C+P)EL).2!2Q%24b(;/IjLq7eCQYt=TY*U:das@$Pq80X#])MS-L*Ul'KSb:d6*Z92m&fWh%Mk%G0RKS.[RS@]cc*(u;DR[j\!U5U>/]I;0B8^%C-Xh0`[i5u@3m3O7?0EL&)`C>+?*YS(?#H8SLgIe":e*0GUZ>rPD^mLO8llpK%9r=/XFB.^#.uA2LRrG6Y3Cl?(+%SK@+2e')?^'4*#qK\uW[c8$8/[?QAI+J1-]j[pg'/V6kK*rJ\r,)i&'[S!12VBZ`.0DYS6f25%]n7$7WX>u/m+l*'0hrKf[S<<Q0+4`mgWp@$^+AuuPbuafoI0HPJ5O!:NTJGflBIeIPjm)d'/97M;iQ'<<Rbj!$3CU&OVc5O`q`X@%N&jue(Q]]]DN<dX1i!:BO'(Gs%7_:,ma2u!9cUu0=oo;#GBM3&d)l1#g!f@$n\,2]jU0sQ7T?WVLb*RfTaiO1Dl6cI5jQK@K6)"k%"nkr7d78\G:X=lBBpg4miI4ts>4K/!dG,WYXhDJ=e'!gQff4OPj/;1mC@`LZ"u-!E+44,X>X<tWki4h&!XKC,B?//D>>(_3+T(R)%24@S6!l6m'UU<n(p57dMFdLCZ'YA5f&GoRO1L#"@KO%Hd&[Z$3:tnL&HqU.`%M/W<h5X1TAiDo@fQ6`VU`2jo?]kZCWMO.%%/bQh%('*)ZaWfEi<O87Hrjs9%_E;l:L+W+o*>H$F^gg-Wm"D-WjS%jJHM.o)F7^4R"@^cQgg59`#tJ?CFBrq3eH?"kc`Eb$/bBC\$`,_.%5/t?=0^8HfZA$=fHn`Fk@DF-O[bD]%?tR8G?!F7`/-)oLF"RVM6gVe^<pY,3Pa80]HToHa=$R@6iDEYB=j+S3Jmu"RKO`.C)V[SU%_t;7Bk[U]faqhiGiEk1Q$<Xb1^)XL#$',!Rb8/7/P2&/GDo9rp"[KgdFi.&[.?RRJB.RGpYf!4miTZ4\)#uH=O=!(q!%P9)X'hlA%Pn[HTc-@TcQF[[UMb,of>!3%`!:s^uoN=]-n(pg;mZP#?@SSg)?7NkRf.]i<?*g>r:Y%BsIGQ);e(M:/+7FF'Hg12oBgT<p,bBLR%)TP<Z\%EFUW*crH+m*@>eJed1D46<*;Tqfu=`7k:3KoPg(#*X9Ja'Z]"b4<qo.Al+\3j9SM1CFX)5W#rKM/Vl64QP0)"=DA%=I6C%=e(Nh0q7q7V[4m6C,TGSf@?moZe/&P6YBXi[oG/)?k&ZH"W`V0O0>65Y+RSN(>PgBcFAI$=Y4lC%@qJBS]-&H)EQmc3`WTG_)6>S%'m(5gBkljj/*P@JNYBph)7Mu`:FE*71TmAqZZ*t7cl#p3$3&TF)EQu7AGlkAQ'Smr\-H?T&h*Xh=-rP7]o>[&f>d4D^=,K`']J^*%\[/_a\RS..q+NH7;e)H5jSEY>%>XpXZb>S0?"L@Ue')[7(sHJ6M5"881B?Q#H@3edh-E$RIXM-#nm\'OWl:La?.,p(glVdskgFXr%*6aH2=Ysbdf6"ZY==a+=lrQH[a&Wa&qg+_t5"heVS&9SC22d=b)k*Jd0($7'=mW$@$+XDP:p_mrArO]<2sk/qFd08>f^5?6+A-JW%#\1*A989<*_[m)GWb0%iInsIp/Qa--/UN^42N0+4f;O'RWO$n`0?.39LnN@oG_Y2.KJL,-VL+Sq$?^`.9,Mlnp5IR+2W9^r;eN]U%LS!liafqjH5]kY9eMOF9fWS9YLA!+\eq(N:NSTG>lM-;[?!quNh6<um_jK5#,q#he9@M>TbcOX,$s[MK$p<a<rZ6;ul:fH0iaUL\%pc[p;(<4Z=38^KkDeDe'4u4U%GQhL"`G%;)?MVsO9\BZ<d]+9YZ1f89b?bn3?OGJ5OFfq`P[_eRDiEH)kd4+V.Y$g#!+K3d=hlGA%\o-BQTO(Bq/bB%a$:hSrYnb214/@4o\M+W6=Ngnp>H(n\?r,r'&Tka.G'OK%=GEXi[?/e:4OZ>J+\Uo,S>#>8&cJ(e^Vjuum-c9V%rXtu`m<+7O4BGr-3K-(eMX_oeUo0cNo-<K1^@,/"OZ0nP@WBAK@BGSml*K"iD6Xg*M4Tl=JXhJGdBAASRXp+h1!h5YfsHIoO6P),%m5->r`as<'bDo>cV3?3?8'(gAKq0Y.fMrfegEfi_1+[(m.jJQNV9jZlbc&D(>Xi>WmW9+2E<]]H5J&-R]]E-2RF"B3[3MP)PEEri%X(TKA;S+fKOce5iG(^=rgLDuob-M;(<QFVse&]VO]0"6'U$\J7dARgSr#WF8R%14ZMU]Q/oCg;IkiDO_@<V%F2d)XQBG38Bal[b<%A2d_Hk/dk_mX=,-SE3cD'K(`8G0kKSJ=/Y)BAokg8a;tBC$hEj>%BF#B\0Ec2p&&cbGo;llb^s<1"FhY]kYAhF`mTKA^oM/=uEp!%ca^,Q[W.%e_Rha_T]/$2LK'D+Ci69p^jPQHD-I7[3K85n@7+\\q0^LeeAL8D0K[_B8(YX!o),cklf#3p6(b_0m\h/+VX*2alqfiB%4WMnl7n_dCH8s.sK'Mb74L?/)]c0RKr]=s[SAoV?+g;X3_jPaA^^9;bLj:/QoUWK5:*UP'=k8.lPX?8N<:s^Z0a!j#'<-;rYeG$i%Al%L=/r@JV^O:KT4]F`pG=(_NA$e&EoEm7)UC*Uel&Fbb+ZRNnfOH>aEO5?[ptZjjD3tl5mroOXhbX_=QL\DiRrKU363sF:J$^`>%:/V[(?X&P7kXAlTqN@VKa)o;)o\MU$S5eU0"+$S)$p1MR4:N.D0bQipd49fiKG]kKJ.NdtX;_R<Im%*7Bj/+&X<B:Z,A)*^%?1Lu%os@1J6B<UO"b5:k8fIr`6q-D4.4S6QIns1/$@n\M,5(p/";RoPZcFRF;L<&#?=PDG.T-;;U\#m104sLK,!1.H)*[FlO_XkMct#\K%]rqqQLquGWpYB?_T;[rqHFLgHl.e!*k42\B.@dO^4)$,`oZ).CkYVi\J5SA?Gr]^jgei>ie"q$\`Kc4E_Ps+meE-["9&VV5$7@K\%e'!f?N6d%Q1ntCWcVHGIHr=jDf^F[dC4E=+Z3RDGJho-0D#EWc'+&1T9_fh%,CGkBYC+F\IZ"TVC@m*B?tp"g@-[lqo%V=7O]Y9k%2ljN#Os>eLW.oR/1-cBFe2U0G(0s.H5\=j)2Mr5VRAXXTYg1imguihS\lG7)/bVLpE;Nm&B5a9YN2P@??@I0oi)@/e=um#7b<%MU%*U0mSp'FU-QcLO=Bb\28B?47-=KmEY'#e=ho;>?99OB5@^s^?A>=YmLm7"ML%%bZZ1oRWGa(jo_NLn$T[6O;@h0)cMX[;kTiN_+J%8E$8rA%c%sQa4J'<UA:mcid6X#oG^<>!f5AG(U$1cL`UQ_CgHJ]/->If0r:dePnm@.6N[;*kj:VknUgQNJcOEUA@F(&*L,Od]N-9%m.JJ+:Cl]b!I=.7:V')J*\3N0N,hrPn,j'::Vpgh)u"Kj<4btX;ROF5U2EPN\W]#e&3\.s\g3b?0]l,4m>/n^P!d-[(6%tBn(_ra%p0[o(,;/'r;:3;d-Zc+If;b``*-:>1nY=%3p0?j+Wj#ttWUW._.=+/18TJ"taD!h:jf"C(p<:Bj4nS+!C<36j:@3:d\8krKi?<5'%p@Y!?&38S:l(%W_Ej+oV0'tc:^bjG5Co()n9C;6?j35]iEnBpR[C3]94+M3MVK`&T\jQ'Cqc2*Z`;supmSq_Y>.&J+c\FNXRSG@\%W$*fa<mtd5dN)3\\ApA5mS<Y3X6ESo;:ej@W1$HheBTFpls3>`("A_ZaSSrcBs#hq[dli:FBZ(oWg/\[<7>RC=d76d4%2#t<j#_g%?;FQqBCMFl'3<Rre^>o@Nh2u6:<R=Gffs1.SQ;*,:GtDNRSIYt/G?d4;\R]'>4\Z&)sXA:\nt8*cP/R9RSMbL4CpD+?5,K2RVj&Y%I$WKcX6C+jfRD@m=qR(^jOJ?U!)RP*8ZV*_!*E!&9rGC&ZF'r:k\</\=upfuH@.T@<r&,'A`OQUFBZ(oCAW%!24YL;'W5N5UmfRs%-.`I'l*P3i%*mlp4oiedM]<'(<Tf:"GISJ:$cHj2\ndh\@BT+A['md,`Mq1ae*<*iGB(uTFb\b,3BHOifiGqb&s^shi\r2($Zdjq%>g!9X\lI)1S_ELp.90d@FLf*[8ZPL/GK5]"H?uo>db76#UgX\q`0urt74"9U,19S?T&2"lK#T]aK?P<D`Uj\PgS8@Tqj9J,F0<`t%jSL$?VlsNH9rnkp4m(%_P07)RSZ-7R)t-Q<%_=`B5dq[tZ"&\r9H8+d-DPgts)C97)+B11m`a01'o\0`'5QM!fa"UJ'aeO+So_"g%n+E3O<V9mF(7F69WT)Oc>ElqMP0Th<GudpDHSGMM8pa(9$gDgS=0S/YX29>b',8m^h"tkA<FMi@M8O.0)C/#K,b)lT\u@nO-_!,)%$gGb"HD8Daf?e4r)bP%^#F;Fd%ldBO]c3ts]%p3-;soBTRbS@[@q0RiDH?OU<'ImR?4&tpF<:a*Z0qq\0U&DjOq=-n,nN@>l#+1,%iS?T-&?suE[0A"_Ws`^>7hcW"1VC@Y[aO<1$4)1tepD[eqE@+H7[r*L:=q1);Z<n<'e)kIpM/VS5]=oDhE_U";]jGp,8/Va6f$VB%FZ29/mpmd_6<e`@MTr&qDBZn]ZHl<@*Ak.8o'skNX?0;3IS0,rX47L$IeB3lk?)RaUA3)4WR"/ko,o*>J/B(Xm('t@I4t=q+bSg!%B4Zrl0g+`S41W('qi&.>`,P$q]>MsshWKPR")f0MEHd;_a.h`b-fs_,+4DV!SYRl0mu4ll8#?#pn#a/H1C$YBIDXg#o3T,b3NV$a%gmNSj3S^ENP/8h[]7te,C;-p\GLkSI$YqJ(=PGq'CShM6"JL^q`tK0<^AhqJ\*s3a.h$(JCmNX.+on,H'\5T!i^P<U=DTo9rTD%[%>AK%-6L'jk4muD.Xs)1Cjf7O2bGQM<01Y35Li_JG+"X1+"&'C`FZEI'V6j\nbF#^f_T[`$`4Y:<mOq(K`Zh5L`Di;[9G(3i;oS0[%a-EmUdqfV[FJeQ9iW9gBdT=Y>3JP$feShmTacp:;nG?1F+iI:Jn$")b*Q*o?@u0hals&M=J,.ZD;M4*flgYYBFXt=PKLKKSCbWiX%B/CZs5_bpgPEUds0O+E5FtPBaSh53bEK>MhR64DJcau&<a7'C6WiB^,)HU'fW;tE?C#K`Kbh*!;AV,)1U=[Q+3Ym)4Q0GZ5Y9bfj%X$g1$KtMn3.-(J1\;di*&e0nMVX0n9>uI62em?VX[-HU$G$(:.AoQ,Q6aB"`P+j#CF#Bo^(#_Tqh=d(M8a9ht_3TQ;++M9="1h#P%VNlYX6>EdcF4eP`0f@B4ULW_>#m.*38rVeo*hLGYW"6HI^O4Y9FDCj$S@YP2gu^,c=bI#.L'X<\RM0>ZWQO^0Vs>d%qIW_&2l@BN%=EX#gZIRAlH<FamLO)Ko/YqC:Dt3^[(L7)@V>Ia-%aoSjEHn/qklX7E=QFNKRR.8+-_Uf%\Ma9<mB1Qc$%&dCh![+!&AtXTDC:gn%>#`E('EsiVbdPfG1<^DE[B,qH[Rh!Y\t&%"Zcf2urF8=*q5pT#=.i8u8G#Q<Ia*$B=$RUEC9O`nHA,'iO.Bs"eQYmpA!JeSCEetl%E2^7=R@$%;P?Hb"qe`Gj-id11H1LI)Zs>aMKmg2&ph?^:c9q@"'_g:d\Z8@qf$octdmQ.09+0jFNCj6Eo>H!uMnqTZ/FLjXhH6Vc%nh7HfY<-(M]M.]b/p$=CZXe7TdNAdQSf;m:VoG"[m%:3pl*GJ`<?<j$pZ(jTT;<2`[h6ipero]tca>qjZ`N"F=usViBOM@Cfm9oo%;%!N(^IuaDIS@.`Ue`Yo<O9BFRdlciC7%2u3E;#S+rtJT)9h=4RDZ'3Ara&n&F3*k@96V]4%(fu@qF#N+VYk$b.F:WT_:lt,Oo3q%^c:a`8/>S$4u:0"+k`di3=#-AmTj>1bB[#sA&U';f=s;J=l&6\R./,;/oBuS3hd<bWUD];3E=D9dOtbdCAnoi(67].hoV8Eafi#I%7fa!bka/Tdec=@J_ghESfZs):bR]k#-,i3KUf^_8fN,QP[Wa.Cb99l9AnqCs41YqN&2OoEMGMdL"0o3!fMi;&SGg@+!7g\=<s)"[%:d(HYd("g?CL-;B.R4`LkXLroqdB)/ka3%V0Z=O(!`VjM5n2aQNKl+VN]BstLli4H!n?\%10:2RYJgCm)O8HlgA=^\]hW*"peX09%Bj(I7L[o.j'i'6,hsM02:2q[(Nfb?[Tp+o<HtXgG^D$)H30[2h$[;G7q$bS>51uWWB$[YCi_Vg-<WRBD(4Om"<5!.K1g&p?^Jd66%$D-R-P"Mm@4WE[rF8_=j;\q>4YhN4M>X.8MO@G5[60J*D\5IILhkAAN;P38fS/'J3`:lCG:M5E8;uQ?[%CPZ8I\o+#k]?]]GD6Zs%X/!u51Ju8:Jogm0-'qq!=0aJLT'L#O[-dH8%m/Chpf,"\:&r[$f?\\,g,i:.5M&\PRZ*kRI_`LC`]MIfScu6lNnNtJh;TZrlT=B:%5@['9<d@GZY+P6`IX=809(uRTj%rfi(\HSIqJ#>cP#(a4qE2J*e@_88f?Y9@Rf*nilY!l'6L<o"l<HR6_HDkUe:Z'>dp>i_:\@YW%c>`9`IbWW8aA`&UI7aa2V[2J^)(RM$b'"eOY+Oi;NT<Fa.-^MJrJW[?.k=L.5M&\.^U83ahpukO%Qr@hR"41QCr`.5B..P4aN:>>%f?\\aG`VIkNd-G:niXYHlQ3E/p"R6M6i1+Qj!A15h7!3OlY#S+j-o`&ch0(XeaG=pBtO(O=R;qGf?\]T=hTaOcu]/E:\?g/4MEs:%Bc*D]GP&dpUf74eEZX,`=PC^B)n+)cgZKtKQ%h<e>edCM$cT)o;T7"FkP@d:V0T)u+]W7R]/dGb[cb2M7W-NK08T?uEj":Kl<\\,%lY!Bgp"4?a,Ub"c7R-6E^]!k2Bq4L5GVQjQWh89uA9([an!YW!;uI,rEjjT1IQDdKE!*PMfR`5^)/jWNase?UY+K$G>^.((bh"s'%S`Za=k]?^rM^o<$f2&*M[SHKWB(mEnY+IF==A1&eGFe&4lki>FM+=0'B3Yuu>NFhioeSe^:W"89kZg=s-OBT'V`<;SX:KC-\UM\h%<1iGg=C&PZ\UMQ<@7M'1l#Zf^NJ$.<_50d(Q?fE_%D%Mc_Y0!#eT7QR(Pui+gO19RMcMQT`S#Lr]s;HOV8pI08*0$\V*aO>F#)j2%'XMm(#V$K!9;(9TZ<P"p#ZcW3S8YQibnk?Sq*VR.L"N?DEu`HfD!j%P&FeA:Q_ETS81kPJnD?0Ujeh4>YjmB.o60YMB"M3XCcUW4%E7XiD-81h6k=,8idB#@\n!24.O#Cdgh:QgO)eZ'UpYSuZR7Q,J=+6d1_,YX-r-k$Wg?$-+k,DR.3P4+!a7[o<r7'm=cdc^jH-NKP%Hdh6;\BorsCrn:3G3\)ab4SpW4F%R24(nEa@U=\mDdO2=/sC,(g`PW>)kF1Y4BI/SQ=?ddRUTIH$roJuhG`P4rAVbk1-TUISTaK4%msQ8fga6!(VLM71lhLDtS.ZbjH_X2/YqF(XDpP+Velb_$,g6Xr02;'(i[^4n1"Wu%JU@SG5"Et^s*`BDegqYUI^^t\T?Lj_d<jX>%IFY)M<]ngTQiFpNBn'i%`33cuH_X`XFaQ&bY/?+>];S4L%L(>R?Ll'MQTp!P4:H_Zh"Y^@j9'?V/DtmYVPVQejf(M&c^0'WaK7dQ%6HHXuje9fILSR9ak-+j*=jl9WF8kn_)d'_1Sj^(1aHu*_(Ar?"RiSn@pUNogle[h]>\BGB`T+2lEI2"X,GjuP:C2q:>#e.\T:PJ8%do5nm2iP(`Et^*Q-;t\,@F>MdiT)O^KB[<+$G9&\FLO$t;M!].&)-dd\0Jiqmfj!fH8uFGg1Pj;<n-O"%MT=KJOnFI^&j1'Qf)Z-%K>+(X2Eh%k+0l04"$gD1kYp[hQ24t$Y.#l<qTOu+=#Cp%qHYC/lD58'dKMRTTj[=^(Z<SIi_hitPV2dR$fgQ8FFbVgpb$Hu`=)Dm%1t#dBG1Mk+o:X)=4)SC(oFI`j4p"K)Q)*>V!Pp$LmO;8B1_3W]2&^q?1$nn;?%W%5_+jd,+FHf%K9*5i(P#YYn9gT.5Ai<6(*K+P%$9^:232k?S<rq[Godu!:'IqI<4Ft-,1^'ti]]^j4MC'XT[/;*`b&n;okZQA@ng7V6fdl@PJn.HG19j/7&a"9/.VO820q\]r@Qso<%76h7ccM<^&IDnY(mI5NVp+^YuBl^mFD&0b!^R[;E2db/2>kRpg94fj2[2D`YTg*nc$)<EDCZl'gA+$4PY;\bkp;K<\,(,ieC%M^N%EcL^EM1hEP\U%Q?'0V@@&.o>FqjN3M?i?omL$m5Ok`4SC2ie%,0@u-#D6GeDS$/mO&#>S3.I8KH]i<olqU/JP8P9HY-W-@[]s8;d%7a_?AC'I_i"%BPmAg61JplrA7#5D1&l'gV/f;NJb):^1L!ls3DE<$+MJIAZ>>l\_eMfaSAD"R?-P_Rd#=hk?X^@Ui/5T9(&Y\uQ8%FJ?Z8dCGb)CWqbq9^f&#7Z_$eode9NcnMDo)gX-?^jgUgYV<;@=:2+m;*4TNR=YJ9k?VIdklkB!H6(lDW%D7H%?jo3b];5YFnl,]%l3?l8>sMT=#rcs$o<Yb,'D-an=@2>L@o&B,f/,Dh*pP4.W8M^E"XiIC`F?4lTM?I_9<d2p`khS5lVN"S"k>F>6QWl6$Zg3G,=33g%l`s%9h4`g7\6%Y;SZ9RU.N>I"*g<;@kDrj4Ft/d5$HK`4OU%dX-)21D)=>"[\I&iE%Y1DGl@Z@/[uc0po$tPN$^gBKA#9mMS6VjW%QhR<XrFIK:KKP\8B$=at?u#KWmE3"Y_*g*]+oBW7'?\?C=.1a%iS4IA(s9B0V;T/WMpYo++3hUq#Xfke"CHtUKd\D6c4>i#T9Ldu%_#8O<7ZE#(=S'3>#tu7SL8l"u+8_*:BGcr.hB"J"%JoJ,VRlrmh&*K;IdB`iJ0c4K!3mS_!<MFm-o\[iUL%a(*0uq1DQ-L\<X`%,%WCQa%s"s-6IHH0I=K6qKc(04-+ell!n:BACK^uTZ\I]m%YDSq)9&5dr0gIJF&-Ru]WD=^R4b'6A8sp;l:%klaN%:J$F.TD\`A\kO%R^USplV;NE/E,mJFSWf`kk+cQO-,D+-N,i1&KgVTH]h):>(,8.5\f0[%ljB*":SmP">E>Tf4Zsu7cMAqTnO5^SYQ_u!gCo>*dJ`U%.if&;p=lG"KRTcMFZ'`lV>D$cK(2b^<:$f+TSEE0j[iOBK&m&t"e>6jo;'\gQ[j7.5W6p4C(Zn>'+\C&*$C=aKi;Bp_0F>m]Zu7P%pSjUliHhJbIBWcL\A8oa++RJMDlThHZV/DCh8+sL1&5GtC6JqZ]t"-,]RKKiE>IQ3o@1=,'VVEfJP#\b"*8lDI5bGZF9@XE3Npft%ZQ56W409e0`SRn6bd?,j-iui#^YKqeb3O#`ZNi-0*eQLaPm&)ilON<WUoHk^$6LdBB[u',oNF@(FMJH9,a@<n\"V!Kag2mKknk%Y%IW6R]^83"nc[n\F^;47TARnB(VN-*e/*,!kD3&Jbpdt#"PSt&q-(9%?+M<o$$A><rOhllA(d:u6B;-'&fbFC.G*^F<KlHp8kpEqI%q-tPeAF)&WMEQk#<$5LR)EA,B`(=K,d$cWqnW85sHGB$)0!F,`^b->7ciAEHF*Z-9FT1CDO+7,d]-66c0dZZK%R,$eZ>5!h3rGcq%HMemK0'37*rb(dXQ='i@"tt)Jcan*e"8[1RTA;[#YsR%rC:RR,f\W$AKAKP:XFB#fn15D50,pCNDQnij[nDWbbVcogZ^MNi6@WV7%HSY4_V^j!Lj]tk8^or.\c[ORr[YH:4(j@j';K$0)e)\nBZ'Yec^*sZQSKu)7XY(2Op#IM36%V$Je/(]<%*Bj"fNj3_iMT3L^J@,u%<'dHW"H`iT$\AML_XEZ[FjTqnJ-:Cd"gm86YgAX$-3D?K@AKT!I4C>/h?:7]!6U5@#ndgO11S)OQ@TYq!giAga[C+A0-9"npqYu:%W+\u[^4`CBWE@7RKM)Kc"9A*n1u8%]:]g-"aTItJZP"ED:j;q'a;(\k_a'8"L0n#`;*N[W0ET;e!Uki;Nb,5`0`^ja2Id;)QO2n7%P&7DW@QtXHnJ]F5eH'*E,J9D?"H)Gq;"R$__J`mE6eM^B'Bs$5U6hi05odjCa9e(3=R:fo#aum4//_"PeKAN;7.a_"0E/%X/L]<V%gi>LO#eGcUq0>k"O!u,+)HFS3f!3j:626K$o73IkZ,7hN@%'A,*np`^*BOZrlWEM/%>3N<%uA9U]a4"k[S$>kY2I-Ei6maL!W]@R%3jM149*s=aIihW*R6Hq9BYP<QCft;Dfq?SL2b7qfe<Xp5C!%u6Wqq5YIamjBMk9p9="HX/Q,5MP-s\\Q0^6ud+CnN\"J6S9O1Zi>%>RO9kY(\@#Ui:;T=-,Nm^FQJFdk2L#L#`MCh?"gS/es-Eer?1u*/fXCIU60B-3biBAH[dVq-alo$g$EBG]NSJkm2'"^#*IC%H5<H%L!+]L;fOK`;C!B=A\77E?4E%r>*eFNCT&GP^WJc)h4_e+eV-DfZ[nUaEYLnFj*_]7'/W<B"#t'*-P,\?\PHkAl0dl;.&77i%sXFs%)V)m@HRl#Q@B/+B(Ejcd=rLt<nLh5^lGhJ;UQUp$o:1O$6X,ti/JifAF54J>jTDjTTP)E?h,#bLs+5J:nXER&$-<,(U6hQHTiM9X%5[qQMYR]SrcI2@:r@?*BL%Fq<nY\$.QnW;R$DeU9lZr%0o5R?@a%[$jfTKW#113#gfcoh+A><Nbm[9`W0X")]$q5bC0jLg\#OMB)%%D$#lJZuTC"5ur,N?6k)Xhp7U"u&g\)=d)%RX%OGoQpp_gZA,,QX[LT>9\%/SZYD7h&ADu1!4.bL_9t>obRo`%)'@&h?YK<$R-N6%Df68B1a5;<&ZZ^"9N^Yll3h_eakcZ3R)M8K";Sc*NO+WrbbEU8!Kore0:2c)>_FQ<'t\@B;sCe&02pad`2C,B>U]gd@)82beK!?d%kn:M7EU<u/\b75%'c%R)SkWgTGIS@SFU7l4<2_.5$5C@1\@VhqgAt0//RWLN<Ee1'Pr<p[V6jgBr9OiXg\`Y=h"M+G?`$W_Bp35Z%,sI=9VN@^6;UF0iQb\:l+QPXaTtaL%4%Rj\`AXk,_+M.X"c:rfl,'1)4s<Kr.aQJE)g;``dhQ-e\:s76O!k7&^B=5C!,82m@1IT[%""cn"6.JItPJqDj:HHpgs"lB"6KOu!Q-I2L8[<MaohAALFpSf8$#!(qOR+JcWUud*WRmpgG6:RPJ][E5>%#d'/7T-(;NN/LfbUCt%$BfEGJO5UjL4uB*Bfb_dIJ-Xr6J=[p`a+o)VM-Y*9"/#?Br)FR&:<U^%"&tEWu"3lfY0k]&a\-7TZPgD)TpsLCsRVHP:W0FT$c@$%T+C$1Xn]=fX#T3`CG=Oo+.7>QlEknHOU,9VL?lq?1K@+O,2n.!?E*8Y6X]EWijFR1M[ru1MIbTW95S"h!P"<T+Kf<c%8"N*ML5as%lH1o?m>%IT*r#slHO'MNY\7R?67oj`')NK0RgJ1u0CBui1(Y<Bc@3.J+iIOMneF9j\V+6ZaDL3r)21s^_4=;'](hR_Ln87#"aq`q%ga-5$L`elp99uHr'kt&*8`X%rY'3jXQsK4l@q"K:.scVo1!nK$LU^8c"gO7V@OTYM\:Q3LM0^]=D1S-hlaDUFQ<B,DC:hjQN"p$X%lXO$bg0DIJYZJJ9Hh<`&Q-uI1[(Ln%V+^7R)LOeJ$s^IoKJ$16YdR_;8YsQ2=UB@/Y\1bplr?=6W9CZQgQEnjMnhTL:*WIK]<3Q!%$PKVn3C&\a]]b.a.7e,ZlJ[>JZD2ZBX'1`]#njS4D$^j>X+M7h;96U&$0ffR;*(BnM4.d=PkGh;\<`p889.tG,t\M1RSjj3mT"g<%l$1a-*I^W<g=b.;hp6Lc,7F\QYus-pCtCdB]Bg>1T'Y(9X0Tmj>9JGpG$j':cUo'_B=mRN%=?ZXH[;6D*PAKe7$nHE\jJQX"S82p%4)qoO:3&0@\J.]<%@_bXo*R"I0@Q;[6sN>:PXgi<&/,8j["L2,!j]u'4rd!?[ZBI>n*0D\,p!G^1/M.9i+4>Pl4!%tPNuS+ghjZt%QVs!CX^pdEoRX\H$c8tRXm^V)CC2/2UKB(&k9VRB@`]Y8#7"DhSJ9!g[.4DTTl@au=.01l722eI,d,CerGr%X$4gfN#Q;a2P2cG#%'&k.EB?C>ddP0i*Bg^Y`:(o'oAFsE`%o?hgeX1_hD'p48_dGN<2C)!NY*A"(N%88)JP#[6!k7d@WDS!Pm7Y0EpUL9fIj5P*Q6q$,%L9`tAE[^\;Wb^7nenLpOH9T*(4Ins17,Lm<Sk^M)E*eLa8Pbe&HV"m<(K-ifr:U>m'1`dq`/WjB1t"eeQC@Ad)JQMT5PErUCQIIW%(;9k+_^c-t6IMX##=*g$QsVQ=jDF%qfWW)&nG`-RF7!=H<FnX1<Qc-pT=*!KXM++h6621O<+SO"pXB)^5G(`dc>5OdHEcsq^W((^%)<M`:Vg:8WD^*S4+/[K:#:N81CEh1'/mA#E9.&*OBHlQ#r3$LWXWN&<,FS3m.XgF)02+TG,3cFQ5I3%Lq=t[Q]g8!^d\&hB]0/@S%lIS\`-)KLQrmq\\HKk9;BkM>>dD^Yae'bZ'lM8`==7Xd^G=<U-^5kK0mdSb^mg`DpO1h9ko%5I:W"6W!Z_uWWX&pmoFoO0PbPG1$%5PtCE9Ag'$2l9eLbBW-DL[I?SD0Y;XF\0'Vs3Gj[J))4D\%AI/qd8,)rV4n"+5dH8p&+%lj8W2lV!7@JG*hj+4ru:]dO/,RO37tS%ak4@Sr?7RhQZ"_hi%jZrlW=(148g5rmQ0-OnSA)slPI$Q^?ibn)^!lW5/,X.11*5-l8/J!L&Agi/:kjj028I:U:Y>Mm`%c;m^C@,%oiZ^[<rVs;gH$iLJ+M@bnlER+e.&8NIB^?eIeEU,Vp!]LrTL*$&)Z2L]^a75:ON,j4+DSV_3`-5If,1(MHoT>rLt%9B7>0R#s]Q/%9S')`J,RE_B>4tLr;P5JX]&-]5JM4,q6K#R_0]8C"@u=Rn,6l@rFO'8jG!T$/#e]Ymu`ZGaj"1)as`ilCoq0aA!^PL1[g_b?)O0\%qH9K3Y<@<q`ueir^O1<So^8VUB<Sou1ZINJ`K._1j'SBN%p/)U4tU8fOf!VQFHTJ0SrnO$@SD6PHS.EkT4^R&)NS0Q3\@u:_Kk9H%R1)m:j.hs]Qc/RqiS!Xarn8RNrS\(]Z-<#lD@&IoSf@^pg+D.Y7XFT)rc-Ai\I/*'je".go'@a-rq,LC(WSbTn^KX=^\)I?*VIaW%3A4`g!,iTQXkS^+HZu&Gs2flb/%8$L]:t@0iaLE9,W57qSEf8rSEbV$ab%qeq6L6+C!<KE3BH:iSph;R10qgKp+!:r;AW65eFt0e%gkFr/Y8>f3j!Eqi5/63#0m+s!W7RI/HLdj-$d+s-h6,i5%0c4ncc>\6S)8V_r\MIBcej5H*n/)R4kc_bBpIu]jE$g7S/\rF=M<Ks%5JK,"I/<'kiU.NBh:0Q&Du7Emr.Lm>?E_*9pT])@YO=TE^>0o%n8eBAo9D-Tq43TXqW,J4R<\;1a"H7oH2m+!ofrK<mAc?Vmo=$_%R8`<[*rI`3q?;BhoBPdEpplFk./V/>r`BA?(VcD1MH<?Gfmhi!.p'JU^VOJ,%9QEWs7BG5<P2HtCP+!O\4`in[Gc?PI"-4IqSi#g%GbJo$H-&T\:]C99&*YWIoJ8CGKn`*H<6qq*>;T-jW-:]pHiH)`28,6mYLO`^Y:+&N?Ff[,9T)^'gU116roQ/CIrn1!]8>oQ\.Fj1%M!'N)pLKU4*CjQ9meN2IiDBjWoV^#-;1Is#c^tFQ3XasA.hCdYA)5\oo!LCtH;3S=qs'S5].?+\?(DpQ4QoC?I[eoRpo9B^FM%R,%GJCbnED!ps5OBK`[@'8>QX#<H=XE\>U*ff[:sC)sP(00#pYc"=l8)N;FU^:5PS*c<*hUPm&,^#5.qtn.]u+riJ)U>()c`Sn8c7cA%g/C3FO(b0bV!Q]3l(c`m8]H3M*7`SBro)[[:GufW:9S2W5Jd<]J*cUqT7-[c;`ab:NUkTok`[Z78U0epBbkUBdEW'ij[7_rSQhP^%SkJZD]"<`/.fAtbA&<KW"XuQ@5Gp^Oh0#:gc509!?bIu].DI(?[8[+6RA/kQmUrH#4EOe2GQ$(ko\jl[4YqQZr-'7\rO"_:HMO];%`F.O"qV&]5(plCaY5>a/S%&*p?G#[kn"iPRje>cOiCnW0o5Z5/rd'&eJ()0S#lNX6:AL$S$D#/^I:Vr#D3`u8ru&i!%db(7>Z&80%h=@,qmN6q.Vs-+r38[,N';mq9&!)eLo[55Rn'9h17mI"38Z<GSImX-CHR,(5W\8C=e"(\I_>V&/niuU,1VGGtmJ?2#2EWq4nlf5A%&kDW)fWL#02UEZK0r%_^:<LiMcUHso5-H?S.9A_:nG@2$f>l%uru(PbfoI:rUOgL/6&adk21'a^YA8CU>CW3ba1b3=aABE,jn,-o%/3\QFh_^Ja=Ii@<-uZpu)cZgd?dY3H>Ub_%dE=*5]b*"DdU2+!r))@!ET^l>kAP\;ke^P;,[Yrcn!1C$hbN-KQ[.[2s24XiIrER^%r8*n3MMdlXb2;XFbre/(lfQm8X,hXf?cquW4'2?V4Ki&RJ,"?\GL,Jg/"Ze*U4;^lB0(B,Lh'9Z7D`hgrW2>C:VWlYI=nplqtcbQ%ff.&80Ksu2ICpi!l`[0pr2ePN>Pd.T)`Ps`Eh7_O:YQh:=]+NMJ)d(F45-mBIs9.ePl.c^,;k['dtuIar<Y"g4F;)EqQ\eYJ,\!o%h,dpor"`j:]s-VcVX[1SeQ36P*Nm-Or0%YkGbeDj2rRo1ijW1_g%i\?+9(hb5CL%iIJ^.=*rb<4&&3?pIpMPeO7>=0l)0T6.5)b<%i1n\Sf@prK4Lr2V#KqHQb5628\>+s,n(k@%s.3nRp*]eRgj?`JguZ4[Bti%\NW,h)$U"1%4akT+LKRF1'(C1Xn/qKGP<S@2:HcH2%BDC[0Ikf6is)@_9%i72$f>#PnC%S=.ZTlnh_;pR3I'ifB3X9p&gG6hKnE"/*#lO\Q>E>&+/L**cqau99=5JAuhK,<THWQhgI*-^a%4a-P\%tD:\/+=JBX8\f^_qc8]]TsnQcef[UXJX[QYJ>PC?T)uU(*]BcH2QKhq5#^W\A6u*D=98U=\ona:YcggXup$nl;NbA_[raC%d2.:+]<$)R7\9<f.U<#Mf$1f[5P\S4)aAiC/GCOjXfliMq9:eICU(7*k)&fKq*V'#HnRU'/\S\A]sjlOqs/t!dn=Y_VR;TR;82ol%:L./5I6-,KIQ5Sb2rFPtilgfjnGP:QJ+N'\oh/(c\p=1L^45>#0>;f4q_,^3qof$.a1L5WrmSP6^]!]hn["^ohn&F-9A=jgbKms#%ileZUY!6(R2qIe^(J?pJDtu69OLnle0DtL^hn==$e%8t0+$A(qguF=%oYl8W1UP&Eo((>_52<"#pdY8IPHR`JYPn+g>F2P.qS'<X%h5`n$]D$XY89,<cLWd@AT=j^9oA?\=NSPD9;q#+!4E]trgXlK!g<7gTZN'FDp>V;)SY#lL_s-"?^AkAI]=T.Ks2!ISSTq,QZnHE`%cJZF;`OU-fe+8aIF5M*<h2e.kSU^,,b?&S/qN)cUbPFG!>eY3)HsMd/d>onerT<+=b;[.`j1d3Rqu!heE\uZ"c1b^sHtH"TeAog(%Tk8]Kn@ekE0AcR(XUiQi[%;^Gj&FuT=R*,W5*a7bU;&udB9bZ5-F<!B32`qVh2VWn3Mf;lE[&1_MI3M31B[fmRO7fboM.OGLM%k>%rWt`:2-W&(5'>`01lCaF9!a'nbH+8SlRt*Ulu?j04?0H`!oFSOnA>"GP,_j`6`1gdR`s6-5K[?j),sgPqkl[H76h9DDK<E-NRqOK%iD0RAb>\"3H2[Z*2C^?Tof"sLhg>0k0D)I:B3CWUhk!G_I/%g6hC\J"\rm]f:B-!tO[#AQ^#:V/])'sJ5;1@_iRs.VG8oGTcqBih%c0F[Lq2NL@\*"!7hE968h"45Shs"fT^2rW141F*moSHB3r-<_PDn"W<rU"rG2@\"3nZe-c,j,uaIK$sIS[V+R:qjZ9SR;+!p8M#Z%dlkP(bQ^oWin^[2:S0iCDT[jg;.ZR&Bu?)$8]X_SntkuVEbRc8H;=(.ps[!lF400,?EW"J5*r*iVJ]b_J,8fr41EAhr:O"$!q.q-%f,ifJl0HG`d>)eNb[IB9hhfS>qOd`q:t(A6(eli0RZZZV7C27%RQ"U*>k?t:lW9^-q]O-G>c3uPi[)?OO/Ri'fC'ce)?8:Fb!r$&%rJ'!EBaWXKHfZh<CqonkQe+hGY'!tFg1t7ojFcplCFt>!5BHWrjm$W9aj2?1Mf\KZpO><epXae6rUF[fH'Zr3*PM/.4Y($GT.Br*%Rboa4d,V+u.VG,(=.d'Hc$&oJicD<<e"<orpD:lHX,="-c(D]?oRT)2dVIl@XV?t:7sHo+Ppan6([bPS=DgH3Gj,narVC.OijX.%%r:Vb7hql?DgUh]ZHPb"Hn)F01>s,m8Ms%Qnnbi)5T&8DDo@pm%IX;l,?6_$T5NT(&jR0GT%`>LK'o):<9D'<[?i)>^IX`bnLZ-ka%$A73ADnj3ZCO_$]jlGPc%);L;)!ng,p`5)rq^W)iqKEqi^VXsSOe_A!r7YLdd(<-AG8PerY:ucQhgC4<?[[W:3+!b8]aCf?Qi;X'%<EQ@q?X*=:X]Jr=.b0mcd!F5"?`hIrliG_=IeZ-'?$bMY,C1$fj6+/TJo;c;HK5Z(hYQf`TDk],bTB(Hjk&C;HiE:0I/3`;r[e(V%-i^+E]C'>1Yal6p/:X'&4oalsQ*fp]J+`/5)Ng)!hZ!Mp]AJ#8j#>kDqs!kTF8!+1n%X2Jc:`B-*^@j&IOs5;EHXeEVYaK(Q@HKG%GHF&p4oG(QGBR3iHiLi6rD`d"4*sp*Hf7k(G!u?"IkD1C0?YI:En6eY^748ks$#b\ZWGKPpo!QH$`1U`Bpecr^J)i(]^;VFR('DK%Qc?a(/]2V;9`&NCf)G%6dTa$M+6:2?jhI-._LJ1PB<TI/X26ce`dO?%Q=2f`HT-l"Y\p@U=U2ct;r>p%8.=5uJ*b4^V-d$i.'aWo%h"+0G*M8lQ2nDrFc/Z0;4hLO@O5GHYmFPuPSpg>+kAl"-r9hU$Fk^kao'&\X+<:@YO8CLpLJtYko@_iWVeK<ig7/[67ItPgLOFQc%F#8opBj[2T0eB61gWu124:Tc6$4]dgS<c`A:eT:OoWJe.4cH"[;-2Fc>gJ^9cBF:NHg,#$Mn6'hF^=]_;>ZQI4?3r<Gj;au?dtNk%s,/AYFQg/^H_>0N'*e>Jm.u-:d]Ud]:;%(B:<qKINi-aJo_cjGOknRXAsae@]$$+ndqR\$l0KLYVJ\WCIBT"H`D3lDZCI4`7Rl$F%4mdU*B!$L2LtcX7"SkQJ\?3?mI[\i15"kc1O!Ba9Uj_([:UH8N?eK%Y,fmTa!,W?m>NDk8D&nt%aW@NdI,#M\.PB=_)-5Uo4%Vce%^Q4q%S9K&@FjeCJXM^2s9L3X=^h+HD,*<A=?Sg+>qc;^9Bh'NkBOfbq@H^`7q2"cf=EuF1,YLW#DVFHE%?p$:Vh6$dh5nL9f<E!;%n(NGV_qb!'4.[6Lr&<T)9tQpOIF0T'Mj?o9^iW>aF(mkNEqSetpE'**1bNo7n^tdeR\oL0bI'H:(EI0<"\`sUa0$Y'P0:6)HS<H\%lK$jqo]_a4\g_(Rf#]WHfjoh3CYVP%eM?JoCR!VdXu]VX+`/M;AcECOO&D\"IdJm^*KdHN\Z4JqnlBd6=.(e#/Gl"CWFHPq9o=kI%m+3gFa(6-orjqhhnm8ER9UI$A3+T-knl+77B@bca/EIX6kdVX;-0[![esc=bSZfRC-B#BK7[,^"#+Y+JjMD3o545B\)p'7@j`6<\%N;[eL)4P469RSqfBcAG2ONlm9^i:ha;tB("[a&nkHRVcH::j6L'qfW'1r[U'UuGh,,E/Qc*6'sI^I;B#E^oaKm#=;>_e&.3R8Lq#%-C'N1K6034Dr5C!QCJG!.oOhHT-c)1'eJYGL(L0JTVtf&RtdSL=AZqjY/oAVeEFY"1<iA;0ik(Z9egI.FL%U]B=k\WUj.,aA=/tN%Baj1PZ(Qm^?'2UKU86[XS]@C:=AZqjY/o?`;<QJs%B(cq()4$I/+Rj?]HrPo=UBt?"\!7kMS.c-9cB?idu?hZEn)i-9JEnMBtB9Z%s8,suq&#;F]o@BUS@`KU>TtLDD<Zhmh:=/f14JAA;2jVD980u2QM1.6i&K5g4n_h.=T3;.7_$L+Pg49jU?cNV4h)$2k`2hmGi@p!%?'g@=WZLo!ZS]-a77rpmap:iM3@2R$hZk[DHuX*BH@4`s5%tk#jBG,7NTo@,g\\6/=(%K*iP&FR?6&1*ZhVh\jX)#V7^pu8duCn!%9l%<]d_U`(guhY/p8+B,Cqn%rR&<)V2C4<_=Ju1(@H+aS*Cs(qV1BHj-:;m5Qs@L:gq^T_fKVM&rRp#6QXcYFYB56l\thL@#s$80%\8UD>H_)4^Dg-3:/LRt?iI>-.GB'W<drM:S`"Yc^1\UW:3d)!,#K]*l+W@[UM"eeaJ<p!H2XA?5%FZ$b__Bq$Q,@ms,e#FA1C2Fr%YfGC8(q\8D0btL8EqCe;'FRkhqM(e:>IpQ[_f9)#Jj_cZ%!&_GT,Pteqm_`X6U?bkFMY3C_9$jh51f0:@)\nAP%rr:N3$\h<5aMf%j=OY7C>l2m8r<gA7;N5uhU3.H(+p8-(5JV.2M<8mM6SY?E9kD=)\a$l+V]4FUI)PoflLs)R?A@4,^K+T9A:emHTsoAfuI'!S0d9<%*%+5LCtJoR5A@a+V/o>^ee)!?A]ND>]H<C3nY4_&;DbjG0Ar(oIh.&DWF[Pglai(rd%YlujSd4`*JO)!Oa1(eqs<$Yk_d/*SPPl!%PX?!(U_1uiq?Y6UGu=%>*mH%,Fcghs<A\!V],)US2>;KYfCf,>,$qW[^J8q$iY!a%+BbNlG3iu1mNl]+(qW>HBBZo-Qm/j`UpL=N%j&qhe<;4g]QS-d(bB=Y_IGX.kPr*mS\E[+I1mVk[%!e35bcm"X]hS/4W3.g,P9!"L':+\f*&ka_0s&Q[(NE@)X2VE7MV'fsHD$;"%@Z.g4X#7)rW73SGH.Vn(YljZ_2X+sOg9%3@J\2p4.Ua+uLQpCEmj;7:/ro^`e/89ZCCmK%X2(mP^p/:b11^YtH5KPS[Y3k)js+*-%C!NWi57;u0LN6XSa[Jp>Fm2:hjVV%QAt-hgUn\p\)'S<[f_`1@SH!S7dmfP4,XkVkQqubV%tbt0!e'?-$h05N[(,5nQZblil)`'J%ndiW#(7R$R_ZoHIfIZ:$l_]n?$M=BCjpss*%]F:HgiO-?fm$R<$QJAgr0R\><1/2IaJqpGA&Da-j]"#O($/d]X0"gq5aA'^8;adN%.nV%lp!_-B#":ss#Y!Uu'd\'blb\5WM0clRjCl/XPO3C<Y1kJBJqmDr9u(R_+tFQG'sSnrGtT5=h5'?l,\T`q_e(OAgUWb*Mbd!-%1FVNs6O<7KXuN5B@QoPW77D"u7GdU^m78FmA=VooY;P2C!]9)[/X=\2f^AoV2,_5(]CkP"M06ou8bQajZdgrhLpThJ5=!@t?F2d(%a4%)Z:]>\AP!h>G#:4[dLcEPbT6&4CdrDmW!>:/DV6p<^mJW?4BqK`ATIkV7gW'+VBf@^!4\r4Ne+:uq.!7[W=[4F,O838K4cUb_%cn8LuJ'7H]4oO7dD9fMFEF!\FBU[@YR:Eh&]r+<';4<hOYN-j=gku9Jo1OSIo\QE_0>6>lDtKOKdnT1ar$S<j/\D+sTf3peiRH@=%b;#'k\CEsnkncjYD;`<aD%>Ph#CCPj*oLH+q<?K;h91HmVHG^coSDd_;O(8(0suuY3X<%Y\qH3cQOs`N&AN7$X.eZ.0:&`2R%Pn!%I&X^Qri9Pll'CepVkrSPeF0Gu5fLZ[jX'1XDtGKAr(H:@e[HsXDdCB29bk?#^3=:*HPYeQ9PLPR5Kq%Te##'%FD6.>gG5Rn-OODq%=1pMUmGXjV7Z>HLmHU*uX-aY3os'J?ZNJpZ8b@*ln3$*cZM/^]-G=c5/`9qTlsH0:#?UHRnf1rSqI3eO>fH_#e*'"X=F]!,)Wa"3%HCL"o[WXL,PG5&D(enN'*b!uUQ0-CPVjltO+RX#IdZ'kfR`8dYfK=""'C,F"mP.aJ6U"GAn%'f.N02[nrui=u;FLi81iaWAR4A%Q%a?Jn3QQ`rjHkL'HnlAXEFno45lc?P#8"%9lS0.FN?aT.Vk@#B0I-D18Z;%7r?h\U`A`nTfl"QNh;-IY$`[msEi&]PHD+P[<Mmmk>%Ib81pBroCilAhcQ1@A_op"pNje6&Ut+5N*O;(5%"#Q6Q6X`P"ab>RSjl9E_]gu`$?=>u2EQ(7Jg4&5NkgSMN-2f0iYB2$r%m;0?F%Eh13]:V35?'1unc+#>,@5OYW7O>/s_1JZt$=2L&H5l8!M]Tm$77B_\aD>Uc.PET'$"e/IuO_O4S3F15.4G7023Ye2L0/T7Td.aLC%F@_.][&!N7cY9A#dUUqLZI.7lq+At#g8-WV<j<lthI;U?]&fWp8gBK/DOYf9p_7*dI>jlG>/OMr6bYC/X;\jE%shUZE'>>fZ_R?K%bhJ&nq=q]O+o^@i5/5TK9KG&,Dq]8$bIP4MeOCI#:=uGe!@9N<l2_$"Zkg71bG^K;M7XhlTbQo`q@$cb7LYIRJ.64eF9P7^paEN6%&r/e/NqMq_0fOT>%(^!>O5sQcDU-lk%t3/(g57m6P"keYQ*_EdD//sgZ[h,7@KMeb8J9ph+[+74N2G)tnkRO_7RhTCS[LNZC$@bK%qP]<^MJ_A9P6%-DXr$/)5$J3&3&lP:MLeB4Z?:FQ>SO#I*.[/B.LcYll+G<),86g;UufOtULLoKdX7SLkrqPUXrki<%c[L$2G5>\%,=LlqT,pf:fJKZsf%QH6+_fUl7niVPFQBAGHXn?]B;D0nh/)+,cO!7*!U2>9eS@\MX;Q2$E.6G3cDrEc\(N@d8ie:WA/L5Ae8hf(%^l$h$d]jN<?2T)!a*a4:T7OE)nm9N0lIhEMW$XOlTfD5BeWaok3\,M04s5:Y*7ID.qn,q<lrufPgU898Y3VC6G1lS:rM3N=='8Gk%;RT2s6a8gnAa8$AT9dP1f=B'L<Lio57L1>q6`\_p3H$1TS<7gElk"q`*7ChCQ7WW$]drD6H"C*O=`8@01eq<t<H?&6D<T-@dbD4d%J?).BU`f[s\@-:mgSB%Tb`6^MP8c08P2?5-_XejFmgi<=NrEPs<W8*@U5sW'l#EEhZte2SFA@oSEoK+-djr^#m%RKQ%pg*OCF@q%%DB-R!F2mkJ_>LYG\-9K(d*#:@r'8I]Cmn5MZRbm"l'>AS$?j_IPca%-Esm/2TGO>u@\S.5U,[>AfV4Zl6uhSQ5d-&C[_-f+7E6Zf%8Nqr-$?gE^(Sg2(*,C":aqYBG./HKVde=oB@2B/p0hOCjrR6#2%-&aAT5?VZ1$mmbYDQ4q9](bcp)oE)o_bn6*P4;Xb>Er+MXQq?%,FZc[9_f!6a3GQlUeGTRXYR@n(C,7@MN)nA_K3W!;(^H4Je[G.5V9u()r<ZBF%E>u\gL4rJmG`u0uPd@Z]-SN(^K<K1,kR<\N%sY%&MtM#1"DOtaZ*4VT[3-<,Hu7/.+pSh?l'&o3QeGjqA_9OU3:5X):BYQON->i=fK@O[c+ps#WakU6Q1Q8Al;jH&4L?>1k`c^;&hZ1%9V6J\(Wj2k]/\0<U6I7uh+,jIkr!FR$FaCZ#C8+^9[r]F*_.rDUNF)=d`5iPm,C8`7cE.aMNk^mUYOs9b$DD]NhYn4b:0GrX/);d%E#D&dbF)>=C:+U_hSoBb*QN-_S=hU?^RR*d?l'&_0a?7L,06V.+KAqsUrlf?`>CL"-jC3X!\KnOdW#XL%(eJqM_QV=(-P9LL/;K(%*bE>`.gFA=ZqTF$%&+=+E)+W/>o]g)(qQTCcPR(=^1!imb'8-sS1l72V;N<EY_rUs&1(G7U)5G7@q6aQ9,=8QMc$QtEYL.2Nqom*%Lg.*A"2,P*bH<:7fek;jL.%lD>H>^[Cf=#gD+_Wr9e"k*;eiucA]p/"ElHa$:k,6/(!@^P0ZN12<N1Z`_4_X\0XDcEL[&,bW3orj%_LBZBfl&kd#=IX:hl??Y'^eajOY)2qEA1oUod@.RN+1IkUMpugXOEfsN?O0f(C,7HMR')Ik?9W_Vd4e(a2J/u<>4On26$7X'_3cW%8Ab`Nq%`(U?`E]b'Xi4_aS$*GFfc:Cls6_0UEJ='+D*U+l:N?LjnhY%L*.l1K&hS*K+g-iS8bSF,EPcB2)6YsaJ_(bN(U4=U*tAq%Q./^iV&\jN(<SIB8-IkF`&Dus$C,j;U`/\='m\t?O`0l$'WXD;KrUAIP]!",fYrDJN[!gmn$.%^s)CX';(nI==OXNr@-kjkle'1-%?AQIagD.hN",geHF()Tu]blIgUFT57FGsgm;,JDS[2=O4^$CdkEf=hJF32ulH8,b,@47iW)obn1\6O_,]c9Jni]:Nu*qKn]67R-e%W>Jm9i^PRj6*5>se9Zm03?+/sIB=8OE:71d@DFpYmK$R7%ujnS@T/Vgn.^'Tp(H/4>o`'.;.*K:'cj&Ki*7,M7P@6)RUUk*.i^lM%!>@>e<f8+\j-q0(I)h?=_*u@^oPtXWl^\Gf1=.2DO%o,,!AMYScGbr4UR._]HeGjSWsmG#XSPHiodYu!YMrgP<>rOfKh[ISo"8oM%V?L4lQ:<Mq#rT":L)T:neO\k$NNDfQ.'VTaMN5N%K+%S4kf"r\^KlufTjt=ai50q%H8,c]4B#d[k88"V\?L7<?B1c+L$4_NS;m3n%VYq(4Z"'#XSP.YGedG?,G:AECl5I[!c+*+GC:tI<)AZE8Zf;m&BBQ!tC%SDR<:>k^%AV-Z<3#]#>)Yb(nj(JD8sIVs6s6M.&8]'T%ONk7CDSD\+k.B#u&SO00C08d_7RkD.=O:dS@MDT4VT9)$0hV5dV1`4AjXA:.K:CLgSc2$-h1S(a2%,Pk7+>]Ei)GV<W#^muF(UJ&%[8IAU\AF^T=*Vca_AeaII&.TFY^\Jip5]@br\7?(IB:q=#^qYI>XQ4th1$60EPa,23LB;:XV[a/9lrh8]"k6k3gXSjXV[_9JM]eR%OMJq&3gU7cXV[a/j`O"l]YLI@3gV=7XV[a/[;n^9<kp+*4-usIXV[a/+68<D4riTHaLL"1eTr[%ZLq'`Y4&,LE\t`2%Li"N>h&L;%YDRq^gI"EMY^-[0<c8qj(knuT.oNcq%->I-W)em]N.G_d,j,`='ptq#[9=:HX+Z7[Na\1a>c\PrH8,cW&m(l4!XuI>>h"p+01Sn5%)BLIJou.qUGdPC4:,g1gC/V*d&F?l"ODBV]jL:XPI]Ll>;20H^6S?ppjn:n#@`ORg_*otooKj8coVT^?$5blg\FB-M?Aq2kSL[T.%#7OTM>]b(I?Aq3>fG1@k"%*Y)(KIumMc%RL\KY0<a5#B/e#coN'dHPOG;ZDmL2j%K/slE(01QWJ1rXfaUQc%4R2G\5N`#iB>j?eX%]b#n2QRRZilkmthkJDU(H8,d"-E]nI&/aM@kFsnLoVs=(m>hqjU\&A%b4`5HN'Z.r5gCNFcH`5%?`D!US;0h#o<;_hLRh(`\CSi#%VYjc:@.Nq+=4*rY#*T9E9O=J1U'1?n'SH@)N)H*c@D<_o(kq@D.C/nm/.T57L&GcYEYN*ND^[U(lSGWs'GJ2jPjk5:$,>&L;5c[I%+Oru7l78])Y)eiO#SESN&Ict>0fX)jiOg,C(kqCS\0>R/_q803QgU\,H8,c=eK[N'aBL]lghNr-UJNc8MU]iP,<,$q2"Q]5N[!gi%Iu["mKetN#ICQcH=FI<9bP-]/]auL",?*[iDA]u1j0CbHojSWXP9rhGdNQbscD3R*WPoG(%[eGH!5k`UE\=aeNF%R\`SM?/fG?(Q%qn`f]^=LJ)KY?[>@FuK8-iN^bE(1&ZoPl2qUKT7hi:9tQ\N1KS?DU&ci`L!8#].23*':>*_0?h.`iE-tqHOnr(`,YoW%L,pl=-l]%@jlV^:Q1@_..:r!n.$:HH08(kYOu?=Y.gdS3ScEi^<WS?>O-tkU&#PD:jj@ZlK_]T^9q:+_A:Q6fg7_h8]J;O+`"b27G)YB\1YqV%lh2Ve^>r+5%MP&l@\ji,E3Ei)Htn1/YN9$S[;*AlL!5E)P$%fTB#V;k<bf;b"o6aR0s^mXrcKRLhb#JSR*nckk>6K&Zm%;\dL-J[%(L33]7P@6)f"i*ce,Vic!uJ(,UDK]P$B$F_aT7,2(3$OqdceXuPeUIc&f<<50Q</j)SI+Zf_R3Kc=#*tIUGkf$lC`:\B&';?53Y2%.2:1$3_&M9F/_<>oKj8#Wi!l2#8jNl\?Mum?Aq4o+0J/X+2Eug^r>k7UDK\%rH1OM[>*'k2(C(pUD@@$>B)fH.u(<50eU)'7P@7L%nh8h0Y"[lT+6%4)#c$JF>h#$.01I+[lAAP.*$_6D>V`==?Aq4r$];/p^u2oAL%f?S@MDGT-:jKV+j)di6oqL$EX3uciL(cZEP6h+%JIA8><$7`'"gV0e+iq&2$9ACC!\R_NUDKZoXT;?/28h6))?:S_"rb/lKtOE9P$)qOh5W9eXYs?;!]>s66dl;L4U\c5)B6@>$G)lt%7Dl&3E\;K#NF%R\Q-0oAE]HUSbILT_C:tTuatN2kPtRuOHAa+O0#so23L;3sXV[]7Ro^:kVK*)'%p[c"7P@4S=6tfL59-GWk$5FU%7P@5>1MM__-64>OjBS(o7P@8/p(ebHR.Qqo>C>YP0hQ.LV92f=`>Fg_&*+_)%-^I.OHiuX_8Xe)\Mt?U'Z\'"`Ne";;3]m2+V1aX%l*%9=%i`H$e!QY\/%#p4eDDGelE=\SWgufU\(6I7f\`/Bqg6@32`mB(IBAj2XSVdL39B8Zf-*<g$]Lsq;/+$OC*<^]/X,5Dmhf%V%UJfL>e2Tk#WC8Gl<6*(W)O4QBV%uD%)_sG!*JUg<.TA;nQ!+I0<ljCD$9:RVaJe0Q.^]h>]/c)8guK;`(Saka=/glb>cLJX99j!d%Wf0Q8W`%"`oQA5R+.F@#hnp<"brNegO)_`+WV&TBOEQOk3&-.bShqpnh-)DMTX9%gk7FIqB2[Hce8g@.Ir122m@<$N&g+R`7eP?C%<,ZQc(km8q=/6lI(tE$W;@cjp<DcTCNtd/mb]GI;oia"<TrRO<<7QQIb],78oia"<+U@@kjFA8'"#_JGE30j"O>hk3]W#E-9o[?Q%[+7lI'"a5!jja9J>C7h/(eP(DW$..,N.SA'Jgfpp;-e/gQ1\<4K]'.RJm?lX<Kj=f6<S7!@ME#2E^cGS^p);l/sa'e]blHl+'59#%#?Wi'qKU&^d>LjMf=N6gH=4hei$-i5H;t[S7TMA'BGgV9j0ET>oPtXSn,-*UNA?aeV!r>D$oS8opln6$6t%$CMO^af,9,THne$jf%N'c+C(!/K<K67;5f!3V\;,Fl0&@DmB*8<RTE:]f(b97&je#UT19/aJlCQ>l7%:c_W>eVN=k_1F$]NgSX(GH[ZE8eGJ]blIiKI`4V%E%INs9SK$Ne8btGG?PgOSu(n4X]s#gN_qEP0'2(r01MX?Ck@n0%H>K>9[:VB=pVs)h?:_bFpsBP>Zghl01OpuAW!"m*2EGn>fpE]%?B-5r@?+,mbk#PqfDL>rA/NWhj3j,.NF%R\VSs8&ZoA9=!\R/>UK9lM"*(:'(_(<EU4[.O@MHs9-:kJ[+j)@]Us)`9`=VCM9T\(s%@ICk"l0bV"M@m@7R2VEoJq^L1\=m`hH9$kedn=bmCb>J-Mdba.7V0cR<46PT&1(GRU)9to@q:Rh9@g&mMc&-_Rj,Ika/EB,([f#b%Mc"/9gD.713em<EE3[.5kiF50T"=^rTQr[0Pp\0iARXb!(9Y&3KO?*h?8sSU@2iW;[LooJN'P/W4jY\beOer_QbSM\N5.;*lZ(q*%#gIal;*D"GU-<cd=cEl/7]?3(*d'],<fXDMpGgW"KYAir53_AE/OVR^(*X[)(k_+Ul(QlJK]g#<\Cste+[B-RaEh8A)h\@r0X3mi%W5TUd5YqT/ID?tom`rcA5bf*)Y`UGf4?a4Kg?VG<EOAu/_;;a/EoAp4&rJKe=k@CC#1^J_8!C_"Wd`6gl;q]=!,R%?*r@"2aS%TW%Ceq1!A*E*jkNG@$mPHJ9]UK%_ZCl7f$eBVI$6)E4A>9EhN1tC8.+W]!$Iq@BV"t=TArUl2rmc<L$<]>i,RXj9%$u%W_UWre$7u^s%+tX6(UJ0oW=rO@4@MEiIY"8!$Yi's;2n5J`01AaHI^P!fO+%-iIDq=(+Y^DJE8c6a]b#muPUUXDEX\/]WMidU>)\"]IjF1g-9[``%oX.j26'g++amqLTQIhOBGoNk&J^TFV;-j9X_u_P(9;@iK.!l6grmYj<Y<2ao%8]1rLA:2_=tPD8-Ye6<RXi4oJI<jZkZ(L<i!pJ2%,M2$^EcI(FN']rFMPuEJ:_pl9=`!_>'P\%^On'3jC>Q2X]/\/q;/#LL'mWP6L;d)1Z$>!djXA"&k31XoZ^^h+Di+T`jT66`X3h;P%fQ<N*f+28n?/WSC20ptafbIR6^B+gu"^Dn17P@9Zmn%WkAMNG-iE^h6N+:q$SP)/Vd0if<'eYB;$9K$K@c=$g2gR1cARZ=K9^E=M%3bM>;Y1-ndC.hfnb,o1'RQ-X;P=@2piG@k<P`6]YD!YEL`jK+fKaKslHD)u/(OG+^Tl9RDPY"*E&`46Iq.K'f-"_DBW6dVm$@T#m%U@:dG.>G3C(f):7dRmf?(Se4Z1I\`tN`#Xp/o4jh=%+:]ieitJ%?"`.UL-u,*2qs9Z[S#f5!?2&jeH.P-lo'Nl!-iF[9eeYp"fhN%hA]FRL;%ucGHDWIKJ&u)L+^=tF:mH*MeM`l'P`2)Oa:DCj><Bb-FhH];/"M"("kl47NT@U=Li/<@MC_aVT<At0UPFA_G&Na3J&s^%AVqOFe_<"4R;n0*PB4iueTt40nmFtFL/hk?ES5upH8,bR0NY(Amhd>ikE6(Nol:aTO*uC.>]q]IT01Una/D0_Qg/(_(Se400L\`m%Nfg)U/ieemYDRp3g-\<LYY#9U<bWMd(kl_<#uWs/LhaUZWRb-c0a(Qd'BCY0(fb#-;AHA-EYN)/n\(730%_4`quNQdls.]O[9eY%%9R]hI<Q[%r1X7;1?gC]hW,`n-)HL.C/j+@.W5TUd#\&+m#iZ]31?W*YUsY)tfGg5&H_Z/rDcF6_)qB6pMQkPWThuo`:?pXT*fY/q%l_?2F5#uDQ"PKt'6""6<S4iRVedG?b,;M^5<PYOXE\;K&[9eeYp<+2mIK>?/H`E[jDY-g@AP_sW((J]Mi"Wa.5fbKa,.#d60a)V2%/kG$Q1$TsQ93jr\(Sah+Jg0b%0]Xm+OhVgJ*2P=G"/YoA'i[qGI%(X#j=bJ7^Dad8$JJH-U.ochg/R65S(d([-u:5)Oj,.*Qq;7*%-6'W8Ko3Po;R$Hr'?I^4p5NC;6MAJ8aW<H3p;jdTNuG\KL$TBc@?5rT*e=]GeEFk"A6E3#/?<8u=e4fC[F*,/KZPn&eH#G#bUL9M%#?X*>CKr]teNsPAN@m`/d4rd$Ko+5[CP;bq_?Ma;;N>1>c)FfQX49NBWerE!<REM'MM92AYu]$kKY,6e-lqXiJ$&,M=0P#eMHFSt%5'p[9@h/tVNn(,5^pR>O_.CdM\4eo;1?DJ7WELm,TGhBV1i=:j=2-@b;(LjOkqFtI*KF"]0Ig(_8hGgcb.!\IE(E4(=)S6D7YSaj%<&eX+(kqpL.Iu\B%/pK:pn(#/7,de>;rmTP@$FT[MtMWj01Sl_(SBelQdaI'?Q]qMKu:H#3,6,V$@00,7E=?J^kJ+joO8ML86h9)%KO^5jSVr5udE>CO]u6gFf2W%6&fs@k:akjfaj6V<C*?%pZpg)"7"Mkl)O&?\XVPDcR5I:1Z3F0gFX@jV=tRbP!`]C!j;3X#N"N$Q%eQO[/AZ]"X&B\/$USLn(jT*0"5Q/$.RWDq-0o-I"1F]$IC,#o-W1lfTW?@^=N5tUjdL$#,$-dd)J/Ufke<si5CUG"3rD!sce7;Aq%`o.kT(C+\0#+N%FaI]M!Y\_=3AZM)j4tQoI(tJ^-U:/44=9`HgWYj6a*=*F:gGED\RoZT/(gLiNO@lW@<,%mpV7'F*@ZYS^T_l/+%"l!(F_7.s03JNWN+hj@9b1AK:PtuI[.]mckdai^f9(6af1&*]JaM0a%$s]nNUTfG.7CI/q;8mQ.H+7$27o=FOT2"%Ndko(:*YCll%f==l,CV:Pg=k<h>FobIsFXH5+8hG`fjQa4qRl&\pp#6s!aLpFTo/:np'W_=#&ShB,d2IOVBap`_$W4F(Rj'4Ha/GXmQO8&6(Sf>$%\LZ*i"boHdE3Vsjkf"rLdTquM\ms98=@1KiW5TU<^0H`i(GI*gE07pS]c9Jno+9d++r56g_h5=N:pP'^<S^h/"CR!bo[mS4"G[.-%**/gM@o*q!6-@%Ji[en>cGGQENhL!4E`ch1VePCq'B9q80Y#3@NF%FX4b>,'Q3)d^!F57&NF%Q1?'Qp<<s9#`"^H.LNF%Q1Nt/ZD%?Y@9TauG_/*GG(S'^BmIOfAX?R\%en^XMDc.$X$lOQNu=aRrpbf@Ob;#V7bP$9EoQ-?-68eEH!Bb$MMY;5VgL0(BNa?rU!n9,4;S%$W5PkRj*2r?ng?n_JD/W0aa7m;rf_&=>bYqq!_4W(Sd(gG=A)?N_qBL/kg\g(Sd'HE^_`Q^oF*A`$\q2]blH,#?R_X_(fjLSE\9c%UD5#8Z%j6f]jkU?SP.PJdE>C?S\EE>Ap'<C[SH?!,[aUISI;dXkf"rTj\:ldLgcMSN(R*a<f8]Bb*sGRH,ll+4-uspXd>g(?a_]%%!D(6/[!1JS+c!Rt)3aB6V%uGFM@]oq,\1"J",4p66B,<-&ko)Mo#*>C9r)d^7+QZ=$>"PtUhf<.-"gjg[]e2$#U++Rr6F%DmGC+G%kJVmJ*d00tiE@m(@FJ\CI$G]se)FUf/[\o@&hI?d$m*_L.fR^>P?7(h.'tPaMR4u:N3\FaYqXSh`@,OK9p*,"_1J(+ggDIE]c9Jo%CO@[IgJ2fK`Q+-l;<;gN<N]LY7cF8VMO_EiUTnZ8b$VP[N5>>5oJh=\7et6<PeUtH*(:))*^;b27k393T+j?+%;MSWIp/h*&<n>D%%2mS:Si_YI#r68#IW,lf/[u),.%(s<9LP]m6El.t3OTKZObGJ=3J^9ZKV67sC,C/TU;U_5b)9+Ikd*K.2>/DP_4MDclq+%<jb;=\%nTBl(%-O<fa9G+:f=@,gCV::5h6/8Jf`O_3f=BskCV:R=>")MgHi]107H[RL=R3pSjKr0SS/*f!>0\Fl<U7UPeASmA%9$Z!]pq_i%>cj?e.(^S\dm8=6MUcVR*$]Ce>k4bO?Aq2g&W4Yc^lT/E77M+cW[OfEXCub!0Wn?ojZ:rUjXA:.iZ!FAiA?U:oFJaq+2ES[B_4V*%Y(igpeIWRWDWd`42L7(b/UFoN/U@Ca<X'@u*fXJ@"U5^!aQ\_I6$4dte4))\+iaaT3%eTX>i<J=20ptaq$0us)<_o0J5bDK)RUPP%\EP54S<9X;b[#Tg(Dnn_\B)aN?AQJ!_PYBl$Q)ou_8WEnUDK\u3k?H))M_-0_*iRMeT(rop[G0!I1j(64N-7kcd5!(QVqP&5._M-%$hM1h)UV$.9<$H.#l6--bOK+^N/"Z9nPbBM/VG5kjDndaJ5M"T.Z@3+(.-AWS]gPWFUX1N:;pCBXVO6b(NMP,6B8Sm189,h=t.WF%DiKgQm.4ptVTM+_#6+ZUr'R4qUTf5%7J77Pd;3nWr'R4qUJPmmMUWRHUMB7&oS/?3N5Ck9'Y1M27[;f?<7u'#*(ANO*Zs8Pj#8Va%I!c;=AOP]Z7]c9_-toTQLmH1<C8m^r4]S6nU')iK'S@'B$r.XE38m=[7c?C>MHm%fUL\1?W`-</N'Y#Q5gCNF!R@Lr?E(mTD!=WT%/R?2EV(:>/l"[mO7G-p&=h=:%D\irW_B:UUc6PbYX+_D,ct1&Ok7"(qj%Qb"[9AO*(8qLZaY8MZO>FuYeS6fC[j=J)CPG,pW3-!b%T8NfZ*(.g5(`n$eCH-7k9,E,Y99bfKdjqg;,'_N[(b3%(>_\6]T![(,;<W0F'^>6/`nB7ZFM"a(Mc%!>1I]USL2d`:>jgQc]blGZ%]dm!XGDn;jF",SiH9$kg\%#hP9BWn4PtuCY`gh+lW76,J$=th'Us.p3AM.Unk,QpO#U*8VW1,gcpsg2G#c!RE>Uima?ALoWS1@JN%7Mm"Dk>DC`lW$g;!Zrj(7MEkRjFM*[(^22nMT@$Xig!,8.Ts/_Mua"e4]k!X0Ta;-K<2Ii"B6qNU$=TQ.TYM_MH/tV'P/q'Ge)'E%s1\+-pF^uX+i-R$Ct)o"'ZFQJa1Nr9f?7X((SX`/F@@ZsKR$uOXr#)Y01LNQL*CXj@ICX^l]/U-b>FM;KnjB?D@f]JiWS>VNgT8#%>.#1L*Jt6qWA2Kk'4Q9;d]18'YRrJn0*'(/&M`*2Zt_=MB40?_Bar#P0C_1)2Hhg8b*D:diW/OY78,@8X]gaYjS3f]8OiV5<%6ZH%cg\mF%,\)((q>@fK")8+:c$D.T'mf2C*<eL+W!NrG6h4T9N[uh/]L%;l@S4J!P.kGVDk9P>)jceYn-:>RQ?kEkpI<]_LS>2!uDDO%Wu%Ll7<(c%)2,Oh+g,%6<j.D?55SI00rg>\Ff4'\<Df^W*[r!sPLHI:F'H$h"7&:L7oS.s?Paoh0+>773Jt&]E=3M$(;Xkp(""-V%@)h8b=K07N>S3#"*M\MU>cNUf?AK4D@SmOKd4n8jcD?D#lbt8SrIlFs5KA0EQajd+gZla+PiYW$7Zp,Y0T>o]Ru:<!L1!MaK'_\0%1Ih\I3P&6A7R2;hC6YV)6[Jthg8e7-7cA[TMH$f"UPe/<W`ZZ8'ntEl.CqSm(qET.OumOREYN*R;lko#Bpk;B(.Q?C1-1aOA$$QA%KW_+!L9AHL.V6ouY,'U+;:mpu,$RRXWl_SCd5oj)3Jt&i8*\aX8NEa#Jd<T2k?Kcc[9eg/Fl!i.lkma-hRHhTCV:R=m@u1pIrpVX%UiXXCep9?6Ya;VUAm9G\qNr41A@J+&G.Z=`;7JfY,1f?&.'"5Nl=6q3@o/=NOE65@UbaGk<ba>l-PmHWjPh"&(["\:WV(9G@E0JP%9\h=Qr>oUb@l3M28s?te$R)IiRi3#eK=E6E,1lUg`VQ;%(:?tc*M]TJ<%>SH=pVqp2C?Hp2NCW]1TE+\1hn0:DC7c2VmKqj.?3W%%'-"=jJj$?[Ym5H2*32rY!`s+["ICU%j&/m]:oZ9.<2rPBLJ[CW?<B&+E*.3EnE9mBNm>2rk\@dBKiWb1OcuDI>ZQfA<T$n27\PRQ%($Y>mU\*YQC)C^!'Lg^P&;tG`T@Qbe*(3./(s32q.(YCEN.R;XJk1`KO:oAt9!$QP#kEs-8A<J+pPmI?hq2W(#]b(].D2`q'$Ib-%I<_9M0]YT?OUrJF.LLK..&,mIN-\gn;U=+]Kdc:-9JKd]_^NbhQ^gF<(Sd(5J0L-j0Ub,LKl^r"@MEj)Y"2J%(`XR+E-.(GN'bh+%'kuqn(<1Ko_DsGf0a=bZ\/m6%!(43s/lksj]daBcT0l&bW;giiofnFBN'\9`MQeME?r=^n7;;C7'OgSD4/[NA@,XQs&/Tl@,PMb7%8=[AG8[3I>#4Gqn=GKL!kbCR+e8bsLJhbXq<*EF3QsEtRkU5&"Xj2W1.#(Jc/ZdJ^"IjRuA((nrVVS6@m'U"&6-dF1aI*%'dV)T>%P?KPkT^$'&1lEBKl=<:4:/NP*POicOE^#5_o-mX^5.+Q(+l$L2@W@PDXIg=;`Q9ha:<o]q<9o5d@8[o\0W?(f8aTcOe?rVCU=NaZ%@]E^%EL:4822j/N;(:&HC,#oE@R?-YY[^eR";cu`NF%R\VSj2%PSaU'@SE/P=t<*>ju.r.\=V8#B#'#fUc0?m^e-*[#\c!YKe-mK%,q`h.)Q_Iu%-jN[OBO&faHek#/QAKG`?:q&+D;=3+D6k^Xjpkhp,b^)m>aKnG+;-AVcJ^1f^0A=2EM,*f5W-_SQ[Vbi7=Y/EdBUA%RZdRKoYlAbN'U%Ekg=K1UmdDC/Y%`".gHXR\6!j%40A$g*e5X\3g9,CXVP@K)k@/M#V$CTBOe?)Y16ti>1ki#^:FMW>oubAlSiQ5%#3YY'aD'HQb3I9JXBqr-0rPFGd#2:d64GKi:]tRA*(.g=Zq&:aR:b^8R/J!LbMuju4LJLO&tE0'$jk98Ec0/KmoJbn-u=9)Oc>E3%1c([qcDT6oU/7t77@Mk`dH!,6e_41Y`o)ThoXNj6N#N8eEl1c?jXA:._]+'%TfYj*%*^FZDOc^0NH;3<US-I1cjR!DopFLoP%Ca2%6EmFI5rR9/aAb6f>]m.bUEKTJ+KdFAb.u;u$s]d.&5$9;kXjlHY3D-dP_+H0#D7pSgusG?Cf!ff*==LE:iKi?)SHuA9"QTOD$PgT%%PEWcUDK]P!e;fL!WXpu*cS@ad-0R>_VY&T,8t.?K+1l&+VZ[c@>,W-(kZX^$'J#&#_`[\fT\iW`ZTJBJn2"nEc:>-pXY=%e>K<[%@T4'_6<+.%<O#EE0nd1kIAg8#1jJO(G(<Dm^dPkNe>a@1jN%MpaAILTMCD5JjJYo`1"Zf#+:k+HOV;a^3MAno`h7Hu(Sp:rTPBi?%-EXj<C,#om>na$.lO[e`R&IQT=qq,sf*,#l%AIZT6r_r2.n1YbATHk>$H-8oR-_4![2_QUeH=3^XLE(Q@WlsSZFb0,]@V?`$Ir>o%Uj?fQ4_<46dXjq?K]$ag"N(CdXL^n!<:\"Z?Aq5Decb4E4+qnf-L,HMQ:"=ImdWlD@2?[B5%t.Y.\Up_'%V@`$8q.P8DQ<\.OiY3%]ADbj.%GWYOcutYP^T)qfsfPU;2!cO;m]a!a'kq;TOY30i504dH8,d"$a.S&^bPHhi1aRloO8MX.&P&q`A'uQc6\6Dlbt:5j^"#)%LgfB+SP*;'dE>DZoYiK-9uAH<nI'Dk;/UA+jd'('6j\.K.#(<2(sQ!S;C8Qs@LS_!#BC=%[!*ikqb!stJYgRX6-$3o#qhN!)nd)B%98Y0=9ds0m.YSh!9!+GT.%<HEU/AAJVOtp:9q5YA`&X0Q\4/,@Tq^Ou-n5F@;)'C6PtEW_?se+'kSQ<AkE<0Pog4o$jGRKg]8i!g%F"Vb6>-EfMhX3q^0QqZ[ATq5A`@0LrQm-l;a/EWi0(fX\?Auc#c4nsi3CX4g\`E6p]blGb'3!uC`%^g1`^F`CCW-Qa+&.a\ULR7F%SP/X\f#ppD4\]^6'`2U6qoVbq7b,_nj="cV(koS.;rk+50rd%TV67;Yb>Eq`5!DFn7C(c.O.e0;7Q&/q<)[PF&;=2$9p%ps0W`lX%MtPdn01J6-EC!P=5Z@lV8QDTb9-FqYH@g:(nZl+iYQBGk!>hW0d>LlC[(%<J(18gJi52iXH8,aeHrm*M%Lg;u>WDXNYDNBCEN!PQ%FeuO'm6m_8@jnhHQX!;G+AhhC"<]0NcD8T_X2PWL\IJc`6fe@cQ)i:?;:p/`,!0^NE8KNiGrL%($Fs/<Ub(LB\Q.gU>Aa"A'["Bk%6nS[u>RW6*EMHT(JH97L1LPsB!Ac>IYXU99&b[-0CaE"rgT\XBknoSZ;ir;?2%IJ$UWINU#Rio:WG!Ah[28tRkYTPZQl)a<("I%R%"?b)*S71K8N(TD7<XU'a\I3GB#7VoAA5lb$WmsEAnm$rjN_os9.P+Z'(.+,AE]Gm[^aL9D'n32a$R)GeRMt9iLJSGNLgjJ#AUU8T%;fG%_,\ljN=G0Os1b)0qXVO6b@<=LbN/kGW1nsld=t.WF0>7d+)Q!,`p[BXP@+87<Qhm^O016*]YUG55BGb"qUJ_8seRAq^[\h*e%ehKe*cD>&UlfBP;m]/I[-n.>T"cW#FF"%^PH8,b,Etb?aD@dUk@raH1e3\t!Y_lgB=H66fE@r-1=t`@=)/+VDN?+`2kY.FsQ!+n(%WuQnHNa\1T>c_s&H8,aC=]=B*>Hgq7$TAdQ=t`BKA0NU8Zrf)oqPfNWfeKd7c6\BKl\-b'@MQjiYoG!Hj]o)n[9eg/I=`ng,'8e?%"Qr[T;!Z(KoFi'CjO3<q(ts?3@bo"S?B1cHZl"E7AYZcM@>d@q2lo#tgE(6t20pE<-mtn5ji"Fh/8fg9-ad9>_?Rsnfq90_T1*)-%\N%ro;7O3,,$0!/W4G'Wb'U6l7A9_J8C9/l29r&tXk&D-BGnZ%Bc-sh2%\'P1.7lRUN$/e7BU!X;>kMfeZW.07o=FGDpF?S@+F"h%J5Q8c0%I./01MZ3AV*mr%-#KC9Wh`f=pP_AHk?cfhQ^g/GC/uQ[9eg/51gS&#<PC=fXYOGCV:R=m?&jgO>VthVbtPWeS6fC<T4*@%LT#/QP:CRK(.3%>D1Xkt%-+5=\D1'8H9$kea*A/T=H7Kq`q\c)@rTB+KI*e/;?UQk;u!rm1eF+,VYKK]0N;J";2#t&&;:R\.<:[T%"p5&^$s98@UQBD67Ii$bZ#;?Lqj'])8!1R1?2-hQ1s%2+2uF+N7KF#;V9u:eTMI:*F=@Be*lWESUGQ-t!a"9\a0jM1<*o&jGoNk&%JJL5&*\D:IJeSD1<]:r!(kEHjM]O/k6a4?7*Yt+^XV_(QUrX^9(k<;%(/d]*']l;"(-*jqL7eNuLB?+AjTr__hu&[H02T0rB*_:V%j&'6b[6ak:f0ta;TgS>#@)?,,C,#p<3"r)KB+R'_B9Im_e7&i,E$e*[c69\L0]Cn-[42@fT*qC])&.kY9Ks0(37,e[KGm$sV@b*,%XCF,G*CCVE0"R-601I*@iefj^*K(`5qFk(n(Sd'0ECDW-^hD"T(M9JjMc%Po]-:Tna5Vfq>^5O'01QWJ12jF,L`KgbWb+4[<Pu@H%2/9f9-.LSA(i$-^<+DIl27D):U0p.X:slN4=sYdQa>S?!$>!NWUl"%AARB(Jp8uhR#e!b\aO\Kf[oUdrCXm+;#b9dHNAJ4WPiJ<-%3PO(f;1uXUnP7U[NW$:c#0nqYE6]a3=6kPg_(ZSB?l9rZFQ6U]%CKN$_C<nIH0Q7_a$QLuP-!2C$u0`eNuD820_=4s_/8hE-tj,$%'b-r3^q%r91jUk`)dZSk_cs?QGRHGIhHDR&=`dJ1(U9OBDMU3fTPD^<9B@BJ[1IrA2,,dKDTAua#qjdd)nd4[D"0^02d9%h-s"*;%"%IRg\Whkb]auLbQ(f+1Tjd:iN6@6Xer*DXZ'Z_>(<<AB3L;j$XV[a/*]?<QHOeGgE[Ko,8hGeU/89^+,ora3l!2Ao[9ek;m(Nj7%lC)<*03rsb/MOK1c6]Mplbt8_>$R0s+YYZ'c6^q;l_Q#PcJKg5HRQR$f>lc_!M^FX\^Vf]H8,cW'j%1k%LdI`>h#$.01=d1@Z"Dl%J>',rMn7@#`@05p\g"PW^gLZg775em<Dd._%i$*P1&r-1\C$43aQC#WffWXrA`1Gf20pta<FT%*9'dD#JQ#F&)mpN8WgE$KoeMK,%QZ9Q^20q9?Y_O[A[W*?`h,lg/%1GfM>U98;01J6eF@"DILT:06QrG;G[1Ir%3ti%O_D-.Vi1di!oO8O"Lg6'W#d?9*1)Cs.UDK\e%q0#1^hi>8CG,Cbt7Opt?k-2e56I)@)`?/%[UFPV8Wksa%N.UoiJi"\l6@AtMos%PU+fIT9+OrtiW/ol24uR^IMQkR[KU\&ae4j.p%4p;d_"J`h-e7p-03F\="8*h'Q@\])0Y17Ouji3W-bd0Q]Hu9</9m*5Z9Wur*7&X0U0%;DlBOVmFb#P8R6El;#3AqJ0_*g6t*hl[C%+ZR*'*)C7cBIjrH-21"^#8$#[Y9=u?_O/5.*=d'Q1a_D'8hGd*K5r7$(`=%NP!Q)?6BkjtMdeB#Nkm],$ffn'`@,OC9TcH0A!Fg"%9@fffMc&+fQm,`>a2g;$Q`NQV(Sf?g]IWPTFUW'Wi*pQ;d>LjMo9pe]<ei*p3g2=;V%uGF8q@Au8c^Wg@a;qb6),6kE.0`7cL6cj%IWmF+pKFbX6=,Qah.m`VGcegl?E;Z#;1q*1?_HE+O]g#/rp#F`*AOXe5j955o]Si@(SV'(@#AbA%"igZ-HniZPp6PjII)n#aX5Zs%a$Sc&'b]\--)pR;.+H;J,5#r1E?Agumc/&q&1,uKU)9no@q6OL9=D+Vb>Er+Kbo?bd_"pGGQu#.cH_-bffj/UIOMfs/X0P]idkt:%'umXb#f28Cj>bs6`eL`pfe6B@+U#D.P@Ks@(qD2mP09lT@L0:.7rjVe[5TSGpI[#l+S0OtB,IK*_Be_LBnZPOg(1P1U=='Kb3VtU%l=7*h:sC^G2EDRgNO;q"+l$pkmpK=PZS-=n"!_mH>V[\7?AQJa)Q(UA)SjEd31&2RC:tI<.[2G]K`X^Yb.1KFC:u)(.MOC:Keb2Y%W58uYWn'g?KIsSX512!BVXNN"(^NK@#8`fAd0ih(BUL%`/RU89i50.bH;t[7ME=coN1("7d]L#K01MXYjA=5Y=?LQMO#2/;$?_-,%8A<5$l40@Xm9ucVUF<`YJsfsMELQDV;hW!2K*sKmkf"r\k$=*]+>?b2E+.lJ]blIOYU`TiFptA!WQ;u:>)\#+HmIkdE[R5F`O/kZ%U#^pBME3?LW?9!H9ap"!Bfn-\[8mRKetM<4F)VE)!DGJ.7P2V&7r!Wd8.BT(l9+g9NDe9h$s^_1!?6^i$RYF_UR#Bq=[**,1?0X3%nV=pj;-n>kji(CT`*eX+"N)K5&32:SP/V1c@LRQRr^bBYb/V`F,P$gtN'TqY"Ne\E"Q'A0HsEE^@rOR^Jm8dA`7<5%>R_X[*(.g-%&7:I"#=%Y,A9//3"^JR%7P@0g%`B(!Huf]:#e9(`)SHuAEg6r/Y&]>=Pqsjj<GF5k/I8j//I2?O_W>#R#W-ifMR';Or@NrWb3F>'%N_s$E>\XWc]auJlPbK!AKk"XAS4aWoer*DX4I@=^#KOnJ31%iVXV[a/e)Q<Jq&H1#kZi3mNF!?R$LX%N@F_<7?PRD,@LQ$(VT5+]%0hV,aV,UgfjXA8Xj,8VWp!h<']Hmc@P.bocg"1O)$<;6_Usa,lV]0,dD6MGULeuia?mtH';7:Hs<VKZM7U\MoMX9LGUJg5ZnoM3F%N[!g94d\jTS;d#MMk<fI(*bL1XdY.M]blG=B3gWIT4:un"W**'NF%Q1\_%%!<]ELXfU7t^/%$4G/XHdLk;!ICbEsth[8r7%/W$N*%AiGZQ''""*;X<Emb3n:?P*TBOBGVbe!_+Kg\Q"/r]auJH5".1_5)rM#j'6>HC:tI<m@>]sUbIc+QuUg;eTrqWRkI]NpZ35l!9]OD%WqBg8=sS,W*jCZ5OU,3n&iFti$Ca.VA=$B%@.O^afXtB@7oAsmC],^lo!Upg%#er7F/daBH8,cW7ouM_kSRk4UJcNAeRAreO02"G%&K'%gk>H`0ohlK8YA8MWdOI7qRq")S%.t3;eAk$37R;HE6.AD[-l4k,l=6q36?%?06*?9a:`mMBI;JPU..HtdMN5O1K+!1dkf"r\%-!cY7,VW1RE+(%3]bgp<b69V,!?i&*M98i!jUac8a!iRoBnGZ^pgtnoWe3rL>./5=@MJCOY"0EB(sPn?_@nkS3Q`K.&0J&YV+g*^%jha]2N+RrgBr9C+<>9OC:ddh7(j/6lV2hM%Mc$Dc]->Qba&%W/73ujD652>AVT>&5)!WHX0U%K&N'a)8.oN8P%"8CcFK1=,N5F9#%'KI*oL278NZ>lY+UF:HuVIH+WO4=JM*$\Bj<:Ua2=pRES_WAj9!2K@"<#CKr/V]qXk]/NQ%&7?3R&H"P<X:sIlTiW:8mFi]]G7i+%55B%s,JWW5qe[Rhh6*#p4;f</+sUV8)kfT0+&o<&&AjFAe!E'NoQ0e"PX@Rn$^&VLe-c'En,q20n:P09]*jmrIAk[U"P`]=3QGOf%SI-0?X+_+$),-&BK4@m=NCo5);@=X]L">@1p,YYYeYlTEXjpkdEkFn_N`"Ui.L^6t(.(iEk]31g%AWXDW72j=C,prdLV>O<EcT2a%hQ6oMjjgn@?>I4c-2=sD(bW"%jPQJ#riOb0;.tBq'kr'u(_oF$@XY$!Mc$u0R3ItCa/C7DQV(/XQ_PsUNK7bUX6dhE5O8E0]Vonn%Mq32/$DhhXUm19YV0$?J:9W/f#U+s6i+\-E"R!r!3(BL[\`A$N]auK7St[&SZXZtcSP,QPer*D8MOPekEQ>#84."*7X]Irb6LK_1%a:4&/MEfI2EM+(WE%s14/qsN;`NX;K26?Ik'Of<tHomA6-+S1R\N!(#`OV4<C:tI<WicY+eMX9DF,A"M[o*SW6HL^/Tk$/Q3R,*6%ZYI/jKmfmKnpiTV/"(D1Lt6l,$FalLa91"u392i]g9t0<7\RdQ=6)L'(`'Tr`SspnQ_Oh5*b#`<3`-m6,K#13&U#d,iE@m(TbVEG%Uq@'D/)&oj7D$s*;36]A&2P;&4GP`mN:ioFM]p/M]-'+Ma5F1]$&`))`<]E_?&a^d0Ii+.V;bVCV'q26`j]c%^!<eUQ;,Du>B_]B%l]#5,_H,;'fa7h6'a>I\\C$43aQ0lUR68O2j>iQ3?DEj^#WmNH&"-Pte?CRQjoIgr"rE];d>Ll#f"3-f?!sW(i1ed]H6EWb8Q4]g%$OgV[>aWW&01I)ek)*]bJ5IM0/dtjW(Sag/G=>-:N_q,W.VaC,Q=C2E)oD2BRuYX1PLP]Z.O?-9a''tri9FG:\2ZM`02Z>U2E#;)%#1Z0VUs`of<CUV!ASfk*%'k((8FFbHe4ME'mM`JMK<fmPUJ#A.E]eTfn[2C+5jNHf8'>o_;20';<ok7-(k]/B&`b3U&99n#aRP6n%'a"r2"O3STM#F;-fq10;3JNX)0toqiP:h+kpTsspNrTj\@\ZuC5\G*_BM]\lR>JYR;2[/B^#&t7nJK3tbF#Zjhl,WR9&APHL:6n7%G4F$$KM_nm/le!:016,$XsaKAk?)kO>J-$Lkf"s?F\S")Y$j.ENCm?_<m*4NRm)Np=a)lc6Q\L"lO`5b@rgG.e7&\e%YPsj!t>X8%V/U]CYgEhU\6j2Dc@M"p',\I6F`F&jUTcU57CK(J\M\N,>LQ%l7c:(RC7M[OUU9,f8mA]0N[!h=X=TJ2E>Yb9l53YHkE6"Kog4mN%9oEJjb)VTAFY6hG=t`A(\o*C1fH$a0mTcdY[9eeY("!.uhDmt]d@!rI/%$?`a]j-CcR-W)qBD%hPe!;URB'?r0nNcVJg'(k6uLD?%j;)O=(k\8l'BJao&6`g&d8Do<0a@@s7?Gb\J[cXR-?g]B>)^;*h#s^cB.2:'_@3ic<m*4^h"@pFfEGLQ3)CWj0#>*J-.I5q$JSHW%jB?F<)cPe&0s1+X'K2hcaNi9i9$>L+CKg%(;5btU+shBLBQb;ZWa`)r@gI8sifhEp<1A/h0,ASe4*T_*k?dJn.&afjo\/UBVe'@Y%mB+l)#e"k&aM&-d*"3L1^ZON@01I*HjGIK'J<:jm0%lq%01J53G!TAC5a5uQ8K#$9M]o%o\f__p?rVNE9?"Bk92Up:NR=Nh]dS'o%/XX>8l+ofcDtIKQ.e0Z4@gNuE4Lcg0NF%FXL<((^&38m-aI-q%)Qaj-3^p!@<<S'K%k`1I7P@8/p)[T,\.>KWM*Gu(%(R6\R#"3b%7\NT&'rdH#7T7gIkiE_r(ki`W?'-Tt0J!?ZMhU(Y01MZ#k_`=\%HI:u>cs-I?B-f)@%2b%'Lt-[0BSCN"9o5?/hCP.(Sd'BE^d9&%^uAM@>kk$_01MZ3k_`=]JY>8ZMu))i<Dh*K*@a+)RL(SbTgl5CJgu/HBGb;oUS8)SC,#o=qu\s7ORU(S_QVL!#Yt.Aa9g`Y,^aQn%n/K%\7G)C'M8h`M`qh33^aS(ZQ-t)W(.++J0K$-K#''Jm6uip*(@/;$278MQ*J7(/.U6_j(.,6^0KD$'Nkn+C'cs)Mb9<+^`A]+1%dNJ#/F2bqn-9@K.@]^H@"Og?b6Ul8.V@-XrY"#UP!`+<EBGc#@kE;`]oO8O"ZWrVCX^T^n3L;e/7P@8/G.5ET.kU<5ItC'*%6<TL%or[mr'O$!.7350XETT24X["dj0a_P_;rl/9(o9!_;J*#\@LUD<#BC;OAooA2`_%h;i65kdS/E?Bbii<SN3ut,KhMUu\qqh;0G0!X%9LQ"LUF`=BX57<mYHf+t_qDgR!BZW'E3321Tr-3PWG+2JRRZI<e(Em'.$Wt%&=MAt:27f0<*uVY&Acg3_;OPeK;UXT4FO>s,7$*?%.Z^*]SBF+qqM6ir/^>Xi<9qLOZju2T4=;,d8eed;M/)[''P6b';:Jk]Iot^*W5-KJ3gUh$XV[aOL,;?EOH*1mF=q.G=t`A(RUV.Z%;[h]T@U-&b[9eg/DVGjck;l(MgUZCRCV:R=Ehj">Nc_3<%sr\#V,kb_KUb9jkB:>&3Y@=:J2"8Bc6YPLl\-`tN*MM3%:N5YS4h/+%er*DP2F%l'O"`%pcD@tCer*DPbX2sO3FQGQS4h+SXV[b*G!Q`5LG5`6cDB5plY2U%*lmaS,pc:^q(\lXKR$Q@Y#glh01;K["';;,%T.i3\`:YF/<j.D?QM"A-0qZh2Fj&M(`@.r[:rIS[k*$6R[mmK'MucEL4h(R6aAFp`*(?opUBl4:q6oPCl)5TsXfd16(Dmfc\5<VW%W9&%cb3jq.b=,\)\QZZ``Npfml0LLm=d#/D,oa6/!d4WsYQ_hd:4R&%U=G,5d%lblB+SHa;SY_bdd#pBjY'SbB1^rYr&k=Yl4Rsm%q4Uh@`]sQJ6(W*#6MUcujgS6J0jq_#&H2tIjaLjRokN#d%*lXWO;"iaSpuU]q6sAI0nd1JHd'7RBj-9Lk$Q.Ws#QM;DljhNE/ceF%T%B!JN@1m\pf9%9TjIl3@^sR@;;HH!rtME^Mc!lpTEt-WQl@^<]('P.EYMq8;n.+=0&.A[X8r`X&@gqV>.kc,19_-1!uk3FWPmj+%>cG[RG]8?>rS\F1aK[gn*aEFP658],NYNT+rdhT95I>_k$CaRbjMBoERn2PMM/;io'\mta+qH$@r6>CarQ[d2(Se3o0L`D^L/B*M%.bTV]/]OHpGTc/\eO=+K?*)Ob#^.[EaA/R>_5S,dE%88%N[!hlRq!e2VL2UgR#2oZ>jP_<`O0$4,4'HA@kO'jH/$B,M]JQtls.]P%[9eY%.WA5n-.jrP_9Skq>jK?Wm"J/r]s)!GR%6lV\CSi#KY:00X=N$sEp=^PQ"*cpS4e"$edG?,T.#S*^CB4,@pF0k[9eg/NkuL`%;E..;_R\_VC:u)(Ff7ffN_q9FY'6hH?580WbE8N-PRWRDae`$r0dsRPa>lZ1`L2rq.^^+F9t(G7kr&sIgR'\N[8r;11GaG^Nr,#G%e:p+]4NFBbEA$o3[9eg/FitK0DE11/bILT]C:tI<NKGZq0li4fR<-IeeTrqW07K9407GlMXc%7KnY=X8U/3XfUhCT(6cS5"W7Hl(%\9PP.'sE4Ci`3L^Gh%+#MR)9kgp8uI\_k7Z$"6e6S4dFier*C5-!_'_dNMB2`agT&WJ(nrMIV7NM?Ah&N,r\JVq-c'Yi#sZas+WK%_4.sKi8*\;.-)d]OW4NYEYQeF7oATK.*CuOBT)ao'_h+p04D*(i5-6gH8,ae$<JKC!=Xeo>W@U101J7AG<t;:5k.HX-LuSeQ9tq'%R);"4FMc>`&0C$^%!D\WfSN'N6t'kAMEGF#_.%p&CXhQJ;.*Q;'b)D:i`n5jNF%Qq]>:;!.cM;q!U&H[E3#m6]!F?W^DAL3B.on!%^RtK!=l5d`H>-VqS$h/"<k4Sj3l5mekG6Zp+DGo[?7XL7lF4H-fhCSM3Y)BuVf>8WY$8o!M=hr:f;.fR0ls2,om<=>S%="rfVUk;%:op;`]Ud\RrCj/!j"P+^4nZGRQKmk46/+Hm$!P>d:RIN)AXW*dkhB)PdtG(SBH?eum(2JjVDG%2A_^hn+nP71*k2,*p6'Q!XZUqo%H8,Y10@=pK=hbT<Z"9QJXM7JT].r489phLj`Pg4WHepBcmu4B,l067\'U,%C'tqn%/GZEe+g,>brOIVkqiJhO\?.MpQR*YSl0$)]%#/n69$1"I*/D.BA=`7[AX="g!>Oqhsf,S;Pho'CeY$h,^k3`"/q3>rd_4uWXZ(Xs9J(+^a`]]sg;@l=>IbiB6m5BAOG/dR2#truI%Fs^Wr^:Bi>E_c@34RnNBdh.e;Fm\cCgN95@-A+h'`3!.p\M_-H0o_#F`!"hlIL?r_C;2$u4J)7paP4hhl*i84n=KSD3h^?'C"LK&%dI32G<piLN4W2Dqm/!Cuqq@<pnsPt.)*LVP_3<rmEEZG8:/a*J:[4cD=@\"p@Ed5<:NsKM\_<5G]'$]Fdd$N(3:^'GCu)!OLUXR)%V/o>"V+EGaYYX_q9NuB4=KkMlS4rfWDX?ZlT?;DGo@Zs&0hiZK<I(N=Bp9An)?'r*;:Ehn9tEnogTW>6Cmah!pZh:(S;,%/b%d]i%?h0IX=).#ur&gKEf6,5+,q`/=o.]HMZ;PM0VOiRteB=5A_8IR/l=JHR>ouh3?s>kY,dd2Z`mc?<4V.K_q@q%m-!<gG;R"DX@2UnS%T!0fETt[&AU!LLB:XjD2"I!G1i[c67,l):[_j)'Li:LgA0'>bsEg!Y]Q*75Rb<G#\SK<kjCsL?lKfrRL8%ZFS;pGu4Xin*@'cU]E%9M:MkVg[4g)mF$e$FGfacK/FPjH'8NE9a&b4c*n,i&$Fn;?hG=FOMXpHeW]r,r1Bi.!0#oPUe9:Xt*=_eCf"#G,?uAac]o+;+Al6%oUJ#+Dqh-+3?KZXp8+.Pm&$//T"Z/R!).-\p9*JCINAm*DG/:hAX($;XIC#3L%bEoifq3dI&7&$oDrqG^Ic%].8a'pA5LI[gWN%0%[84'@jP(;f'(`?RCOjFso@=V\N*q51Xc.ABADi[aB;]d5EO-&uQXKd+HY</I$orl>IE>3pqV,m0+d`"h05?h,rj:oFCIgbnXd2Kd%dRA[<D`-^(VOn[mQTYj4nVdY*Q>$bKE:28^`hY`?W1!;C;48/7+&b1`;:qug)tT:)R#IKJe=X.-)Sm]l%X\iZ/5pX@*iEQ;H''ma%:AU8>Ndha=0e%Zp_:E>g\U*RCXlT?A]TI6kH2=>"HRl-.o+#\MkBQ63CQhN:;Vo"@(N6.VHJ8n`[PH5,Eb1T2Qn(>CRt&do=NYcV%b4,h)m1ip770_(O7BIQM17Q28F.[HD?GPt=bGYdWQIUY"/HuS@<*ulbQ*Y;e;kV[`CN"PNj(IV"Soa`\fW!LHS(3,4m+^3HlAJ]$%]lNEpAHuSb?an[G>MWW=aV0k#Dl'ba.pi$bp<#"V@+ej`m1ba8Q=^E185+'4=$$&t=V40ZNH6/a1'-ad<nUf%qU$mEI8bI)N3h?O%(OJUBA^qJo*0Km1p4=&?Xa+;rV&5%hm[(3AZ67LP9l%fYifrUTUiH@Pr&A8(k]0M9p/4"hho$k"JK*W]Ze;Bg?kqA(+ss/6I_fmQ%haXOCl>a)V?L3sP@C'#n3!EL+[Fk0"IRe&EWh8WJC;jJPD@2]cPnM7K'7ZP>Q(EtuY/MLWgU+bp.cTm=.^QYFH0L2r/ot=RE>f#I%,BmEk>%7"8HbAuT*Y/02T(4\p`%=DZY[Xip-,^q<_6O-8MdoE-.gB,u7*69<O)2+WjOSV4Gl$T9<_=qq1JATijP6$[Qg7XTK^$Z&%RJf^<\aT)[lLH(IgUu3IWSBViSbm7Sor2&9]`BuD`=\AlW,"HI@H%&5[SKi9N_<LdQB<t@Tpk8Po/KKmA`((p,G=A@.)*J[Zs8T!%).O=3fksNBRV8F<]6uT=1srVTP+p:4M=,L0\'*NO'.nki/PAtT:"sq,/Yc^DZCWr$Ju&Vim\85sQX0,.HIP'>0l*N6"QYjd?1apg%/EXt#g?;*4G?XZ-+5Q8[@Fs;4H64_#\)`0,+$H1'H-'=[UIXuPBi!)Gb9+<43t$JDY9?ab/\=.,^(Pk$`#\^R/G.?")!I`-I>qUR%]T8?dZk$.YXa[6FI4tG1g#m`rBVRGojV*M0HI@_<gKnfnp"M0!$@t*]cG/-CD=j@UOWW:jD$#J4_qSk>[cjH*28"pGU$$:"ScPqo%TompVrI!bT8B\""9)!4_[-h6<"_a\d%F@Xm$u2U:/:/a-jrAEeSb-G?"e@J9hFYlrS]BM1>:8f>Q9&`;Bs"a-ee!0Y/_fGeLK7SS%kELl+H>1(k]isHdRqZ_2AL&(nUjIM!D6>p5VK!=,:")sa2m(hWg$tf-Sof-[mp,^'lneM&.@9dMlDKa^cr$]!3^8FZNdB2H>+j;?%:Ust!kD"<23KU5s:s0TpUC7U>aP#fF6Ts^?P2,J06]D\8L0DmFf&tW8)euo%l^5P86VV2#%J>sTX`JBY-!c<9:RF)jT(T%Wp,P_s%[:%gRpVg?OS//K]l@o\u>A=`ko?S9#;u7i:VL$Cga$$?')C^]XC5`49eWO^TeN;rs>+:oW=?a<2cfjSmj`9utCoVX-XJNK#VHV/^%C!s\oSoQW,c:p/K)k(N#(,XQ^BK:iE;lr:;.P\T8Subsi=$::fc\H:Q22sG2X7au/H&oZX6N`>@Ua:46fNp>;V%Ih#\3ebMX'-B?%hHKM_elqC/VFpo)Xa*FL[Dj'VhO72ipXX@:oE??"gfotIBs,qGYBjuS&auie=U(uef9@3#>jLK&+"=\]>#3U,9EcrkocjE<5'ZG=%[;=IVX5hG^9e&!O8B^5"0aYM)ek.g\Kf\\*[/tKIdJ*(_WtKR,F8j';GLpjFf%E79mA?rZ&9QM\;UA]Z6DD)8hgk-`c7-?j=g+9B%WO1<\3T$JnkO)N'D78,a%c)>3h*cH]qmV[U>!)UN<q0Hd<8LrV>+rWqW\K`6;L*Vk:8@HghHu`uUA!<B$$Fj`Ss8#qH?\c=N4S=H%n(??L&k[@"Ha7uG?!N`)e6D:BF_[.UJF6UFIC49\]Bf$_YjRr0M0IQnERA'-$1QQ^(>Ir*(YuK*aKg<ZY*4"7QXZ9K)JROPCV#VY%?DCPp]gh\hp):7EmBpagQhMPdp)9h=m5=:Nih!4C*RnC?Km7qR",$;N>;Ui);"e-TEbBa08F]rp%VW($iP!&S+6F"jPl\8EaP1C5%h+^h+NKW?S2GGrFZ!iKg`Pu"JM_07oR<XWaajF=/NaXNJ*a?0;hIGT1;NL2ONd>N&5s;ZC!]8SVeZ<C*@Cf'_UF+a!/iD="d&G.<%G9S[5n7uaDj[@BmNpBuZluR=skd&7!?uqYd1J[*QGM.UD^0qOX[UAuo)_pfep!K3_/Z58bQL1!@['nOsX6o2<GcP#PD4'=bC=TX-%en*$J?%,*A?+01Eh@4,QAIDR_5&Y(N[ViRWel/J)>;f-7NSA:&//;9%ZZV=a0"0GTADUq!gp.f`e%K/T2T4A#H=VAh0l+*!lc-cF%gh*U$S]BOR>+7+r?I#.Ofu]n5l^cdHh3Y+ZYVo_35ZcdE*cr7#di#XJK(XQ&`GTNN?#f>>eL]&.I^&Lub2)48aBG31kK<[<)?nu1%CQ*7:cFD24bkc/3kAH??[[t7:g_.(c>=V[R2K,s:P^9+,Q[CE3enFAh%"%,?UTMQkQ*gg3Zt[$pUFk(gHs=>TClPl>2tXZ7Q:>)@%X^;I!)f9/0\T=uE>;mMm$DKK5MXB*/=JN"M,+j'9g,]FmddWSmRl@ZCHdLr?993tM[Vj^[j`k^N/J4LOUQ%j&7U%7t>jf4.UTHm?%:N//EdR-U/>RQi:D2R;3[U/Ab(NXN%osAZ'<3Vnb2+E&?"HBkX9=\8CIC@GB\a$M"gK-^DUTIUE/pEqidFM1,%'e42Zb.rGjd],E%cPp^A;-g?]hIu5/>ZSa?UFfPW.@YUXXcl"BI_r26f"o&fn]j!="r_>!;KMh7YW(9XQG(\C1[9rXOpDtC_.85[44)PlbEXX#$]VTd%K!dG^enFAhPgefT[N7rL]&%,lEEJu1kJ/$R+cKu3H)%LY?0P1fdDhtPUTMG,*1M0+FABNuVJ5=d[UShFDdP$(S7h;t--!T`>Lh;=%,N5BGk2W[@)eBJL[`0_6(%=t&:TePIS[Kl_-#_t;2C/Io[.T+@Z-u2A7]3B+V49%$ZuqGQ>k:]pO1*4QdlM><2r87IHLO\!%`1;E%<)2nhLQl9-?#8>\>l;7`7f>ZS9ul@t[LW*jhfSEiS+ad)D;DA@%DK=*W`STnHE0chb$/_rh!8QhF`+TE`ouf6DRFasXOYlXOSo;c%D2g:2G19`5)A_1Eli+#_XgV9"L4HbeW+fqQ;4GsJlZRWHIbni*ZnK>O>A_NchJ1O=H)jZghHOiA)mn>3S[I04SX8^2^"&EsO^k`k%]6H!!;fB)&-bS!\EP(:e_S"FM_rs`!CUH%<2Wic-enS.SpKefI#gKg'a>/F]fcJ9tK?pOM:8r9?Y9)h<)qGDA[UrtF^8EjCZ@D,.%XQS)L;^(^DRuYa_D&QI3Cho=mbaND$*AlM<H?+'T=DkQEGJ2U/l8Z^DfjnX+f;<(aH>Pfj-)gRlPTHsYemg,W`HuG_n"nX56/fL8%*L6<O<;O8Zeq;,:d!KWP52L)(27-\ZMQlj/;Gid`1T]4]S.G(rl*.hP7_aU_>HoJ]C@AR<?ReM#HYqH&dItP*D)tDJCTA$r):!SG%3dKRtlOYRZ`HuHD39[b!X*CgBY1S)<GVSjE3!\ZT22;'U\;0N&7KgC_L,O?pc";6nd;*5[U"<>YI(\[N0f%*k&,mg[H>TG^n$Q"$%[+CnYI2A)7]s^ld\VAq[]s_Cf]&q&H9<Tq8=OR*_HgOS#Wou8$O+iLqcHV3Rg+(_;BBHnX<k22oWRY$cfuMHS/%>.LenHW[741SW%S[N#)=??$.Be.\-iI84%F1Jte)XRNi7[s.i)K";J=[JaOTQ4/cB@H9PS"8&pn5+?j^O(7Y]6)^tD4&1-iG#o8Yg,=Qg$*gBq&XZm%ZMEF\a\F3tm1%7,?@N@^rtfm^/)0IBGs6h&%c8?q!f]#1S+`19)b>6I8tFE.$]AQG2)KJYEAooTlB]H'dBcM=>=1-"pX=HNS=7mQ%OKNj>%6`#Gfhk5[mVVN$/F/lkgPM$J>Bm:Fmt,AgmCSsKruR98!5HfNbg+3QAG;Bn?359Do\Jm-'%%)m;:\bqiu&$Rd6D1.Cf)s2%2nNi@Zhs.HLCrI8Z$XYIpCnA!n+SA3<4I:M&A,EnFqM;I@S[dM`5XUb\%oE`]6Dq/fKBcb7JB[%GTleQZ[pc=>P$5N!Um`DAc"Y[%KjX>7f.:M-rd%>fF=6GS;Tf?Z'4J@/Xt_KEm^4!n,f8tZIG:[8n3/8oD3PcDpYVOZ%?n#Cs5,KI`Oi2>AS:8O7G'=Y,<3?HUA(72%_`\i*fO<JXC_'>CG/&'G-G]':^/U("Y^>]@X8k=dZiE1IJq2YrDd+U)NXCuRqp2EnM@@h''jcYk'OLO>b+)#8mZi,H)8#Y:IE[i4%n-]&g@]*'/Y0lIZk\S+Y+0``Q`RZbM`R_a&CHmO*)P_''akMHM@<XSPaOY'LAF#;^cITZ0NaX;GCJB"[_:B"2e1--afK'q.B\e%*%).lRLme1bJOl=!#C,?R*@gWoRLJ&@ckHH(4pZ=Oe7(UaV\+3Op>%erUNbFuE-!L&8m8(`WpS)s`dCT4>)?PWDh0G$4!pc5m"kJ)]%m=O^8enL]YCNSpiLrn1%h3"bURY]Mi.q3X>U1Z%VM:K9EmrcM45#[JJ,unU.8C]_@8CbC#>=G"t<HfOsNfcl4:5]Z`@fj<#[#:rr%2-hMC(KL4,/*BL(mesAKFZ6;2^[<jDDb8K-!:1d/2TFo@S-Q%)2bQjeV!@rnUKIlQh2%\3-%tQ$9c'YkcID(Yaj`?,Of<]*Q+%u:%Vlc/^_\WucHQtbmZP0<JFHWT-DSNY@2E^+)&p:tD=m,#b;5[24;>2Cd02A5O^It6f'fd-ahH*jbZ4Tn,=042ISrQfTKSD.TD8+6C%3>[gU@t?8(:?*KnGN5Y@(J^mA';oo7+\q329V0Pk#^O"nJ5qQaGrc^l`RE;$`RAO1`R?j:aO=k-K;[2GOf-YY'MjKa';t`C.A'Er%h,e(9CrGT;aI5'qVbts)S,>$:Vbmi"0o,E'"bn8-SU'li8p>VDXsl+gVcTU7g)s6Rf2>$$S4JIafkNq>rk"W7Lsit*QsTU^qMLJp%,Jt+>?gmN2I<Cj&EG2kJ"@D?jKkFsh.$P4B(.uW95UbICAX,Yh.kIeWL!oL/6L!_PVjCLX6U[.sT,=C^4cuPPk893r,^gdnr0UK"%/<tMsQV"S;r16l'l@u9Ahf#L<;QVUQbb84lLRq>EXX./Y^4pS':p'&!=K'dk(C$=`C0f_S;micH:6TEeWDfg>CV>%o<GO%ITj#'.%XBPMG;RIR<oOcKs;-Ab,pIHhkM:SeMf6<5a:RtdcF_g'uT(c>krL64@S)SUIep<=*<j^E_j[lhF5V:C;6@4U@V8Z3(21ku^>$j$-%Mq4(WXY6UF#qJDZkuX'^rN('Z\E0SZZYhC/hIZ(mVkI7o-S8IcA$tte9@hXW+^%G=Q=Oi,:QkB.:<!4$-#7rD%EY%\H;h,HL+CAL%SJ.0o^Em*i%Y\2O[Dc*<ee]lLXYP;djlc)sXJm%>ZBf-j,jXc&INhqdI[7)6(#+nZ^Y,JpI@!QiRW[iCqK>IG.5bmiZF=F_+kE*i%K*n\_>NiG+9u@@\3aT^eFmFtu5:t"RK(7'iiM!AVZ<#1C8Cm4b8[>KXZXiHamjVC<E_XZe^>alX*HdKTD#kq/C[,CY=n<$4-0o36%i;5B)f$jsW=kC=YQ'1ed9e%IT&l>Z3>LKie/LNb3f)/(2MDYi%'l,8G;QTh3P@@f1Ah)Ar7jc3D$G@-hS&V7+QOmQD)U"]C6a:gi%LD=SDXqYZ4%4g"Q/Q/\+HDt">4/QJ(A]9P7qo=Teaf-a(CMSi+X=\j(Z1aiW@dPif/(T_)Z=<3i=L#;0PDV60HW$s&LV'gf=A/#k%`L9!/MD^pG_(mIj\lO]rj'tulVESP0qA`9-.i%ApO&W3[W(XCeb-^GCKRsqS7F-ZsI7rb/@bkXsB.ToYZ*"gG.+T3$=J8jOpSVKF%\=lm'.1'4`[WFV\f#<HE=OW1!Z1]S:`Hn`?'e@j='i'WD]AnC==>L^>($jt/WFBZ!-"T.PCW=CsZ*kmb@]b1!:olfhXB7tq.+W4s%<35?[XB=5YXB9hK@)^i+/gY:fB;K.`239-M<d'ea?'7(2Zo`82Ou7S<-#;@2P-m/O9@e=3bUH[N*^c*u#Hf@g)mU`)G?@Jgb;(gG%,V^rYFtkUbP,pU5>:I[_'5gFn[#($KQ[SghADK;<k=A1M^8p?H=gnRSTp),p=``P9ah"Slc]]O4P-!pB/QmFO0hKsXi_m'oXFMU4%/]C&^(-dI_XnthUFTo+)A:7U<%`u<9AWj-[ePVL;$tGU).A'8=(2&;2XVJSsC]+[7h'Si)og==SRrb46-Nc2=*uhuR)mh=YYK*0T%lra('d\)TqHC6&EI_1_.adh20=pkd?->0e\f<$7Dak?'*D4u*%9?o`:F8Mb9p\WK)@WHYKNgq,N-"l8W[X/XhH_ZOi4Qbu4$[bC%%%tBX!4%hgcB=G0n;^D,<m8d70:CZ$[XKfci/j[*4j!h+#SDB'Gk#s!Bj3?Fjk3T0)3W$V;oHCl)Ze[j_CcljNk<7I2p[aeOR72<-%Zh&CZltBp<Ft<HSXaA`%OuG,-eR^0c'4tbI3-$bmZ]CBDW/]JD;:^euNSY\Jd*10FGs5^c^,R(V=3W;A`r2p*"kr0Gb.\!q2a'I]%:GlgtdfeA_.>'PTq\j1*#hl6GBOc\'/Pi%!]<0hXcO>"Z*la*KO)KY0B]glW[+i"55+a;D*Zn\b>a'3aS)dg$jgkuMj(>t!!,Zh%%#r_qQGR]4I?;&Y*"r1gHm/#@fD)3t]U[5]t2F&5M;0fYSgA*g^2L\_%0@7`-C3)6m)l)>j4DY/fX@e%%m^AFc9[H8^EH8tinFq)8%#&P<S5s&7VTP]Hud*CM\[*do<D=f/giu-T3X4JcSh\ie0<VO-2)rpWZ^$^&J16OU9eQ_=haP#s)e2,%rW8:9<HXM$0KePUT<h,.>%eG`$Z2?r&=MDdIVbK/A=.L^#&B>a,%N[E$]]+ntRI`m]'d/q1$bQTm%K\9cN_JD?/3^]:ZandMA)oJ<bOKhZD3`V3!NJX=P?&Xaa%>8RCTeND)?'OlD<+N/HTLp1lSl5C7X1p70Hg4P(G$,hK;<@bjSa]j,!$.r\N!poW2$6^$hisfb]Lp&spL"CSFZSIIOY@CZBYG3G]%lddi91GIM8_!CJ0_J;9/4I5IThQBgMiAD8&+1$(FT6h![8U-5dhCiIqdpbtP6G1<_Xg'Lk`jPQYIFbgYZC)!%n_BQ:K\(H<RB,fq%?!GVi?ACfQY@@VK?GgloFiJ3ae6#0XY@5&`,[U3TIib?V;Q]lH$nAiC&QE:%i>P/N3q'_AWCLnJ*_UGm;jlQ)VC99g=$hZ-R!Jne%\6k4;_0&GdJnqQM%+fbVi>Sh=I)*-kc%bO<;SdMN(r:@i/AX3VG-unZg1t'5F\FUqf.aP"nc[Rlh1Y*])$SX%[+6<&f4"-"l^5d#%f3'oH2*BAL%#&Y[U.:[GJEn%tK^5S*i#6O<f=pIf9.`19_)9r+LOKl=5=31LP6e5VYsd+sP!miFi%[?VW7n"9:`ZY]W/bRZ:sHO>%6leot&[fa-6k*Y<-fI,K1BY$:_*G,h2c"d\0Mf/Nn*=Ldpu#kII.O^nY'J_JBqDc*1JcWg$`6)Q"/[0YJ%p%oZc]7+AMd=`[4*[e%P<D#,)\G1WGW=0(5Pk`GS^N*khIY*AZOrY'QbM:0jK,`HV9_nN_3sdSdXj9QG,>Eb)-WrNi-j]#0F\"!kc;ASIYGuR:8B1-.hB$I%g8R$Ud<""!BP0u/P(GLSFs[B*57"'kEWg*@NF[<sbY2.i,66L.k5]H(:+fHFGc#X#8NZP)PSBXEa.:IK=nSYfi-^S7.6%ukPGFW<%fc6!?>TXq+f&U@R.oLiAH`U;HA'_77Q/HT'$@Z*I<`\_U32cQ?bf;/mNdT6ndI%B`F<lX#[,=rp.4t>?9:Zigkq0m%:<5tbN`<@%%BI?f=[,;4eIc`65(rMV(2%tTu%AX*ASUOHR]l`(T`b;aA]?XW^1J;qf#&!@8@5K%65I4[epJYu!fMAULE;*+>#A:WmbRVpWXMX17%^W[2%Sf`9drKB7qLBpT,_:d`,kX\&,A7eT<*Qc-CAL7Xpb6t(./r\2?OB!,,/#\c[o\`EHls+-1>&Q*tEg]?7EFO#80Qn/?AcZsp%Mur/tF!c9SFBG!L^tn#\"%T`rS0/f4?04gmH+1j*?7-"H.PmnDFptmDf*e;t\Z-bj:LLVN6?H>)-p$qkAp/-6IqAp=A'FT'a$-CU%_hgfTKkusH(TI)%BQVNln[_(EW`K!e"jqctjY1cPA`kag<a%gHg10b@Ad:P&$UQ]HV-KbDK-O'5R33E5rS1Ka$SG(M$8^l!'h(Vn%l-'ZEMr;ei^7ClFbWM2]_T[:uS\iT2T:Nh->G]oCj9Ol$!5`D+^i@R8h-K/+X43:'fI>$$mn=&)CX!J@b`iId(p+Gb*<0k/Om0^H%Lb_,<=_;7NVaJPli+u4Eo^Z[NZEo2XLoQl:1BVo5#?RdC13C$G0f5tJgLc;r$1fB'33te1!o2TVLlT)YHLR&YBZ^fk\VmBPi(S*\%ftj*Q>mq`pC1[]`K4]:G%_U!qc8e?&*CD<_K.D:oA-]$AGBWIgh"WB:3c#qFK.Dkins=XY(.6gi$_cU'SK/]4eg$ul&3;.1+`o\p%bRQfD+u_JUa19#hIfXZ83!AGa-N[uCj<d'G;,<Urb:o3mbXp39cgf*#%:7*#9Y%u"%&_n=)oKP+_I>iL1,O<2QP-$&fJmr?;VjKT%RF7R_Td00A(j^1RMbFT*3R`8sloEro%F-aohT-.424ei@(FMne_/%hnUZ"nlEu(W-KtZ).hQjXu,R:O'9&qQ+d;9<cp@0Zra'NN*%C_?[fgT-kb]LL[0qa"H&d/?qPO/',:gc%uHMlbk"R*_%j;>-OOd99YRNgt"'cq\cOXPiK,AXsS#p=s^Nk'U`8Q5NiA:EFs%&:H8t%T-5-3X<3S^8:NSh=;mo2V/sp`Q=Z0o]QMXm>&`*GBu+$>*CJ_,>&Z$qN`hKN0hKZBFM"mm$3j&1f&:,('tfNVCID39<q&^X)'Fo,%$I>6F%'=Q:33K@@89.O2Mj5'j%E<U#1jC=FCoqorF6%OO/!,e(gB-X5DV'#YRm?g\9&rMNhX4H7jh0NRREpjJFeNpT0(OT9,Dfd#%oEA;\V^i,WEaJ6Y^L`l\BsdiMJ)gc'EeSYi8fdAt]\mPda:"$E=Q.dul1TjsUXU^JL<]7MRg2P1kjFkfQ/N&(*;^buCRl9S=n4RR%DpA`nf8@6!EBE7c#>RjfXrN_o-L7<1k673?7:'pt_^t2dR&-A2dWrY@peuIPPSZI)PSY;?B-f&Y0=XJ^Yd@(H=S`qar0<,TjnFA'%>GiL^bgL/ThG9!E&R`(elZDrK6tX1B#Tno>&[#/k\&He?o%nR#re?-@Q$?Le/Jf4[_%G("]:tQ->TP+&K3ubICm]s83Bpp*\VUdE%nQ[@E^LX-ll"E8sZq"iG[*t1!0t>\q3\e-=c&'8@V9Wr3;k8&N@W7m7&=LB5DT:oSai=Xl.PnRJ#<O_dgeX?S0C\><<ggcW\-0Zi%AHon75*W&TW&8]%;9OS^B(5Mu)YqYe0(0OC_;,=@%#u1LD1ZL:4eHA)[7AaB<2/YY<#Ml6eai=W%.8-(bi!>CnSZJXY.6_OKA/q^%)>q@`:A_'?"UV67mAY8V.lDRIe5g>RWN9!MCMjWbp1#m93)/77mF)Tie[9`"b1,@OhmX-!L8S3EdR^8?[o:W&i$VHiMlX*FWg)T(%lIPMj8I^-.A`m-l#5=ABeDPe1;hMPOQ2-fK4m\0ZRb4Ofi#EY1%??DVmmh,3>DCPZ6enZW&NRQZ%=#"gChZWRNpNAa=l3P4EAeD5%?\A?l1,ZQh-`7/eB!i]("(#g2XRV&2epQX.>e>n&fBrCgaXu+JHei6;R2l,VmpNYK1HRTVG3@C>CaB>$\0R'pi,1"l#Ig*^3OlE)%4$!'nqXc;%K59^4,mS(RSK,9Ons[Of**b0/ah\,n8e)nD.QP"?<08/j;hXu#/sC\M$,Xg#4joQ7r8IcBP(VMm.QKJ?d.\'fNYcqi%rc-4W,R8O_S$7=&M3ER!::..ai#\Uf%Nb@CEcCnd-O7[!kF*'M`N^PR*1R>lSK,;U7h'#W#Ij#>Eq!+1DUabb[jT7WL)4C\h*sA.%5dhG<!SOc/8.OJtG+=2$PoT_ai[u>mZ]#NO(M%#0<)g=LqkE1@EcA]^,R86<^SMR4.670_e^GokAIDFcq&S+!4n5qUF]Q+_")Kgm%gJs%-kA=J!.VSYJ9sBC4TESZg#2$r!T"D1lhg=^AlPGS",sAM*s1X4$>.ReSf(/7:n>gOY$?i(\rC[_LXDY@[cW&@N!lSSbUC9eM%XqA$6Q\/kqgV:\8[H>m8nVTechIjQ0)mUL*r)P4ma*G_mjmR?i%Nb_S1LG91E.$.rI^e,2X4Z,E\098IbI7:rWiR9WJ@Ah1F8YGI%aln'Z]^L+5"+G^q1YQ%(W3X-hlH_H%dB<H&J!V00@J.IBihOeAN8O#(pG44ENjF3/p<R;#Np!RCNa;?/\7JmaYL`#"X/nCbV8kdl%QY>#l^A%EUo<.,ID:H;Sr6,7/HfJaU\MPqX!=d@[NGDeH?gFYrRlU`tcpk>D=,2feOIp#F(&n1Q^K[_P=>BI:YYjA'I(nmZpi_[3%9E]o^e@=>Ds/lCFg:npc4gP$dZMk`E>>JDT#'YR3BqT=&f0%/](0XbIiJaU[=O^Zj#\Y)JJa3PS);bYQ[HGB32PA[L5Kbsf]l94[%3E]MB^U/ssmC_=4c8b(eaLXLORqD78I:3@94QGiQi+iFZFkbJ`;D?:?NS?&.3m+[9=@_Q2>G&IX*MLJan?e+%)f^%H]=i/<Ch5h#%?sIW$pL789QKl4H7^)4BB\_I.k;18`&Z+.;Ck'I4\"2)Uj'p%=RJZ#nbmt?VNp".M>MD]&JMK5<f(m+5@@OCa^u:RU2-nsH9?UM1%1?KYToF;ru545U>QJoCd.t9c`p>C:4IuSIlNEP>Rb(mFU0O5J=46tVLY"QM3A9W[uTKd>*Y)SQ@XW#G#hno`ReB5(;?0uciUL&L'%CDdL#`jpcg.P!JuG4W=@m^?P^>ZY-WNo+\q?&/Tpc78^JlY>'mQA8t22aWYq@eDu<e[\Iu)PEo[\?bJ<NMk1PMVa,s;LN^4F5QRa%*ohY7]MsWUQcD2`]b?6rl5:SPf0\YSeP^%Q(!K#5p"j2C?E:aU]guWKGqX?f[?#1k3@(f!hQ%uAP[VtD%:_E<X'I)a%0U3[<@$J@%2?pFfeW%m0Ah"A8coLWEFI;97drutnruOsakdrqb?c_?9Y*4.gb?-@XXPV)<f[$GCOJR>kWdJ="5o7X%odtu2Xi\!E#d,;9oj_HG%FAfj=(t^XejLa';2\rdNO`VF!GjlPnf"K?WPOm3YDEBM_q&:d@BogfT+;Qu@EZuWl:1NgQB;+q&Yr"LE*Z@\Z_6_R8D>h?SMRN"[%AJ`ZfhhA6X0?`Fg=I$lWp0C<%!Ed/hFC%`Pgul'9if)?bV4:Wb%LFQ+k1]t8Wj7s!"kr_BN2)_9^LO()BlgK0?$jiKmm?2kaO.VW%3rWaWJQkT7R:iREU[N5AZnhG02Sk:di\Jbn095q/`FCJ^?Q?KMejRP+SE7;#9]MMT?>riFVRbsl[&gU["1&E^jT1$f=RWU,?[LqY%BDcT#H[<!*k@H6k<D0EqkE7=@<@tj8.m94'$d.mWJiaa"ca\-;qd.1][Q[sBnjlt,o-et:jifU0L<^a,-WUV'p"ZK^B\0qH@jXWI%H*1Y)JOS6\c_Uh_/g!S]Xm)f^ep?l10&$r;_faQk(,9$SeL<75X'L#S_`P!q[si@=Xh/>TClgNH,)od^DsM#m<@3DTq(@s"oN`Ys%Xe5W;eI#uK^9&J`>L'9_@0:YT[8O">`Wk/Y_Q3#'ATD,G;V0da]Z)e`>)XsbOTrsi5.XN$q_kJPg39[:GI?ZNo?f7mFU['6EbkjE%*_td!*gYVt/Z[&,Ci'K\Kbp5(gV\5p"WGOjn>_W*DIM^.d'ITPM"cagMm@!Y8nkL*iD]J*J]cQm!c[7D<QR>>b-^0aOC<mHCO"7/%T+"OS?h4oQb&c7]g&eiJQc@$e['^JBW(lT/fE].eoaaDVliR;rDd"=XTbL<ilpGDt$*b"PAJ&C\<?g+dLlG#c!GB@Ec&C;11&r/r%O&Ju4&0#!&TDjPeLn2j7@NROmN>SqlG=:dK,@V`SA7p-h+nfn1qj7um^usj83'DY;/)+f^(Lj/ipO,MI4SQOGdpnqp>YJg?`'t\F%r<fe?jX2`k+3JjU`-,3$Z&bJ8BL6Mdi^[S_,PKM@.ZCqR@NRX0b(u$Y(d$f;fP%kZ?s2m+_\`)p7Vo`Ug2kf3Z1GrUfS=K>R'H/s%FfcK"%IeK(hi&"[XEC?V)u!QTo(6>V6O>ftf[1FCCqT5CO5H))UT)2aBS5]?)>gq3Z,qq6cIrd!oO."f_Nq]Y0K,M,_a'0?hQ78(%A##Sb"Hjoig-q*O.#E[%)u!Qo=:*[Eo5cGl7+pe!rLGAV-M1>E8D.[kH4NmHE=KJC.ju@SRGS?hq^nuB7G3GOJXNg)T"K\D?*;?d%0$;1TLSHV9iu(i5;0MT8-l_VUI4<<&Peb;+*UZ4\I42^k0cTRcmifn=/tV$1bRPR.Aqt.6Au"7T6&NNqf_p7><@7H_*S\)iR,%qc%;.j<\\3j]ud?BY#\6\L9pfq6N\27VPSi]\E&n^<:&,S#'0/4D/1c"D8Z_KI8fgh[ASgkYG*<me57YUZf`t"%t0?h_^'!l(c&nZnr%$+&#FAUM@2%-U$'@<NKG0H30tq[p00iJ#rujR"#?P-\YY&87gkjhM#Qd<l#_BR,/P(nX(j:r5SPFr5cq)tdFU^_1=9ZPR<8\`Ge>%g/1(s2P+-m/CKP>MmUC$M6s#e7+rK.og)*D*VL]*c?Hnf^h?(ZD:GDPJOhlh7AT<^Q:^u#&S!0TYXss8D#CgJU(XloI>-D6e:cP\%?4q#91JU"cg7M2'*0*i7*bk\*;*3>f6LA`,6LC/aL"bKZL"apm@dTOr`S.TL&8R&r'5PX5'5L)W&@N+&nSKfqYT7cn@69bdK'c\"%&@U!UI'MH*Mk*/d5*S:ZY^P^8-c<AoG_U'2=GCZD1ko9Q[_8%_Ctm8R[QT`l[c+uU:GZhAQ4;UB)2<#&ULDo5@+_o9)n'b$@=*`G%q[p`Sa.Hde/h?su8^Xd0nSHj<2AL&?.h18/N5PY\*G;#`[QT?RgRb_[g[9.#[MN/&D=l5h&?N8>X2UB4gV_@AmIcfSgN0f3g[<Ur%D:`UV7bMhoXQ@/G?_UsJpT*]sCkkRh[_iLVgP>>L)Rd=#2Jd`2@GJ;<0Q,Y$R()seCO*Z@DgNrmDgPbS*HEag`W@)6]trGbQ3KK5%7D-<TMkG#.f6'k7g>7rSVLJsgD=8&5-Tuf`C=B+`]9P4ZlJM?Sg:6r6(1gtBIHC/1ZZ[kRa6kXf2Qj`s;+B-n[h6@K's*D[m^&@q%,7]#Hm<gBT]9Up4@?WUledjK>Df<u,]%dP6#&*$CN\S'P[*]%ef;CnR\(`O$NKkun\!4$X5eB0fJ&ZjYcpm-RB*.IJ!("6i"C$nZ%NVebW%L2;@kt39O4'l6`NO!+92^;s*@u@U(8&jn$)pO>pBVb6m]KK;pW:-[f-p--MPYDPc$Hd6tNFiE@PHrRpf.p8_b*KAk`YoT$%X!SEhj(67i!&6C+=2tLb1H&R6H;KP@]dh%A[EDY^Lp<^&`7V\Fm[:>t35sN)9Z5TY>p1R-4/s[HhA:)#0k-o-`aW8-*J7+?NBpWu%=G36Q,@O)8M6LDu@u$N[)caZ@]?1=dUFKcOXU0@C]AmKDH`ucK?U<=Xq5\GW11B4RfD)Qq_@Bc^@Dc"P(MUaH2@s;l*VV9,7G.Ep%_bNkN+CX^HZSRuQdACE\#dA=52C'[O2SAD/^2:ZG&L>0ci"KJdg2CZ=hA:'a1gd_\S7?'"q)Y%'pc=.fpc>EK^.(W\j3#8GMeu/#%7aZ:<$]3Ii<tMPom@uUHgLs%-BZst6((sp5DL8'Ako/*cB=Nu9(0mW"Sn!usY'9;h1L%=CZWshgm>4/?*QB_;c3KH4GMpMT30?)`%>OGU(NBpTDJB0d_7V!NW>@\b,<b*4LMT?^>;,`Os)J*K&,&?g[R>K!GY9d=]T[Z(HZJJY@W5(Hq;dd:[e"O;j``]_pY)_HiY/WGH%B)rq\=rp:<*BmJ*mFag**NL,VFVqQc3_$$G)YU]P?!gPO;lHWUI'fgj%5>4,R]95OO\!8e*KEWh*>>-F)YL01&QOU=(KI4_UYuC,%G\kW&JnfM)QoZ-g9H=e?Qo^amR!R?g9/H7Dc+.HOE,K-"=P<XJ!]D*HhQqa'eLRN:]:NN6LoKpM1K)9W&Q4C6-;rU?Lo<$TC1/Nb%L)[bMRAf4/%FcHQ#&6BP5`J&apA#Z+[6urLb<[#DZ-GJtB>eM:K5heeH'`M&EB7u-RYF,p+4<$8j;aO7R^Q!G9l$sPVX<(He+!^[%Zs)9:XlZZ^g4R[!]dpjZ;&W_'Cr@ah6"cGUP\$)>QPE-U1PjKCm'4,V8pa_U8pae^V<s2#dWi08)eDEO",Tn/o8umR;lWFCUVnGF%AYht%DSdM:N?XHR?_$.."O^]Z!bln\opJ,"91+>R53'&kW`djp*=XZ`7SA`J1"-H[!bj!E$BU#,NG8cqf4@o-A&FRH_Qi&lN$+@.%=p`6(1\ZQ)g<"rjdO8=3ft-@_>!F4KPsc`=_r%^hi%$%i?RCO`8imE:=W1j/TfFn+Q2;:i45ZE6\gO>C<U2PP3>W%"^&:+r_j-6+%!lJBBrJJC09ZH*+WF1#]rZ*[U&n;KC/%G-b?4a"(1\*2-H<k3q%Ld9Z^O3tR^KT%tVO^"*ikd4BMGY:7X`^Y=_I(R`NXAi3V[*Z[%a7/p4QF;'-=L_8779K=a<oHV'((%[1/DYBiN2]Z*NKb+r"3"Unl)Q=kdcgRC2mIJWQWVtp36]f/FbbY1o[T"YE*KP;g0%9HdV.WU%%LA,N$DaH37+0Ap@?U$bl*a`r?4GkN#j7k@JFM1K99;UF+574P,F?HL#silCknt]gh#6\ln<XI<%+7<+8jWDkB17.[839sN"GGgn%o!*@^5WBFsRA48BM5/np_It7<1.B)-l=5Mr\n=YS$W;b4=/(rc#(Q<j5S2`f$24kU9!oM@i(@ToL5s)'LpdD,./9j^[hp$So?<?T%d?[,_YW>:+o<f8;Y/V2AkB.18f4Dm5V.UB'8"VaF*4+br;o31nD@luRS1kNWDGtK_\6P^p^cg?VT;+9^cU`O`i$Eon^p!0I#e6qp%&Faq!6GQIE$ICu-g.(^_g/kCfq$mI-UC3a4"pN@.;$inB*h+W(5f^86kgeT;J<'H[1#QuHN\WhGe-M]6K8%Y!G)cQ(EghdamjTSR%)>Vqq=88;.,<rC253r8g:SSC"=*CkT!,"VUoCL\&^k6hIql9Ph:o.7TYr"\K9(s2(i'$b]X@eOI>\B=%!;OGg6P0=dAWun7ACI#J%BdXoX5KEP@!;OauD?ab_;8+[a\u-DaM#Q+8h=X?/!$+el!,u"B!$/6!!T<Bb!H^/j"2NGSjCc(hiH$OULsPTp_WR:[('"6t$^]ng%h+HbkYWDl-?eKi-Zkl:Gs%REBJG+T1!0%>HUl,ia*Oje:^8a%gKR[cT2F>%'NR7B:&cSo[(ua@goSELL7A9h:CN'B_I?=Qa`bpBO%:Ijb1(K1P%ea1!&A!P\YJrWoTj>Sj-.EYjIX$0AdT[tfDN8"r;d7Qj+%fEK//],6`m>]H>^;=Nqhk2=TZWHV8B.rNom$gQt:!]CH%,O/K#/u$'kFJ<D$l:fM.7an[u07ppq+R4`]q9$[FSl^?LNL4W1'9/r/Y07@$d<(EF[eU<&=66>:4DU[YcE%dCDs%B7%<faLN=]I%%o6-/5C9[;aFj3#8Ws1GO4buAiN1pnB,'Mgh7)u[<g.+">Sm*'W4[m\qlolUG7F/)p;8Ao=S/b[/XJ4nF;Uhl53M/T`hActRH:AC:%rF94-(;]./kACnI*):nL8&8K;(>Val?K\!MG4!C:FlIJTS+,+uDLBHF)'$B]-pWM^$(k()L2IekUO0Fd`ohesl98q03'";H]>W$t%*o+@rIRXo.F-E4n?#ID(60"pZG:%o2jXQQl"H?:!CIun:Z3mfK6)3\iO,_[o"@eTJg\nY68d(^",=4nkL!ZdiYZ`iiNS>#hnamP-%%J(W\5)/97;F*.nT]5i:dC::%,t=YY'iQK=%^Qm>_[%_%:`SjIABiLUT8L;q7n;<lUJYY.F-EBHp(\YuON.66gRLgg#G.B[;<NgV%'M5'LbD&F5(d`.tkdUL+\$1^bo=6,\HS1M(oUAB4Ce,h2ZEc?MoQD]t?7:ds]%/n*)h#XiCU3Rl(%eZ7YrW=Q,+(h;"3V#"G]#qY%$E(dbL!suYT0_A(@_g4:d4XGCE%U)6YVcG=qQ43k"k:qs,3j.!,3iiS&N+Cl*mm2_lMMNn3m=!g%4g@[CLT06:g&NPBcEMN3\*n,%hAd@aY20l>BWag-"Xo;0_taV?d2<@O-<S.lE?@'S)Y6r<Ee/?q=(!$N<F?i]?XW8XfO0]a=AEbDQ33o@$EV/(LobU2E\8PO]Z94'%C32tj@3Y$):.3Z;h[+C)fiY/,o+P9I?kZ_aS1(h+a[:$\H,kj$)U>Mp;K*ZD,.J+Q-b9d8,eB#H?$,JqNTiLT)5:p=>6X-sY>M`W%i,q^s_J?g)o?KYZ0qa6P(q_`1K\*_@m;`hGa.t2tN^5;1Nj]R,LD(;,UOEUg-XMS!$Es&LM:^.Pip18Vnb)$PF7FBH^>eI_;t5"?%%Il<Y/VbplL;u:aiq-Et6Ola$2MOD6GKPCaKUd^T\#B7&,j]1Y&U&D<&pF$c&U#[7]8NoP8=q*M`=&o6]:)guY?D5NZ0a?+fGK)Q%fdk#76tF6UCK,th&DOC#`3sS=@bYN4Z$Xd?NKWpACbM/Lfpa4I7G2"JS$LG;mkK'RPR[Lu!&Z2E#ACk^2nC[^p/mI$ibXRSM?"E)%gII^=m?c&MdImY/BN'KUG4FL.K=8h";&f4WmB]]-s(0\L)ghd:Hajp#nS2QPL/H]=@b-RB'PkV%CQF!JgI?,6p2Dp+Hei>e7T3;`%qF9-2'Q)RtHHEP]WPc)[pM\bDZ5L,+ZprIUj*#OJE#YZO!TV%6F2E$@F_]J*Rr@FDHhi6@H-H&o8%?5bA'PS>?BpW/C!>FrH[M-Z%.iZ+LQrstlXh*pB@Pnq7(X!##Vp;upkD9h);QQa!R::<\3iQ,ckk)np$:7KsB'mc5bkM2eV!<2]a59cD.&9gJT3WeCH6ftlP\R2G%Mq&nu.(<*&1Yb$UlB2:7_9?8t;lJh+@ZkmkY=RDWJeFI8=G'2D/jVF]C49>%B<MZ#9VGYLokX@nn_t]k.pb8iC:<1K<6m=B#T]mC%o6[gMQg$=-6[$PQWDle?fKuQ<E-Ne]kGM5FR#d?/h5RAR1JGX<b?cZA:0qNOEUkl#32ooa#u[g91o@\G:mX+j9pN:0@Pq^_0fD(k%"KPM&V'M]4S1<?"l-$0SV-6SL'4Ze%QteLtZW*t97^'ReXc`Onpk('bQYQ3:h^NuA`;*B5-%>=Q61pi2lI<_4#d:3d'4HYk,/T(%%@DKCYQ['i<H^PB3Qk\j!B.R.H&AcK3Cd8&<MgH5@FWef%=>(0RQI"Q@'OQVj:;5"H%m)A^RNE$C)6V#Zb8a(fZ8Ek/;RU0C]i19>%7>\0Ka..sg=2uV`C<[?ZZ?>!KM9@Gf.rX*6kpZ+g=Ze$7LVjd/],O/h;+.XKekO-[/isbLLUU($qBn#Ti;li^VI5aR2&0M1/^orO%JoselU?]6b3Qnc4R07:p@u"GdB9Il>r=c`QVss]^OK3/u3anH,:a[g#FerDMRuL=KVM>^Za&o`U*Er%)WW#;s1*'+*l,qe8.9CRB%O`E>B*V$L@37Vb=-`L-&Fun/gqFIM7o2nVmRW"m9ASNS?/+_!DA7_@';QQ1;)e*q1pG7ZV*3Om-l&_%/b`bt?eQcZ6>FCuPT2Vf.%iMKdQ*t`6F4eGh;ern0V(-`27Rbgjl]db;T/FB?)[PFA.G^`;M[S&POkG>d,=ln*[[9AH/W7;S0;m!27CR"N2@oBANmO#KU'ZSY'%a'as-AQDP0dWWNl>cgie`J^g\7%L=$P,S%g`g]DkZI_Cs+]k!29QG9l:[$?!XX:TIJHMW[j,,9H`,qh);\W0+.8p5Ae!.t1,>FRm%qBinectj>rCZ70=Vhc@FFTj'eMKLN1,#+Jk+d6B[.LVt<`8<neArOIQPW>7#&8e=VLgG4ef;)RL,iCcApU/VQi3#YXY''V`A@3Sl%c7I%eDk(gObQ6T^bek-SMu`=2WQ^,(38j[Kh)A9>:L.qX2i^]Q*o.NYnQ_NUkaNq:"@_@o`][raF-_#K1pCh$\>-XdUr^,$52$sN%FjO0.F?dWtbZl=K3d`GE^3`?IO-jj^s,WOc*AV&bp;mFAl(7j&#V.*5>^NS/8L*j(1=B6fUifFc8K&:j//5DI3XhoLC"uB1XeWOf%d]JN'Et8'?#nmgF7[!XHb/r)ZFGB%io_.N"Ff9q,g4pLJ:"rW@e,>r@RANj-Wu.-ZmDHemVfa7hn2+2&$M(@0mu-?]"A`Ae]-_e!%@^?!kl$I[/YN0C<eJ")&k5aYJi+\_Y;EOfqdlnHj@_XQCs,YfN*Rth>h`>p0JD,E^TY>YG9)uATMhAcen:lK4LG@Ro#T9R`2G*tW%Nf"1:f%E8"rp=,:T[*B?W-+b"!4?Z75`Jq7]KX3Im;<?^[LE7[gs>NJ*mQ*IA@pLWIFPKpEJRI[JBJm$"Lnqo$)Bb1ISCrm%Rl6l%E4Z@qJDV7e6>@T^&ki`dB>jI&#i,,iVUi:A!S'.LW"e@DmYc8M0Q>X_:u.X,fo)NW:$"obS$&F<Xl<H%pP,X#K3)"m%`cEDVk<h<%JZ2=FD+>tTp)u!,C*2">dGT1KNWutd3?%g['/E_f4\XFE!i'nf7;V?W,drHf*etC4>PE1?8,^BW3cQP"g@Lcdg;[U1[^10;\=J38%g21T;[ZNTl]Ut;V&J2,*mfK`\lil$*mDar&F1)Zb-SInZ\B]ngODqB(K\5=Lb#u+F.OZ-<l_e-,YAYBo%e4rm'6R!Y-P+7N\&EMN%*'na-.mpcBglSWOUeKH=5?#!#3Xa*=ZZf*Q#JMT*Vu'F43%!GSigB4nVb0BS\CX44Cca[tG)RYe[d.bTf$TWm'TOT?O'U:E08^+W%qn07K*V6n[_BAqe+/#`GaTU<PHQ'86@%Y?RUV6fsM^KPLB^7@_!:>+Q6'S%u=fnW+ET%Jr5;lQs<e@]d+>IU-e>FF+NIrA@bB5hY%!3<A:de6(HdY;[PI(N3ZFrR.6ZASttQi@EDQ<uRdHfC%;E7n%&p,.dUBcGn%%!>UXm5ZM,qpN*E[^C>fgm4!0gsulN\;^UQm[:QU%\V^p4a/g8nN?Z**ikon@RsEbdU]taQBEW5q>`Y8]9c1_$QV>X9ij/F=D4Qh.]H-_kDhgnF6sONgi9dN1jme_GV@DD5Z(]"gR^OG1%>\E.&DsNA!ENZ]8)q=@PC,PMG32]]ad"LHW@=r`/R%TH!MUiZPO27:lg*][92/#@;?g$YB'hcs.W%?:bi8;\5EIg#LLBd-U*;0)l%TRHB]eH#!##J3a(c%VEKH\^AB7H3[Iq=JG4%UX3Hb<TuS2GQG^jtjKn->VRb?oHWk`p@3jpF@u1[6WQoR!m&T'=2,I2n)WlZe)4]%0H1,mpe\'H6dM)m4YXL]lMZhV*50+X;kc$HmB+(V_JC2PYqcg%0H3M4/T[YlEPD+EM(lQT(9\Hb+(Lc<9$G9U'4^-hQsKDH@J4j2%F)3hmBAM^'i-7_*8&fAUOMG\APVN%PmeJ@fgYH_j5/s:Y?]!GqLuS6GCkN!VZY]%#-j-e[LMnJa$aXiWfDDhnqVX)iJ_BH`A+m`[%&-K6LXQ\7c.kbg^1hPLBN7j!Q^mNsCa'I*0lup4Nc`uGR2qD-!X`GQdZe[7RCeX^Bj1pB%>P4I?]9PPR#A3"lSpO46(,fmN5-u4a%B"NPPfnWV<`b`,`0tXiA%6%cT%S<*V_ireCffGKV./OhdFFPTJH`3C=UJ-p>1/g*V3F4qGCR_IUgV_*sNUnTb3A`k%-"YhO:"_Me%ELA91K>Wq5K7pEW1`YmhNmEr,>;9^DQ;-$R];BC?,c5D4R43KLIkYG\XI6A2O/?a&J195Jh3<mdBu[&-;mtT8P`7o1T27G\>F;]l%Snf7/D0n*N+(>FQ[MB!3g%PHCC`O$,P^SL5b1B>?F[U4G2@_1l=]VS&:\LZ%)k&5QOO#Ul+#kWod'tLY^<`%GAP>q/bqCN8m;0p/%`Y%<>8_NfOVJOR]VJIhH%,%4]%,!O'6akgO+hQR5Ra7)_.D_,5eVGC'Wt@^B4BIW(1Qehcj)t,*6ahc9+knLb6akn(OF;)A)3F6_%2e:Z"%+u\>$/,4H$/(-KY,'p-m.M@\cD#o,q^"P:%F'uO@hE6](&AL[N\\?$,PT0"Rj#DsH1e9_>Ji9?>>oN,G5P*sXgN=;G&+_]%R+$W(<a8[eD;$[SldZ'Biu+b]?hMB"+BtraOKEs?aDQ1p>dL)_kIqZs0$'@%%EOjr'TaoT#ftS;,Tp;aJ:Qu"'BTO1a"mkOR[jMc%[0-r[DAPF#LA\@S;I'FYDGroG]AIeVOl:R;+^;#:J8EIW'4f_hV[9ZPqbN;ZiufI+!*G=7>RSW=`sp+U:_o.@@LUSW[bXhH2U:1-%8R$4BC]Zu4<aPm\]AGu;mB/9VbC'P)X4r+!h$]E`e&9q0d=MnC*O%7Y[HDLj^O6=sI^BY"?Yju>H:c@Tmle*^i4@KL[70t,Snf%"%?>R@7]T7'kF0Dtn],q<0U?`qT^MSf#>-4$enR#Mlib"^^Q_%5qgeF0JNGsPWs)MBCLrQj&>I-[]4Kj`hP]<Gd#66^/h65XM+#rDp%Fkj/\V")&TONtOg=0?_W`W@mO$tTrqDQ7%_!C68U>e\67c:dV;22eiIrq.=LYclcAh7WR>IokMk^t7=hNr*f35m/*<LYcIk60>o,%Fo8C.idfJekHBr\I\)2HYF"VtS]q<BSCe%8GZPsQ%`U\uI9989^m),@i-B5kIM77mr/UXXGkZWP]rd<ci8#/Z_[O''`]<G=,*r2T%4N!!nU;(WK#b#OB_s/066E(u650H$ql%X(Xa8KbhZ6:+&<O]"t_M30*cT-,Fo+jLY^GdU0GTRMLrNWcUCn@>uWp'2hPU!hRNQ>2=%[[$6)-M,,5Nj[*-XiX`>/5,rE(p&";"7o$$Q<LLLcd8#PrOJu=]3A`'QWbYN(lI'%NP/?qa<?QShu2BTipV&OhjrLsH2H=hWAfn?%'_=[FHg:[uI;6;58&QH[!;-Z"d5;^6^&RmaCe\1.klk6.NeQmip"a#2TQBLAff_G5I$enX0'fLnDn+VN<a"(OD:a1lATn*6W3gDD%-eDbH@_]=c;R!XrRB<uaQ02>jd/WC@/^HirEaTBX=(@F97sQ_OeYf>*YifIg*N)%:7p/':XLbX+.*CV]Smh"G_WiU$iGu&o[2^!L%[B6N'T`).'+?\M$>gI1`?-7.M#W+WR'Dk49O5>7a]b;8kbL+g[#\Yg1`=[61G$OBo'?:5W=13CA]Y,CuSOY]uo<dQ+rD#C+2sGV\%o:FDN:FI45PBt1GoAR./Yo<N)]IgT]QdXN4\?0^qk<$,@onG\#R/OG>D;jN?6Gpu`\YZHoDJPMqDnLKMgZ\.oQ@_9t<XcVKlcO(6%h#;HCDg<hGc4L*0bN`<lFkL]\9j\IMNcjn-NNM<OfZK2UjgXlAi3D16P'js<;tG5-1'Et^OnF.p`XKG\dhHo-6[_KU]l@f&GQ\,M%DB't7*L!P;6.pBlU"k'\gVR/K6/$![I[@T@].JU(-+?>#Ic#<QWn/i379$uC].JJG^Ya%XH4Gi0[GU!1p-<E'LRIXqFCXUp\&&qG%C\]Ojct^^9$bo,j`He`W3Vfs]B"taF$lL.9/#Jp$jGI`\kRFe**ReCJHr8I"cSK_&F5(Wt4eO^7o5r[.HF)_u$NB.uT;c,K`OU:4%Y';id<#%H>Y?t"8NN!jngs`K@ATh<hn(j#)HtZ_>DteBJZgW7nDt2")KW=@,Y&*7LhI:5E#Z\o-?U1Qae)K-dV2EMsZX-i]b@tt5%I,CQ;X]77eb*LLk$_Te[X4LN4YYcaFFmn+7mA3i\%YUil)$W>mJl(!$1L2IQqc`GsTP](8qjmF`K&Y6CWs/qS]-kp_V'UZ'DpR]9%FM"JT0?<tNEYrB*B6b&)92/1?@fY#,aVHBAP]a)Or&Z$*5-(1^J@Z-YiQG)!5-+MHIH1%eiNr$fLX+N:4q#nF?PYLh1Tg;YcE:fK%`R_HEG?TI'8Rq%UosW2H#mDTfK>M+q$'^b).\R2\pN9e&<<B@bK.Lsl5.p>_cA$sJ[FG>F?V2G?d;.:t#UhhQ1$Z(3p0'>2J_.eT%Gle.A&$L\m>FVnTX3bi*at3%nDoTtDJP`bhdpa7E4hOg;%YQ<Z'T=cN]lmS,":j4[djh7V+(SYRh,n1R9c$c9T[T#;J5D6"II-V[%W5`D6)Mq;HMaemF6?U%\*5G(C7T'1`AuJ0rA[*@WUPK.+'<86b9_ZibnF#;rDLuWQj*V!`I;+SrnaoXE21DI/K'N?jA*e=`<+#V!%p57TWW:!Zg"=Jlf??U,fm62fb%%Uj5:u1G8M/EULGfG$!'XBf"j*0*Rnp*NDn#b;,8>ttD?Kj6OeQ6[^1%c-YZd+6h?GC91lJADA%G$fGPhqQ:FbrSgJ4(6jMJnk4DM.m7Gg%L*alq9Zf^L*fg,#n=9W!#28lM_25NEo@$L*ikec`NBt$.\tlb^NSlh:mJ5^l#.=gM[UT%`r#&.5@\u<>^*49D8g-%<VL^t1Q&39IU;t2;0D?Nl8MW62.jOsb51D15IZg!OK,L%`216c<G22kWdF]IRB!k>eB+;XlEj,\Fc9s2%Fal7q8Lph/O'S.o]O.MQWJdd'O80?&/5LW5nkADEl<]<.R^8qRqhnG0moC=@MQ2$pD@;0c:S/r5mTn'_C.6\+Co$>QD,PKdAQ!Z>%2Q=8pbG8d??!%'7qdleqDX*Ho?*7t,8W]saql.JH8_)LJV!?fB2,m,s;k4;sdj0b"rHFOaMccN^8$)-$Y1u^hl5TlDl>-Q3Fk2s_%h9EHa/[7?l/[7?K)e!m#1LbL8+0iCa>>n+%Fhb;(]Fh2A<p=FVe_TKW3d=;X95j@KENPZ%XKPI,N*+onXEp%3h="Fu/W&"<(l?f!%kUR`$Z+=$4IMb?,Q`0knjf"$d]r^(C=InK5=P[1r5D\$AM4.q;=P]NX9m">=S?Rk#fgE^C?5FYa?!*Y]!O4]O8$(!K'NS#=/$)M+%/$+aWNNda*fbdVP6:b4LVHm;p',%Q2]g-"K+$;FMLt12W`9QTP?99c#=^lNf-a>`$8$#I`8$)-"$;ZR4XNn:$<qkcX,8%!*,`("8%n;5]O'[N%U*NO6L&Z`MGfk7DSodbMeXNh;#<bIt[eS/L2l>0C.FUeF]F\W.ZlL&KGP)+<DY&h9(Y0K%`>b,J'>hqOKo8XPfGGBIb%-44*p:&IuE5D&S#e>M)fNIYD"]u9ehY.)Pn$`s4=Q?NDrR$7a)0bd(-]oD@Q?]oOkBp!PJ$B]I1:Lr;9DNfHRDQ@R7N"PMh*=X=#%%X0A-%XSmmp[rGFa%WcK[jn]O^UpmD]9@BiUW>L9Q,pPGl!DtZG$AO=,3u=;O`gDkeYFJVn4+bihC=T7RWYp-b(c>NA)N3F_s0Y@%IBgmFCp3e<!K5#[S<(`PS=.I0s6eaS6b?Q@3!#.a^kBciNIk[]o9RJ/Qgq`SduI)I/[Ffj^!9JUA0"U]a>sd%A=[R&Z4=o)[*EHD%f&<Fe1TRKV?eAW2f#6.?0C\!]TUL3"FYReOokOD<m%p%TI9kW^0>73C8!HO-e[TSbhj7YtS]nPh^%sdTqEoQd.`"Mae>lIDAX9A/%"NM1P.9BlCNl@8gNNtV)6#nht,1ms*&)O<a0M/C,T2D\-lPQ2*9sGV?Wh[%XjFd:mb%EUXT=/95(*1(GZt_./hO!ck6`W\Gn.[Eg%e^pWS1=E1"`Zq+T<P&@8<KC_B\0&-DG["n4(W(A;V@ObPF^@_Cg8uQu3ndk;2.!E1Tp/O4b0E%2<`1ekB@g2Nnbj/Mqe@YTd!TYQ%QE&uUP,_AB*_Sr()U5Q]:n;MOWS/@AV)gY)8i;(+ZY0Wp=LQdXCD*X1^+<7DWHGe,KPK-HF.uO1Nc?59)DANKH2%rN_mh!lq^nUB%UQ([#N&ii-]+1=*:5pT4&U!C)<$Inh#lh4pT&T0#iN%'8gq;KB3d''kF_V&X.\58>HdGbVHtt\k9K*ZgmAT;DGcB2$1fC=5;Mru+%kWK/)8>Pt*UesVm8>AX-f-spgW6onPX<^Z<;`8Z;3@c&K'P]b(`ig(kPh!UM;Q.L+V,3qgS=_'Ae8A,mn8_V#4%e#dLH5]1&p:jh%,jH4cP,Q9:8>::.8>2%u/VP)G=F'2-:g\tj8P,Tc>EqMa^JVmA$8n:EAjgmqHD6NJ:r>k*qDeo4@4)\d@Fbg1=PHn_$jRkH&'VGo%X5mtoQ`""cSrSp_H(+?n=3/kBa]FQb%E%n=>XRbl4&kB6SSi"UA]2[YTh^X[n6U4i<AF*?`9Cq^M:4Ucr*ekGq'oukOuOKRR`+Hp%4,ME@/0n!2aHefFfC0C'X@aLe@r_?+R57Cn1aZ[D09`<.+2-"bPpB(ZR8]Q/7Is2f9%2/oPbu?m,u(-Aml`CIoRW7kR(K1gUL0BR%N666)6HZ[u=p`Y3)T@1:KdU&)\o`05l-fC>djlq[6)-%QPFcl1Qqs:A/6t;_=h8^"([9?re%o6UQB"Ta91LX.Q4@Di/0,C\AEd4k%8=%7$^+UP?-"k2R6b7A==h:u2)J*V95p]1EXA;t[VGPC_iG^2<7o)[AL;C01Y?[?QUgEDfGdrlHBlr"9Z`KZ3[`k'*]@g?O,\ZJk%FqN<%]`besI<FlNQEmlp9rl]F40$a)(0%-d!*5rf/KR!SC1=6l[N2EsE)t7q2H8pc>H-&T-_Bj%<>tV4,IjRBgJ_4>`p<0uX\u"U%Feq]W^6U6cT4V(ah]c.P(8[d=,YB#V/4s]#CJEM-fU?n=\MS$(+0A+]7^FGD-*JWZkSZt?2@(b[SfOn'COp"^g9b6RHH]j)+DiK?%6/%VR4ZZ8.K!a+JetYsKoD-ncUXAG\XCsc.-^6V)Rdm.a,kEWK\eR%l1<Ir=c,Cp/LE,,/cE>:5H<eP=\C\8eE\rZ^1!`FO#%;?R%'7Q!<UIZ]8J&p$AXm=u'eO.ddM64aiPb\2GQD7M:oT4,t2=>PE@F[`%cDj`uVE'-[&rj76>@f7Y&rgYM`8"R64d``q#grG#?>!tN%M"[[nU#W-#Ts;Al."\6)N@#_h2C1`&aXoki)oh(mbL"=CE'?qs5%J>NWb#lAmTsND)V[.CYouXn1odi0l1as(MMBQNlCgP>kSd)&%WR.cKn)+*O'cO9\C7k/1F7:*uTMhJ'j5jh*n*sE-k%YVL-Lk'PE2q:4b#4pA(K^"'V@"?7-5@Hn],'h6*b%l$ZW-.5&#mq.@/d;B%1?3RK[=M:j>[+1tV*^rZ*popJ.WeH62)&2`FEF]cke=>#ih#G97R(Ci.73&$]Q0Y@<?h(feh`004gRlIdM/CMY:2fYCJ'9JR5Mtk%P9MjKYV3rYE`DG"cc"&l&#;K]K1gjjV37LV$gHJl2"cs'j(D>a@EQp5Ch<0<fD\Ijgi$8+,6]"S<A,L!3_WfdoEm^[A#H:kj4a/M%8XIWkk`c-3]UHcOFI(+)L9o1:1]6Mugl6F=(us&8nWrJrlcrX&h&1k4]pYXs>SZD0b489_3<kUfk89H3S\kb,G@%NhZg(f,1E(,&%A`nH!P+AAi,Wgcu8Tr+3nY)2<0j;T/8p*TVf;'S?3NPNHF&+$&9XL=2S5a..agH0\oT4"\fGZSESal\Z4fQ`rSkIVqZD6E[8TdKA%mn3U38#>*?Fj@Q\G#[4&kYBYghG("koW;)*o],p+"8Isr_P'hL%Nd7P3ID-5B,$WSPj06ks$!?;:TAJ3d8>F#W\`A2lrC',T:Kjt%oPdcuPU/AGO[sSS0eUj6V?)P!0leO#a##*i).c2$QKB/>8=FTNHDERa@h62Oj*d?[],"Eg-ISD]]lTZ0\bf(10J/\TeQkpKP&jEq%Fu'$jOIYnSPanM.,rq`%GuAcFX*/&KD\AS8!@0Wphb.oX=a:YecJ_JC3."XL^"H%[l-7Vod[S/+;/_KR._XLcB^*e;%^5gG7h,-'%%*[g#DaoqpN-_h.)sb`ck`pgJo>7O(`cAEK9Zt]M04X3JDRRm!gq<>>gqKW?lqq3%fl(K5)6^JD`8%8bAVBqQD+522,J0;lB"Z-,%1M2!4c1()G'ZTM`CTZ9%@]e>/cW[Xaeljl$n6QfpLU0n!>&2-8ju=]i3IaN#3@]6N,IGsZ`kCOXmT@G2CA)\i;D[ZJXR%Jqj2Ua#%8^0Emj6/$cc!E),CA'F%;DXnASM-r[^T3]fe/U@tWB'<F;R=0f9!c4,Q"I3GX>G8F[aOM6_b.8u4tFl+)rl6.Qo]C[pOI]Cc.J=9%G1q7ToZA^2g)7SE",`=TlnoYPrM29b)\]N&BCq'%I/R.#)6J<j\MK]O>GO+9AsFXi4/5kg0p^>5^#!,,1E'24"\EKBo]F*JPaZ(e%YdEOOG!&]=cMM<g[(!bpBCr&hRGJgp.8d-i7W1o=R6.1/]NdOn=!dV5c=lZHb+6r8>N;:%/+^,PD>&.5fGUfn0D!KQC1m!o?Bdl_%C3/b(p<I>>P0W]YpV!_>QCH9gbhc())7EY(DS7heI]&aa#d>AB.(h?^rTVU@Zu[OGp"&?W>FDlVg@j^3dGFng>GKm7hAX'WDi;(o%YF1QT[MU4Ya4M3kXjORKDiJZ%pD!0sE=Nr^enFL^pX\P.WSY<G)GB^X!Sb">HK3Y;XjO:--"d`p9?sf]XS0hYe"sNCgB+`>H<'8$%g`!<>bhO,M.Ts$c7W6#*>GE"37%(JQF/PqF7XKB,C\4K9o@@Ti]!k.U#isQMB!1aVkS9R<7i?I4BK'jhp2do)H;cG-DiKcm[5E9T%jPFo_gf#c_)>/?b.>YU*XOE3OF^<bE_!]oc.%bG:q;%:)=i)u+W.po<7^'n&bZ&+?bOP3Ym>Y_=HZ-:IRJ00t#^C:[Wr13")f9fb%^!YKiYtWSeGZO9mG*g8+BVp7JhWT4=f8bbY.e,NFc$Q4N9dKF%a1gZf)pOmWhAa-XDkbbEW3Z.egR70[BI4A;^!Vsdb`8a*b'Tn#%V;</NTmne)],Xo=kC2d-Qo3QDUYWQ=)f8s?^!U_Emu;L[C2^KX[.d&%WO+V</`j[n*m`r0kUF2(g9ZM,7W3=[hA_Hs>V*L&E9h/j%)st%j"DDmOc#:-ORcuQ>2gTUA/h56D4"AV)?/?Of21tWm:M&6!c0PGe)srbCm>\8mbIu;.%s`*#kBQHThW,Nd2qk,W%6E'Fs6SV+%QtsAog1HLpUQnJVH_WNq&=f+K;k6I4NaX(C3fM+KU[:IK6K>=n=G(ffDp4"(h9gE/hAttaT\\!:A)86>3k<rp\&E3rhAr^VNnr*g%8'B8&A[+B:Id*G8BTJJ3*j,1G%#qRH<\,9F2B(>FZ$8L#K?W)Fq-7ctQ9A!tUMEZ?KkS-fU=6)WHaG,mfH./\O6t>`^gh``ZkZd!%UR>6-gS88fnntpZ3iP'o(14u6ULb7u*fY'JR=T/[dC>EZ;;7[4m[MiMXX.(cO7n$GDi`I7M=&^Cnl.'F[67^=-alN\L6(`LENQZ>%]48N;g.!5;3k%d]N"/4;(l\^i=er4fdIB;8O*8QiHh>=aX/ne2+HRR[k_T2bRZjZJdH.1d1T6/]cSDrZ7FJHTT4U\Vp>Epe_hcmR%Cu-8iYH)Nc8ikNaAaI#B>5-^E)m7Qa=h0)KB`5a?5Eh*Z4F,^qNB(P^7T\$CWGJY3q3GB=eu0S_/h?2=U:iri3YqUkQ#s+r;]_(\%6u1THr(&l'hpicHTlp?pBT35Y1PjV\o=e#tUO,o[#PUQGodT(XY<_Dd)6&Y2!j,ZEpAmA?fW'q#6>J]9H^BT?W8GYpB`.9\c=qcM%J)B92knpS*9gV24V_:!,rR(R,C>5<+qXGV9Tf(QcH)X,k'roO+BT;3+SgYs,>I9`%B`0J,h=F^@FnCI9qH:4a8SJ(prF;$HNO!?#%$tD\@oLIT"d/(c@P:'AoYsLmkYV&=ZeE&:;<n9!DXqb,)X7hS\XeRP'eo<pJ2=AM`Ath0>X`=Rnle%s!oZfM[B%b4#BE:HcY[jK9%SV>H0%9M:bM:Q@Lg+P(c7fBla]?pDR-,`lXos8rt2piO>XmQ!PCSo;R$FGg:.^T\L&6bhlC3Q,nqJhAmB-$Tj'3b.S^"]nY3aI`l%3pJ9'%Pn]#a09O6Z+(n'qWV2f)8@cTV*3X&lN\;P.csuMa)E*]50%b$[I@7jFZe8ia"S+]1Km#DG+/i@nK&,<-<d/tbD_/+d4RcO%HnNf-T2B82ME0NRm2003G!$D>@G,2q6>Nt+^+b;R*7sbFrR'GQC3R583dO>1NVh6k(0ZLb(0Z'FN3m(ia<@pN[hW)eWsPo#7?1A]%*=c@gm2=\m*R7/g%4?Hc/1\bpp$FQ5*CKd?_l_;^EDd(9[20uUlf`>_FhEIU3XggX*AnU9_f!$\Gr5$8h92_p<pQP1m22r">\:@'%M2#[a>qNFDH.luQU(XXM(Rn-4NUGtYiRNr]H^p@Ebk%=N3p%Z\2/Z=Hr.W^8bJ!U*+*Ln2X?p\bQi"(FehMX[X^`[h>/TT)hA2eB%l?o_Pm7KJ&[@,B&T&I%dpk5n.k.;TLctJj-]4:deZjn`3[#T9^duJ_%F5AYGOjH/G6[?`=pP%13!gXR)k>Q<2/P]Y@l_j3lS0P[V%d6tA8E&(T]atmM6p>csFa4+`kCC`k/[GTMJm2ALW0s,dHo,*KrY-d2$\1Kn2BFX"b?>ZFEl+q%M[hY=OeDE`2YD%qd?;DNB;<P:F%Zrajk[\(o-YMJQR\;f(-a&[,+B'-AK]:+T-?6fiZ^&!T0@p2TN['m:s>3#%g_Mm&KM:_'qG:>8;BPhBj[#W-?>2/3XXlHrYl_pu5%)@iQ$dQ@&fB)'G0VR\65O"K'j0=6J'jthhEd5aO/43Yc.VKk3XO2Z0I_r=\:P7+KuQhb0,U@jM@6^"NjR)D.%f(VVlRpb&aOAc&]%f'PXG9L2ohG7L^g:BjW$X7,##JuWf8L1QRKIA*VYAZJ//a3q>[0d'FpS_'%);0L5hUYAEs*_T>#O!%DsH52DbW5e:d3Rf#B@jmD2%qSlAZ0=C&L1;.*Q6O4<(hq/Y49X3G&CWf4_dplsh`\UQ*YKYLuX<J^>e2Rc1BU;,HRoQ,DM#'<U3ohfI](BgU[*6K?NTR09/?q%s%<QukV`mH#R^mJ7#`pk(glXX_Z@\6M$en1(7h_4"?JOhg_:aD%OG]Z(@+R'hF+,a9aF=XEYk5soF;Y77[)D,*SSH<N</Ao1*d\h7(%#c)ITK1091RZAR]UNVUm-:bZKK[I"Lreq\Rk.F4>UbLNI.>mhD+@P7XN5-c.j&[HhB,u`b+DjGerhLYtX?dDWg/hbqU1)rS/]?"E%nmpr$Bjtb_G"(kVU"su\BY;_Z_0YnJkW9AuN,K=#NRJ8rGu&O(M?k+I=:rt*BU!?eA%C]uWjr;[GXM_K$D??E(d^uJcGpQjZ,V9R%.D39:ni`o<%LWt87h^fQd/l?S92:Ah/ptYuWo.sW1CbG*gBjM"!&Xt7cdD7!k8P9cL8bNP@FE1Xmtpb2&O"$UZ[/E[\!-"nm9,"i%UurTiU1\g0_/m=,i>M<eOA<VJg?IJV:!k[H"j^WWK'-fW_/g#>_/oB._)'f4cQt]K;><5iF8h3hN;@C$_(KtmAe@/G0G?S'ON#L"%I`0Oj'u\DBB[8`eMWejm5]Vn\8*'#V9Q6"0?JnL>rYj^Rc5M2];0AY$W#7NH@hU`?Qm"?)(+O-'eEi#od#=j)M+l9DpB,D)`&")I%L4Z)O'=O8g/5XQL$<PQ1RDWZnRA2^[bVtOeW_M)Uk#a^$R;ouWh@Ud!,%S^J10g?j*4)<"3@mJ;*"+qRF50R4D"A2m]64Bj*8IsJ%)kq<ubP#mTccjS[G2hV&rT%P^f_nM6h>IZK4me%8$PY7hl(6VFrQ%iU8;`b?7>dF/O,C=[0AG6KQbC["0B9`jm:K-oX$-'[XOt&L%-8@.-Go;t?G@rn8F/EMEOJZTm1ec)kaZ7Cca!`kuht(Gn&4b8;T^3QAT^9e:T^:peTH)Js-u3u;-Y"PF1F@J=022*1e<kXXh[>WV%]'D)iG)*=?PI'V`UJb*Ka`8W'jQJ[&EgVG,fe]WW).a6&hG&EG.oC=nH\AH":)5-kM.0!clP1[l7;PNgRaR:V=*l!?o75ocHpKMk%Der-',i=ED01MO"\cG."Bd0@"D`2]5](<OpPtm!S.iu\Rh8h`AjlOL)'r'oRDBq2g-U>]-a!'XVl/):Ur@9,(gX<C_\Ke\:YpDgh%U)V-85:ik>aF0SUqiqcLm>khNp-D2C,,0F."L]Mc0iUa\=%)eC#c9%&pIY,WPnDh3Y,p&q/#$6B*YI5L2-d,q(")FF3MQBf*Vbm3%h)KM%!2(RJGFm2'&`%=T7s)AgNp+L\;3BRikf+4"0;H!,U0Af=&^g"?E'uW[R_<@e3U<DqmbPWV6oTL=&\90tqipgedG:>g\]h8t%IHcQ*^P=&FYnA'a-QLOIO6QBh,J)hZ$HNt0>t5-KAOQ8V:20^MM!eQWl\OtWS5K*I&`%nC7s#ubZ8OpK7/&m2U0eech($D,.\b[/%Np$\USPr_[hB21l#?F7%X5\s'I@MAV<>"'S:=&bKdG=f#(/[IYcM"<`abo<=A]Tbmh@R@b1grgpU[]Ggi0MD5'6?Qc1S&TZOZCY-%&`)jZ7s*cbc^C3K]%k3)J8S`ZJ8Q>d>(P32kf.?'UO!F6p1V[#mcUZ&g4qhXY!)0_Xq/ntO$-)\^?i@CS;udh>Wp&IDe%Z(b'7eg%6K-^+:-5!#Ib!E4*lecR[]ag5\)5Eggods#\a=_`cFqCkAN2WhKYt@f<u'#_q'X%iG7=k4F5)'^c>@?=34BgKdG1=l*6eq+];LnK%]lMX>Nop&nF>UI^PbYeFTT81.pi/,LD".CZk2$ftlY(/U=XtB$_BKMY]VE%)!?BA?hIA]4U:FL+m3AdTdG/nsNokNJ3h!ZD@lZcJ%\_TW1k/M,@T@)Hk0Vkn.k-jl$1q,R@*WtM,p,SZ\mTpAqdG-^2H(En3mJBpjE(=uaATNmop=d=0gg3?-RbM-3BPr/27ru:X*6mm9%3L[QCUJ/_Ugbq5aF).<^dG1n2UUd-PMWV?[b\6FH`hK6=h4fqlDX3!tKX3\-g]$$Vh"E1Wk4ZaRBPrlT7ru;fNop&jk%JZ01.QEG%'^Rk,9@;OD?Uo0-)5F`*.NH^HX'$.]h;7ibVCg4p9c2-W)9K_M[XSI%X32]S43A8]/JF+OmcJ*;6Jfsn94\ImQA:?*D@N6Ek)O)E%Z..L2)51nn&^65nf;3R>R!Vc%Xb4174V>mYn#Kja<kmZ?1flB?Q?X"c/RK++ggGq!Y=cXdXm,S.<h,oo*6bNVhSIufg_%cdDE!cd%f5_JHN>'6c>.Y7h3R<+#BmZV2ji30n#&-j]&]u\D'VX<^QQs&K5`J<P&A^ENc#?KhJ41`-CQ2nnj_"/M>%]rJOrJ)7*+Eqln*uNA%$r+95Uq%\[D)mX;DQgM#g!YqP<im2`P2!\388c[T&]r:0q;li#n[nPM+8t`=^]%%!f:W'%0@og"Ie]PMqt;Z^C&dFis7jJBs7&$t%pY0Wd@f5Qh^]37GIe.bJr6Op%?iKK&5Q2>rrNEqN7K<)9qX&c[421[*p@n.FYQ+%&li6aolgMISs5gr&5N'6K5N'585N'6#5N'6C%5N'5Xs6[MNDnl(&<q_m;iT/bt7go;PIuOF+p%R?\02@<n.YHb$.:E/S]7%TeGK=pEZEGZ<:MpX7[D/ohfDat5KD0cmJ8P#Z!UmGq%h?!J&HaDTc.Y%.NJ,5'FJ+p-rrO9Q=ol#?OrK%!.DXt-Kq'56n_g]Bc`W\U+qDZ1cp.'W+B>=5r^\r)#ruZ^e]C5:=5Alhflu2l'%qu?[`I=BM`rr6/ohr>aVnFcVRZgWA:Mn_7Ok26+!n%QO9V]UBcP<\m2B0Z:fhuDts^\[Kt?iS_"If/V8s7lPBs5D`,^\J=Vots#$%s75PY5Q:/5X^XMBqoAa-g])hfFpWZtZ_.2c^\m]lrYNZp9R-~>%AI9_PrivateDataEnd